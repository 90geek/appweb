/*
    doc.me -- MakeMe file for Appweb documentation
 */

Me.load({
    targets: {
        api: {
            action: `
                apidoc('api/appweb.dox', '${SRC}/src/appweb.h', 'APPWEB', 'api/*.tags')
                for each (let src: Path in ['api/appweb.html', 'api/http.html', 'api/mpr.html', 'api/osdep.html', 
                        'api/esp.html', 'api/edi.html']) {
                    apiLayout(src, Path('final/ref/appweb').join(src))
                }
            `
        }

        validate: {
            depends: [ 'gen-doc' ],
            action: `
                for each (f in Path('final').files('**/*.html')) {
                    let data = f.readString()
                    data = data.replace('700|Open', '').
                        replace(/appweb.download.html/g, 'download/appweb.html').
                        replace(/developers.contributors.html/g, 'scripts/contributors.esp').
                        replace(/nowrap="nowrap"/g, '').
                        replace(/https:..embedthis.com.appweb.licensing.html/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.me.doc.guide.me.source.building.htm/g, 'https://embedthis.com/').
                        replace(/https:..embedthis.com.developers./g, 'https://embedthis.com/').

                        replace(/nowrap/g, '')
                    trace('Patch', f)
                    f.write(data)
                }
                trace('Listen', 'exp --nogen')
                Cmd.run('exp --nogen')
            `
        },
    },
})
