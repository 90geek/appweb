#
#   appweb-windows-static.nmake -- Makefile to build Embedthis Appweb for windows
#

PRODUCT            = appweb
VERSION            = 4.4.0
BUILD_NUMBER       = 0
PROFILE            = static
PA                 = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH               = x64
ENTRY              = _DllMainCRTStartup
!ELSE
ARCH               = x86
ENTRY              = _DllMainCRTStartup@12
!ENDIF

OS                 = windows
CONFIG             = $(OS)-$(ARCH)-$(PROFILE)
LBIN               = $(CONFIG)\bin

BIT_PACK_CGI       = 1
BIT_PACK_EJSCRIPT  = 0
BIT_PACK_ESP       = 1
BIT_PACK_EST       = 0
BIT_PACK_MATRIXSSL = 0
BIT_PACK_MDB       = 1
BIT_PACK_NANOSSL   = 0
BIT_PACK_OPENSSL   = 0
BIT_PACK_PCRE      = 1
BIT_PACK_PHP       = 0
BIT_PACK_SDB       = 0
BIT_PACK_SQLITE    = 0
BIT_PACK_SSL       = 0

!IF "$(BIT_PACK_EST)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_LIB)" == "1"
BIT_PACK_COMPILER = 1
!ENDIF

!IF "$(BIT_PACK_MATRIXSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_MDB)" == "1"
BIT_PACK_ESP = 1
!ENDIF

!IF "$(BIT_PACK_NANOSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_OPENSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_RC)" == "1"
BIT_PACK_WINSDK = 1
!ENDIF

!IF "$(BIT_PACK_SDB)" == "1"
BIT_PACK_ESP = 1
BIT_PACK_SQLITE = 1
!ENDIF


BIT_PACK_CGI_PATH         = cgi
BIT_PACK_COMPILER_PATH    = cl
BIT_PACK_DIR_PATH         = dir
BIT_PACK_DOXYGEN_PATH     = doxygen
BIT_PACK_DSI_PATH         = dsi
BIT_PACK_EJSCRIPT_PATH    = ejscript
BIT_PACK_ESP_PATH         = esp
BIT_PACK_EST_PATH         = est
BIT_PACK_LIB_PATH         = lib.exe
BIT_PACK_LINK_PATH        = link
BIT_PACK_MAN_PATH         = man
BIT_PACK_MAN2HTML_PATH    = man2html
BIT_PACK_MATRIXSSL_PATH   = /usr/src/matrixssl
BIT_PACK_MDB_PATH         = mdb
BIT_PACK_NANOSSL_PATH     = /usr/src/nanossl
BIT_PACK_OPENSSL_PATH     = /usr/src/openssl
BIT_PACK_PCRE_PATH        = pcre
BIT_PACK_PHP_PATH         = /usr/src/php
BIT_PACK_PMAKER_PATH      = pmaker
BIT_PACK_RC_PATH          = rc
BIT_PACK_SDB_PATH         = sdb
BIT_PACK_SQLITE_PATH      = sqlite
BIT_PACK_SSL_PATH         = ssl
BIT_PACK_UTEST_PATH       = utest
BIT_PACK_WINSDK_PATH      = winsdk
BIT_PACK_ZIP_PATH         = zip

CC                 = cl
LD                 = link
RC                 = rc
CFLAGS             = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS             = -DBIT_DEBUG -D_REENTRANT -D_MT -DBIT_PACK_CGI=$(BIT_PACK_CGI) -DBIT_PACK_EJSCRIPT=$(BIT_PACK_EJSCRIPT) -DBIT_PACK_ESP=$(BIT_PACK_ESP) -DBIT_PACK_EST=$(BIT_PACK_EST) -DBIT_PACK_MATRIXSSL=$(BIT_PACK_MATRIXSSL) -DBIT_PACK_MDB=$(BIT_PACK_MDB) -DBIT_PACK_NANOSSL=$(BIT_PACK_NANOSSL) -DBIT_PACK_OPENSSL=$(BIT_PACK_OPENSSL) -DBIT_PACK_PCRE=$(BIT_PACK_PCRE) -DBIT_PACK_PHP=$(BIT_PACK_PHP) -DBIT_PACK_SDB=$(BIT_PACK_SDB) -DBIT_PACK_SQLITE=$(BIT_PACK_SQLITE) -DBIT_PACK_SSL=$(BIT_PACK_SSL) 
IFLAGS             = -I$(CONFIG)\inc
LDFLAGS            = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS           = "-libpath:$(CONFIG)\bin"
LIBS               = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX    = C:
BIT_BASE_PREFIX    = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX     = $(BIT_BASE_PREFIX)\Embedthis Appweb
BIT_VAPP_PREFIX    = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX    = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX   = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX     = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX     = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX     = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX     = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX     = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX     = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX     = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX   = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX   = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX     = $(BIT_VAPP_PREFIX)\src


TARGETS            = $(TARGETS) $(CONFIG)\bin\removeFiles.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmpr.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmprssl.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\appman.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\makerom.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\ca.crt
!IF "$(BIT_PACK_PCRE)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libpcre.lib
!ENDIF
TARGETS            = $(TARGETS) $(CONFIG)\bin\libhttp.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\http.exe
!IF "$(BIT_PACK_SQLITE)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libsqlite3.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\sqlite.exe
!ENDIF
TARGETS            = $(TARGETS) $(CONFIG)\bin\libappweb.lib
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmod_esp.lib
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\esp.exe
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\esp.conf
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS            = $(TARGETS) src\server\esp.conf
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\esp-proto
!ENDIF
TARGETS            = $(TARGETS) src\esp\proto\legacy\static\css\all.css
TARGETS            = $(TARGETS) src\esp\proto\angular\client\css\all.css
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libejs.lib
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.exe
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejsc.exe
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.mod
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmod_cgi.lib
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmod_ejs.lib
!ENDIF
!IF "$(BIT_PACK_PHP)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmod_php.lib
!ENDIF
!IF "$(BIT_PACK_SSL)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmod_ssl.lib
!ENDIF
TARGETS            = $(TARGETS) $(CONFIG)\bin\authpass.exe
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\cgiProgram.exe
!ENDIF
TARGETS            = $(TARGETS) src\server\slink.c
TARGETS            = $(TARGETS) $(CONFIG)\bin\libslink.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\appweb.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\appwebMonitor.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\appwebMonitor.ico
TARGETS            = $(TARGETS) src\server\cache
TARGETS            = $(TARGETS) $(CONFIG)\bin\testAppweb.exe
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS            = $(TARGETS) test\cgi-bin\testScript
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS            = $(TARGETS) test\web\caching\cache.cgi
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS            = $(TARGETS) test\web\auth\basic\basic.cgi
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS            = $(TARGETS) test\cgi-bin\cgiProgram.exe
!ENDIF
TARGETS            = $(TARGETS) test\web\js

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\appweb-windows-static-bit.h $(CONFIG)\inc\bit.h

clean:
	if exist "$(CONFIG)\bin\removeFiles.exe" del /Q "$(CONFIG)\bin\removeFiles.exe"
	if exist "$(CONFIG)\bin\removeFiles.lib" del /Q "$(CONFIG)\bin\removeFiles.lib"
	if exist "$(CONFIG)\bin\removeFiles.pdb" del /Q "$(CONFIG)\bin\removeFiles.pdb"
	if exist "$(CONFIG)\bin\removeFiles.exp" del /Q "$(CONFIG)\bin\removeFiles.exp"
	if exist "$(CONFIG)\bin\libmpr.lib" del /Q "$(CONFIG)\bin\libmpr.lib"
	if exist "$(CONFIG)\bin\libmprssl.lib" del /Q "$(CONFIG)\bin\libmprssl.lib"
	if exist "$(CONFIG)\bin\appman.exe" del /Q "$(CONFIG)\bin\appman.exe"
	if exist "$(CONFIG)\bin\appman.lib" del /Q "$(CONFIG)\bin\appman.lib"
	if exist "$(CONFIG)\bin\appman.pdb" del /Q "$(CONFIG)\bin\appman.pdb"
	if exist "$(CONFIG)\bin\appman.exp" del /Q "$(CONFIG)\bin\appman.exp"
	if exist "$(CONFIG)\bin\makerom.exe" del /Q "$(CONFIG)\bin\makerom.exe"
	if exist "$(CONFIG)\bin\makerom.lib" del /Q "$(CONFIG)\bin\makerom.lib"
	if exist "$(CONFIG)\bin\makerom.pdb" del /Q "$(CONFIG)\bin\makerom.pdb"
	if exist "$(CONFIG)\bin\makerom.exp" del /Q "$(CONFIG)\bin\makerom.exp"
	if exist "$(CONFIG)\bin\libest.lib" del /Q "$(CONFIG)\bin\libest.lib"
	if exist "$(CONFIG)\bin\ca.crt" del /Q "$(CONFIG)\bin\ca.crt"
	if exist "$(CONFIG)\bin\libpcre.lib" del /Q "$(CONFIG)\bin\libpcre.lib"
	if exist "$(CONFIG)\bin\libhttp.lib" del /Q "$(CONFIG)\bin\libhttp.lib"
	if exist "$(CONFIG)\bin\http.exe" del /Q "$(CONFIG)\bin\http.exe"
	if exist "$(CONFIG)\bin\http.lib" del /Q "$(CONFIG)\bin\http.lib"
	if exist "$(CONFIG)\bin\http.pdb" del /Q "$(CONFIG)\bin\http.pdb"
	if exist "$(CONFIG)\bin\http.exp" del /Q "$(CONFIG)\bin\http.exp"
	if exist "$(CONFIG)\bin\libsqlite3.lib" del /Q "$(CONFIG)\bin\libsqlite3.lib"
	if exist "$(CONFIG)\bin\sqlite.exe" del /Q "$(CONFIG)\bin\sqlite.exe"
	if exist "$(CONFIG)\bin\sqlite.lib" del /Q "$(CONFIG)\bin\sqlite.lib"
	if exist "$(CONFIG)\bin\sqlite.pdb" del /Q "$(CONFIG)\bin\sqlite.pdb"
	if exist "$(CONFIG)\bin\sqlite.exp" del /Q "$(CONFIG)\bin\sqlite.exp"
	if exist "$(CONFIG)\bin\libappweb.lib" del /Q "$(CONFIG)\bin\libappweb.lib"
	if exist "$(CONFIG)\bin\libmod_esp.lib" del /Q "$(CONFIG)\bin\libmod_esp.lib"
	if exist "$(CONFIG)\bin\esp.exe" del /Q "$(CONFIG)\bin\esp.exe"
	if exist "$(CONFIG)\bin\esp.lib" del /Q "$(CONFIG)\bin\esp.lib"
	if exist "$(CONFIG)\bin\esp.pdb" del /Q "$(CONFIG)\bin\esp.pdb"
	if exist "$(CONFIG)\bin\esp.exp" del /Q "$(CONFIG)\bin\esp.exp"
	if exist "$(CONFIG)\bin\esp.conf" del /Q "$(CONFIG)\bin\esp.conf"
	if exist "src\server\esp.conf" del /Q "src\server\esp.conf"
	if exist "$(CONFIG)\bin\esp-proto" rd /Q /S "$(CONFIG)\bin\esp-proto"
	if exist "$(CONFIG)\bin\libejs.lib" del /Q "$(CONFIG)\bin\libejs.lib"
	if exist "$(CONFIG)\bin\ejs.exe" del /Q "$(CONFIG)\bin\ejs.exe"
	if exist "$(CONFIG)\bin\ejs.lib" del /Q "$(CONFIG)\bin\ejs.lib"
	if exist "$(CONFIG)\bin\ejs.pdb" del /Q "$(CONFIG)\bin\ejs.pdb"
	if exist "$(CONFIG)\bin\ejs.exp" del /Q "$(CONFIG)\bin\ejs.exp"
	if exist "$(CONFIG)\bin\ejsc.exe" del /Q "$(CONFIG)\bin\ejsc.exe"
	if exist "$(CONFIG)\bin\ejsc.lib" del /Q "$(CONFIG)\bin\ejsc.lib"
	if exist "$(CONFIG)\bin\ejsc.pdb" del /Q "$(CONFIG)\bin\ejsc.pdb"
	if exist "$(CONFIG)\bin\ejsc.exp" del /Q "$(CONFIG)\bin\ejsc.exp"
	if exist "$(CONFIG)\bin\libmod_cgi.lib" del /Q "$(CONFIG)\bin\libmod_cgi.lib"
	if exist "$(CONFIG)\bin\libmod_ejs.lib" del /Q "$(CONFIG)\bin\libmod_ejs.lib"
	if exist "$(CONFIG)\bin\libmod_php.lib" del /Q "$(CONFIG)\bin\libmod_php.lib"
	if exist "$(CONFIG)\bin\libmod_ssl.lib" del /Q "$(CONFIG)\bin\libmod_ssl.lib"
	if exist "$(CONFIG)\bin\authpass.exe" del /Q "$(CONFIG)\bin\authpass.exe"
	if exist "$(CONFIG)\bin\authpass.lib" del /Q "$(CONFIG)\bin\authpass.lib"
	if exist "$(CONFIG)\bin\authpass.pdb" del /Q "$(CONFIG)\bin\authpass.pdb"
	if exist "$(CONFIG)\bin\authpass.exp" del /Q "$(CONFIG)\bin\authpass.exp"
	if exist "$(CONFIG)\bin\cgiProgram.exe" del /Q "$(CONFIG)\bin\cgiProgram.exe"
	if exist "$(CONFIG)\bin\cgiProgram.lib" del /Q "$(CONFIG)\bin\cgiProgram.lib"
	if exist "$(CONFIG)\bin\cgiProgram.pdb" del /Q "$(CONFIG)\bin\cgiProgram.pdb"
	if exist "$(CONFIG)\bin\cgiProgram.exp" del /Q "$(CONFIG)\bin\cgiProgram.exp"
	if exist "$(CONFIG)\bin\libslink.lib" del /Q "$(CONFIG)\bin\libslink.lib"
	if exist "$(CONFIG)\bin\appweb.exe" del /Q "$(CONFIG)\bin\appweb.exe"
	if exist "$(CONFIG)\bin\appweb.lib" del /Q "$(CONFIG)\bin\appweb.lib"
	if exist "$(CONFIG)\bin\appweb.pdb" del /Q "$(CONFIG)\bin\appweb.pdb"
	if exist "$(CONFIG)\bin\appweb.exp" del /Q "$(CONFIG)\bin\appweb.exp"
	if exist "$(CONFIG)\bin\appwebMonitor.exe" del /Q "$(CONFIG)\bin\appwebMonitor.exe"
	if exist "$(CONFIG)\bin\appwebMonitor.lib" del /Q "$(CONFIG)\bin\appwebMonitor.lib"
	if exist "$(CONFIG)\bin\appwebMonitor.pdb" del /Q "$(CONFIG)\bin\appwebMonitor.pdb"
	if exist "$(CONFIG)\bin\appwebMonitor.exp" del /Q "$(CONFIG)\bin\appwebMonitor.exp"
	if exist "$(CONFIG)\bin\appwebMonitor.ico" del /Q "$(CONFIG)\bin\appwebMonitor.ico"
	if exist "$(CONFIG)\bin\testAppweb.exe" del /Q "$(CONFIG)\bin\testAppweb.exe"
	if exist "$(CONFIG)\bin\testAppweb.lib" del /Q "$(CONFIG)\bin\testAppweb.lib"
	if exist "$(CONFIG)\bin\testAppweb.pdb" del /Q "$(CONFIG)\bin\testAppweb.pdb"
	if exist "$(CONFIG)\bin\testAppweb.exp" del /Q "$(CONFIG)\bin\testAppweb.exp"
	if exist "test\web\js" rd /Q /S "test\web\js"
	if exist "$(CONFIG)\obj\removeFiles.obj" del /Q "$(CONFIG)\obj\removeFiles.obj"
	if exist "$(CONFIG)\obj\mprLib.obj" del /Q "$(CONFIG)\obj\mprLib.obj"
	if exist "$(CONFIG)\obj\mprSsl.obj" del /Q "$(CONFIG)\obj\mprSsl.obj"
	if exist "$(CONFIG)\obj\manager.obj" del /Q "$(CONFIG)\obj\manager.obj"
	if exist "$(CONFIG)\obj\makerom.obj" del /Q "$(CONFIG)\obj\makerom.obj"
	if exist "$(CONFIG)\obj\estLib.obj" del /Q "$(CONFIG)\obj\estLib.obj"
	if exist "$(CONFIG)\obj\pcre.obj" del /Q "$(CONFIG)\obj\pcre.obj"
	if exist "$(CONFIG)\obj\httpLib.obj" del /Q "$(CONFIG)\obj\httpLib.obj"
	if exist "$(CONFIG)\obj\http.obj" del /Q "$(CONFIG)\obj\http.obj"
	if exist "$(CONFIG)\obj\sqlite3.obj" del /Q "$(CONFIG)\obj\sqlite3.obj"
	if exist "$(CONFIG)\obj\sqlite.obj" del /Q "$(CONFIG)\obj\sqlite.obj"
	if exist "$(CONFIG)\obj\config.obj" del /Q "$(CONFIG)\obj\config.obj"
	if exist "$(CONFIG)\obj\convenience.obj" del /Q "$(CONFIG)\obj\convenience.obj"
	if exist "$(CONFIG)\obj\dirHandler.obj" del /Q "$(CONFIG)\obj\dirHandler.obj"
	if exist "$(CONFIG)\obj\fileHandler.obj" del /Q "$(CONFIG)\obj\fileHandler.obj"
	if exist "$(CONFIG)\obj\log.obj" del /Q "$(CONFIG)\obj\log.obj"
	if exist "$(CONFIG)\obj\server.obj" del /Q "$(CONFIG)\obj\server.obj"
	if exist "$(CONFIG)\obj\edi.obj" del /Q "$(CONFIG)\obj\edi.obj"
	if exist "$(CONFIG)\obj\espAbbrev.obj" del /Q "$(CONFIG)\obj\espAbbrev.obj"
	if exist "$(CONFIG)\obj\espFramework.obj" del /Q "$(CONFIG)\obj\espFramework.obj"
	if exist "$(CONFIG)\obj\espHandler.obj" del /Q "$(CONFIG)\obj\espHandler.obj"
	if exist "$(CONFIG)\obj\espHtml.obj" del /Q "$(CONFIG)\obj\espHtml.obj"
	if exist "$(CONFIG)\obj\espTemplate.obj" del /Q "$(CONFIG)\obj\espTemplate.obj"
	if exist "$(CONFIG)\obj\mdb.obj" del /Q "$(CONFIG)\obj\mdb.obj"
	if exist "$(CONFIG)\obj\sdb.obj" del /Q "$(CONFIG)\obj\sdb.obj"
	if exist "$(CONFIG)\obj\esp.obj" del /Q "$(CONFIG)\obj\esp.obj"
	if exist "$(CONFIG)\obj\ejsLib.obj" del /Q "$(CONFIG)\obj\ejsLib.obj"
	if exist "$(CONFIG)\obj\ejs.obj" del /Q "$(CONFIG)\obj\ejs.obj"
	if exist "$(CONFIG)\obj\ejsc.obj" del /Q "$(CONFIG)\obj\ejsc.obj"
	if exist "$(CONFIG)\obj\cgiHandler.obj" del /Q "$(CONFIG)\obj\cgiHandler.obj"
	if exist "$(CONFIG)\obj\ejsHandler.obj" del /Q "$(CONFIG)\obj\ejsHandler.obj"
	if exist "$(CONFIG)\obj\phpHandler.obj" del /Q "$(CONFIG)\obj\phpHandler.obj"
	if exist "$(CONFIG)\obj\sslModule.obj" del /Q "$(CONFIG)\obj\sslModule.obj"
	if exist "$(CONFIG)\obj\authpass.obj" del /Q "$(CONFIG)\obj\authpass.obj"
	if exist "$(CONFIG)\obj\cgiProgram.obj" del /Q "$(CONFIG)\obj\cgiProgram.obj"
	if exist "$(CONFIG)\obj\slink.obj" del /Q "$(CONFIG)\obj\slink.obj"
	if exist "$(CONFIG)\obj\appweb.obj" del /Q "$(CONFIG)\obj\appweb.obj"
	if exist "$(CONFIG)\obj\appwebMonitor.obj" del /Q "$(CONFIG)\obj\appwebMonitor.obj"
	if exist "$(CONFIG)\obj\testAppweb.obj" del /Q "$(CONFIG)\obj\testAppweb.obj"
	if exist "$(CONFIG)\obj\testHttp.obj" del /Q "$(CONFIG)\obj\testHttp.obj"



#
#   version
#
version: $(DEPS_1)
	@echo 4.4.0-0

#
#   bit.h
#
$(CONFIG)\inc\bit.h: $(DEPS_2)
	@echo '      [Copy] $(CONFIG)/inc/bit.h'

#
#   removeFiles.obj
#
DEPS_3 = $(DEPS_3) $(CONFIG)\inc\bit.h

$(CONFIG)\obj\removeFiles.obj: \
    package\windows\removeFiles.c $(DEPS_3)
	@echo '   [Compile] $(CONFIG)/obj/removeFiles.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" package\windows\removeFiles.c

#
#   removeFiles
#
DEPS_4 = $(DEPS_4) $(CONFIG)\inc\bit.h
DEPS_4 = $(DEPS_4) $(CONFIG)\obj\removeFiles.obj

$(CONFIG)\bin\removeFiles.exe: $(DEPS_4)
	@echo '      [Link] $(CONFIG)/bin/removeFiles.exe'
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\removeFiles.obj" $(LIBS) 

#
#   mpr.h
#
$(CONFIG)\inc\mpr.h: $(DEPS_5)
	@echo '      [Copy] $(CONFIG)/inc/mpr.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\mpr\mpr.h $(CONFIG)\inc\mpr.h

#
#   bitos.h
#
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bit.h

$(CONFIG)\inc\bitos.h: $(DEPS_6)
	@echo '      [Copy] $(CONFIG)/inc/bitos.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\bitos.h $(CONFIG)\inc\bitos.h

#
#   mprLib.obj
#
DEPS_7 = $(DEPS_7) $(CONFIG)\inc\bit.h
DEPS_7 = $(DEPS_7) $(CONFIG)\inc\mpr.h
DEPS_7 = $(DEPS_7) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\mprLib.obj: \
    src\deps\mpr\mprLib.c $(DEPS_7)
	@echo '   [Compile] $(CONFIG)/obj/mprLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mprLib.obj -Fd$(CONFIG)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\mpr\mprLib.c

#
#   libmpr
#
DEPS_8 = $(DEPS_8) $(CONFIG)\inc\mpr.h
DEPS_8 = $(DEPS_8) $(CONFIG)\inc\bit.h
DEPS_8 = $(DEPS_8) $(CONFIG)\inc\bitos.h
DEPS_8 = $(DEPS_8) $(CONFIG)\obj\mprLib.obj

$(CONFIG)\bin\libmpr.lib: $(DEPS_8)
	@echo '      [Link] $(CONFIG)/bin/libmpr.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmpr.lib "$(CONFIG)\obj\mprLib.obj"

#
#   est.h
#
$(CONFIG)\inc\est.h: $(DEPS_9)
	@echo '      [Copy] $(CONFIG)/inc/est.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\est\est.h $(CONFIG)\inc\est.h

#
#   estLib.obj
#
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\bit.h
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\est.h
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\estLib.obj: \
    src\deps\est\estLib.c $(DEPS_10)
	@echo '   [Compile] $(CONFIG)/obj/estLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\estLib.obj -Fd$(CONFIG)\obj\estLib.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\est\estLib.c

!IF "$(BIT_PACK_EST)" == "1"
#
#   libest
#
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\est.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\bit.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\bitos.h
DEPS_11 = $(DEPS_11) $(CONFIG)\obj\estLib.obj

$(CONFIG)\bin\libest.lib: $(DEPS_11)
	@echo '      [Link] $(CONFIG)/bin/libest.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libest.lib "$(CONFIG)\obj\estLib.obj"
!ENDIF

#
#   mprSsl.obj
#
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\bit.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\mpr.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\est.h

$(CONFIG)\obj\mprSsl.obj: \
    src\deps\mpr\mprSsl.c $(DEPS_12)
	@echo '   [Compile] $(CONFIG)/obj/mprSsl.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mprSsl.obj -Fd$(CONFIG)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" "-I$(BIT_PACK_MATRIXSSL_PATH)" "-I$(BIT_PACK_MATRIXSSL_PATH)\matrixssl" "-I$(BIT_PACK_NANOSSL_PATH)\src" "-I$(BIT_PACK_OPENSSL_PATH)\include" src\deps\mpr\mprSsl.c

#
#   libmprssl
#
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\mpr.h
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\bit.h
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\bitos.h
DEPS_13 = $(DEPS_13) $(CONFIG)\obj\mprLib.obj
DEPS_13 = $(DEPS_13) $(CONFIG)\bin\libmpr.lib
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\est.h
DEPS_13 = $(DEPS_13) $(CONFIG)\obj\estLib.obj
!IF "$(BIT_PACK_EST)" == "1"
DEPS_13 = $(DEPS_13) $(CONFIG)\bin\libest.lib
!ENDIF
DEPS_13 = $(DEPS_13) $(CONFIG)\obj\mprSsl.obj

$(CONFIG)\bin\libmprssl.lib: $(DEPS_13)
	@echo '      [Link] $(CONFIG)/bin/libmprssl.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmprssl.lib "$(CONFIG)\obj\mprSsl.obj"

#
#   manager.obj
#
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\bit.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\manager.obj: \
    src\deps\mpr\manager.c $(DEPS_14)
	@echo '   [Compile] $(CONFIG)/obj/manager.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\manager.obj -Fd$(CONFIG)\obj\manager.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\mpr\manager.c

#
#   manager
#
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\mpr.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\bit.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\bitos.h
DEPS_15 = $(DEPS_15) $(CONFIG)\obj\mprLib.obj
DEPS_15 = $(DEPS_15) $(CONFIG)\bin\libmpr.lib
DEPS_15 = $(DEPS_15) $(CONFIG)\obj\manager.obj

LIBS_15 = $(LIBS_15) libmpr.lib

$(CONFIG)\bin\appman.exe: $(DEPS_15)
	@echo '      [Link] $(CONFIG)/bin/appman.exe'
	"$(LD)" -out:$(CONFIG)\bin\appman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\manager.obj" $(LIBPATHS_15) $(LIBS_15) $(LIBS_15) $(LIBS) 

#
#   makerom.obj
#
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\bit.h
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\makerom.obj: \
    src\deps\mpr\makerom.c $(DEPS_16)
	@echo '   [Compile] $(CONFIG)/obj/makerom.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\makerom.obj -Fd$(CONFIG)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\mpr\makerom.c

#
#   makerom
#
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\mpr.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\bit.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\bitos.h
DEPS_17 = $(DEPS_17) $(CONFIG)\obj\mprLib.obj
DEPS_17 = $(DEPS_17) $(CONFIG)\bin\libmpr.lib
DEPS_17 = $(DEPS_17) $(CONFIG)\obj\makerom.obj

LIBS_17 = $(LIBS_17) libmpr.lib

$(CONFIG)\bin\makerom.exe: $(DEPS_17)
	@echo '      [Link] $(CONFIG)/bin/makerom.exe'
	"$(LD)" -out:$(CONFIG)\bin\makerom.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\makerom.obj" $(LIBPATHS_17) $(LIBS_17) $(LIBS_17) $(LIBS) 

#
#   ca-crt
#
DEPS_18 = $(DEPS_18) src\deps\est\ca.crt

$(CONFIG)\bin\ca.crt: $(DEPS_18)
	@echo '      [Copy] $(CONFIG)/bin/ca.crt'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y src\deps\est\ca.crt $(CONFIG)\bin\ca.crt

#
#   pcre.h
#
$(CONFIG)\inc\pcre.h: $(DEPS_19)
	@echo '      [Copy] $(CONFIG)/inc/pcre.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\pcre\pcre.h $(CONFIG)\inc\pcre.h

#
#   pcre.obj
#
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\bit.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\pcre.obj: \
    src\deps\pcre\pcre.c $(DEPS_20)
	@echo '   [Compile] $(CONFIG)/obj/pcre.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre.obj -Fd$(CONFIG)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\pcre\pcre.c

!IF "$(BIT_PACK_PCRE)" == "1"
#
#   libpcre
#
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\pcre.h
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\bit.h
DEPS_21 = $(DEPS_21) $(CONFIG)\obj\pcre.obj

$(CONFIG)\bin\libpcre.lib: $(DEPS_21)
	@echo '      [Link] $(CONFIG)/bin/libpcre.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libpcre.lib "$(CONFIG)\obj\pcre.obj"
!ENDIF

#
#   http.h
#
$(CONFIG)\inc\http.h: $(DEPS_22)
	@echo '      [Copy] $(CONFIG)/inc/http.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\http\http.h $(CONFIG)\inc\http.h

#
#   httpLib.obj
#
DEPS_23 = $(DEPS_23) $(CONFIG)\inc\bit.h
DEPS_23 = $(DEPS_23) $(CONFIG)\inc\http.h
DEPS_23 = $(DEPS_23) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\httpLib.obj: \
    src\deps\http\httpLib.c $(DEPS_23)
	@echo '   [Compile] $(CONFIG)/obj/httpLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\httpLib.obj -Fd$(CONFIG)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\http\httpLib.c

#
#   libhttp
#
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\mpr.h
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\bit.h
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\bitos.h
DEPS_24 = $(DEPS_24) $(CONFIG)\obj\mprLib.obj
DEPS_24 = $(DEPS_24) $(CONFIG)\bin\libmpr.lib
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\pcre.h
DEPS_24 = $(DEPS_24) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_24 = $(DEPS_24) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\http.h
DEPS_24 = $(DEPS_24) $(CONFIG)\obj\httpLib.obj

$(CONFIG)\bin\libhttp.lib: $(DEPS_24)
	@echo '      [Link] $(CONFIG)/bin/libhttp.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libhttp.lib "$(CONFIG)\obj\httpLib.obj"

#
#   http.obj
#
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\bit.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\http.h

$(CONFIG)\obj\http.obj: \
    src\deps\http\http.c $(DEPS_25)
	@echo '   [Compile] $(CONFIG)/obj/http.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\http\http.c

#
#   http
#
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\mpr.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\bit.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\bitos.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\mprLib.obj
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libmpr.lib
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\pcre.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\http.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\httpLib.obj
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libhttp.lib
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\http.obj

LIBS_26 = $(LIBS_26) libhttp.lib
LIBS_26 = $(LIBS_26) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_26 = $(LIBS_26) libpcre.lib
!ENDIF

$(CONFIG)\bin\http.exe: $(DEPS_26)
	@echo '      [Link] $(CONFIG)/bin/http.exe'
	"$(LD)" -out:$(CONFIG)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\http.obj" $(LIBPATHS_26) $(LIBS_26) $(LIBS_26) $(LIBS) 

#
#   sqlite3.h
#
$(CONFIG)\inc\sqlite3.h: $(DEPS_27)
	@echo '      [Copy] $(CONFIG)/inc/sqlite3.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\sqlite\sqlite3.h $(CONFIG)\inc\sqlite3.h

#
#   sqlite3.obj
#
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\bit.h
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite3.obj: \
    src\deps\sqlite\sqlite3.c $(DEPS_28)
	@echo '   [Compile] $(CONFIG)/obj/sqlite3.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite3.obj -Fd$(CONFIG)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\sqlite\sqlite3.c

!IF "$(BIT_PACK_SQLITE)" == "1"
#
#   libsqlite3
#
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\sqlite3.h
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\bit.h
DEPS_29 = $(DEPS_29) $(CONFIG)\obj\sqlite3.obj

$(CONFIG)\bin\libsqlite3.lib: $(DEPS_29)
	@echo '      [Link] $(CONFIG)/bin/libsqlite3.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libsqlite3.lib "$(CONFIG)\obj\sqlite3.obj"
!ENDIF

#
#   sqlite.obj
#
DEPS_30 = $(DEPS_30) $(CONFIG)\inc\bit.h
DEPS_30 = $(DEPS_30) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite.obj: \
    src\deps\sqlite\sqlite.c $(DEPS_30)
	@echo '   [Compile] $(CONFIG)/obj/sqlite.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite.obj -Fd$(CONFIG)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\sqlite\sqlite.c

!IF "$(BIT_PACK_SQLITE)" == "1"
#
#   sqliteshell
#
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\sqlite3.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\bit.h
DEPS_31 = $(DEPS_31) $(CONFIG)\obj\sqlite3.obj
DEPS_31 = $(DEPS_31) $(CONFIG)\bin\libsqlite3.lib
DEPS_31 = $(DEPS_31) $(CONFIG)\obj\sqlite.obj

LIBS_31 = $(LIBS_31) libsqlite3.lib

$(CONFIG)\bin\sqlite.exe: $(DEPS_31)
	@echo '      [Link] $(CONFIG)/bin/sqlite.exe'
	"$(LD)" -out:$(CONFIG)\bin\sqlite.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\sqlite.obj" $(LIBPATHS_31) $(LIBS_31) $(LIBS_31) $(LIBS) 
!ENDIF

#
#   appweb.h
#
$(CONFIG)\inc\appweb.h: $(DEPS_32)
	@echo '      [Copy] $(CONFIG)/inc/appweb.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\appweb.h $(CONFIG)\inc\appweb.h

#
#   customize.h
#
$(CONFIG)\inc\customize.h: $(DEPS_33)
	@echo '      [Copy] $(CONFIG)/inc/customize.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\customize.h $(CONFIG)\inc\customize.h

#
#   config.obj
#
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\bit.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\appweb.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\pcre.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\mpr.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\http.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\customize.h

$(CONFIG)\obj\config.obj: \
    src\config.c $(DEPS_34)
	@echo '   [Compile] $(CONFIG)/obj/config.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\config.obj -Fd$(CONFIG)\obj\config.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\config.c

#
#   convenience.obj
#
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\bit.h
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\convenience.obj: \
    src\convenience.c $(DEPS_35)
	@echo '   [Compile] $(CONFIG)/obj/convenience.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\convenience.obj -Fd$(CONFIG)\obj\convenience.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\convenience.c

#
#   dirHandler.obj
#
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\bit.h
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\dirHandler.obj: \
    src\dirHandler.c $(DEPS_36)
	@echo '   [Compile] $(CONFIG)/obj/dirHandler.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\dirHandler.obj -Fd$(CONFIG)\obj\dirHandler.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\dirHandler.c

#
#   fileHandler.obj
#
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\bit.h
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\fileHandler.obj: \
    src\fileHandler.c $(DEPS_37)
	@echo '   [Compile] $(CONFIG)/obj/fileHandler.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\fileHandler.obj -Fd$(CONFIG)\obj\fileHandler.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\fileHandler.c

#
#   log.obj
#
DEPS_38 = $(DEPS_38) $(CONFIG)\inc\bit.h
DEPS_38 = $(DEPS_38) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\log.obj: \
    src\log.c $(DEPS_38)
	@echo '   [Compile] $(CONFIG)/obj/log.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\log.obj -Fd$(CONFIG)\obj\log.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\log.c

#
#   server.obj
#
DEPS_39 = $(DEPS_39) $(CONFIG)\inc\bit.h
DEPS_39 = $(DEPS_39) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\server.obj: \
    src\server.c $(DEPS_39)
	@echo '   [Compile] $(CONFIG)/obj/server.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\server.obj -Fd$(CONFIG)\obj\server.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\server.c

#
#   libappweb
#
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\mpr.h
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\bit.h
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\bitos.h
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\mprLib.obj
DEPS_40 = $(DEPS_40) $(CONFIG)\bin\libmpr.lib
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\pcre.h
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_40 = $(DEPS_40) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\http.h
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\httpLib.obj
DEPS_40 = $(DEPS_40) $(CONFIG)\bin\libhttp.lib
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\appweb.h
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\customize.h
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\config.obj
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\convenience.obj
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\dirHandler.obj
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\fileHandler.obj
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\log.obj
DEPS_40 = $(DEPS_40) $(CONFIG)\obj\server.obj

$(CONFIG)\bin\libappweb.lib: $(DEPS_40)
	@echo '      [Link] $(CONFIG)/bin/libappweb.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libappweb.lib "$(CONFIG)\obj\config.obj" "$(CONFIG)\obj\convenience.obj" "$(CONFIG)\obj\dirHandler.obj" "$(CONFIG)\obj\fileHandler.obj" "$(CONFIG)\obj\log.obj" "$(CONFIG)\obj\server.obj"

#
#   edi.h
#
$(CONFIG)\inc\edi.h: $(DEPS_41)
	@echo '      [Copy] $(CONFIG)/inc/edi.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\esp\edi.h $(CONFIG)\inc\edi.h

#
#   esp.h
#
$(CONFIG)\inc\esp.h: $(DEPS_42)
	@echo '      [Copy] $(CONFIG)/inc/esp.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\esp\esp.h $(CONFIG)\inc\esp.h

#
#   mdb.h
#
$(CONFIG)\inc\mdb.h: $(DEPS_43)
	@echo '      [Copy] $(CONFIG)/inc/mdb.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\esp\mdb.h $(CONFIG)\inc\mdb.h

#
#   edi.obj
#
DEPS_44 = $(DEPS_44) $(CONFIG)\inc\bit.h
DEPS_44 = $(DEPS_44) $(CONFIG)\inc\edi.h
DEPS_44 = $(DEPS_44) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\edi.obj: \
    src\esp\edi.c $(DEPS_44)
	@echo '   [Compile] $(CONFIG)/obj/edi.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\edi.obj -Fd$(CONFIG)\obj\edi.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\edi.c

#
#   espAbbrev.obj
#
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\bit.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espAbbrev.obj: \
    src\esp\espAbbrev.c $(DEPS_45)
	@echo '   [Compile] $(CONFIG)/obj/espAbbrev.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espAbbrev.obj -Fd$(CONFIG)\obj\espAbbrev.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\espAbbrev.c

#
#   espFramework.obj
#
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\bit.h
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espFramework.obj: \
    src\esp\espFramework.c $(DEPS_46)
	@echo '   [Compile] $(CONFIG)/obj/espFramework.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espFramework.obj -Fd$(CONFIG)\obj\espFramework.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\espFramework.c

#
#   espHandler.obj
#
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\bit.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\appweb.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\esp.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\edi.h

$(CONFIG)\obj\espHandler.obj: \
    src\esp\espHandler.c $(DEPS_47)
	@echo '   [Compile] $(CONFIG)/obj/espHandler.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espHandler.obj -Fd$(CONFIG)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\espHandler.c

#
#   espHtml.obj
#
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\bit.h
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\esp.h
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\edi.h

$(CONFIG)\obj\espHtml.obj: \
    src\esp\espHtml.c $(DEPS_48)
	@echo '   [Compile] $(CONFIG)/obj/espHtml.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espHtml.obj -Fd$(CONFIG)\obj\espHtml.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\espHtml.c

#
#   espTemplate.obj
#
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\bit.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espTemplate.obj: \
    src\esp\espTemplate.c $(DEPS_49)
	@echo '   [Compile] $(CONFIG)/obj/espTemplate.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\espTemplate.obj -Fd$(CONFIG)\obj\espTemplate.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\espTemplate.c

#
#   mdb.obj
#
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\bit.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\appweb.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\edi.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\mdb.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\mdb.obj: \
    src\esp\mdb.c $(DEPS_50)
	@echo '   [Compile] $(CONFIG)/obj/mdb.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mdb.obj -Fd$(CONFIG)\obj\mdb.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\mdb.c

#
#   sdb.obj
#
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\bit.h
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\sdb.obj: \
    src\esp\sdb.c $(DEPS_51)
	@echo '   [Compile] $(CONFIG)/obj/sdb.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sdb.obj -Fd$(CONFIG)\obj\sdb.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\sdb.c

!IF "$(BIT_PACK_ESP)" == "1"
#
#   libmod_esp
#
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\mpr.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\bit.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\bitos.h
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\mprLib.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\bin\libmpr.lib
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\pcre.h
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_52 = $(DEPS_52) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\http.h
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\httpLib.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\bin\libhttp.lib
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\appweb.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\customize.h
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\config.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\convenience.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\dirHandler.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\fileHandler.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\log.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\server.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\bin\libappweb.lib
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\edi.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\esp.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\mdb.h
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\edi.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espAbbrev.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espFramework.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espHandler.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espHtml.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espTemplate.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\mdb.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\sdb.obj

$(CONFIG)\bin\libmod_esp.lib: $(DEPS_52)
	@echo '      [Link] $(CONFIG)/bin/libmod_esp.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmod_esp.lib "$(CONFIG)\obj\edi.obj" "$(CONFIG)\obj\espAbbrev.obj" "$(CONFIG)\obj\espFramework.obj" "$(CONFIG)\obj\espHandler.obj" "$(CONFIG)\obj\espHtml.obj" "$(CONFIG)\obj\espTemplate.obj" "$(CONFIG)\obj\mdb.obj" "$(CONFIG)\obj\sdb.obj"
!ENDIF

#
#   esp.obj
#
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\bit.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\esp.obj: \
    src\esp\esp.c $(DEPS_53)
	@echo '   [Compile] $(CONFIG)/obj/esp.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\esp.obj -Fd$(CONFIG)\obj\esp.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\esp\esp.c

!IF "$(BIT_PACK_ESP)" == "1"
#
#   espcmd
#
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\mpr.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\bit.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\bitos.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\mprLib.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libmpr.lib
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\pcre.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\http.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\httpLib.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libhttp.lib
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\appweb.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\customize.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\config.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\convenience.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\dirHandler.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\fileHandler.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\log.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\server.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libappweb.lib
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\edi.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\esp.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\mdb.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\edi.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espAbbrev.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espFramework.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espHandler.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espHtml.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\espTemplate.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\mdb.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\sdb.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libmod_esp.lib
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\esp.obj

LIBS_54 = $(LIBS_54) libappweb.lib
LIBS_54 = $(LIBS_54) libhttp.lib
LIBS_54 = $(LIBS_54) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_54 = $(LIBS_54) libpcre.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_54 = $(LIBS_54) libsqlite3.lib
!ENDIF
LIBS_54 = $(LIBS_54) libmod_esp.lib

$(CONFIG)\bin\esp.exe: $(DEPS_54)
	@echo '      [Link] $(CONFIG)/bin/esp.exe'
	"$(LD)" -out:$(CONFIG)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\edi.obj" "$(CONFIG)\obj\esp.obj" "$(CONFIG)\obj\espAbbrev.obj" "$(CONFIG)\obj\espFramework.obj" "$(CONFIG)\obj\espHandler.obj" "$(CONFIG)\obj\espHtml.obj" "$(CONFIG)\obj\espTemplate.obj" "$(CONFIG)\obj\mdb.obj" "$(CONFIG)\obj\sdb.obj" $(LIBPATHS_54) $(LIBS_54) $(LIBS_54) $(LIBS) 
!ENDIF

!IF "$(BIT_PACK_ESP)" == "1"
#
#   esp.conf
#
DEPS_55 = $(DEPS_55) src\esp\esp.conf

$(CONFIG)\bin\esp.conf: $(DEPS_55)
	@echo '      [Copy] $(CONFIG)/bin/esp.conf'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y src\esp\esp.conf $(CONFIG)\bin\esp.conf
!ENDIF

!IF "$(BIT_PACK_ESP)" == "1"
#
#   esp.conf.server
#
DEPS_56 = $(DEPS_56) src\esp\esp.conf

src\server\esp.conf: $(DEPS_56)
	@echo '      [Copy] src/server/esp.conf'
	if not exist "src\server" md "src\server"
	copy /Y src\esp\esp.conf src\server\esp.conf
!ENDIF

!IF "$(BIT_PACK_ESP)" == "1"
#
#   proto
#
DEPS_57 = $(DEPS_57) src\esp\proto

$(CONFIG)\bin\esp-proto: $(DEPS_57)
	@echo '      [Copy] $(CONFIG)/bin/esp-proto'
	if not exist "$(CONFIG)\bin\esp-proto\angular" md "$(CONFIG)\bin\esp-proto\angular"
	copy /Y src\esp\proto\angular\app.conf $(CONFIG)\bin\esp-proto\angular\app.conf
	copy /Y src\esp\proto\angular\appweb.conf $(CONFIG)\bin\esp-proto\angular\appweb.conf
	if not exist "$(CONFIG)\bin\esp-proto\angular\cache" md "$(CONFIG)\bin\esp-proto\angular\cache"
	copy /Y src\esp\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.c $(CONFIG)\bin\esp-proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.c
	copy /Y src\esp\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.dylib $(CONFIG)\bin\esp-proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.dylib
	copy /Y src\esp\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.o $(CONFIG)\bin\esp-proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.o
	if not exist "$(CONFIG)\bin\esp-proto\angular\client\app" md "$(CONFIG)\bin\esp-proto\angular\client\app"
	copy /Y src\esp\proto\angular\client\app\app.js $(CONFIG)\bin\esp-proto\angular\client\app\app.js
	copy /Y src\esp\proto\angular\client\app\AppControl.js $(CONFIG)\bin\esp-proto\angular\client\app\AppControl.js
	if not exist "$(CONFIG)\bin\esp-proto\angular\client\assets" md "$(CONFIG)\bin\esp-proto\angular\client\assets"
	copy /Y src\esp\proto\angular\client\assets\banner.jpg $(CONFIG)\bin\esp-proto\angular\client\assets\banner.jpg
	copy /Y src\esp\proto\angular\client\assets\favicon.ico $(CONFIG)\bin\esp-proto\angular\client\assets\favicon.ico
	copy /Y src\esp\proto\angular\client\assets\splash.jpg $(CONFIG)\bin\esp-proto\angular\client\assets\splash.jpg
	if not exist "$(CONFIG)\bin\esp-proto\angular\client\components\Esp" md "$(CONFIG)\bin\esp-proto\angular\client\components\Esp"
	copy /Y src\esp\proto\angular\client\components\Esp\Esp.js $(CONFIG)\bin\esp-proto\angular\client\components\Esp\Esp.js
	if not exist "$(CONFIG)\bin\esp-proto\angular\client" md "$(CONFIG)\bin\esp-proto\angular\client"
	copy /Y src\esp\proto\angular\client\config.json $(CONFIG)\bin\esp-proto\angular\client\config.json
	if not exist "$(CONFIG)\bin\esp-proto\angular\client\css" md "$(CONFIG)\bin\esp-proto\angular\client\css"
	copy /Y src\esp\proto\angular\client\css\all.css $(CONFIG)\bin\esp-proto\angular\client\css\all.css
	copy /Y src\esp\proto\angular\client\css\all.less $(CONFIG)\bin\esp-proto\angular\client\css\all.less
	copy /Y src\esp\proto\angular\client\css\app.less $(CONFIG)\bin\esp-proto\angular\client\css\app.less
	copy /Y src\esp\proto\angular\client\css\bootstrap.css $(CONFIG)\bin\esp-proto\angular\client\css\bootstrap.css
	copy /Y src\esp\proto\angular\client\css\more.less $(CONFIG)\bin\esp-proto\angular\client\css\more.less
	copy /Y src\esp\proto\angular\client\css\normalize.less $(CONFIG)\bin\esp-proto\angular\client\css\normalize.less
	copy /Y src\esp\proto\angular\client\css\theme.less $(CONFIG)\bin\esp-proto\angular\client\css\theme.less
	copy /Y src\esp\proto\angular\client\index.esp $(CONFIG)\bin\esp-proto\angular\client\index.esp
	if not exist "$(CONFIG)\bin\esp-proto\angular\client\lib" md "$(CONFIG)\bin\esp-proto\angular\client\lib"
	copy /Y src\esp\proto\angular\client\lib\all.js $(CONFIG)\bin\esp-proto\angular\client\lib\all.js
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap-prettify.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-bootstrap-prettify.js
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap-prettify.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-bootstrap-prettify.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-bootstrap.js
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-bootstrap.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-cookies.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-cookies.js
	copy /Y src\esp\proto\angular\client\lib\angular-cookies.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-cookies.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-loader.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-loader.js
	copy /Y src\esp\proto\angular\client\lib\angular-loader.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-loader.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-mobile.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-mobile.js
	copy /Y src\esp\proto\angular\client\lib\angular-mobile.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-mobile.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-mocks.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-mocks.js
	copy /Y src\esp\proto\angular\client\lib\angular-resource.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-resource.js
	copy /Y src\esp\proto\angular\client\lib\angular-resource.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-resource.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-sanitize.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-sanitize.js
	copy /Y src\esp\proto\angular\client\lib\angular-sanitize.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-sanitize.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-scenario.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular-scenario.js
	copy /Y src\esp\proto\angular\client\lib\angular.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular.js
	copy /Y src\esp\proto\angular\client\lib\angular.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\angular.min.js
	copy /Y src\esp\proto\angular\client\lib\esp.js $(CONFIG)\bin\esp-proto\angular\client\lib\esp.js
	copy /Y src\esp\proto\angular\client\lib\html5shiv.js $(CONFIG)\bin\esp-proto\angular\client\lib\html5shiv.js
	copy /Y src\esp\proto\angular\client\lib\html5shiv.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\html5shiv.min.js
	copy /Y src\esp\proto\angular\client\lib\jquery.js $(CONFIG)\bin\esp-proto\angular\client\lib\jquery.js
	copy /Y src\esp\proto\angular\client\lib\jquery.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\jquery.min.js
	copy /Y src\esp\proto\angular\client\lib\less.js $(CONFIG)\bin\esp-proto\angular\client\lib\less.js
	copy /Y src\esp\proto\angular\client\lib\less.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\less.min.js
	copy /Y src\esp\proto\angular\client\lib\respond.js $(CONFIG)\bin\esp-proto\angular\client\lib\respond.js
	copy /Y src\esp\proto\angular\client\lib\respond.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\respond.min.js
	copy /Y src\esp\proto\angular\client\lib\ui-bootstrap-tpls.js $(CONFIG)\bin\esp-proto\angular\client\lib\ui-bootstrap-tpls.js
	copy /Y src\esp\proto\angular\client\lib\ui-bootstrap-tpls.min.js $(CONFIG)\bin\esp-proto\angular\client\lib\ui-bootstrap-tpls.min.js
	if not exist "$(CONFIG)\bin\esp-proto\angular\client\templates" md "$(CONFIG)\bin\esp-proto\angular\client\templates"
	copy /Y src\esp\proto\angular\client\templates\splash.html $(CONFIG)\bin\esp-proto\angular\client\templates\splash.html
	copy /Y src\esp\proto\angular\start.bit $(CONFIG)\bin\esp-proto\angular\start.bit
	if not exist "$(CONFIG)\bin\esp-proto\legacy" md "$(CONFIG)\bin\esp-proto\legacy"
	copy /Y src\esp\proto\legacy\app.conf $(CONFIG)\bin\esp-proto\legacy\app.conf
	copy /Y src\esp\proto\legacy\appweb.conf $(CONFIG)\bin\esp-proto\legacy\appweb.conf
	if not exist "$(CONFIG)\bin\esp-proto\legacy\layouts" md "$(CONFIG)\bin\esp-proto\legacy\layouts"
	copy /Y src\esp\proto\legacy\layouts\default.esp $(CONFIG)\bin\esp-proto\legacy\layouts\default.esp
	if not exist "$(CONFIG)\bin\esp-proto\legacy\static\css" md "$(CONFIG)\bin\esp-proto\legacy\static\css"
	copy /Y src\esp\proto\legacy\static\css\all.css $(CONFIG)\bin\esp-proto\legacy\static\css\all.css
	if not exist "$(CONFIG)\bin\esp-proto\legacy\static\images" md "$(CONFIG)\bin\esp-proto\legacy\static\images"
	copy /Y src\esp\proto\legacy\static\images\banner.jpg $(CONFIG)\bin\esp-proto\legacy\static\images\banner.jpg
	copy /Y src\esp\proto\legacy\static\images\favicon.ico $(CONFIG)\bin\esp-proto\legacy\static\images\favicon.ico
	copy /Y src\esp\proto\legacy\static\images\splash.jpg $(CONFIG)\bin\esp-proto\legacy\static\images\splash.jpg
	if not exist "$(CONFIG)\bin\esp-proto\legacy\static" md "$(CONFIG)\bin\esp-proto\legacy\static"
	copy /Y src\esp\proto\legacy\static\index.esp $(CONFIG)\bin\esp-proto\legacy\static\index.esp
	if not exist "$(CONFIG)\bin\esp-proto\legacy\static\js" md "$(CONFIG)\bin\esp-proto\legacy\static\js"
	copy /Y src\esp\proto\legacy\static\js\html5shiv.js $(CONFIG)\bin\esp-proto\legacy\static\js\html5shiv.js
	copy /Y src\esp\proto\legacy\static\js\html5shiv.min.js $(CONFIG)\bin\esp-proto\legacy\static\js\html5shiv.min.js
	copy /Y src\esp\proto\legacy\static\js\jquery.esp.js $(CONFIG)\bin\esp-proto\legacy\static\js\jquery.esp.js
	copy /Y src\esp\proto\legacy\static\js\jquery.esp.min.js $(CONFIG)\bin\esp-proto\legacy\static\js\jquery.esp.min.js
	copy /Y src\esp\proto\legacy\static\js\jquery.js $(CONFIG)\bin\esp-proto\legacy\static\js\jquery.js
	copy /Y src\esp\proto\legacy\static\js\jquery.min.js $(CONFIG)\bin\esp-proto\legacy\static\js\jquery.min.js
	copy /Y src\esp\proto\legacy\static\js\jquery.simplemodal.js $(CONFIG)\bin\esp-proto\legacy\static\js\jquery.simplemodal.js
	copy /Y src\esp\proto\legacy\static\js\jquery.simplemodal.min.js $(CONFIG)\bin\esp-proto\legacy\static\js\jquery.simplemodal.min.js
	copy /Y src\esp\proto\legacy\static\js\jquery.tablesorter.js $(CONFIG)\bin\esp-proto\legacy\static\js\jquery.tablesorter.js
	copy /Y src\esp\proto\legacy\static\js\jquery.tablesorter.min.js $(CONFIG)\bin\esp-proto\legacy\static\js\jquery.tablesorter.min.js
	copy /Y src\esp\proto\legacy\static\js\less.js $(CONFIG)\bin\esp-proto\legacy\static\js\less.js
	copy /Y src\esp\proto\legacy\static\js\less.min.js $(CONFIG)\bin\esp-proto\legacy\static\js\less.min.js
	copy /Y src\esp\proto\legacy\static\js\respond.js $(CONFIG)\bin\esp-proto\legacy\static\js\respond.js
	copy /Y src\esp\proto\legacy\static\js\respond.min.js $(CONFIG)\bin\esp-proto\legacy\static\js\respond.min.js
	if not exist "$(CONFIG)\bin\esp-proto\legacy\static\less" md "$(CONFIG)\bin\esp-proto\legacy\static\less"
	copy /Y src\esp\proto\legacy\static\less\all.less $(CONFIG)\bin\esp-proto\legacy\static\less\all.less
	copy /Y src\esp\proto\legacy\static\less\app.less $(CONFIG)\bin\esp-proto\legacy\static\less\app.less
	copy /Y src\esp\proto\legacy\static\less\esp.less $(CONFIG)\bin\esp-proto\legacy\static\less\esp.less
	copy /Y src\esp\proto\legacy\static\less\more.less $(CONFIG)\bin\esp-proto\legacy\static\less\more.less
	copy /Y src\esp\proto\legacy\static\less\normalize.less $(CONFIG)\bin\esp-proto\legacy\static\less\normalize.less
	copy /Y src\esp\proto\legacy\static\less\theme.less $(CONFIG)\bin\esp-proto\legacy\static\less\theme.less
!ENDIF



#
#   ejs.h
#
$(CONFIG)\inc\ejs.h: $(DEPS_58)
	@echo '      [Copy] $(CONFIG)/inc/ejs.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\ejs\ejs.h $(CONFIG)\inc\ejs.h

#
#   ejs.slots.h
#
$(CONFIG)\inc\ejs.slots.h: $(DEPS_59)
	@echo '      [Copy] $(CONFIG)/inc/ejs.slots.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\ejs\ejs.slots.h $(CONFIG)\inc\ejs.slots.h

#
#   ejsByteGoto.h
#
$(CONFIG)\inc\ejsByteGoto.h: $(DEPS_60)
	@echo '      [Copy] $(CONFIG)/inc/ejsByteGoto.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\ejs\ejsByteGoto.h $(CONFIG)\inc\ejsByteGoto.h

#
#   ejsLib.obj
#
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\bit.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\ejs.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\mpr.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\pcre.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\bitos.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\http.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\ejs.slots.h

$(CONFIG)\obj\ejsLib.obj: \
    src\deps\ejs\ejsLib.c $(DEPS_61)
	@echo '   [Compile] $(CONFIG)/obj/ejsLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsLib.obj -Fd$(CONFIG)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\ejs\ejsLib.c

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   libejs
#
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\mpr.h
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\bit.h
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\bitos.h
DEPS_62 = $(DEPS_62) $(CONFIG)\obj\mprLib.obj
DEPS_62 = $(DEPS_62) $(CONFIG)\bin\libmpr.lib
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\pcre.h
DEPS_62 = $(DEPS_62) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_62 = $(DEPS_62) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\http.h
DEPS_62 = $(DEPS_62) $(CONFIG)\obj\httpLib.obj
DEPS_62 = $(DEPS_62) $(CONFIG)\bin\libhttp.lib
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\ejs.h
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\ejs.slots.h
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\ejsByteGoto.h
DEPS_62 = $(DEPS_62) $(CONFIG)\obj\ejsLib.obj

$(CONFIG)\bin\libejs.lib: $(DEPS_62)
	@echo '      [Link] $(CONFIG)/bin/libejs.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libejs.lib "$(CONFIG)\obj\ejsLib.obj"
!ENDIF

#
#   ejs.obj
#
DEPS_63 = $(DEPS_63) $(CONFIG)\inc\bit.h
DEPS_63 = $(DEPS_63) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejs.obj: \
    src\deps\ejs\ejs.c $(DEPS_63)
	@echo '   [Compile] $(CONFIG)/obj/ejs.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejs.obj -Fd$(CONFIG)\obj\ejs.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\ejs\ejs.c

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   ejs
#
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\mpr.h
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\bit.h
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\bitos.h
DEPS_64 = $(DEPS_64) $(CONFIG)\obj\mprLib.obj
DEPS_64 = $(DEPS_64) $(CONFIG)\bin\libmpr.lib
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\pcre.h
DEPS_64 = $(DEPS_64) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_64 = $(DEPS_64) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\http.h
DEPS_64 = $(DEPS_64) $(CONFIG)\obj\httpLib.obj
DEPS_64 = $(DEPS_64) $(CONFIG)\bin\libhttp.lib
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\ejs.h
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\ejs.slots.h
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\ejsByteGoto.h
DEPS_64 = $(DEPS_64) $(CONFIG)\obj\ejsLib.obj
DEPS_64 = $(DEPS_64) $(CONFIG)\bin\libejs.lib
DEPS_64 = $(DEPS_64) $(CONFIG)\obj\ejs.obj

LIBS_64 = $(LIBS_64) libejs.lib
LIBS_64 = $(LIBS_64) libhttp.lib
LIBS_64 = $(LIBS_64) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_64 = $(LIBS_64) libpcre.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_64 = $(LIBS_64) libsqlite3.lib
!ENDIF

$(CONFIG)\bin\ejs.exe: $(DEPS_64)
	@echo '      [Link] $(CONFIG)/bin/ejs.exe'
	"$(LD)" -out:$(CONFIG)\bin\ejs.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\ejs.obj" $(LIBPATHS_64) $(LIBS_64) $(LIBS_64) $(LIBS) 
!ENDIF

#
#   ejsc.obj
#
DEPS_65 = $(DEPS_65) $(CONFIG)\inc\bit.h
DEPS_65 = $(DEPS_65) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejsc.obj: \
    src\deps\ejs\ejsc.c $(DEPS_65)
	@echo '   [Compile] $(CONFIG)/obj/ejsc.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsc.obj -Fd$(CONFIG)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\ejs\ejsc.c

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   ejsc
#
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\mpr.h
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\bit.h
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\bitos.h
DEPS_66 = $(DEPS_66) $(CONFIG)\obj\mprLib.obj
DEPS_66 = $(DEPS_66) $(CONFIG)\bin\libmpr.lib
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\pcre.h
DEPS_66 = $(DEPS_66) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_66 = $(DEPS_66) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\http.h
DEPS_66 = $(DEPS_66) $(CONFIG)\obj\httpLib.obj
DEPS_66 = $(DEPS_66) $(CONFIG)\bin\libhttp.lib
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\ejs.h
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\ejs.slots.h
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\ejsByteGoto.h
DEPS_66 = $(DEPS_66) $(CONFIG)\obj\ejsLib.obj
DEPS_66 = $(DEPS_66) $(CONFIG)\bin\libejs.lib
DEPS_66 = $(DEPS_66) $(CONFIG)\obj\ejsc.obj

LIBS_66 = $(LIBS_66) libejs.lib
LIBS_66 = $(LIBS_66) libhttp.lib
LIBS_66 = $(LIBS_66) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_66 = $(LIBS_66) libpcre.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_66 = $(LIBS_66) libsqlite3.lib
!ENDIF

$(CONFIG)\bin\ejsc.exe: $(DEPS_66)
	@echo '      [Link] $(CONFIG)/bin/ejsc.exe'
	"$(LD)" -out:$(CONFIG)\bin\ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\ejsc.obj" $(LIBPATHS_66) $(LIBS_66) $(LIBS_66) $(LIBS) 
!ENDIF

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   ejs.mod
#
DEPS_67 = $(DEPS_67) src\deps\ejs\ejs.es
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\mpr.h
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\bit.h
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\bitos.h
DEPS_67 = $(DEPS_67) $(CONFIG)\obj\mprLib.obj
DEPS_67 = $(DEPS_67) $(CONFIG)\bin\libmpr.lib
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\pcre.h
DEPS_67 = $(DEPS_67) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_67 = $(DEPS_67) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\http.h
DEPS_67 = $(DEPS_67) $(CONFIG)\obj\httpLib.obj
DEPS_67 = $(DEPS_67) $(CONFIG)\bin\libhttp.lib
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\ejs.h
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\ejs.slots.h
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\ejsByteGoto.h
DEPS_67 = $(DEPS_67) $(CONFIG)\obj\ejsLib.obj
DEPS_67 = $(DEPS_67) $(CONFIG)\bin\libejs.lib
DEPS_67 = $(DEPS_67) $(CONFIG)\obj\ejsc.obj
DEPS_67 = $(DEPS_67) $(CONFIG)\bin\ejsc.exe

$(CONFIG)\bin\ejs.mod: $(DEPS_67)
	"$(LBIN)\ejsc" --out ".\$(CONFIG)\bin\ejs.mod" --optimize 9 --bind --require null src/deps/ejs/ejs.es
!ENDIF

#
#   cgiHandler.obj
#
DEPS_68 = $(DEPS_68) $(CONFIG)\inc\bit.h
DEPS_68 = $(DEPS_68) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\cgiHandler.obj: \
    src\modules\cgiHandler.c $(DEPS_68)
	@echo '   [Compile] $(CONFIG)/obj/cgiHandler.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\cgiHandler.obj -Fd$(CONFIG)\obj\cgiHandler.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\modules\cgiHandler.c

!IF "$(BIT_PACK_CGI)" == "1"
#
#   libmod_cgi
#
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\mpr.h
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\bit.h
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\bitos.h
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\mprLib.obj
DEPS_69 = $(DEPS_69) $(CONFIG)\bin\libmpr.lib
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\pcre.h
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_69 = $(DEPS_69) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\http.h
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\httpLib.obj
DEPS_69 = $(DEPS_69) $(CONFIG)\bin\libhttp.lib
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\appweb.h
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\customize.h
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\config.obj
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\convenience.obj
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\dirHandler.obj
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\fileHandler.obj
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\log.obj
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\server.obj
DEPS_69 = $(DEPS_69) $(CONFIG)\bin\libappweb.lib
DEPS_69 = $(DEPS_69) $(CONFIG)\obj\cgiHandler.obj

$(CONFIG)\bin\libmod_cgi.lib: $(DEPS_69)
	@echo '      [Link] $(CONFIG)/bin/libmod_cgi.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmod_cgi.lib "$(CONFIG)\obj\cgiHandler.obj"
!ENDIF

#
#   ejsHandler.obj
#
DEPS_70 = $(DEPS_70) $(CONFIG)\inc\bit.h
DEPS_70 = $(DEPS_70) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\ejsHandler.obj: \
    src\modules\ejsHandler.c $(DEPS_70)
	@echo '   [Compile] $(CONFIG)/obj/ejsHandler.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsHandler.obj -Fd$(CONFIG)\obj\ejsHandler.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\modules\ejsHandler.c

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   libmod_ejs
#
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\mpr.h
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\bit.h
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\bitos.h
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\mprLib.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\bin\libmpr.lib
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\pcre.h
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_71 = $(DEPS_71) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\http.h
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\httpLib.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\bin\libhttp.lib
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\appweb.h
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\customize.h
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\config.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\convenience.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\dirHandler.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\fileHandler.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\log.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\server.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\bin\libappweb.lib
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\ejs.h
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\ejs.slots.h
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\ejsByteGoto.h
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\ejsLib.obj
DEPS_71 = $(DEPS_71) $(CONFIG)\bin\libejs.lib
DEPS_71 = $(DEPS_71) $(CONFIG)\obj\ejsHandler.obj

$(CONFIG)\bin\libmod_ejs.lib: $(DEPS_71)
	@echo '      [Link] $(CONFIG)/bin/libmod_ejs.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmod_ejs.lib "$(CONFIG)\obj\ejsHandler.obj"
!ENDIF

#
#   phpHandler.obj
#
DEPS_72 = $(DEPS_72) $(CONFIG)\inc\bit.h
DEPS_72 = $(DEPS_72) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\phpHandler.obj: \
    src\modules\phpHandler.c $(DEPS_72)
	@echo '   [Compile] $(CONFIG)/obj/phpHandler.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\phpHandler.obj -Fd$(CONFIG)\obj\phpHandler.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" "-I$(BIT_PACK_PHP_PATH)" "-I$(BIT_PACK_PHP_PATH)\main" "-I$(BIT_PACK_PHP_PATH)\Zend" "-I$(BIT_PACK_PHP_PATH)\TSRM" src\modules\phpHandler.c

!IF "$(BIT_PACK_PHP)" == "1"
#
#   libmod_php
#
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\mpr.h
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\bit.h
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\bitos.h
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\mprLib.obj
DEPS_73 = $(DEPS_73) $(CONFIG)\bin\libmpr.lib
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\pcre.h
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_73 = $(DEPS_73) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\http.h
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\httpLib.obj
DEPS_73 = $(DEPS_73) $(CONFIG)\bin\libhttp.lib
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\appweb.h
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\customize.h
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\config.obj
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\convenience.obj
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\dirHandler.obj
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\fileHandler.obj
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\log.obj
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\server.obj
DEPS_73 = $(DEPS_73) $(CONFIG)\bin\libappweb.lib
DEPS_73 = $(DEPS_73) $(CONFIG)\obj\phpHandler.obj

$(CONFIG)\bin\libmod_php.lib: $(DEPS_73)
	@echo '      [Link] $(CONFIG)/bin/libmod_php.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmod_php.lib "$(CONFIG)\obj\phpHandler.obj"
!ENDIF

#
#   sslModule.obj
#
DEPS_74 = $(DEPS_74) $(CONFIG)\inc\bit.h
DEPS_74 = $(DEPS_74) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\sslModule.obj: \
    src\modules\sslModule.c $(DEPS_74)
	@echo '   [Compile] $(CONFIG)/obj/sslModule.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sslModule.obj -Fd$(CONFIG)\obj\sslModule.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\modules\sslModule.c

!IF "$(BIT_PACK_SSL)" == "1"
#
#   libmod_ssl
#
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\mpr.h
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\bit.h
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\bitos.h
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\mprLib.obj
DEPS_75 = $(DEPS_75) $(CONFIG)\bin\libmpr.lib
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\pcre.h
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_75 = $(DEPS_75) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\http.h
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\httpLib.obj
DEPS_75 = $(DEPS_75) $(CONFIG)\bin\libhttp.lib
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\appweb.h
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\customize.h
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\config.obj
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\convenience.obj
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\dirHandler.obj
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\fileHandler.obj
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\log.obj
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\server.obj
DEPS_75 = $(DEPS_75) $(CONFIG)\bin\libappweb.lib
DEPS_75 = $(DEPS_75) $(CONFIG)\obj\sslModule.obj

$(CONFIG)\bin\libmod_ssl.lib: $(DEPS_75)
	@echo '      [Link] $(CONFIG)/bin/libmod_ssl.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmod_ssl.lib "$(CONFIG)\obj\sslModule.obj"
!ENDIF

#
#   authpass.obj
#
DEPS_76 = $(DEPS_76) $(CONFIG)\inc\bit.h
DEPS_76 = $(DEPS_76) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\authpass.obj: \
    src\utils\authpass.c $(DEPS_76)
	@echo '   [Compile] $(CONFIG)/obj/authpass.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\authpass.obj -Fd$(CONFIG)\obj\authpass.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\utils\authpass.c

#
#   authpass
#
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\mpr.h
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\bit.h
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\bitos.h
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\mprLib.obj
DEPS_77 = $(DEPS_77) $(CONFIG)\bin\libmpr.lib
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\pcre.h
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_77 = $(DEPS_77) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\http.h
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\httpLib.obj
DEPS_77 = $(DEPS_77) $(CONFIG)\bin\libhttp.lib
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\appweb.h
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\customize.h
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\config.obj
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\convenience.obj
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\dirHandler.obj
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\fileHandler.obj
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\log.obj
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\server.obj
DEPS_77 = $(DEPS_77) $(CONFIG)\bin\libappweb.lib
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\authpass.obj

LIBS_77 = $(LIBS_77) libappweb.lib
LIBS_77 = $(LIBS_77) libhttp.lib
LIBS_77 = $(LIBS_77) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_77 = $(LIBS_77) libpcre.lib
!ENDIF

$(CONFIG)\bin\authpass.exe: $(DEPS_77)
	@echo '      [Link] $(CONFIG)/bin/authpass.exe'
	"$(LD)" -out:$(CONFIG)\bin\authpass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\authpass.obj" $(LIBPATHS_77) $(LIBS_77) $(LIBS_77) $(LIBS) 

#
#   cgiProgram.obj
#
DEPS_78 = $(DEPS_78) $(CONFIG)\inc\bit.h

$(CONFIG)\obj\cgiProgram.obj: \
    src\utils\cgiProgram.c $(DEPS_78)
	@echo '   [Compile] $(CONFIG)/obj/cgiProgram.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\cgiProgram.obj -Fd$(CONFIG)\obj\cgiProgram.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\utils\cgiProgram.c

!IF "$(BIT_PACK_CGI)" == "1"
#
#   cgiProgram
#
DEPS_79 = $(DEPS_79) $(CONFIG)\inc\bit.h
DEPS_79 = $(DEPS_79) $(CONFIG)\obj\cgiProgram.obj

$(CONFIG)\bin\cgiProgram.exe: $(DEPS_79)
	@echo '      [Link] $(CONFIG)/bin/cgiProgram.exe'
	"$(LD)" -out:$(CONFIG)\bin\cgiProgram.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\cgiProgram.obj" $(LIBS) 
!ENDIF

#
#   slink.c
#
src\server\slink.c: $(DEPS_80)
	cd src\server
	if not exist slink.c copy slink.empty slink.c
	cd ..\..

#
#   slink.obj
#
DEPS_81 = $(DEPS_81) $(CONFIG)\inc\bit.h
DEPS_81 = $(DEPS_81) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\slink.obj: \
    src\server\slink.c $(DEPS_81)
	@echo '   [Compile] $(CONFIG)/obj/slink.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\slink.obj -Fd$(CONFIG)\obj\slink.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\server\slink.c

#
#   libslink
#
DEPS_82 = $(DEPS_82) src\server\slink.c
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\mpr.h
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\bit.h
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\bitos.h
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\mprLib.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\bin\libmpr.lib
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\pcre.h
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_82 = $(DEPS_82) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\http.h
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\httpLib.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\bin\libhttp.lib
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\appweb.h
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\customize.h
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\config.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\convenience.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\dirHandler.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\fileHandler.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\log.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\server.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\bin\libappweb.lib
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\edi.h
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\esp.h
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\mdb.h
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\edi.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\espAbbrev.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\espFramework.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\espHandler.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\espHtml.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\espTemplate.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\mdb.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\sdb.obj
!IF "$(BIT_PACK_ESP)" == "1"
DEPS_82 = $(DEPS_82) $(CONFIG)\bin\libmod_esp.lib
!ENDIF
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\slink.obj

$(CONFIG)\bin\libslink.lib: $(DEPS_82)
	@echo '      [Link] $(CONFIG)/bin/libslink.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libslink.lib "$(CONFIG)\obj\slink.obj"

#
#   appweb.obj
#
DEPS_83 = $(DEPS_83) $(CONFIG)\inc\bit.h
DEPS_83 = $(DEPS_83) $(CONFIG)\inc\appweb.h
DEPS_83 = $(DEPS_83) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\appweb.obj: \
    src\server\appweb.c $(DEPS_83)
	@echo '   [Compile] $(CONFIG)/obj/appweb.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\appweb.obj -Fd$(CONFIG)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" "-I$(BIT_PACK_PHP_PATH)" "-I$(BIT_PACK_PHP_PATH)\main" "-I$(BIT_PACK_PHP_PATH)\Zend" "-I$(BIT_PACK_PHP_PATH)\TSRM" src\server\appweb.c

#
#   appweb
#
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\mpr.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\bit.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\bitos.h
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\mprLib.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libmpr.lib
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\pcre.h
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\http.h
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\httpLib.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libhttp.lib
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\appweb.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\customize.h
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\config.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\convenience.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\dirHandler.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\fileHandler.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\log.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\server.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libappweb.lib
DEPS_84 = $(DEPS_84) src\server\slink.c
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\edi.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\esp.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\mdb.h
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\edi.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\espAbbrev.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\espFramework.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\espHandler.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\espHtml.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\espTemplate.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\mdb.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\sdb.obj
!IF "$(BIT_PACK_ESP)" == "1"
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libmod_esp.lib
!ENDIF
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\slink.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libslink.lib
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\sslModule.obj
!IF "$(BIT_PACK_SSL)" == "1"
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libmod_ssl.lib
!ENDIF
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\ejs.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\ejs.slots.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\ejsByteGoto.h
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\ejsLib.obj
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libejs.lib
!ENDIF
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\ejsHandler.obj
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libmod_ejs.lib
!ENDIF
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\phpHandler.obj
!IF "$(BIT_PACK_PHP)" == "1"
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libmod_php.lib
!ENDIF
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\cgiHandler.obj
!IF "$(BIT_PACK_CGI)" == "1"
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libmod_cgi.lib
!ENDIF
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\appweb.obj

LIBS_84 = $(LIBS_84) libappweb.lib
LIBS_84 = $(LIBS_84) libhttp.lib
LIBS_84 = $(LIBS_84) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_84 = $(LIBS_84) libpcre.lib
!ENDIF
LIBS_84 = $(LIBS_84) libslink.lib
!IF "$(BIT_PACK_ESP)" == "1"
LIBS_84 = $(LIBS_84) libmod_esp.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_84 = $(LIBS_84) libsqlite3.lib
!ENDIF
!IF "$(BIT_PACK_SSL)" == "1"
LIBS_84 = $(LIBS_84) libmod_ssl.lib
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
LIBS_84 = $(LIBS_84) libmod_ejs.lib
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
LIBS_84 = $(LIBS_84) libejs.lib
!ENDIF
!IF "$(BIT_PACK_PHP)" == "1"
LIBS_84 = $(LIBS_84) libmod_php.lib
!ENDIF
!IF "$(BIT_PACK_PHP)" == "1"
LIBS_84 = $(LIBS_84) libphp5ts.lib
LIBPATHS_84 = $(LIBPATHS_84) -libpath:$(BIT_PACK_PHP_PATH)/libs
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
LIBS_84 = $(LIBS_84) libmod_cgi.lib
!ENDIF

$(CONFIG)\bin\appweb.exe: $(DEPS_84)
	@echo '      [Link] $(CONFIG)/bin/appweb.exe'
	"$(LD)" -out:$(CONFIG)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(CONFIG)\obj\appweb.obj" $(LIBPATHS_84) $(LIBS_84) $(LIBS_84) $(LIBS) 

#
#   appwebMonitor.h
#
$(CONFIG)\inc\appwebMonitor.h: $(DEPS_85)
	@echo '      [Copy] $(CONFIG)/inc/appwebMonitor.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\server\windows\appwebMonitor.h $(CONFIG)\inc\appwebMonitor.h

#
#   monitorResources.h
#
$(CONFIG)\inc\monitorResources.h: $(DEPS_86)
	@echo '      [Copy] $(CONFIG)/inc/monitorResources.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\server\windows\monitorResources.h $(CONFIG)\inc\monitorResources.h

#
#   appwebMonitor.res
#
$(CONFIG)\obj\appwebMonitor.res: \
        src\server\windows\appwebMonitor.rc $(DEPS_87)
	@echo '   [Compile] $(CONFIG)/obj/appwebMonitor.res'
	"$(RC)" -nologo -Fo $(CONFIG)\obj\appwebMonitor.res src\server\windows\appwebMonitor.rc

#
#   appwebMonitor.obj
#
DEPS_88 = $(DEPS_88) $(CONFIG)\inc\bit.h
DEPS_88 = $(DEPS_88) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\appwebMonitor.obj: \
    src\server\windows\appwebMonitor.c $(DEPS_88)
	@echo '   [Compile] $(CONFIG)/obj/appwebMonitor.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\appwebMonitor.obj -Fd$(CONFIG)\obj\appwebMonitor.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\server\windows\appwebMonitor.c

#
#   appwebMonitor
#
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\mpr.h
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\bit.h
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\bitos.h
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\mprLib.obj
DEPS_89 = $(DEPS_89) $(CONFIG)\bin\libmpr.lib
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\pcre.h
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_89 = $(DEPS_89) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\http.h
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\httpLib.obj
DEPS_89 = $(DEPS_89) $(CONFIG)\bin\libhttp.lib
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\appweb.h
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\customize.h
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\config.obj
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\convenience.obj
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\dirHandler.obj
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\fileHandler.obj
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\log.obj
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\server.obj
DEPS_89 = $(DEPS_89) $(CONFIG)\bin\libappweb.lib
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\appwebMonitor.h
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\monitorResources.h
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\appwebMonitor.res
DEPS_89 = $(DEPS_89) $(CONFIG)\obj\appwebMonitor.obj

LIBS_89 = $(LIBS_89) libappweb.lib
LIBS_89 = $(LIBS_89) libhttp.lib
LIBS_89 = $(LIBS_89) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_89 = $(LIBS_89) libpcre.lib
!ENDIF

$(CONFIG)\bin\appwebMonitor.exe: $(DEPS_89)
	@echo '      [Link] $(CONFIG)/bin/appwebMonitor.exe'
	"$(LD)" -out:$(CONFIG)\bin\appwebMonitor.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\appwebMonitor.res" "$(CONFIG)\obj\appwebMonitor.obj" shell32.lib ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib  $(LIBPATHS_89) $(LIBS_89) $(LIBS_89)

#
#   appwebMonitor.ico
#
DEPS_90 = $(DEPS_90) src\server\windows\appwebMonitor.ico

$(CONFIG)\bin\appwebMonitor.ico: $(DEPS_90)
	@echo '      [Copy] $(CONFIG)/bin/appwebMonitor.ico'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y src\server\windows\appwebMonitor.ico $(CONFIG)\bin\appwebMonitor.ico

#
#   server-cache
#
src\server\cache: $(DEPS_91)
	cd src\server
	md cache
	cd ..\..

#
#   testAppweb.h
#
$(CONFIG)\inc\testAppweb.h: $(DEPS_92)
	@echo '      [Copy] $(CONFIG)/inc/testAppweb.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y test\src\testAppweb.h $(CONFIG)\inc\testAppweb.h

#
#   testAppweb.obj
#
DEPS_93 = $(DEPS_93) $(CONFIG)\inc\bit.h
DEPS_93 = $(DEPS_93) $(CONFIG)\inc\testAppweb.h
DEPS_93 = $(DEPS_93) $(CONFIG)\inc\mpr.h
DEPS_93 = $(DEPS_93) $(CONFIG)\inc\http.h

$(CONFIG)\obj\testAppweb.obj: \
    test\src\testAppweb.c $(DEPS_93)
	@echo '   [Compile] $(CONFIG)/obj/testAppweb.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testAppweb.obj -Fd$(CONFIG)\obj\testAppweb.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" test\src\testAppweb.c

#
#   testHttp.obj
#
DEPS_94 = $(DEPS_94) $(CONFIG)\inc\bit.h
DEPS_94 = $(DEPS_94) $(CONFIG)\inc\testAppweb.h

$(CONFIG)\obj\testHttp.obj: \
    test\src\testHttp.c $(DEPS_94)
	@echo '   [Compile] $(CONFIG)/obj/testHttp.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testHttp.obj -Fd$(CONFIG)\obj\testHttp.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" test\src\testHttp.c

#
#   testAppweb
#
DEPS_95 = $(DEPS_95) $(CONFIG)\inc\mpr.h
DEPS_95 = $(DEPS_95) $(CONFIG)\inc\bit.h
DEPS_95 = $(DEPS_95) $(CONFIG)\inc\bitos.h
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\mprLib.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\bin\libmpr.lib
DEPS_95 = $(DEPS_95) $(CONFIG)\inc\pcre.h
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_95 = $(DEPS_95) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_95 = $(DEPS_95) $(CONFIG)\inc\http.h
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\httpLib.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\bin\libhttp.lib
DEPS_95 = $(DEPS_95) $(CONFIG)\inc\appweb.h
DEPS_95 = $(DEPS_95) $(CONFIG)\inc\customize.h
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\config.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\convenience.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\dirHandler.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\fileHandler.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\log.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\server.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\bin\libappweb.lib
DEPS_95 = $(DEPS_95) $(CONFIG)\inc\testAppweb.h
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\testAppweb.obj
DEPS_95 = $(DEPS_95) $(CONFIG)\obj\testHttp.obj

LIBS_95 = $(LIBS_95) libappweb.lib
LIBS_95 = $(LIBS_95) libhttp.lib
LIBS_95 = $(LIBS_95) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_95 = $(LIBS_95) libpcre.lib
!ENDIF

$(CONFIG)\bin\testAppweb.exe: $(DEPS_95)
	@echo '      [Link] $(CONFIG)/bin/testAppweb.exe'
	"$(LD)" -out:$(CONFIG)\bin\testAppweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\testAppweb.obj" "$(CONFIG)\obj\testHttp.obj" $(LIBPATHS_95) $(LIBS_95) $(LIBS_95) $(LIBS) 

!IF "$(BIT_PACK_CGI)" == "1"
#
#   test-testScript
#
DEPS_96 = $(DEPS_96) $(CONFIG)\inc\bit.h
DEPS_96 = $(DEPS_96) $(CONFIG)\obj\cgiProgram.obj
DEPS_96 = $(DEPS_96) $(CONFIG)\bin\cgiProgram.exe

test\cgi-bin\testScript: $(DEPS_96)
#  Omit build script test-testScript
!ENDIF

!IF "$(BIT_PACK_CGI)" == "1"
#
#   test-cache.cgi
#
test\web\caching\cache.cgi: $(DEPS_97)
#  Omit build script test-cache.cgi
!ENDIF

!IF "$(BIT_PACK_CGI)" == "1"
#
#   test-basic.cgi
#
test\web\auth\basic\basic.cgi: $(DEPS_98)
#  Omit build script test-basic.cgi
!ENDIF

!IF "$(BIT_PACK_CGI)" == "1"
#
#   test-cgiProgram
#
DEPS_99 = $(DEPS_99) $(CONFIG)\inc\bit.h
DEPS_99 = $(DEPS_99) $(CONFIG)\obj\cgiProgram.obj
DEPS_99 = $(DEPS_99) $(CONFIG)\bin\cgiProgram.exe

test\cgi-bin\cgiProgram.exe: $(DEPS_99)
#  Omit build script test-cgiProgram
!ENDIF

#
#   test.js
#
DEPS_100 = $(DEPS_100) src\esp\proto\angular\client\lib

test\web\js: $(DEPS_100)
	@echo '      [Copy] test/web/js'
	if not exist "test\web\js" md "test\web\js"
	copy /Y src\esp\proto\angular\client\lib\all.js test\web\js\all.js
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap-prettify.js test\web\js\angular-bootstrap-prettify.js
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap-prettify.min.js test\web\js\angular-bootstrap-prettify.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap.js test\web\js\angular-bootstrap.js
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap.min.js test\web\js\angular-bootstrap.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-cookies.js test\web\js\angular-cookies.js
	copy /Y src\esp\proto\angular\client\lib\angular-cookies.min.js test\web\js\angular-cookies.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-loader.js test\web\js\angular-loader.js
	copy /Y src\esp\proto\angular\client\lib\angular-loader.min.js test\web\js\angular-loader.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-mobile.js test\web\js\angular-mobile.js
	copy /Y src\esp\proto\angular\client\lib\angular-mobile.min.js test\web\js\angular-mobile.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-mocks.js test\web\js\angular-mocks.js
	copy /Y src\esp\proto\angular\client\lib\angular-resource.js test\web\js\angular-resource.js
	copy /Y src\esp\proto\angular\client\lib\angular-resource.min.js test\web\js\angular-resource.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-sanitize.js test\web\js\angular-sanitize.js
	copy /Y src\esp\proto\angular\client\lib\angular-sanitize.min.js test\web\js\angular-sanitize.min.js
	copy /Y src\esp\proto\angular\client\lib\angular-scenario.js test\web\js\angular-scenario.js
	copy /Y src\esp\proto\angular\client\lib\angular.js test\web\js\angular.js
	copy /Y src\esp\proto\angular\client\lib\angular.min.js test\web\js\angular.min.js
	copy /Y src\esp\proto\angular\client\lib\esp.js test\web\js\esp.js
	copy /Y src\esp\proto\angular\client\lib\html5shiv.js test\web\js\html5shiv.js
	copy /Y src\esp\proto\angular\client\lib\html5shiv.min.js test\web\js\html5shiv.min.js
	copy /Y src\esp\proto\angular\client\lib\jquery.js test\web\js\jquery.js
	copy /Y src\esp\proto\angular\client\lib\jquery.min.js test\web\js\jquery.min.js
	copy /Y src\esp\proto\angular\client\lib\less.js test\web\js\less.js
	copy /Y src\esp\proto\angular\client\lib\less.min.js test\web\js\less.min.js
	copy /Y src\esp\proto\angular\client\lib\respond.js test\web\js\respond.js
	copy /Y src\esp\proto\angular\client\lib\respond.min.js test\web\js\respond.min.js
	copy /Y src\esp\proto\angular\client\lib\ui-bootstrap-tpls.js test\web\js\ui-bootstrap-tpls.js
	copy /Y src\esp\proto\angular\client\lib\ui-bootstrap-tpls.min.js test\web\js\ui-bootstrap-tpls.min.js


#
#   stop
#
DEPS_101 = $(DEPS_101) compile

stop: $(DEPS_101)
	@.\$(CONFIG)\bin\appman stop disable uninstall >/dev/null 2>&1 ; true

#
#   installBinary
#
installBinary: $(DEPS_102)
	if not exist "$(BIT_VAPP_PREFIX)\log" md "$(BIT_VAPP_PREFIX)\log"
	if not exist "$(BIT_VAPP_PREFIX)\cache" md "$(BIT_VAPP_PREFIX)\cache"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y $(CONFIG)\bin\appweb.exe "$(BIT_VAPP_PREFIX)\bin\appweb.exe"
	copy /Y $(CONFIG)\bin\appman.exe "$(BIT_VAPP_PREFIX)\bin\appman.exe"
	copy /Y $(CONFIG)\bin\http.exe "$(BIT_VAPP_PREFIX)\bin\http.exe"
!IF "$(BIT_PACK_ESP)" == "1"
	copy /Y $(CONFIG)\bin\esp.exe "$(BIT_VAPP_PREFIX)\bin\esp.exe"
!ENDIF
	copy /Y $(CONFIG)\bin\appwebMonitor.exe "$(BIT_VAPP_PREFIX)\bin\appwebMonitor.exe"
	copy /Y $(CONFIG)\bin\appwebMonitor.ico "$(BIT_VAPP_PREFIX)\bin\appwebMonitor.ico"
!IF "$(BIT_PACK_SSL)" == "1"
	copy /Y $(CONFIG)\bin\ca.crt "$(BIT_VAPP_PREFIX)\bin\ca.crt"
!ENDIF
!IF "$(BIT_PACK_OPENSSL)" == "1"
	copy /Y $(CONFIG)\bin\libeay32.dll "$(BIT_VAPP_PREFIX)\bin\libeay32.dll"
	copy /Y $(CONFIG)\bin\ssleay32.dll "$(BIT_VAPP_PREFIX)\bin\ssleay32.dll"
!ENDIF
!IF "$(BIT_PACK_PHP)" == "1"
	copy /Y $(CONFIG)\bin\php5ts.dll "$(BIT_VAPP_PREFIX)\bin\php5ts.dll"
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular"
	copy /Y src\esp\proto\angular\app.conf "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\app.conf"
	copy /Y src\esp\proto\angular\appweb.conf "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\appweb.conf"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\cache" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\cache"
	copy /Y src\esp\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.c "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.c"
	copy /Y src\esp\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.dylib "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.dylib"
	copy /Y src\esp\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.o "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\cache\view_f4478e9e3025f86f93399a51c77596bf.o"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\app" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\app"
	copy /Y src\esp\proto\angular\client\app\app.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\app\app.js"
	copy /Y src\esp\proto\angular\client\app\AppControl.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\app\AppControl.js"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\assets" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\assets"
	copy /Y src\esp\proto\angular\client\assets\banner.jpg "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\assets\banner.jpg"
	copy /Y src\esp\proto\angular\client\assets\favicon.ico "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\assets\favicon.ico"
	copy /Y src\esp\proto\angular\client\assets\splash.jpg "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\assets\splash.jpg"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\components\Esp" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\components\Esp"
	copy /Y src\esp\proto\angular\client\components\Esp\Esp.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\components\Esp\Esp.js"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client"
	copy /Y src\esp\proto\angular\client\config.json "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\config.json"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css"
	copy /Y src\esp\proto\angular\client\css\all.css "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css\all.css"
	copy /Y src\esp\proto\angular\client\css\all.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css\all.less"
	copy /Y src\esp\proto\angular\client\css\app.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css\app.less"
	copy /Y src\esp\proto\angular\client\css\bootstrap.css "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css\bootstrap.css"
	copy /Y src\esp\proto\angular\client\css\more.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css\more.less"
	copy /Y src\esp\proto\angular\client\css\normalize.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css\normalize.less"
	copy /Y src\esp\proto\angular\client\css\theme.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\css\theme.less"
	copy /Y src\esp\proto\angular\client\index.esp "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\index.esp"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib"
	copy /Y src\esp\proto\angular\client\lib\all.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\all.js"
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap-prettify.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-bootstrap-prettify.js"
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap-prettify.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-bootstrap-prettify.min.js"
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-bootstrap.js"
	copy /Y src\esp\proto\angular\client\lib\angular-bootstrap.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-bootstrap.min.js"
	copy /Y src\esp\proto\angular\client\lib\angular-cookies.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-cookies.js"
	copy /Y src\esp\proto\angular\client\lib\angular-cookies.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-cookies.min.js"
	copy /Y src\esp\proto\angular\client\lib\angular-loader.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-loader.js"
	copy /Y src\esp\proto\angular\client\lib\angular-loader.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-loader.min.js"
	copy /Y src\esp\proto\angular\client\lib\angular-mobile.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-mobile.js"
	copy /Y src\esp\proto\angular\client\lib\angular-mobile.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-mobile.min.js"
	copy /Y src\esp\proto\angular\client\lib\angular-mocks.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-mocks.js"
	copy /Y src\esp\proto\angular\client\lib\angular-resource.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-resource.js"
	copy /Y src\esp\proto\angular\client\lib\angular-resource.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-resource.min.js"
	copy /Y src\esp\proto\angular\client\lib\angular-sanitize.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-sanitize.js"
	copy /Y src\esp\proto\angular\client\lib\angular-sanitize.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-sanitize.min.js"
	copy /Y src\esp\proto\angular\client\lib\angular-scenario.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular-scenario.js"
	copy /Y src\esp\proto\angular\client\lib\angular.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular.js"
	copy /Y src\esp\proto\angular\client\lib\angular.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\angular.min.js"
	copy /Y src\esp\proto\angular\client\lib\esp.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\esp.js"
	copy /Y src\esp\proto\angular\client\lib\html5shiv.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\html5shiv.js"
	copy /Y src\esp\proto\angular\client\lib\html5shiv.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\html5shiv.min.js"
	copy /Y src\esp\proto\angular\client\lib\jquery.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\jquery.js"
	copy /Y src\esp\proto\angular\client\lib\jquery.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\jquery.min.js"
	copy /Y src\esp\proto\angular\client\lib\less.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\less.js"
	copy /Y src\esp\proto\angular\client\lib\less.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\less.min.js"
	copy /Y src\esp\proto\angular\client\lib\respond.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\respond.js"
	copy /Y src\esp\proto\angular\client\lib\respond.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\respond.min.js"
	copy /Y src\esp\proto\angular\client\lib\ui-bootstrap-tpls.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\ui-bootstrap-tpls.js"
	copy /Y src\esp\proto\angular\client\lib\ui-bootstrap-tpls.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\lib\ui-bootstrap-tpls.min.js"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\templates" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\templates"
	copy /Y src\esp\proto\angular\client\templates\splash.html "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\client\templates\splash.html"
	copy /Y src\esp\proto\angular\start.bit "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\angular\start.bit"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy"
	copy /Y src\esp\proto\legacy\app.conf "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\app.conf"
	copy /Y src\esp\proto\legacy\appweb.conf "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\appweb.conf"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\layouts" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\layouts"
	copy /Y src\esp\proto\legacy\layouts\default.esp "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\layouts\default.esp"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\css" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\css"
	copy /Y src\esp\proto\legacy\static\css\all.css "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\css\all.css"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\images" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\images"
	copy /Y src\esp\proto\legacy\static\images\banner.jpg "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\images\banner.jpg"
	copy /Y src\esp\proto\legacy\static\images\favicon.ico "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\images\favicon.ico"
	copy /Y src\esp\proto\legacy\static\images\splash.jpg "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\images\splash.jpg"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static"
	copy /Y src\esp\proto\legacy\static\index.esp "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\index.esp"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js"
	copy /Y src\esp\proto\legacy\static\js\html5shiv.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\html5shiv.js"
	copy /Y src\esp\proto\legacy\static\js\html5shiv.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\html5shiv.min.js"
	copy /Y src\esp\proto\legacy\static\js\jquery.esp.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\jquery.esp.js"
	copy /Y src\esp\proto\legacy\static\js\jquery.esp.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\jquery.esp.min.js"
	copy /Y src\esp\proto\legacy\static\js\jquery.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\jquery.js"
	copy /Y src\esp\proto\legacy\static\js\jquery.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\jquery.min.js"
	copy /Y src\esp\proto\legacy\static\js\jquery.simplemodal.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\jquery.simplemodal.js"
	copy /Y src\esp\proto\legacy\static\js\jquery.simplemodal.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\jquery.simplemodal.min.js"
	copy /Y src\esp\proto\legacy\static\js\jquery.tablesorter.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\jquery.tablesorter.js"
	copy /Y src\esp\proto\legacy\static\js\jquery.tablesorter.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\jquery.tablesorter.min.js"
	copy /Y src\esp\proto\legacy\static\js\less.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\less.js"
	copy /Y src\esp\proto\legacy\static\js\less.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\less.min.js"
	copy /Y src\esp\proto\legacy\static\js\respond.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\respond.js"
	copy /Y src\esp\proto\legacy\static\js\respond.min.js "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\js\respond.min.js"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\less" md "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\less"
	copy /Y src\esp\proto\legacy\static\less\all.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\less\all.less"
	copy /Y src\esp\proto\legacy\static\less\app.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\less\app.less"
	copy /Y src\esp\proto\legacy\static\less\esp.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\less\esp.less"
	copy /Y src\esp\proto\legacy\static\less\more.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\less\more.less"
	copy /Y src\esp\proto\legacy\static\less\normalize.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\less\normalize.less"
	copy /Y src\esp\proto\legacy\static\less\theme.less "$(BIT_VAPP_PREFIX)\bin\esp-proto\proto\legacy\static\less\theme.less"
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
	copy /Y $(CONFIG)\bin\esp.conf "$(BIT_VAPP_PREFIX)\bin\esp.conf"
!ENDIF
	if not exist "$(BIT_VAPP_PREFIX)\web\bench" md "$(BIT_VAPP_PREFIX)\web\bench"
	copy /Y src\server\web\bench\1b.html "$(BIT_VAPP_PREFIX)\web\bench\1b.html"
	copy /Y src\server\web\bench\4k.html "$(BIT_VAPP_PREFIX)\web\bench\4k.html"
	copy /Y src\server\web\bench\64k.html "$(BIT_VAPP_PREFIX)\web\bench\64k.html"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	copy /Y src\server\web\favicon.ico "$(BIT_VAPP_PREFIX)\web\favicon.ico"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y src\server\web\icons\back.gif "$(BIT_VAPP_PREFIX)\web\icons\back.gif"
	copy /Y src\server\web\icons\blank.gif "$(BIT_VAPP_PREFIX)\web\icons\blank.gif"
	copy /Y src\server\web\icons\compressed.gif "$(BIT_VAPP_PREFIX)\web\icons\compressed.gif"
	copy /Y src\server\web\icons\folder.gif "$(BIT_VAPP_PREFIX)\web\icons\folder.gif"
	copy /Y src\server\web\icons\parent.gif "$(BIT_VAPP_PREFIX)\web\icons\parent.gif"
	copy /Y src\server\web\icons\space.gif "$(BIT_VAPP_PREFIX)\web\icons\space.gif"
	copy /Y src\server\web\icons\text.gif "$(BIT_VAPP_PREFIX)\web\icons\text.gif"
	copy /Y src\server\web\iehacks.css "$(BIT_VAPP_PREFIX)\web\iehacks.css"
	if not exist "$(BIT_VAPP_PREFIX)\web\images" md "$(BIT_VAPP_PREFIX)\web\images"
	copy /Y src\server\web\images\banner.jpg "$(BIT_VAPP_PREFIX)\web\images\banner.jpg"
	copy /Y src\server\web\images\bottomShadow.jpg "$(BIT_VAPP_PREFIX)\web\images\bottomShadow.jpg"
	copy /Y src\server\web\images\shadow.jpg "$(BIT_VAPP_PREFIX)\web\images\shadow.jpg"
	copy /Y src\server\web\index.html "$(BIT_VAPP_PREFIX)\web\index.html"
	copy /Y src\server\web\min-index.html "$(BIT_VAPP_PREFIX)\web\min-index.html"
	copy /Y src\server\web\print.css "$(BIT_VAPP_PREFIX)\web\print.css"
	copy /Y src\server\web\screen.css "$(BIT_VAPP_PREFIX)\web\screen.css"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y src\server\web\test\bench.html "$(BIT_VAPP_PREFIX)\web\test\bench.html"
	copy /Y src\server\web\test\test.cgi "$(BIT_VAPP_PREFIX)\web\test\test.cgi"
	copy /Y src\server\web\test\test.ejs "$(BIT_VAPP_PREFIX)\web\test\test.ejs"
	copy /Y src\server\web\test\test.esp "$(BIT_VAPP_PREFIX)\web\test\test.esp"
	copy /Y src\server\web\test\test.html "$(BIT_VAPP_PREFIX)\web\test\test.html"
	copy /Y src\server\web\test\test.php "$(BIT_VAPP_PREFIX)\web\test\test.php"
	copy /Y src\server\web\test\test.pl "$(BIT_VAPP_PREFIX)\web\test\test.pl"
	copy /Y src\server\web\test\test.py "$(BIT_VAPP_PREFIX)\web\test\test.py"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y src\server\web\test\test.cgi "$(BIT_VAPP_PREFIX)\web\test\test.cgi"
	copy /Y src\server\web\test\test.pl "$(BIT_VAPP_PREFIX)\web\test\test.pl"
	copy /Y src\server\web\test\test.py "$(BIT_VAPP_PREFIX)\web\test\test.py"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	copy /Y src\server\mime.types "$(BIT_VAPP_PREFIX)\mime.types"
	copy /Y src\server\self.crt "$(BIT_VAPP_PREFIX)\self.crt"
	copy /Y src\server\self.key "$(BIT_VAPP_PREFIX)\self.key"
!IF "$(BIT_PACK_PHP)" == "1"
	copy /Y src\server\php.ini "$(BIT_VAPP_PREFIX)\php.ini"
!ENDIF
	copy /Y src\server\appweb.conf "$(BIT_VAPP_PREFIX)\appweb.conf"
	copy /Y src\server\self.crt "$(BIT_VAPP_PREFIX)\self.crt"
	copy /Y src\server\self.key "$(BIT_VAPP_PREFIX)\self.key"
	if not exist "$(BIT_VAPP_PREFIX)\inc" md "$(BIT_VAPP_PREFIX)\inc"
	copy /Y $(CONFIG)\inc\bit.h "$(BIT_VAPP_PREFIX)\inc\bit.h"
	copy /Y src\bitos.h "$(BIT_VAPP_PREFIX)\inc\bitos.h"
	copy /Y src\appweb.h "$(BIT_VAPP_PREFIX)\inc\appweb.h"
	copy /Y src\customize.h "$(BIT_VAPP_PREFIX)\inc\customize.h"
	copy /Y src\deps\est\est.h "$(BIT_VAPP_PREFIX)\inc\est.h"
	copy /Y src\deps\http\http.h "$(BIT_VAPP_PREFIX)\inc\http.h"
	copy /Y src\deps\mpr\mpr.h "$(BIT_VAPP_PREFIX)\inc\mpr.h"
	copy /Y src\deps\pcre\pcre.h "$(BIT_VAPP_PREFIX)\inc\pcre.h"
	copy /Y src\deps\sqlite\sqlite3.h "$(BIT_VAPP_PREFIX)\inc\sqlite3.h"
!IF "$(BIT_PACK_ESP)" == "1"
	copy /Y src\esp\edi.h "$(BIT_VAPP_PREFIX)\inc\edi.h"
	copy /Y src\esp\esp.h "$(BIT_VAPP_PREFIX)\inc\esp.h"
	copy /Y src\esp\mdb.h "$(BIT_VAPP_PREFIX)\inc\mdb.h"
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
	copy /Y src\deps\ejs\ejs.h "$(BIT_VAPP_PREFIX)\inc\ejs.h"
	copy /Y src\deps\ejs\ejs.slots.h "$(BIT_VAPP_PREFIX)\inc\ejs.slots.h"
	copy /Y src\deps\ejs\ejsByteGoto.h "$(BIT_VAPP_PREFIX)\inc\ejsByteGoto.h"
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
	copy /Y $(CONFIG)\bin\ejs.mod "$(BIT_VAPP_PREFIX)\bin\ejs.mod"
!ENDIF
	echo 'set LOG_DIR "$(BIT_VAPP_PREFIX)/log"\nset CACHE_DIR "$(BIT_VAPP_PREFIX)/cache"\nDocuments "$(BIT_VAPP_PREFIX)/web\nListen 80\nListenSecure 443\n' >$(BIT_VAPP_PREFIX)/install.conf

#
#   start
#
DEPS_103 = $(DEPS_103) compile
DEPS_103 = $(DEPS_103) stop

start: $(DEPS_103)
	.\$(CONFIG)\bin\appman install enable start

#
#   install
#
DEPS_104 = $(DEPS_104) compile
DEPS_104 = $(DEPS_104) stop
DEPS_104 = $(DEPS_104) installBinary
DEPS_104 = $(DEPS_104) start

install: $(DEPS_104)



#
#   uninstall
#
DEPS_105 = $(DEPS_105) build
DEPS_105 = $(DEPS_105) compile
DEPS_105 = $(DEPS_105) stop

uninstall: $(DEPS_105)
	if exist "$(BIT_VAPP_PREFIX)\appweb.conf" del /Q "$(BIT_VAPP_PREFIX)\appweb.conf"
	if exist "$(BIT_VAPP_PREFIX)\esp.conf" del /Q "$(BIT_VAPP_PREFIX)\esp.conf"
	if exist "$(BIT_VAPP_PREFIX)\mine.types" del /Q "$(BIT_VAPP_PREFIX)\mine.types"
	if exist "$(BIT_VAPP_PREFIX)\install.conf" del /Q "$(BIT_VAPP_PREFIX)\install.conf"
	if exist "$(BIT_VAPP_PREFIX)\inc\appweb" rd /Q /S "$(BIT_VAPP_PREFIX)\inc\appweb"
	if exist "$(BIT_VAPP_PREFIX)\web" rd /Q /S "$(BIT_VAPP_PREFIX)\web"
	if exist "$(BIT_VAPP_PREFIX)\tmp" rd /Q /S "$(BIT_VAPP_PREFIX)\tmp"
	if exist "$(BIT_VAPP_PREFIX)\cache" rd /Q /S "$(BIT_VAPP_PREFIX)\cache"
	if exist "$(BIT_VAPP_PREFIX)\log" rd /Q /S "$(BIT_VAPP_PREFIX)\log"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q /S "$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\bin" rd /Q "$(BIT_VAPP_PREFIX)\bin"
	if exist "$(BIT_VAPP_PREFIX)\inc" rd /Q "$(BIT_VAPP_PREFIX)\inc"
	if exist "$(BIT_VAPP_PREFIX)\man" rd /Q "$(BIT_VAPP_PREFIX)\man"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q "$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\web" rd /Q "$(BIT_VAPP_PREFIX)\web"
	if exist "$(BIT_VAPP_PREFIX)\log" rd /Q "$(BIT_VAPP_PREFIX)\log"
	if exist "$(BIT_VAPP_PREFIX)\tmp" rd /Q "$(BIT_VAPP_PREFIX)\tmp"
	if exist "$(BIT_VAPP_PREFIX)\cache" rd /Q "$(BIT_VAPP_PREFIX)\cache"
	if exist "$(BIT_VAPP_PREFIX)\latest" del /Q "$(BIT_VAPP_PREFIX)\latest"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q "$(BIT_VAPP_PREFIX)"

#
#   genslink
#
genslink: $(DEPS_106)
	cd src\server
	esp --static --genlink slink.c --flat compile
	cd ..\..

#
#   run
#
DEPS_107 = $(DEPS_107) compile

run: $(DEPS_107)
	cd src\server
	sudo ..\..\$(CONFIG)\bin\appweb -v
	cd ..\..

