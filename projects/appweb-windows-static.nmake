#
#   appweb-windows-static.nmake -- Makefile to build Embedthis Appweb for windows
#

NAME                  = appweb
VERSION               = 5.4.0

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = static
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_CGI)" == ""
ME_COM_CGI            = 1
!ENDIF
!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF
!IF "$(ME_COM_DIR)" == ""
ME_COM_DIR            = 1
!ENDIF
!IF "$(ME_COM_EJS)" == ""
ME_COM_EJS            = 0
!ENDIF
!IF "$(ME_COM_ESP)" == ""
ME_COM_ESP            = 1
!ENDIF
!IF "$(ME_COM_EST)" == ""
ME_COM_EST            = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_LIB)" == ""
ME_COM_LIB            = 1
!ENDIF
!IF "$(ME_COM_LINK)" == ""
ME_COM_LINK           = 1
!ENDIF
!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF
!IF "$(ME_COM_MPR)" == ""
ME_COM_MPR            = 1
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_PHP)" == ""
ME_COM_PHP            = 0
!ENDIF
!IF "$(ME_COM_RC)" == ""
ME_COM_RC             = 1
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 0
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF
!IF "$(ME_COM_WINSDK)" == ""
ME_COM_WINSDK         = 1
!ENDIF
!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 0
!ENDIF

!IF "$(ME_COM_HTTP)" == ""
ME_COM_OPENSSL_PATH   = "/usr"
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_WINSDK)" == ""
ME_COM_WINSDK         = 1
!ENDIF

!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF


CC                    = cl
LD                    = link
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -D_REENTRANT -D_MT -DME_COM_CGI=$(ME_COM_CGI) -DME_COM_COMPILER=$(ME_COM_COMPILER) -DME_COM_DIR=$(ME_COM_DIR) -DME_COM_EJS=$(ME_COM_EJS) -DME_COM_ESP=$(ME_COM_ESP) -DME_COM_EST=$(ME_COM_EST) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_LIB=$(ME_COM_LIB) -DME_COM_LINK=$(ME_COM_LINK) -DME_COM_MDB=$(ME_COM_MDB) -DME_COM_MPR=$(ME_COM_MPR) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_PHP=$(ME_COM_PHP) -DME_COM_RC=$(ME_COM_RC) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) -DME_COM_WINSDK=$(ME_COM_WINSDK) -DME_COM_ZLIB=$(ME_COM_ZLIB) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis Appweb
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appweb.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appwebMonitor.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appwebMonitor.ico
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\authpass.exe
!IF "$(ME_COM_ESP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp-compile.json
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp.exe
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ca.crt
!IF "$(ME_COM_HTTP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\http.exe
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libsql.dll
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libzlib.dll
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appman.exe
TARGETS               = $(TARGETS) src\server\cache

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\appweb-windows-static-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\appweb.obj" del /Q "build\$(CONFIG)\obj\appweb.obj"
	if exist "build\$(CONFIG)\obj\appwebMonitor.obj" del /Q "build\$(CONFIG)\obj\appwebMonitor.obj"
	if exist "build\$(CONFIG)\obj\authpass.obj" del /Q "build\$(CONFIG)\obj\authpass.obj"
	if exist "build\$(CONFIG)\obj\cgiHandler.obj" del /Q "build\$(CONFIG)\obj\cgiHandler.obj"
	if exist "build\$(CONFIG)\obj\cgiProgram.obj" del /Q "build\$(CONFIG)\obj\cgiProgram.obj"
	if exist "build\$(CONFIG)\obj\config.obj" del /Q "build\$(CONFIG)\obj\config.obj"
	if exist "build\$(CONFIG)\obj\convenience.obj" del /Q "build\$(CONFIG)\obj\convenience.obj"
	if exist "build\$(CONFIG)\obj\esp.obj" del /Q "build\$(CONFIG)\obj\esp.obj"
	if exist "build\$(CONFIG)\obj\espHandler.obj" del /Q "build\$(CONFIG)\obj\espHandler.obj"
	if exist "build\$(CONFIG)\obj\espLib.obj" del /Q "build\$(CONFIG)\obj\espLib.obj"
	if exist "build\$(CONFIG)\obj\estLib.obj" del /Q "build\$(CONFIG)\obj\estLib.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\makerom.obj" del /Q "build\$(CONFIG)\obj\makerom.obj"
	if exist "build\$(CONFIG)\obj\manager.obj" del /Q "build\$(CONFIG)\obj\manager.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\mprSsl.obj" del /Q "build\$(CONFIG)\obj\mprSsl.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\romFiles.obj" del /Q "build\$(CONFIG)\obj\romFiles.obj"
	if exist "build\$(CONFIG)\obj\sqlite.obj" del /Q "build\$(CONFIG)\obj\sqlite.obj"
	if exist "build\$(CONFIG)\obj\sqlite3.obj" del /Q "build\$(CONFIG)\obj\sqlite3.obj"
	if exist "build\$(CONFIG)\obj\sslModule.obj" del /Q "build\$(CONFIG)\obj\sslModule.obj"
	if exist "build\$(CONFIG)\obj\zlib.obj" del /Q "build\$(CONFIG)\obj\zlib.obj"
	if exist "build\$(CONFIG)\bin\appweb.exe" del /Q "build\$(CONFIG)\bin\appweb.exe"
	if exist "build\$(CONFIG)\bin\appweb.lib" del /Q "build\$(CONFIG)\bin\appweb.lib"
	if exist "build\$(CONFIG)\bin\appweb.pdb" del /Q "build\$(CONFIG)\bin\appweb.pdb"
	if exist "build\$(CONFIG)\bin\appweb.exp" del /Q "build\$(CONFIG)\bin\appweb.exp"
	if exist "build\$(CONFIG)\bin\appwebMonitor.exe" del /Q "build\$(CONFIG)\bin\appwebMonitor.exe"
	if exist "build\$(CONFIG)\bin\appwebMonitor.lib" del /Q "build\$(CONFIG)\bin\appwebMonitor.lib"
	if exist "build\$(CONFIG)\bin\appwebMonitor.pdb" del /Q "build\$(CONFIG)\bin\appwebMonitor.pdb"
	if exist "build\$(CONFIG)\bin\appwebMonitor.exp" del /Q "build\$(CONFIG)\bin\appwebMonitor.exp"
	if exist "build\$(CONFIG)\bin\appwebMonitor.ico" del /Q "build\$(CONFIG)\bin\appwebMonitor.ico"
	if exist "build\$(CONFIG)\bin\authpass.exe" del /Q "build\$(CONFIG)\bin\authpass.exe"
	if exist "build\$(CONFIG)\bin\authpass.lib" del /Q "build\$(CONFIG)\bin\authpass.lib"
	if exist "build\$(CONFIG)\bin\authpass.pdb" del /Q "build\$(CONFIG)\bin\authpass.pdb"
	if exist "build\$(CONFIG)\bin\authpass.exp" del /Q "build\$(CONFIG)\bin\authpass.exp"
	if exist "build\$(CONFIG)\bin\esp-compile.json" del /Q "build\$(CONFIG)\bin\esp-compile.json"
	if exist "build\$(CONFIG)\bin\esp.exe" del /Q "build\$(CONFIG)\bin\esp.exe"
	if exist "build\$(CONFIG)\bin\esp.lib" del /Q "build\$(CONFIG)\bin\esp.lib"
	if exist "build\$(CONFIG)\bin\esp.pdb" del /Q "build\$(CONFIG)\bin\esp.pdb"
	if exist "build\$(CONFIG)\bin\esp.exp" del /Q "build\$(CONFIG)\bin\esp.exp"
	if exist "build\$(CONFIG)\bin\ca.crt" del /Q "build\$(CONFIG)\bin\ca.crt"
	if exist "build\$(CONFIG)\bin\http.exe" del /Q "build\$(CONFIG)\bin\http.exe"
	if exist "build\$(CONFIG)\bin\http.lib" del /Q "build\$(CONFIG)\bin\http.lib"
	if exist "build\$(CONFIG)\bin\http.pdb" del /Q "build\$(CONFIG)\bin\http.pdb"
	if exist "build\$(CONFIG)\bin\http.exp" del /Q "build\$(CONFIG)\bin\http.exp"
	if exist "build\$(CONFIG)\bin\libappweb.dll" del /Q "build\$(CONFIG)\bin\libappweb.dll"
	if exist "build\$(CONFIG)\bin\libappweb.lib" del /Q "build\$(CONFIG)\bin\libappweb.lib"
	if exist "build\$(CONFIG)\bin\libappweb.pdb" del /Q "build\$(CONFIG)\bin\libappweb.pdb"
	if exist "build\$(CONFIG)\bin\libappweb.exp" del /Q "build\$(CONFIG)\bin\libappweb.exp"
	if exist "build\$(CONFIG)\bin\libesp.dll" del /Q "build\$(CONFIG)\bin\libesp.dll"
	if exist "build\$(CONFIG)\bin\libesp.lib" del /Q "build\$(CONFIG)\bin\libesp.lib"
	if exist "build\$(CONFIG)\bin\libesp.pdb" del /Q "build\$(CONFIG)\bin\libesp.pdb"
	if exist "build\$(CONFIG)\bin\libesp.exp" del /Q "build\$(CONFIG)\bin\libesp.exp"
	if exist "build\$(CONFIG)\bin\libest.dll" del /Q "build\$(CONFIG)\bin\libest.dll"
	if exist "build\$(CONFIG)\bin\libest.lib" del /Q "build\$(CONFIG)\bin\libest.lib"
	if exist "build\$(CONFIG)\bin\libest.pdb" del /Q "build\$(CONFIG)\bin\libest.pdb"
	if exist "build\$(CONFIG)\bin\libest.exp" del /Q "build\$(CONFIG)\bin\libest.exp"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmprssl.dll" del /Q "build\$(CONFIG)\bin\libmprssl.dll"
	if exist "build\$(CONFIG)\bin\libmprssl.lib" del /Q "build\$(CONFIG)\bin\libmprssl.lib"
	if exist "build\$(CONFIG)\bin\libmprssl.pdb" del /Q "build\$(CONFIG)\bin\libmprssl.pdb"
	if exist "build\$(CONFIG)\bin\libmprssl.exp" del /Q "build\$(CONFIG)\bin\libmprssl.exp"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\libsql.dll" del /Q "build\$(CONFIG)\bin\libsql.dll"
	if exist "build\$(CONFIG)\bin\libsql.lib" del /Q "build\$(CONFIG)\bin\libsql.lib"
	if exist "build\$(CONFIG)\bin\libsql.pdb" del /Q "build\$(CONFIG)\bin\libsql.pdb"
	if exist "build\$(CONFIG)\bin\libsql.exp" del /Q "build\$(CONFIG)\bin\libsql.exp"
	if exist "build\$(CONFIG)\bin\libzlib.dll" del /Q "build\$(CONFIG)\bin\libzlib.dll"
	if exist "build\$(CONFIG)\bin\libzlib.lib" del /Q "build\$(CONFIG)\bin\libzlib.lib"
	if exist "build\$(CONFIG)\bin\libzlib.pdb" del /Q "build\$(CONFIG)\bin\libzlib.pdb"
	if exist "build\$(CONFIG)\bin\libzlib.exp" del /Q "build\$(CONFIG)\bin\libzlib.exp"
	if exist "build\$(CONFIG)\bin\appman.exe" del /Q "build\$(CONFIG)\bin\appman.exe"
	if exist "build\$(CONFIG)\bin\appman.lib" del /Q "build\$(CONFIG)\bin\appman.lib"
	if exist "build\$(CONFIG)\bin\appman.pdb" del /Q "build\$(CONFIG)\bin\appman.pdb"
	if exist "build\$(CONFIG)\bin\appman.exp" del /Q "build\$(CONFIG)\bin\appman.exp"

#
#   me.h
#

build\$(CONFIG)\inc\me.h: $(DEPS_50)

#
#   osdep.h
#
DEPS_51 = $(DEPS_51) paks\osdep\dist\osdep.h
DEPS_51 = $(DEPS_51) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_51)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\osdep\dist\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_52 = $(DEPS_52) paks\mpr\dist\mpr.h
DEPS_52 = $(DEPS_52) build\$(CONFIG)\inc\me.h
DEPS_52 = $(DEPS_52) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_52)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\mpr\dist\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   mpr.h
#

paks\mpr\dist\mpr.h: $(DEPS_53)

#
#   mprLib.obj
#
DEPS_54 = $(DEPS_54) paks\mpr\dist\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    paks\mpr\dist\mprLib.c $(DEPS_54)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\mpr\dist\mprLib.c $(LOG)

#
#   libmpr
#
DEPS_55 = $(DEPS_55) build\$(CONFIG)\inc\osdep.h
DEPS_55 = $(DEPS_55) build\$(CONFIG)\inc\mpr.h
DEPS_55 = $(DEPS_55) build\$(CONFIG)\obj\mprLib.obj

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_55)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\mprLib.obj" $(LIBS)  $(LOG)

#
#   pcre.h
#
DEPS_56 = $(DEPS_56) paks\pcre\dist\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_56)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\pcre\dist\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   pcre.h
#

paks\pcre\dist\pcre.h: $(DEPS_57)

#
#   pcre.obj
#
DEPS_58 = $(DEPS_58) build\$(CONFIG)\inc\me.h
DEPS_58 = $(DEPS_58) paks\pcre\dist\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    paks\pcre\dist\pcre.c $(DEPS_58)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\pcre\dist\pcre.c $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_59 = $(DEPS_59) build\$(CONFIG)\inc\pcre.h
DEPS_59 = $(DEPS_59) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_59)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\pcre.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   http.h
#
DEPS_60 = $(DEPS_60) paks\http\dist\http.h
DEPS_60 = $(DEPS_60) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_60)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\http\dist\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   http.h
#

paks\http\dist\http.h: $(DEPS_61)

#
#   httpLib.obj
#
DEPS_62 = $(DEPS_62) paks\http\dist\http.h

build\$(CONFIG)\obj\httpLib.obj: \
    paks\http\dist\httpLib.c $(DEPS_62)
	@echo .. [Compile] build\$(CONFIG)\obj\httpLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\http\dist\httpLib.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_63 = $(DEPS_63) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_63 = $(DEPS_63) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_63 = $(DEPS_63) build\$(CONFIG)\inc\http.h
DEPS_63 = $(DEPS_63) build\$(CONFIG)\obj\httpLib.obj

LIBS_63 = $(LIBS_63) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_63 = $(LIBS_63) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_63)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\httpLib.obj" $(LIBPATHS_63) $(LIBS_63) $(LIBS_63) $(LIBS)  $(LOG)
!ENDIF

#
#   esp.h
#
DEPS_64 = $(DEPS_64) paks\esp\dist\esp.h
DEPS_64 = $(DEPS_64) build\$(CONFIG)\inc\me.h
DEPS_64 = $(DEPS_64) build\$(CONFIG)\inc\osdep.h
DEPS_64 = $(DEPS_64) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\inc\esp.h: $(DEPS_64)
	@echo ..... [Copy] build\$(CONFIG)\inc\esp.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\esp\dist\esp.h+modified build\$(CONFIG)\inc\esp.h $(LOG)

#
#   esp.h
#

paks\esp\dist\esp.h: $(DEPS_65)

#
#   espLib.obj
#
DEPS_66 = $(DEPS_66) paks\esp\dist\esp.h
DEPS_66 = $(DEPS_66) build\$(CONFIG)\inc\pcre.h
DEPS_66 = $(DEPS_66) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\obj\espLib.obj: \
    paks\esp\dist\espLib.c $(DEPS_66)
	@echo .. [Compile] build\$(CONFIG)\obj\espLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espLib.obj -Fd$(BUILD)\obj\espLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\esp\dist\espLib.c $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   libesp
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_67 = $(DEPS_67) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
DEPS_67 = $(DEPS_67) build\$(CONFIG)\inc\esp.h
DEPS_67 = $(DEPS_67) build\$(CONFIG)\obj\espLib.obj

!IF "$(ME_COM_HTTP)" == "1"
LIBS_67 = $(LIBS_67) libhttp.lib
!ENDIF
LIBS_67 = $(LIBS_67) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_67 = $(LIBS_67) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_67 = $(LIBS_67) libsql.lib
!ENDIF

build\$(CONFIG)\bin\libesp.dll: $(DEPS_67)
	@echo ..... [Link] build\$(CONFIG)\bin\libesp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libesp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\espLib.obj" $(LIBPATHS_67) $(LIBS_67) $(LIBS_67) $(LIBS)  $(LOG)
!ENDIF

#
#   est.h
#
DEPS_68 = $(DEPS_68) paks\est\dist\est.h

build\$(CONFIG)\inc\est.h: $(DEPS_68)
	@echo ..... [Copy] build\$(CONFIG)\inc\est.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\est\dist\est.h+modified build\$(CONFIG)\inc\est.h $(LOG)

#
#   est.h
#

paks\est\dist\est.h: $(DEPS_69)

#
#   estLib.obj
#
DEPS_70 = $(DEPS_70) paks\est\dist\est.h

build\$(CONFIG)\obj\estLib.obj: \
    paks\est\dist\estLib.c $(DEPS_70)
	@echo .. [Compile] build\$(CONFIG)\obj\estLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\estLib.obj -Fd$(BUILD)\obj\estLib.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) $(IFLAGS) paks\est\dist\estLib.c $(LOG)

!IF "$(ME_COM_EST)" == "1"
#
#   libest
#
DEPS_71 = $(DEPS_71) build\$(CONFIG)\inc\osdep.h
DEPS_71 = $(DEPS_71) build\$(CONFIG)\inc\est.h
DEPS_71 = $(DEPS_71) build\$(CONFIG)\obj\estLib.obj

build\$(CONFIG)\bin\libest.dll: $(DEPS_71)
	@echo ..... [Link] build\$(CONFIG)\bin\libest.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\estLib.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   mprSsl.obj
#
DEPS_72 = $(DEPS_72) paks\mpr\dist\mpr.h

build\$(CONFIG)\obj\mprSsl.obj: \
    paks\mpr\dist\mprSsl.c $(DEPS_72)
	@echo .. [Compile] build\$(CONFIG)\obj\mprSsl.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprSsl.obj -Fd$(BUILD)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" paks\mpr\dist\mprSsl.c $(LOG)

#
#   libmprssl
#
DEPS_73 = $(DEPS_73) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_EST)" == "1"
DEPS_73 = $(DEPS_73) build\$(CONFIG)\bin\libest.dll
!ENDIF
DEPS_73 = $(DEPS_73) build\$(CONFIG)\obj\mprSsl.obj

LIBS_73 = $(LIBS_73) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_73 = $(LIBS_73) libeay32.lib
LIBPATHS_73 = $(LIBPATHS_73) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_73 = $(LIBPATHS_73) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_73 = $(LIBS_73) libssleay32.lib
LIBPATHS_73 = $(LIBPATHS_73) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_73 = $(LIBPATHS_73) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_73 = $(LIBS_73) libest.lib
!ENDIF

build\$(CONFIG)\bin\libmprssl.dll: $(DEPS_73)
	@echo ..... [Link] build\$(CONFIG)\bin\libmprssl.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS)   "$(BUILD)\obj\mprSsl.obj" $(LIBPATHS_73) $(LIBS_73) $(LIBS_73) $(LIBS)  $(LOG)

#
#   customize.h
#

src\customize.h: $(DEPS_74)

#
#   appweb.h
#
DEPS_75 = $(DEPS_75) src\appweb.h
DEPS_75 = $(DEPS_75) build\$(CONFIG)\inc\osdep.h
DEPS_75 = $(DEPS_75) build\$(CONFIG)\inc\mpr.h
DEPS_75 = $(DEPS_75) build\$(CONFIG)\inc\http.h
DEPS_75 = $(DEPS_75) src\customize.h

build\$(CONFIG)\inc\appweb.h: $(DEPS_75)
	@echo ..... [Copy] build\$(CONFIG)\inc\appweb.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\appweb.h+modified build\$(CONFIG)\inc\appweb.h $(LOG)

#
#   customize.h
#
DEPS_76 = $(DEPS_76) src\customize.h

build\$(CONFIG)\inc\customize.h: $(DEPS_76)
	@echo ..... [Copy] build\$(CONFIG)\inc\customize.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\customize.h+modified build\$(CONFIG)\inc\customize.h $(LOG)

#
#   appweb.h
#

src\appweb.h: $(DEPS_77)

#
#   config.obj
#
DEPS_78 = $(DEPS_78) src\appweb.h
DEPS_78 = $(DEPS_78) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\config.obj: \
    src\config.c $(DEPS_78)
	@echo .. [Compile] build\$(CONFIG)\obj\config.obj
	"$(CC)" -c -Fo$(BUILD)\obj\config.obj -Fd$(BUILD)\obj\config.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\config.c $(LOG)

#
#   convenience.obj
#
DEPS_79 = $(DEPS_79) src\appweb.h

build\$(CONFIG)\obj\convenience.obj: \
    src\convenience.c $(DEPS_79)
	@echo .. [Compile] build\$(CONFIG)\obj\convenience.obj
	"$(CC)" -c -Fo$(BUILD)\obj\convenience.obj -Fd$(BUILD)\obj\convenience.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\convenience.c $(LOG)

#
#   romFiles.obj
#
DEPS_80 = $(DEPS_80) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\romFiles.obj: \
    src\romFiles.c $(DEPS_80)
	@echo .. [Compile] build\$(CONFIG)\obj\romFiles.obj
	"$(CC)" -c -Fo$(BUILD)\obj\romFiles.obj -Fd$(BUILD)\obj\romFiles.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\romFiles.c $(LOG)

#
#   cgiHandler.obj
#
DEPS_81 = $(DEPS_81) src\appweb.h

build\$(CONFIG)\obj\cgiHandler.obj: \
    src\modules\cgiHandler.c $(DEPS_81)
	@echo .. [Compile] build\$(CONFIG)\obj\cgiHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\cgiHandler.obj -Fd$(BUILD)\obj\cgiHandler.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\modules\cgiHandler.c $(LOG)

#
#   espHandler.obj
#
DEPS_82 = $(DEPS_82) src\appweb.h
DEPS_82 = $(DEPS_82) build\$(CONFIG)\inc\esp.h

build\$(CONFIG)\obj\espHandler.obj: \
    src\modules\espHandler.c $(DEPS_82)
	@echo .. [Compile] build\$(CONFIG)\obj\espHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espHandler.obj -Fd$(BUILD)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\modules\espHandler.c $(LOG)

#
#   sslModule.obj
#
DEPS_83 = $(DEPS_83) src\appweb.h

build\$(CONFIG)\obj\sslModule.obj: \
    src\modules\sslModule.c $(DEPS_83)
	@echo .. [Compile] build\$(CONFIG)\obj\sslModule.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sslModule.obj -Fd$(BUILD)\obj\sslModule.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\modules\sslModule.c $(LOG)

#
#   libappweb
#
!IF "$(ME_COM_ESP)" == "1"
DEPS_84 = $(DEPS_84) build\$(CONFIG)\bin\libesp.dll
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
DEPS_84 = $(DEPS_84) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
DEPS_84 = $(DEPS_84) build\$(CONFIG)\bin\libmpr.dll
DEPS_84 = $(DEPS_84) build\$(CONFIG)\bin\libmprssl.dll
DEPS_84 = $(DEPS_84) build\$(CONFIG)\inc\appweb.h
DEPS_84 = $(DEPS_84) build\$(CONFIG)\inc\customize.h
DEPS_84 = $(DEPS_84) build\$(CONFIG)\obj\config.obj
DEPS_84 = $(DEPS_84) build\$(CONFIG)\obj\convenience.obj
DEPS_84 = $(DEPS_84) build\$(CONFIG)\obj\romFiles.obj
DEPS_84 = $(DEPS_84) build\$(CONFIG)\obj\cgiHandler.obj
DEPS_84 = $(DEPS_84) build\$(CONFIG)\obj\espHandler.obj
DEPS_84 = $(DEPS_84) build\$(CONFIG)\obj\sslModule.obj

!IF "$(ME_COM_ESP)" == "1"
LIBS_84 = $(LIBS_84) libesp.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_84 = $(LIBS_84) libhttp.lib
!ENDIF
LIBS_84 = $(LIBS_84) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_84 = $(LIBS_84) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_84 = $(LIBS_84) libsql.lib
!ENDIF
LIBS_84 = $(LIBS_84) libmprssl.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_84 = $(LIBS_84) libeay32.lib
LIBPATHS_84 = $(LIBPATHS_84) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_84 = $(LIBPATHS_84) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_84 = $(LIBS_84) libssleay32.lib
LIBPATHS_84 = $(LIBPATHS_84) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_84 = $(LIBPATHS_84) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_84 = $(LIBS_84) libest.lib
!ENDIF

build\$(CONFIG)\bin\libappweb.dll: $(DEPS_84)
	@echo ..... [Link] build\$(CONFIG)\bin\libappweb.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libappweb.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS)   "$(BUILD)\obj\config.obj" "$(BUILD)\obj\convenience.obj" "$(BUILD)\obj\romFiles.obj" "$(BUILD)\obj\cgiHandler.obj" "$(BUILD)\obj\espHandler.obj" "$(BUILD)\obj\sslModule.obj" $(LIBPATHS_84) $(LIBS_84) $(LIBS_84) $(LIBS)  $(LOG)

#
#   appweb.obj
#
DEPS_85 = $(DEPS_85) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\appweb.obj: \
    src\server\appweb.c $(DEPS_85)
	@echo .. [Compile] build\$(CONFIG)\obj\appweb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appweb.obj -Fd$(BUILD)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\server\appweb.c $(LOG)

#
#   appweb
#
DEPS_86 = $(DEPS_86) build\$(CONFIG)\bin\libappweb.dll
DEPS_86 = $(DEPS_86) build\$(CONFIG)\obj\appweb.obj

LIBS_86 = $(LIBS_86) libappweb.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_86 = $(LIBS_86) libesp.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_86 = $(LIBS_86) libhttp.lib
!ENDIF
LIBS_86 = $(LIBS_86) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_86 = $(LIBS_86) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_86 = $(LIBS_86) libsql.lib
!ENDIF
LIBS_86 = $(LIBS_86) libmprssl.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_86 = $(LIBS_86) libeay32.lib
LIBPATHS_86 = $(LIBPATHS_86) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_86 = $(LIBPATHS_86) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_86 = $(LIBS_86) libssleay32.lib
LIBPATHS_86 = $(LIBPATHS_86) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_86 = $(LIBPATHS_86) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_86 = $(LIBS_86) libest.lib
!ENDIF

build\$(CONFIG)\bin\appweb.exe: $(DEPS_86)
	@echo ..... [Link] build\$(CONFIG)\bin\appweb.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)   "$(BUILD)\obj\appweb.obj" $(LIBPATHS_86) $(LIBS_86) $(LIBS_86) $(LIBS)  $(LOG)

#
#   appwebMonitor.h
#
DEPS_87 = $(DEPS_87) src\server\windows\appwebMonitor.h

build\$(CONFIG)\inc\appwebMonitor.h: $(DEPS_87)
	@echo ..... [Copy] build\$(CONFIG)\inc\appwebMonitor.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\server\windows\appwebMonitor.h+modified build\$(CONFIG)\inc\appwebMonitor.h $(LOG)

#
#   monitorResources.h
#
DEPS_88 = $(DEPS_88) src\server\windows\monitorResources.h

build\$(CONFIG)\inc\monitorResources.h: $(DEPS_88)
	@echo ..... [Copy] build\$(CONFIG)\inc\monitorResources.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\server\windows\monitorResources.h+modified build\$(CONFIG)\inc\monitorResources.h $(LOG)

#
#   appwebMonitor.res
#

build\$(CONFIG)\obj\appwebMonitor.res: \
        src\server\windows\appwebMonitor.rc $(DEPS_89)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebMonitor.res
	"$(RC)" -nologo -Fo $(BUILD)\obj\appwebMonitor.res src\server\windows\appwebMonitor.rc

#
#   appwebMonitor.obj
#
DEPS_90 = $(DEPS_90) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\appwebMonitor.obj: \
    src\server\windows\appwebMonitor.c $(DEPS_90)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebMonitor.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appwebMonitor.obj -Fd$(BUILD)\obj\appwebMonitor.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\server\windows\appwebMonitor.c $(LOG)

#
#   appwebMonitor
#
DEPS_91 = $(DEPS_91) build\$(CONFIG)\bin\libappweb.dll
DEPS_91 = $(DEPS_91) build\$(CONFIG)\inc\appwebMonitor.h
DEPS_91 = $(DEPS_91) build\$(CONFIG)\inc\monitorResources.h
DEPS_91 = $(DEPS_91) build\$(CONFIG)\obj\appwebMonitor.res
DEPS_91 = $(DEPS_91) build\$(CONFIG)\obj\appwebMonitor.obj

LIBS_91 = $(LIBS_91) libappweb.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_91 = $(LIBS_91) libesp.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_91 = $(LIBS_91) libhttp.lib
!ENDIF
LIBS_91 = $(LIBS_91) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_91 = $(LIBS_91) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_91 = $(LIBS_91) libsql.lib
!ENDIF
LIBS_91 = $(LIBS_91) libmprssl.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_91 = $(LIBS_91) libeay32.lib
LIBPATHS_91 = $(LIBPATHS_91) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_91 = $(LIBPATHS_91) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_91 = $(LIBS_91) libssleay32.lib
LIBPATHS_91 = $(LIBPATHS_91) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_91 = $(LIBPATHS_91) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_91 = $(LIBS_91) libest.lib
!ENDIF

build\$(CONFIG)\bin\appwebMonitor.exe: $(DEPS_91)
	@echo ..... [Link] build\$(CONFIG)\bin\appwebMonitor.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appwebMonitor.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS)   "$(BUILD)\obj\appwebMonitor.res" "$(BUILD)\obj\appwebMonitor.obj" shell32.lib ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib  $(LIBPATHS_91) $(LIBS_91) $(LIBS_91) $(LOG)

#
#   appwebMonitor.ico
#
DEPS_92 = $(DEPS_92) src\server\windows\appwebMonitor.ico

build\$(CONFIG)\bin\appwebMonitor.ico: $(DEPS_92)
	@echo ..... [Copy] build\$(CONFIG)\bin\appwebMonitor.ico
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\server\windows\appwebMonitor.ico+modified build\$(CONFIG)\bin\appwebMonitor.ico $(LOG)

#
#   authpass.obj
#
DEPS_93 = $(DEPS_93) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\authpass.obj: \
    src\utils\authpass.c $(DEPS_93)
	@echo .. [Compile] build\$(CONFIG)\obj\authpass.obj
	"$(CC)" -c -Fo$(BUILD)\obj\authpass.obj -Fd$(BUILD)\obj\authpass.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\utils\authpass.c $(LOG)

#
#   authpass
#
DEPS_94 = $(DEPS_94) build\$(CONFIG)\bin\libappweb.dll
!IF "$(ME_COM_ESP)" == "1"
DEPS_94 = $(DEPS_94) build\$(CONFIG)\bin\libesp.dll
!ENDIF
DEPS_94 = $(DEPS_94) build\$(CONFIG)\obj\authpass.obj

LIBS_94 = $(LIBS_94) libappweb.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_94 = $(LIBS_94) libesp.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_94 = $(LIBS_94) libhttp.lib
!ENDIF
LIBS_94 = $(LIBS_94) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_94 = $(LIBS_94) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_94 = $(LIBS_94) libsql.lib
!ENDIF
LIBS_94 = $(LIBS_94) libmprssl.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_94 = $(LIBS_94) libeay32.lib
LIBPATHS_94 = $(LIBPATHS_94) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_94 = $(LIBPATHS_94) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_94 = $(LIBS_94) libssleay32.lib
LIBPATHS_94 = $(LIBPATHS_94) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_94 = $(LIBPATHS_94) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_94 = $(LIBS_94) libest.lib
!ENDIF

build\$(CONFIG)\bin\authpass.exe: $(DEPS_94)
	@echo ..... [Link] build\$(CONFIG)\bin\authpass.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\authpass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)   "$(BUILD)\obj\authpass.obj" $(LIBPATHS_94) $(LIBS_94) $(LIBS_94) $(LIBS)  $(LOG)

#
#   cgiProgram.obj
#

build\$(CONFIG)\obj\cgiProgram.obj: \
    src\utils\cgiProgram.c $(DEPS_95)
	@echo .. [Compile] build\$(CONFIG)\obj\cgiProgram.obj
	"$(CC)" -c -Fo$(BUILD)\obj\cgiProgram.obj -Fd$(BUILD)\obj\cgiProgram.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\cgiProgram.c $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   esp-compile.json
#
DEPS_96 = $(DEPS_96) paks\esp\dist\esp-compile.json

build\$(CONFIG)\bin\esp-compile.json: $(DEPS_96)
	@echo ..... [Copy] build\$(CONFIG)\bin\esp-compile.json
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B paks\esp\dist\esp-compile.json+modified build\$(CONFIG)\bin\esp-compile.json $(LOG)
!ENDIF

#
#   esp.obj
#
DEPS_97 = $(DEPS_97) paks\esp\dist\esp.h

build\$(CONFIG)\obj\esp.obj: \
    paks\esp\dist\esp.c $(DEPS_97)
	@echo .. [Compile] build\$(CONFIG)\obj\esp.obj
	"$(CC)" -c -Fo$(BUILD)\obj\esp.obj -Fd$(BUILD)\obj\esp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\esp\dist\esp.c $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   espcmd
#
DEPS_98 = $(DEPS_98) build\$(CONFIG)\bin\libesp.dll
DEPS_98 = $(DEPS_98) build\$(CONFIG)\obj\esp.obj

LIBS_98 = $(LIBS_98) libesp.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_98 = $(LIBS_98) libhttp.lib
!ENDIF
LIBS_98 = $(LIBS_98) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_98 = $(LIBS_98) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_98 = $(LIBS_98) libsql.lib
!ENDIF

build\$(CONFIG)\bin\esp.exe: $(DEPS_98)
	@echo ..... [Link] build\$(CONFIG)\bin\esp.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\esp.obj" $(LIBPATHS_98) $(LIBS_98) $(LIBS_98) $(LIBS)  $(LOG)
!ENDIF

#
#   http-ca-crt
#
DEPS_99 = $(DEPS_99) paks\http\dist\ca.crt

build\$(CONFIG)\bin\ca.crt: $(DEPS_99)
	@echo ..... [Copy] build\$(CONFIG)\bin\ca.crt
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B paks\http\dist\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)

#
#   http.obj
#
DEPS_100 = $(DEPS_100) paks\http\dist\http.h

build\$(CONFIG)\obj\http.obj: \
    paks\http\dist\http.c $(DEPS_100)
	@echo .. [Compile] build\$(CONFIG)\obj\http.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\http\dist\http.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   httpcmd
#
DEPS_101 = $(DEPS_101) build\$(CONFIG)\bin\libhttp.dll
DEPS_101 = $(DEPS_101) build\$(CONFIG)\obj\http.obj

LIBS_101 = $(LIBS_101) libhttp.lib
LIBS_101 = $(LIBS_101) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_101 = $(LIBS_101) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\http.exe: $(DEPS_101)
	@echo ..... [Link] build\$(CONFIG)\bin\http.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\http.obj" $(LIBPATHS_101) $(LIBS_101) $(LIBS_101) $(LIBS)  $(LOG)
!ENDIF

#
#   sqlite3.h
#
DEPS_102 = $(DEPS_102) paks\sqlite\dist\sqlite3.h

build\$(CONFIG)\inc\sqlite3.h: $(DEPS_102)
	@echo ..... [Copy] build\$(CONFIG)\inc\sqlite3.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\sqlite\dist\sqlite3.h+modified build\$(CONFIG)\inc\sqlite3.h $(LOG)

#
#   sqlite3.h
#

paks\sqlite\dist\sqlite3.h: $(DEPS_103)

#
#   sqlite3.obj
#
DEPS_104 = $(DEPS_104) build\$(CONFIG)\inc\me.h
DEPS_104 = $(DEPS_104) paks\sqlite\dist\sqlite3.h

build\$(CONFIG)\obj\sqlite3.obj: \
    paks\sqlite\dist\sqlite3.c $(DEPS_104)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite3.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite3.obj -Fd$(BUILD)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\sqlite\dist\sqlite3.c $(LOG)

!IF "$(ME_COM_SQLITE)" == "1"
#
#   libsql
#
DEPS_105 = $(DEPS_105) build\$(CONFIG)\inc\sqlite3.h
DEPS_105 = $(DEPS_105) build\$(CONFIG)\obj\sqlite3.obj

build\$(CONFIG)\bin\libsql.dll: $(DEPS_105)
	@echo ..... [Link] build\$(CONFIG)\bin\libsql.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libsql.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\sqlite3.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   zlib.h
#
DEPS_106 = $(DEPS_106) paks\zlib\dist\zlib.h

build\$(CONFIG)\inc\zlib.h: $(DEPS_106)
	@echo ..... [Copy] build\$(CONFIG)\inc\zlib.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\zlib\dist\zlib.h+modified build\$(CONFIG)\inc\zlib.h $(LOG)

#
#   zlib.h
#

paks\zlib\dist\zlib.h: $(DEPS_107)

#
#   zlib.obj
#
DEPS_108 = $(DEPS_108) build\$(CONFIG)\inc\me.h
DEPS_108 = $(DEPS_108) paks\zlib\dist\zlib.h

build\$(CONFIG)\obj\zlib.obj: \
    paks\zlib\dist\zlib.c $(DEPS_108)
	@echo .. [Compile] build\$(CONFIG)\obj\zlib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\zlib.obj -Fd$(BUILD)\obj\zlib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\zlib\dist\zlib.c $(LOG)

!IF "$(ME_COM_ZLIB)" == "1"
#
#   libzlib
#
DEPS_109 = $(DEPS_109) build\$(CONFIG)\inc\zlib.h
DEPS_109 = $(DEPS_109) build\$(CONFIG)\obj\zlib.obj

build\$(CONFIG)\bin\libzlib.dll: $(DEPS_109)
	@echo ..... [Link] build\$(CONFIG)\bin\libzlib.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libzlib.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\zlib.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   makerom.obj
#
DEPS_110 = $(DEPS_110) paks\mpr\dist\mpr.h

build\$(CONFIG)\obj\makerom.obj: \
    paks\mpr\dist\makerom.c $(DEPS_110)
	@echo .. [Compile] build\$(CONFIG)\obj\makerom.obj
	"$(CC)" -c -Fo$(BUILD)\obj\makerom.obj -Fd$(BUILD)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\mpr\dist\makerom.c $(LOG)

#
#   manager.obj
#
DEPS_111 = $(DEPS_111) paks\mpr\dist\mpr.h

build\$(CONFIG)\obj\manager.obj: \
    paks\mpr\dist\manager.c $(DEPS_111)
	@echo .. [Compile] build\$(CONFIG)\obj\manager.obj
	"$(CC)" -c -Fo$(BUILD)\obj\manager.obj -Fd$(BUILD)\obj\manager.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\mpr\dist\manager.c $(LOG)

#
#   manager
#
DEPS_112 = $(DEPS_112) build\$(CONFIG)\bin\libmpr.dll
DEPS_112 = $(DEPS_112) build\$(CONFIG)\obj\manager.obj

LIBS_112 = $(LIBS_112) libmpr.lib

build\$(CONFIG)\bin\appman.exe: $(DEPS_112)
	@echo ..... [Link] build\$(CONFIG)\bin\appman.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\manager.obj" $(LIBPATHS_112) $(LIBS_112) $(LIBS_112) $(LIBS)  $(LOG)

#
#   server-cache
#

src\server\cache: $(DEPS_113)
	cd src\server
	if not exist "cache" md "cache"
	cd ..\..

#
#   sqlite.obj
#
DEPS_114 = $(DEPS_114) build\$(CONFIG)\inc\me.h
DEPS_114 = $(DEPS_114) paks\sqlite\dist\sqlite3.h

build\$(CONFIG)\obj\sqlite.obj: \
    paks\sqlite\dist\sqlite.c $(DEPS_114)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite.obj -Fd$(BUILD)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\sqlite\dist\sqlite.c $(LOG)

