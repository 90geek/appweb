#
#   appweb-windows-static.nmake -- Makefile to build Embedthis Appweb for windows
#

NAME                  = appweb
VERSION               = 5.4.5

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = static
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_CGI)" == ""
ME_COM_CGI            = 1
!ENDIF
!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF
!IF "$(ME_COM_DIR)" == ""
ME_COM_DIR            = 1
!ENDIF
!IF "$(ME_COM_EJS)" == ""
ME_COM_EJS            = 0
!ENDIF
!IF "$(ME_COM_ESP)" == ""
ME_COM_ESP            = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_LIB)" == ""
ME_COM_LIB            = 1
!ENDIF
!IF "$(ME_COM_LINK)" == ""
ME_COM_LINK           = 1
!ENDIF
!IF "$(ME_COM_MATRIXSSL)" == ""
ME_COM_MATRIXSSL      = 0
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == ""
ME_COM_MBEDTLS        = 0
!ENDIF
!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF
!IF "$(ME_COM_MPR)" == ""
ME_COM_MPR            = 1
!ENDIF
!IF "$(ME_COM_NANOSSL)" == ""
ME_COM_NANOSSL        = 0
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_PHP)" == ""
ME_COM_PHP            = 0
!ENDIF
!IF "$(ME_COM_RC)" == ""
ME_COM_RC             = 1
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 0
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 0
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF
!IF "$(ME_COM_WINSDK)" == ""
ME_COM_WINSDK         = 1
!ENDIF
!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 0
!ENDIF

!IF "$(ME_COM_ESP)" == ""
ME_COM_OPENSSL_PATH   = ""
!ENDIF

!IF "$(ME_COM_LIB)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_LINK)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_OPENSSL)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_RC)" == "1"
ME_COM_WINSDK         = 1
!ENDIF

!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF


CC                    = cl
LD                    = link
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -D_REENTRANT -D_MT -DME_COM_CGI=$(ME_COM_CGI) -DME_COM_COMPILER=$(ME_COM_COMPILER) -DME_COM_DIR=$(ME_COM_DIR) -DME_COM_EJS=$(ME_COM_EJS) -DME_COM_ESP=$(ME_COM_ESP) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_LIB=$(ME_COM_LIB) -DME_COM_LINK=$(ME_COM_LINK) -DME_COM_MATRIXSSL=$(ME_COM_MATRIXSSL) -DME_COM_MBEDTLS=$(ME_COM_MBEDTLS) -DME_COM_MDB=$(ME_COM_MDB) -DME_COM_MPR=$(ME_COM_MPR) -DME_COM_NANOSSL=$(ME_COM_NANOSSL) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_PHP=$(ME_COM_PHP) -DME_COM_RC=$(ME_COM_RC) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) -DME_COM_WINSDK=$(ME_COM_WINSDK) -DME_COM_ZLIB=$(ME_COM_ZLIB) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis Appweb
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appweb.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appwebMonitor.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appwebMonitor.ico
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\authpass.exe
!IF "$(ME_COM_ESP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp-compile.json
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp.exe
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\http.exe
!ENDIF
!IF "$(ME_COM_SSL)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\.install-certs-modified
!ENDIF
TARGETS               = $(TARGETS) src\server\cache
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appman.exe

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\appweb-windows-static-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\appweb.obj" del /Q "build\$(CONFIG)\obj\appweb.obj"
	if exist "build\$(CONFIG)\obj\appwebMonitor.obj" del /Q "build\$(CONFIG)\obj\appwebMonitor.obj"
	if exist "build\$(CONFIG)\obj\authpass.obj" del /Q "build\$(CONFIG)\obj\authpass.obj"
	if exist "build\$(CONFIG)\obj\cgiHandler.obj" del /Q "build\$(CONFIG)\obj\cgiHandler.obj"
	if exist "build\$(CONFIG)\obj\cgiProgram.obj" del /Q "build\$(CONFIG)\obj\cgiProgram.obj"
	if exist "build\$(CONFIG)\obj\config.obj" del /Q "build\$(CONFIG)\obj\config.obj"
	if exist "build\$(CONFIG)\obj\convenience.obj" del /Q "build\$(CONFIG)\obj\convenience.obj"
	if exist "build\$(CONFIG)\obj\esp.obj" del /Q "build\$(CONFIG)\obj\esp.obj"
	if exist "build\$(CONFIG)\obj\espHandler.obj" del /Q "build\$(CONFIG)\obj\espHandler.obj"
	if exist "build\$(CONFIG)\obj\espLib.obj" del /Q "build\$(CONFIG)\obj\espLib.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\openssl.obj" del /Q "build\$(CONFIG)\obj\openssl.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\romFiles.obj" del /Q "build\$(CONFIG)\obj\romFiles.obj"
	if exist "build\$(CONFIG)\obj\watchdog.obj" del /Q "build\$(CONFIG)\obj\watchdog.obj"
	if exist "build\$(CONFIG)\bin\appweb.exe" del /Q "build\$(CONFIG)\bin\appweb.exe"
	if exist "build\$(CONFIG)\bin\appweb.lib" del /Q "build\$(CONFIG)\bin\appweb.lib"
	if exist "build\$(CONFIG)\bin\appweb.pdb" del /Q "build\$(CONFIG)\bin\appweb.pdb"
	if exist "build\$(CONFIG)\bin\appweb.exp" del /Q "build\$(CONFIG)\bin\appweb.exp"
	if exist "build\$(CONFIG)\bin\appwebMonitor.exe" del /Q "build\$(CONFIG)\bin\appwebMonitor.exe"
	if exist "build\$(CONFIG)\bin\appwebMonitor.lib" del /Q "build\$(CONFIG)\bin\appwebMonitor.lib"
	if exist "build\$(CONFIG)\bin\appwebMonitor.pdb" del /Q "build\$(CONFIG)\bin\appwebMonitor.pdb"
	if exist "build\$(CONFIG)\bin\appwebMonitor.exp" del /Q "build\$(CONFIG)\bin\appwebMonitor.exp"
	if exist "build\$(CONFIG)\bin\appwebMonitor.ico" del /Q "build\$(CONFIG)\bin\appwebMonitor.ico"
	if exist "build\$(CONFIG)\bin\authpass.exe" del /Q "build\$(CONFIG)\bin\authpass.exe"
	if exist "build\$(CONFIG)\bin\authpass.lib" del /Q "build\$(CONFIG)\bin\authpass.lib"
	if exist "build\$(CONFIG)\bin\authpass.pdb" del /Q "build\$(CONFIG)\bin\authpass.pdb"
	if exist "build\$(CONFIG)\bin\authpass.exp" del /Q "build\$(CONFIG)\bin\authpass.exp"
	if exist "build\$(CONFIG)\bin\esp-compile.json" del /Q "build\$(CONFIG)\bin\esp-compile.json"
	if exist "build\$(CONFIG)\bin\esp.exe" del /Q "build\$(CONFIG)\bin\esp.exe"
	if exist "build\$(CONFIG)\bin\esp.lib" del /Q "build\$(CONFIG)\bin\esp.lib"
	if exist "build\$(CONFIG)\bin\esp.pdb" del /Q "build\$(CONFIG)\bin\esp.pdb"
	if exist "build\$(CONFIG)\bin\esp.exp" del /Q "build\$(CONFIG)\bin\esp.exp"
	if exist "build\$(CONFIG)\bin\http.exe" del /Q "build\$(CONFIG)\bin\http.exe"
	if exist "build\$(CONFIG)\bin\http.lib" del /Q "build\$(CONFIG)\bin\http.lib"
	if exist "build\$(CONFIG)\bin\http.pdb" del /Q "build\$(CONFIG)\bin\http.pdb"
	if exist "build\$(CONFIG)\bin\http.exp" del /Q "build\$(CONFIG)\bin\http.exp"
	if exist "build\$(CONFIG)\.install-certs-modified" del /Q "build\$(CONFIG)\.install-certs-modified"
	if exist "build\$(CONFIG)\bin\libappweb.lib" del /Q "build\$(CONFIG)\bin\libappweb.lib"
	if exist "build\$(CONFIG)\bin\libesp.lib" del /Q "build\$(CONFIG)\bin\libesp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libmpr-openssl.lib" del /Q "build\$(CONFIG)\bin\libmpr-openssl.lib"
	if exist "build\$(CONFIG)\bin\appman.exe" del /Q "build\$(CONFIG)\bin\appman.exe"
	if exist "build\$(CONFIG)\bin\appman.lib" del /Q "build\$(CONFIG)\bin\appman.lib"
	if exist "build\$(CONFIG)\bin\appman.pdb" del /Q "build\$(CONFIG)\bin\appman.pdb"
	if exist "build\$(CONFIG)\bin\appman.exp" del /Q "build\$(CONFIG)\bin\appman.exp"

#
#   me.h
#

build\$(CONFIG)\inc\me.h: $(DEPS_1)

#
#   osdep.h
#
DEPS_2 = $(DEPS_2) src\osdep\osdep.h
DEPS_2 = $(DEPS_2) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_2)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\osdep\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_3 = $(DEPS_3) src\mpr\mpr.h
DEPS_3 = $(DEPS_3) build\$(CONFIG)\inc\me.h
DEPS_3 = $(DEPS_3) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_3)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mpr\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   openssl.obj
#
DEPS_4 = $(DEPS_4) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\openssl.obj: \
    src\mpr-openssl\openssl.c $(DEPS_4)
	@echo .. [Compile] build\$(CONFIG)\obj\openssl.obj
	"$(CC)" -c -Fo$(BUILD)\obj\openssl.obj -Fd$(BUILD)\obj\openssl.pdb $(CFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\mpr-openssl\openssl.c $(LOG)

!IF "$(ME_COM_SSL)" == "1"
!IF "$(ME_COM_OPENSSL)" == "1"
#
#   openssl
#
DEPS_5 = $(DEPS_5) build\$(CONFIG)\obj\openssl.obj

build\$(CONFIG)\bin\libmpr-openssl.lib: $(DEPS_5)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr-openssl.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libmpr-openssl.lib "$(BUILD)\obj\openssl.obj" $(LOG)
!ENDIF
!ENDIF

#
#   mpr.h
#

src\mpr\mpr.h: $(DEPS_6)

#
#   mprLib.obj
#
DEPS_7 = $(DEPS_7) src\mpr\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    src\mpr\mprLib.c $(DEPS_7)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\mpr\mprLib.c $(LOG)

#
#   libmpr
#
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\osdep.h
!IF "$(ME_COM_SSL)" == "1"
!IF "$(ME_COM_OPENSSL)" == "1"
DEPS_8 = $(DEPS_8) build\$(CONFIG)\bin\libmpr-openssl.lib
!ENDIF
!ENDIF
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\mpr.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\obj\mprLib.obj

build\$(CONFIG)\bin\libmpr.lib: $(DEPS_8)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libmpr.lib "$(BUILD)\obj\mprLib.obj" $(LOG)

#
#   pcre.h
#
DEPS_9 = $(DEPS_9) src\pcre\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_9)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\pcre\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   pcre.h
#

src\pcre\pcre.h: $(DEPS_10)

#
#   pcre.obj
#
DEPS_11 = $(DEPS_11) build\$(CONFIG)\inc\me.h
DEPS_11 = $(DEPS_11) src\pcre\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    src\pcre\pcre.c $(DEPS_11)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre\pcre.c $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_12 = $(DEPS_12) build\$(CONFIG)\inc\pcre.h
DEPS_12 = $(DEPS_12) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.lib: $(DEPS_12)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libpcre.lib "$(BUILD)\obj\pcre.obj" $(LOG)
!ENDIF

#
#   http.h
#
DEPS_13 = $(DEPS_13) src\http\http.h
DEPS_13 = $(DEPS_13) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_13)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\http\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   http.h
#

src\http\http.h: $(DEPS_14)

#
#   httpLib.obj
#
DEPS_15 = $(DEPS_15) src\http\http.h
DEPS_15 = $(DEPS_15) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\httpLib.obj: \
    src\http\httpLib.c $(DEPS_15)
	@echo .. [Compile] build\$(CONFIG)\obj\httpLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\http\httpLib.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_16 = $(DEPS_16) build\$(CONFIG)\bin\libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
DEPS_16 = $(DEPS_16) build\$(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_16 = $(DEPS_16) build\$(CONFIG)\inc\http.h
DEPS_16 = $(DEPS_16) build\$(CONFIG)\obj\httpLib.obj

build\$(CONFIG)\bin\libhttp.lib: $(DEPS_16)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libhttp.lib "$(BUILD)\obj\httpLib.obj" $(LOG)
!ENDIF

#
#   esp.h
#
DEPS_17 = $(DEPS_17) src\esp\esp.h
DEPS_17 = $(DEPS_17) build\$(CONFIG)\inc\me.h
DEPS_17 = $(DEPS_17) build\$(CONFIG)\inc\osdep.h
DEPS_17 = $(DEPS_17) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\inc\esp.h: $(DEPS_17)
	@echo ..... [Copy] build\$(CONFIG)\inc\esp.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\esp\esp.h+modified build\$(CONFIG)\inc\esp.h $(LOG)

#
#   esp.h
#

src\esp\esp.h: $(DEPS_18)

#
#   espLib.obj
#
DEPS_19 = $(DEPS_19) src\esp\esp.h
DEPS_19 = $(DEPS_19) build\$(CONFIG)\inc\pcre.h
DEPS_19 = $(DEPS_19) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\obj\espLib.obj: \
    src\esp\espLib.c $(DEPS_19)
	@echo .. [Compile] build\$(CONFIG)\obj\espLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espLib.obj -Fd$(BUILD)\obj\espLib.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\esp\espLib.c $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   libesp
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_20 = $(DEPS_20) build\$(CONFIG)\bin\libhttp.lib
!ENDIF
DEPS_20 = $(DEPS_20) build\$(CONFIG)\inc\esp.h
DEPS_20 = $(DEPS_20) build\$(CONFIG)\obj\espLib.obj

build\$(CONFIG)\bin\libesp.lib: $(DEPS_20)
	@echo ..... [Link] build\$(CONFIG)\bin\libesp.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libesp.lib "$(BUILD)\obj\espLib.obj" $(LOG)
!ENDIF

#
#   appweb.h
#
DEPS_21 = $(DEPS_21) src\appweb.h
DEPS_21 = $(DEPS_21) build\$(CONFIG)\inc\osdep.h
DEPS_21 = $(DEPS_21) build\$(CONFIG)\inc\mpr.h
DEPS_21 = $(DEPS_21) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\inc\appweb.h: $(DEPS_21)
	@echo ..... [Copy] build\$(CONFIG)\inc\appweb.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\appweb.h+modified build\$(CONFIG)\inc\appweb.h $(LOG)

#
#   customize.h
#
DEPS_22 = $(DEPS_22) src\customize.h

build\$(CONFIG)\inc\customize.h: $(DEPS_22)
	@echo ..... [Copy] build\$(CONFIG)\inc\customize.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\customize.h+modified build\$(CONFIG)\inc\customize.h $(LOG)

#
#   appweb.h
#

src\appweb.h: $(DEPS_23)

#
#   config.obj
#
DEPS_24 = $(DEPS_24) src\appweb.h
DEPS_24 = $(DEPS_24) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\config.obj: \
    src\config.c $(DEPS_24)
	@echo .. [Compile] build\$(CONFIG)\obj\config.obj
	"$(CC)" -c -Fo$(BUILD)\obj\config.obj -Fd$(BUILD)\obj\config.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\config.c $(LOG)

#
#   convenience.obj
#
DEPS_25 = $(DEPS_25) src\appweb.h

build\$(CONFIG)\obj\convenience.obj: \
    src\convenience.c $(DEPS_25)
	@echo .. [Compile] build\$(CONFIG)\obj\convenience.obj
	"$(CC)" -c -Fo$(BUILD)\obj\convenience.obj -Fd$(BUILD)\obj\convenience.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\convenience.c $(LOG)

#
#   romFiles.obj
#
DEPS_26 = $(DEPS_26) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\romFiles.obj: \
    src\romFiles.c $(DEPS_26)
	@echo .. [Compile] build\$(CONFIG)\obj\romFiles.obj
	"$(CC)" -c -Fo$(BUILD)\obj\romFiles.obj -Fd$(BUILD)\obj\romFiles.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\romFiles.c $(LOG)

#
#   cgiHandler.obj
#
DEPS_27 = $(DEPS_27) src\appweb.h

build\$(CONFIG)\obj\cgiHandler.obj: \
    src\modules\cgiHandler.c $(DEPS_27)
	@echo .. [Compile] build\$(CONFIG)\obj\cgiHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\cgiHandler.obj -Fd$(BUILD)\obj\cgiHandler.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\modules\cgiHandler.c $(LOG)

#
#   espHandler.obj
#
DEPS_28 = $(DEPS_28) src\appweb.h
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\esp.h

build\$(CONFIG)\obj\espHandler.obj: \
    src\modules\espHandler.c $(DEPS_28)
	@echo .. [Compile] build\$(CONFIG)\obj\espHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espHandler.obj -Fd$(BUILD)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\modules\espHandler.c $(LOG)

#
#   libappweb
#
!IF "$(ME_COM_ESP)" == "1"
DEPS_29 = $(DEPS_29) build\$(CONFIG)\bin\libesp.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
DEPS_29 = $(DEPS_29) build\$(CONFIG)\bin\libhttp.lib
!ENDIF
DEPS_29 = $(DEPS_29) build\$(CONFIG)\bin\libmpr.lib
DEPS_29 = $(DEPS_29) build\$(CONFIG)\inc\appweb.h
DEPS_29 = $(DEPS_29) build\$(CONFIG)\inc\customize.h
DEPS_29 = $(DEPS_29) build\$(CONFIG)\obj\config.obj
DEPS_29 = $(DEPS_29) build\$(CONFIG)\obj\convenience.obj
DEPS_29 = $(DEPS_29) build\$(CONFIG)\obj\romFiles.obj
DEPS_29 = $(DEPS_29) build\$(CONFIG)\obj\cgiHandler.obj
DEPS_29 = $(DEPS_29) build\$(CONFIG)\obj\espHandler.obj

build\$(CONFIG)\bin\libappweb.lib: $(DEPS_29)
	@echo ..... [Link] build\$(CONFIG)\bin\libappweb.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libappweb.lib "$(BUILD)\obj\config.obj" "$(BUILD)\obj\convenience.obj" "$(BUILD)\obj\romFiles.obj" "$(BUILD)\obj\cgiHandler.obj" "$(BUILD)\obj\espHandler.obj" $(LOG)

#
#   appweb.obj
#
DEPS_30 = $(DEPS_30) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\appweb.obj: \
    src\server\appweb.c $(DEPS_30)
	@echo .. [Compile] build\$(CONFIG)\obj\appweb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appweb.obj -Fd$(BUILD)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\server\appweb.c $(LOG)

#
#   appweb
#
DEPS_31 = $(DEPS_31) build\$(CONFIG)\bin\libappweb.lib
DEPS_31 = $(DEPS_31) build\$(CONFIG)\obj\appweb.obj

!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_31 = $(LIBS_31) libmpr-openssl.lib
LIBPATHS_31 = $(LIBPATHS_31) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_31 = $(LIBS_31) libgdi32.lib
LIBPATHS_31 = $(LIBPATHS_31) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_31 = $(LIBS_31) libeay32.lib
LIBPATHS_31 = $(LIBPATHS_31) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_31 = $(LIBS_31) libssleay32.lib
LIBPATHS_31 = $(LIBPATHS_31) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
LIBS_31 = $(LIBS_31) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_31 = $(LIBS_31) libmpr-openssl.lib
LIBPATHS_31 = $(LIBPATHS_31) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_31 = $(LIBS_31) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_31 = $(LIBS_31) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_31 = $(LIBS_31) libpcre.lib
!ENDIF
LIBS_31 = $(LIBS_31) libmpr.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_31 = $(LIBS_31) libesp.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_31 = $(LIBS_31) libhttp.lib
!ENDIF
LIBS_31 = $(LIBS_31) libappweb.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_31 = $(LIBS_31) libesp.lib
!ENDIF

build\$(CONFIG)\bin\appweb.exe: $(DEPS_31)
	@echo ..... [Link] build\$(CONFIG)\bin\appweb.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\appweb.obj" $(LIBPATHS_31) $(LIBS_31) $(LIBS_31) $(LIBS)  $(LOG)

#
#   appwebMonitor.h
#
DEPS_32 = $(DEPS_32) src\server\windows\appwebMonitor.h

build\$(CONFIG)\inc\appwebMonitor.h: $(DEPS_32)
	@echo ..... [Copy] build\$(CONFIG)\inc\appwebMonitor.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\server\windows\appwebMonitor.h+modified build\$(CONFIG)\inc\appwebMonitor.h $(LOG)

#
#   monitorResources.h
#
DEPS_33 = $(DEPS_33) src\server\windows\monitorResources.h

build\$(CONFIG)\inc\monitorResources.h: $(DEPS_33)
	@echo ..... [Copy] build\$(CONFIG)\inc\monitorResources.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\server\windows\monitorResources.h+modified build\$(CONFIG)\inc\monitorResources.h $(LOG)

#
#   appwebMonitor.res
#

build\$(CONFIG)\obj\appwebMonitor.res: \
        src\server\windows\appwebMonitor.rc $(DEPS_34)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebMonitor.res
	"$(RC)" -nologo -Fo $(BUILD)\obj\appwebMonitor.res src\server\windows\appwebMonitor.rc

#
#   appwebMonitor.obj
#
DEPS_35 = $(DEPS_35) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\appwebMonitor.obj: \
    src\server\windows\appwebMonitor.c $(DEPS_35)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebMonitor.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appwebMonitor.obj -Fd$(BUILD)\obj\appwebMonitor.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\server\windows\appwebMonitor.c $(LOG)

#
#   appwebMonitor
#
DEPS_36 = $(DEPS_36) build\$(CONFIG)\bin\libappweb.lib
DEPS_36 = $(DEPS_36) build\$(CONFIG)\inc\appwebMonitor.h
DEPS_36 = $(DEPS_36) build\$(CONFIG)\inc\monitorResources.h
DEPS_36 = $(DEPS_36) build\$(CONFIG)\obj\appwebMonitor.res
DEPS_36 = $(DEPS_36) build\$(CONFIG)\obj\appwebMonitor.obj

!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_36 = $(LIBS_36) libmpr-openssl.lib
LIBPATHS_36 = $(LIBPATHS_36) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_36 = $(LIBS_36) libgdi32.lib
LIBPATHS_36 = $(LIBPATHS_36) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_36 = $(LIBS_36) libeay32.lib
LIBPATHS_36 = $(LIBPATHS_36) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_36 = $(LIBS_36) libssleay32.lib
LIBPATHS_36 = $(LIBPATHS_36) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
LIBS_36 = $(LIBS_36) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_36 = $(LIBS_36) libmpr-openssl.lib
LIBPATHS_36 = $(LIBPATHS_36) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_36 = $(LIBS_36) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_36 = $(LIBS_36) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_36 = $(LIBS_36) libpcre.lib
!ENDIF
LIBS_36 = $(LIBS_36) libmpr.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_36 = $(LIBS_36) libesp.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_36 = $(LIBS_36) libhttp.lib
!ENDIF
LIBS_36 = $(LIBS_36) libappweb.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_36 = $(LIBS_36) libesp.lib
!ENDIF

build\$(CONFIG)\bin\appwebMonitor.exe: $(DEPS_36)
	@echo ..... [Link] build\$(CONFIG)\bin\appwebMonitor.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appwebMonitor.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\appwebMonitor.res" "$(BUILD)\obj\appwebMonitor.obj" shell32.lib ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib  $(LIBPATHS_36) $(LIBS_36) $(LIBS_36) $(LOG)

#
#   appwebMonitor.ico
#
DEPS_37 = $(DEPS_37) src\server\windows\appwebMonitor.ico

build\$(CONFIG)\bin\appwebMonitor.ico: $(DEPS_37)
	@echo ..... [Copy] build\$(CONFIG)\bin\appwebMonitor.ico
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\server\windows\appwebMonitor.ico+modified build\$(CONFIG)\bin\appwebMonitor.ico $(LOG)

#
#   authpass.obj
#
DEPS_38 = $(DEPS_38) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\authpass.obj: \
    src\utils\authpass.c $(DEPS_38)
	@echo .. [Compile] build\$(CONFIG)\obj\authpass.obj
	"$(CC)" -c -Fo$(BUILD)\obj\authpass.obj -Fd$(BUILD)\obj\authpass.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\utils\authpass.c $(LOG)

#
#   authpass
#
DEPS_39 = $(DEPS_39) build\$(CONFIG)\bin\libappweb.lib
DEPS_39 = $(DEPS_39) build\$(CONFIG)\obj\authpass.obj

!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_39 = $(LIBS_39) libmpr-openssl.lib
LIBPATHS_39 = $(LIBPATHS_39) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_39 = $(LIBS_39) libgdi32.lib
LIBPATHS_39 = $(LIBPATHS_39) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_39 = $(LIBS_39) libeay32.lib
LIBPATHS_39 = $(LIBPATHS_39) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_39 = $(LIBS_39) libssleay32.lib
LIBPATHS_39 = $(LIBPATHS_39) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
LIBS_39 = $(LIBS_39) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_39 = $(LIBS_39) libmpr-openssl.lib
LIBPATHS_39 = $(LIBPATHS_39) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_39 = $(LIBS_39) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_39 = $(LIBS_39) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_39 = $(LIBS_39) libpcre.lib
!ENDIF
LIBS_39 = $(LIBS_39) libmpr.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_39 = $(LIBS_39) libesp.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_39 = $(LIBS_39) libhttp.lib
!ENDIF
LIBS_39 = $(LIBS_39) libappweb.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_39 = $(LIBS_39) libesp.lib
!ENDIF

build\$(CONFIG)\bin\authpass.exe: $(DEPS_39)
	@echo ..... [Link] build\$(CONFIG)\bin\authpass.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\authpass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\authpass.obj" $(LIBPATHS_39) $(LIBS_39) $(LIBS_39) $(LIBS)  $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   esp-compile.json
#
DEPS_40 = $(DEPS_40) src\esp\esp-compile.json

build\$(CONFIG)\bin\esp-compile.json: $(DEPS_40)
	@echo ..... [Copy] build\$(CONFIG)\bin\esp-compile.json
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\esp\esp-compile.json+modified build\$(CONFIG)\bin\esp-compile.json $(LOG)
!ENDIF

#
#   esp.obj
#
DEPS_41 = $(DEPS_41) src\esp\esp.h

build\$(CONFIG)\obj\esp.obj: \
    src\esp\esp.c $(DEPS_41)
	@echo .. [Compile] build\$(CONFIG)\obj\esp.obj
	"$(CC)" -c -Fo$(BUILD)\obj\esp.obj -Fd$(BUILD)\obj\esp.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\esp\esp.c $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   espcmd
#
DEPS_42 = $(DEPS_42) build\$(CONFIG)\bin\libesp.lib
DEPS_42 = $(DEPS_42) build\$(CONFIG)\obj\esp.obj

!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_42 = $(LIBS_42) libmpr-openssl.lib
LIBPATHS_42 = $(LIBPATHS_42) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_42 = $(LIBS_42) libgdi32.lib
LIBPATHS_42 = $(LIBPATHS_42) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_42 = $(LIBS_42) libeay32.lib
LIBPATHS_42 = $(LIBPATHS_42) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_42 = $(LIBS_42) libssleay32.lib
LIBPATHS_42 = $(LIBPATHS_42) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
LIBS_42 = $(LIBS_42) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_42 = $(LIBS_42) libmpr-openssl.lib
LIBPATHS_42 = $(LIBPATHS_42) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_42 = $(LIBS_42) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_42 = $(LIBS_42) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_42 = $(LIBS_42) libpcre.lib
!ENDIF
LIBS_42 = $(LIBS_42) libmpr.lib
LIBS_42 = $(LIBS_42) libesp.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_42 = $(LIBS_42) libhttp.lib
!ENDIF

build\$(CONFIG)\bin\esp.exe: $(DEPS_42)
	@echo ..... [Link] build\$(CONFIG)\bin\esp.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\esp.obj" $(LIBPATHS_42) $(LIBS_42) $(LIBS_42) $(LIBS)  $(LOG)
!ENDIF

#
#   http.obj
#
DEPS_43 = $(DEPS_43) src\http\http.h

build\$(CONFIG)\obj\http.obj: \
    src\http\http.c $(DEPS_43)
	@echo .. [Compile] build\$(CONFIG)\obj\http.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\http\http.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   httpcmd
#
DEPS_44 = $(DEPS_44) build\$(CONFIG)\bin\libhttp.lib
DEPS_44 = $(DEPS_44) build\$(CONFIG)\obj\http.obj

!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_44 = $(LIBS_44) libmpr-openssl.lib
LIBPATHS_44 = $(LIBPATHS_44) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_44 = $(LIBS_44) libgdi32.lib
LIBPATHS_44 = $(LIBPATHS_44) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_44 = $(LIBS_44) libeay32.lib
LIBPATHS_44 = $(LIBPATHS_44) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_44 = $(LIBS_44) libssleay32.lib
LIBPATHS_44 = $(LIBPATHS_44) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
LIBS_44 = $(LIBS_44) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_44 = $(LIBS_44) libmpr-openssl.lib
LIBPATHS_44 = $(LIBPATHS_44) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_44 = $(LIBS_44) libpcre.lib
!ENDIF
LIBS_44 = $(LIBS_44) libhttp.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_44 = $(LIBS_44) libpcre.lib
!ENDIF
LIBS_44 = $(LIBS_44) libmpr.lib

build\$(CONFIG)\bin\http.exe: $(DEPS_44)
	@echo ..... [Link] build\$(CONFIG)\bin\http.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\http.obj" $(LIBPATHS_44) $(LIBS_44) $(LIBS_44) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_SSL)" == "1"
#
#   install-certs
#
DEPS_45 = $(DEPS_45) src\certs\samples\ca.crt
DEPS_45 = $(DEPS_45) src\certs\samples\ca.key
DEPS_45 = $(DEPS_45) src\certs\samples\ec.crt
DEPS_45 = $(DEPS_45) src\certs\samples\ec.key
DEPS_45 = $(DEPS_45) src\certs\samples\roots.crt
DEPS_45 = $(DEPS_45) src\certs\samples\self.crt
DEPS_45 = $(DEPS_45) src\certs\samples\self.key
DEPS_45 = $(DEPS_45) src\certs\samples\test.crt
DEPS_45 = $(DEPS_45) src\certs\samples\test.key

build\$(CONFIG)\.install-certs-modified: $(DEPS_45)
	@echo ..... [Copy] build\$(CONFIG)\bin
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\certs\samples\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)
	copy /Y /B src\certs\samples\ca.key+modified build\$(CONFIG)\bin\ca.key $(LOG)
	copy /Y /B src\certs\samples\ec.crt+modified build\$(CONFIG)\bin\ec.crt $(LOG)
	copy /Y /B src\certs\samples\ec.key+modified build\$(CONFIG)\bin\ec.key $(LOG)
	copy /Y /B src\certs\samples\roots.crt+modified build\$(CONFIG)\bin\roots.crt $(LOG)
	copy /Y /B src\certs\samples\self.crt+modified build\$(CONFIG)\bin\self.crt $(LOG)
	copy /Y /B src\certs\samples\self.key+modified build\$(CONFIG)\bin\self.key $(LOG)
	copy /Y /B src\certs\samples\test.crt+modified build\$(CONFIG)\bin\test.crt $(LOG)
	copy /Y /B src\certs\samples\test.key+modified build\$(CONFIG)\bin\test.key $(LOG)
	copy /Y /B nul+modified build\$(CONFIG)\.install-certs-modified $(LOG)
!ENDIF

#
#   server-cache
#

src\server\cache: $(DEPS_46)
	cd src\server
	if not exist "cache" md "cache"
	cd ..\..

#
#   watchdog.obj
#
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\watchdog.obj: \
    src\watchdog\watchdog.c $(DEPS_47)
	@echo .. [Compile] build\$(CONFIG)\obj\watchdog.obj
	"$(CC)" -c -Fo$(BUILD)\obj\watchdog.obj -Fd$(BUILD)\obj\watchdog.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\watchdog\watchdog.c $(LOG)

#
#   watchdog
#
DEPS_48 = $(DEPS_48) build\$(CONFIG)\bin\libmpr.lib
DEPS_48 = $(DEPS_48) build\$(CONFIG)\obj\watchdog.obj

!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_48 = $(LIBS_48) libmpr-openssl.lib
LIBPATHS_48 = $(LIBPATHS_48) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_48 = $(LIBS_48) libgdi32.lib
LIBPATHS_48 = $(LIBPATHS_48) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_48 = $(LIBS_48) libeay32.lib
LIBPATHS_48 = $(LIBPATHS_48) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_48 = $(LIBS_48) libssleay32.lib
LIBPATHS_48 = $(LIBPATHS_48) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
LIBS_48 = $(LIBS_48) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_48 = $(LIBS_48) libmpr-openssl.lib
LIBPATHS_48 = $(LIBPATHS_48) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF

build\$(CONFIG)\bin\appman.exe: $(DEPS_48)
	@echo ..... [Link] build\$(CONFIG)\bin\appman.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\watchdog.obj" $(LIBPATHS_48) $(LIBS_48) $(LIBS_48) $(LIBS)  $(LOG)

