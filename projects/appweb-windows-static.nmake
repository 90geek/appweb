#
#   appweb-windows-static.nmake -- Makefile to build Embedthis Appweb for windows
#

NAME                  = appweb
VERSION               = 5.4.0

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = static
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_CGI)" == ""
ME_COM_CGI            = 1
!ENDIF
!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF
!IF "$(ME_COM_DIR)" == ""
ME_COM_DIR            = 1
!ENDIF
!IF "$(ME_COM_EJS)" == ""
ME_COM_EJS            = 0
!ENDIF
!IF "$(ME_COM_ESP)" == ""
ME_COM_ESP            = 1
!ENDIF
!IF "$(ME_COM_EST)" == ""
ME_COM_EST            = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_LIB)" == ""
ME_COM_LIB            = 1
!ENDIF
!IF "$(ME_COM_LINK)" == ""
ME_COM_LINK           = 1
!ENDIF
!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF
!IF "$(ME_COM_MPR)" == ""
ME_COM_MPR            = 1
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_PHP)" == ""
ME_COM_PHP            = 0
!ENDIF
!IF "$(ME_COM_RC)" == ""
ME_COM_RC             = 1
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 0
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF
!IF "$(ME_COM_WINSDK)" == ""
ME_COM_WINSDK         = 1
!ENDIF
!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 0
!ENDIF

!IF "$(ME_COM_HTTP)" == ""
ME_COM_OPENSSL_PATH   = "/usr"
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_WINSDK)" == ""
ME_COM_WINSDK         = 1
!ENDIF

!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 1
!ENDIF

!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF


CC                    = cl
LD                    = link
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -D_REENTRANT -D_MT -DME_COM_CGI=$(ME_COM_CGI) -DME_COM_COMPILER=$(ME_COM_COMPILER) -DME_COM_DIR=$(ME_COM_DIR) -DME_COM_EJS=$(ME_COM_EJS) -DME_COM_ESP=$(ME_COM_ESP) -DME_COM_EST=$(ME_COM_EST) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_LIB=$(ME_COM_LIB) -DME_COM_LINK=$(ME_COM_LINK) -DME_COM_MDB=$(ME_COM_MDB) -DME_COM_MPR=$(ME_COM_MPR) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_PHP=$(ME_COM_PHP) -DME_COM_RC=$(ME_COM_RC) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) -DME_COM_WINSDK=$(ME_COM_WINSDK) -DME_COM_ZLIB=$(ME_COM_ZLIB) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis Appweb
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appweb.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appwebMonitor.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appwebMonitor.ico
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\authpass.exe
!IF "$(ME_COM_EJS)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ejs.mod
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ejs.exe
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp-compile.json
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp.exe
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ca.crt
!IF "$(ME_COM_HTTP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\http.exe
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libsql.dll
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appman.exe
TARGETS               = $(TARGETS) src\server\cache

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\appweb-windows-static-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\appweb.obj" del /Q "build\$(CONFIG)\obj\appweb.obj"
	if exist "build\$(CONFIG)\obj\appwebMonitor.obj" del /Q "build\$(CONFIG)\obj\appwebMonitor.obj"
	if exist "build\$(CONFIG)\obj\authpass.obj" del /Q "build\$(CONFIG)\obj\authpass.obj"
	if exist "build\$(CONFIG)\obj\cgiHandler.obj" del /Q "build\$(CONFIG)\obj\cgiHandler.obj"
	if exist "build\$(CONFIG)\obj\cgiProgram.obj" del /Q "build\$(CONFIG)\obj\cgiProgram.obj"
	if exist "build\$(CONFIG)\obj\config.obj" del /Q "build\$(CONFIG)\obj\config.obj"
	if exist "build\$(CONFIG)\obj\convenience.obj" del /Q "build\$(CONFIG)\obj\convenience.obj"
	if exist "build\$(CONFIG)\obj\ejs.obj" del /Q "build\$(CONFIG)\obj\ejs.obj"
	if exist "build\$(CONFIG)\obj\ejsHandler.obj" del /Q "build\$(CONFIG)\obj\ejsHandler.obj"
	if exist "build\$(CONFIG)\obj\ejsLib.obj" del /Q "build\$(CONFIG)\obj\ejsLib.obj"
	if exist "build\$(CONFIG)\obj\ejsc.obj" del /Q "build\$(CONFIG)\obj\ejsc.obj"
	if exist "build\$(CONFIG)\obj\esp.obj" del /Q "build\$(CONFIG)\obj\esp.obj"
	if exist "build\$(CONFIG)\obj\espHandler.obj" del /Q "build\$(CONFIG)\obj\espHandler.obj"
	if exist "build\$(CONFIG)\obj\espLib.obj" del /Q "build\$(CONFIG)\obj\espLib.obj"
	if exist "build\$(CONFIG)\obj\estLib.obj" del /Q "build\$(CONFIG)\obj\estLib.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\makerom.obj" del /Q "build\$(CONFIG)\obj\makerom.obj"
	if exist "build\$(CONFIG)\obj\manager.obj" del /Q "build\$(CONFIG)\obj\manager.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\mprSsl.obj" del /Q "build\$(CONFIG)\obj\mprSsl.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\phpHandler.obj" del /Q "build\$(CONFIG)\obj\phpHandler.obj"
	if exist "build\$(CONFIG)\obj\slink.obj" del /Q "build\$(CONFIG)\obj\slink.obj"
	if exist "build\$(CONFIG)\obj\sqlite.obj" del /Q "build\$(CONFIG)\obj\sqlite.obj"
	if exist "build\$(CONFIG)\obj\sqlite3.obj" del /Q "build\$(CONFIG)\obj\sqlite3.obj"
	if exist "build\$(CONFIG)\obj\sslModule.obj" del /Q "build\$(CONFIG)\obj\sslModule.obj"
	if exist "build\$(CONFIG)\obj\zlib.obj" del /Q "build\$(CONFIG)\obj\zlib.obj"
	if exist "build\$(CONFIG)\bin\appweb.exe" del /Q "build\$(CONFIG)\bin\appweb.exe"
	if exist "build\$(CONFIG)\bin\appweb.lib" del /Q "build\$(CONFIG)\bin\appweb.lib"
	if exist "build\$(CONFIG)\bin\appweb.pdb" del /Q "build\$(CONFIG)\bin\appweb.pdb"
	if exist "build\$(CONFIG)\bin\appweb.exp" del /Q "build\$(CONFIG)\bin\appweb.exp"
	if exist "build\$(CONFIG)\bin\appwebMonitor.exe" del /Q "build\$(CONFIG)\bin\appwebMonitor.exe"
	if exist "build\$(CONFIG)\bin\appwebMonitor.lib" del /Q "build\$(CONFIG)\bin\appwebMonitor.lib"
	if exist "build\$(CONFIG)\bin\appwebMonitor.pdb" del /Q "build\$(CONFIG)\bin\appwebMonitor.pdb"
	if exist "build\$(CONFIG)\bin\appwebMonitor.exp" del /Q "build\$(CONFIG)\bin\appwebMonitor.exp"
	if exist "build\$(CONFIG)\bin\appwebMonitor.ico" del /Q "build\$(CONFIG)\bin\appwebMonitor.ico"
	if exist "build\$(CONFIG)\bin\authpass.exe" del /Q "build\$(CONFIG)\bin\authpass.exe"
	if exist "build\$(CONFIG)\bin\authpass.lib" del /Q "build\$(CONFIG)\bin\authpass.lib"
	if exist "build\$(CONFIG)\bin\authpass.pdb" del /Q "build\$(CONFIG)\bin\authpass.pdb"
	if exist "build\$(CONFIG)\bin\authpass.exp" del /Q "build\$(CONFIG)\bin\authpass.exp"
	if exist "build\$(CONFIG)\bin\ejsc.exe" del /Q "build\$(CONFIG)\bin\ejsc.exe"
	if exist "build\$(CONFIG)\bin\ejsc.lib" del /Q "build\$(CONFIG)\bin\ejsc.lib"
	if exist "build\$(CONFIG)\bin\ejsc.pdb" del /Q "build\$(CONFIG)\bin\ejsc.pdb"
	if exist "build\$(CONFIG)\bin\ejsc.exp" del /Q "build\$(CONFIG)\bin\ejsc.exp"
	if exist "build\$(CONFIG)\bin\ejs.exe" del /Q "build\$(CONFIG)\bin\ejs.exe"
	if exist "build\$(CONFIG)\bin\ejs.lib" del /Q "build\$(CONFIG)\bin\ejs.lib"
	if exist "build\$(CONFIG)\bin\ejs.pdb" del /Q "build\$(CONFIG)\bin\ejs.pdb"
	if exist "build\$(CONFIG)\bin\ejs.exp" del /Q "build\$(CONFIG)\bin\ejs.exp"
	if exist "build\$(CONFIG)\bin\esp-compile.json" del /Q "build\$(CONFIG)\bin\esp-compile.json"
	if exist "build\$(CONFIG)\bin\esp.exe" del /Q "build\$(CONFIG)\bin\esp.exe"
	if exist "build\$(CONFIG)\bin\esp.lib" del /Q "build\$(CONFIG)\bin\esp.lib"
	if exist "build\$(CONFIG)\bin\esp.pdb" del /Q "build\$(CONFIG)\bin\esp.pdb"
	if exist "build\$(CONFIG)\bin\esp.exp" del /Q "build\$(CONFIG)\bin\esp.exp"
	if exist "build\$(CONFIG)\bin\ca.crt" del /Q "build\$(CONFIG)\bin\ca.crt"
	if exist "build\$(CONFIG)\bin\http.exe" del /Q "build\$(CONFIG)\bin\http.exe"
	if exist "build\$(CONFIG)\bin\http.lib" del /Q "build\$(CONFIG)\bin\http.lib"
	if exist "build\$(CONFIG)\bin\http.pdb" del /Q "build\$(CONFIG)\bin\http.pdb"
	if exist "build\$(CONFIG)\bin\http.exp" del /Q "build\$(CONFIG)\bin\http.exp"
	if exist "build\$(CONFIG)\bin\libappweb.dll" del /Q "build\$(CONFIG)\bin\libappweb.dll"
	if exist "build\$(CONFIG)\bin\libappweb.lib" del /Q "build\$(CONFIG)\bin\libappweb.lib"
	if exist "build\$(CONFIG)\bin\libappweb.pdb" del /Q "build\$(CONFIG)\bin\libappweb.pdb"
	if exist "build\$(CONFIG)\bin\libappweb.exp" del /Q "build\$(CONFIG)\bin\libappweb.exp"
	if exist "build\$(CONFIG)\bin\libejs.dll" del /Q "build\$(CONFIG)\bin\libejs.dll"
	if exist "build\$(CONFIG)\bin\libejs.lib" del /Q "build\$(CONFIG)\bin\libejs.lib"
	if exist "build\$(CONFIG)\bin\libejs.pdb" del /Q "build\$(CONFIG)\bin\libejs.pdb"
	if exist "build\$(CONFIG)\bin\libejs.exp" del /Q "build\$(CONFIG)\bin\libejs.exp"
	if exist "build\$(CONFIG)\bin\libesp.dll" del /Q "build\$(CONFIG)\bin\libesp.dll"
	if exist "build\$(CONFIG)\bin\libesp.lib" del /Q "build\$(CONFIG)\bin\libesp.lib"
	if exist "build\$(CONFIG)\bin\libesp.pdb" del /Q "build\$(CONFIG)\bin\libesp.pdb"
	if exist "build\$(CONFIG)\bin\libesp.exp" del /Q "build\$(CONFIG)\bin\libesp.exp"
	if exist "build\$(CONFIG)\bin\libest.dll" del /Q "build\$(CONFIG)\bin\libest.dll"
	if exist "build\$(CONFIG)\bin\libest.lib" del /Q "build\$(CONFIG)\bin\libest.lib"
	if exist "build\$(CONFIG)\bin\libest.pdb" del /Q "build\$(CONFIG)\bin\libest.pdb"
	if exist "build\$(CONFIG)\bin\libest.exp" del /Q "build\$(CONFIG)\bin\libest.exp"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmod_cgi.dll" del /Q "build\$(CONFIG)\bin\libmod_cgi.dll"
	if exist "build\$(CONFIG)\bin\libmod_cgi.lib" del /Q "build\$(CONFIG)\bin\libmod_cgi.lib"
	if exist "build\$(CONFIG)\bin\libmod_cgi.pdb" del /Q "build\$(CONFIG)\bin\libmod_cgi.pdb"
	if exist "build\$(CONFIG)\bin\libmod_cgi.exp" del /Q "build\$(CONFIG)\bin\libmod_cgi.exp"
	if exist "build\$(CONFIG)\bin\libmod_ejs.dll" del /Q "build\$(CONFIG)\bin\libmod_ejs.dll"
	if exist "build\$(CONFIG)\bin\libmod_ejs.lib" del /Q "build\$(CONFIG)\bin\libmod_ejs.lib"
	if exist "build\$(CONFIG)\bin\libmod_ejs.pdb" del /Q "build\$(CONFIG)\bin\libmod_ejs.pdb"
	if exist "build\$(CONFIG)\bin\libmod_ejs.exp" del /Q "build\$(CONFIG)\bin\libmod_ejs.exp"
	if exist "build\$(CONFIG)\bin\libmod_esp.dll" del /Q "build\$(CONFIG)\bin\libmod_esp.dll"
	if exist "build\$(CONFIG)\bin\libmod_esp.lib" del /Q "build\$(CONFIG)\bin\libmod_esp.lib"
	if exist "build\$(CONFIG)\bin\libmod_esp.pdb" del /Q "build\$(CONFIG)\bin\libmod_esp.pdb"
	if exist "build\$(CONFIG)\bin\libmod_esp.exp" del /Q "build\$(CONFIG)\bin\libmod_esp.exp"
	if exist "build\$(CONFIG)\bin\libmod_php.dll" del /Q "build\$(CONFIG)\bin\libmod_php.dll"
	if exist "build\$(CONFIG)\bin\libmod_php.lib" del /Q "build\$(CONFIG)\bin\libmod_php.lib"
	if exist "build\$(CONFIG)\bin\libmod_php.pdb" del /Q "build\$(CONFIG)\bin\libmod_php.pdb"
	if exist "build\$(CONFIG)\bin\libmod_php.exp" del /Q "build\$(CONFIG)\bin\libmod_php.exp"
	if exist "build\$(CONFIG)\bin\libmod_ssl.dll" del /Q "build\$(CONFIG)\bin\libmod_ssl.dll"
	if exist "build\$(CONFIG)\bin\libmod_ssl.lib" del /Q "build\$(CONFIG)\bin\libmod_ssl.lib"
	if exist "build\$(CONFIG)\bin\libmod_ssl.pdb" del /Q "build\$(CONFIG)\bin\libmod_ssl.pdb"
	if exist "build\$(CONFIG)\bin\libmod_ssl.exp" del /Q "build\$(CONFIG)\bin\libmod_ssl.exp"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmprssl.dll" del /Q "build\$(CONFIG)\bin\libmprssl.dll"
	if exist "build\$(CONFIG)\bin\libmprssl.lib" del /Q "build\$(CONFIG)\bin\libmprssl.lib"
	if exist "build\$(CONFIG)\bin\libmprssl.pdb" del /Q "build\$(CONFIG)\bin\libmprssl.pdb"
	if exist "build\$(CONFIG)\bin\libmprssl.exp" del /Q "build\$(CONFIG)\bin\libmprssl.exp"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\libslink.dll" del /Q "build\$(CONFIG)\bin\libslink.dll"
	if exist "build\$(CONFIG)\bin\libslink.lib" del /Q "build\$(CONFIG)\bin\libslink.lib"
	if exist "build\$(CONFIG)\bin\libslink.pdb" del /Q "build\$(CONFIG)\bin\libslink.pdb"
	if exist "build\$(CONFIG)\bin\libslink.exp" del /Q "build\$(CONFIG)\bin\libslink.exp"
	if exist "build\$(CONFIG)\bin\libsql.dll" del /Q "build\$(CONFIG)\bin\libsql.dll"
	if exist "build\$(CONFIG)\bin\libsql.lib" del /Q "build\$(CONFIG)\bin\libsql.lib"
	if exist "build\$(CONFIG)\bin\libsql.pdb" del /Q "build\$(CONFIG)\bin\libsql.pdb"
	if exist "build\$(CONFIG)\bin\libsql.exp" del /Q "build\$(CONFIG)\bin\libsql.exp"
	if exist "build\$(CONFIG)\bin\libzlib.dll" del /Q "build\$(CONFIG)\bin\libzlib.dll"
	if exist "build\$(CONFIG)\bin\libzlib.lib" del /Q "build\$(CONFIG)\bin\libzlib.lib"
	if exist "build\$(CONFIG)\bin\libzlib.pdb" del /Q "build\$(CONFIG)\bin\libzlib.pdb"
	if exist "build\$(CONFIG)\bin\libzlib.exp" del /Q "build\$(CONFIG)\bin\libzlib.exp"
	if exist "build\$(CONFIG)\bin\appman.exe" del /Q "build\$(CONFIG)\bin\appman.exe"
	if exist "build\$(CONFIG)\bin\appman.lib" del /Q "build\$(CONFIG)\bin\appman.lib"
	if exist "build\$(CONFIG)\bin\appman.pdb" del /Q "build\$(CONFIG)\bin\appman.pdb"
	if exist "build\$(CONFIG)\bin\appman.exp" del /Q "build\$(CONFIG)\bin\appman.exp"

#
#   me.h
#

build\$(CONFIG)\inc\me.h: $(DEPS_1)

#
#   osdep.h
#
DEPS_2 = $(DEPS_2) paks\osdep\dist\osdep.h
DEPS_2 = $(DEPS_2) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_2)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\osdep\dist\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_3 = $(DEPS_3) paks\mpr\dist\mpr.h
DEPS_3 = $(DEPS_3) build\$(CONFIG)\inc\me.h
DEPS_3 = $(DEPS_3) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_3)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\mpr\dist\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   mpr.h
#

paks\mpr\dist\mpr.h: $(DEPS_4)

#
#   mprLib.obj
#
DEPS_5 = $(DEPS_5) paks\mpr\dist\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    paks\mpr\dist\mprLib.c $(DEPS_5)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\mpr\dist\mprLib.c $(LOG)

#
#   libmpr
#
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\osdep.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\mpr.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\obj\mprLib.obj

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_6)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libmpr.dll "$(BUILD)\obj\mprLib.obj" $(LOG)

#
#   pcre.h
#
DEPS_7 = $(DEPS_7) paks\pcre\dist\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_7)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\pcre\dist\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   pcre.h
#

paks\pcre\dist\pcre.h: $(DEPS_8)

#
#   pcre.obj
#
DEPS_9 = $(DEPS_9) build\$(CONFIG)\inc\me.h
DEPS_9 = $(DEPS_9) paks\pcre\dist\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    paks\pcre\dist\pcre.c $(DEPS_9)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\pcre\dist\pcre.c $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_10 = $(DEPS_10) build\$(CONFIG)\inc\pcre.h
DEPS_10 = $(DEPS_10) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_10)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libpcre.dll "$(BUILD)\obj\pcre.obj" $(LOG)
!ENDIF

#
#   http.h
#
DEPS_11 = $(DEPS_11) paks\http\dist\http.h
DEPS_11 = $(DEPS_11) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_11)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\http\dist\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   http.h
#

paks\http\dist\http.h: $(DEPS_12)

#
#   httpLib.obj
#
DEPS_13 = $(DEPS_13) paks\http\dist\http.h

build\$(CONFIG)\obj\httpLib.obj: \
    paks\http\dist\httpLib.c $(DEPS_13)
	@echo .. [Compile] build\$(CONFIG)\obj\httpLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\http\dist\httpLib.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_14 = $(DEPS_14) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_14 = $(DEPS_14) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_14 = $(DEPS_14) build\$(CONFIG)\inc\http.h
DEPS_14 = $(DEPS_14) build\$(CONFIG)\obj\httpLib.obj

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_14)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libhttp.dll "$(BUILD)\obj\httpLib.obj" $(LOG)
!ENDIF

#
#   customize.h
#

src\customize.h: $(DEPS_15)

#
#   appweb.h
#
DEPS_16 = $(DEPS_16) src\appweb.h
DEPS_16 = $(DEPS_16) build\$(CONFIG)\inc\osdep.h
DEPS_16 = $(DEPS_16) build\$(CONFIG)\inc\mpr.h
DEPS_16 = $(DEPS_16) build\$(CONFIG)\inc\http.h
DEPS_16 = $(DEPS_16) src\customize.h

build\$(CONFIG)\inc\appweb.h: $(DEPS_16)
	@echo ..... [Copy] build\$(CONFIG)\inc\appweb.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\appweb.h+modified build\$(CONFIG)\inc\appweb.h $(LOG)

#
#   customize.h
#
DEPS_17 = $(DEPS_17) src\customize.h

build\$(CONFIG)\inc\customize.h: $(DEPS_17)
	@echo ..... [Copy] build\$(CONFIG)\inc\customize.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\customize.h+modified build\$(CONFIG)\inc\customize.h $(LOG)

#
#   appweb.h
#

src\appweb.h: $(DEPS_18)

#
#   config.obj
#
DEPS_19 = $(DEPS_19) src\appweb.h
DEPS_19 = $(DEPS_19) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\config.obj: \
    src\config.c $(DEPS_19)
	@echo .. [Compile] build\$(CONFIG)\obj\config.obj
	"$(CC)" -c -Fo$(BUILD)\obj\config.obj -Fd$(BUILD)\obj\config.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\config.c $(LOG)

#
#   convenience.obj
#
DEPS_20 = $(DEPS_20) src\appweb.h

build\$(CONFIG)\obj\convenience.obj: \
    src\convenience.c $(DEPS_20)
	@echo .. [Compile] build\$(CONFIG)\obj\convenience.obj
	"$(CC)" -c -Fo$(BUILD)\obj\convenience.obj -Fd$(BUILD)\obj\convenience.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\convenience.c $(LOG)

#
#   libappweb
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_21 = $(DEPS_21) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
DEPS_21 = $(DEPS_21) build\$(CONFIG)\bin\libmpr.dll
DEPS_21 = $(DEPS_21) build\$(CONFIG)\inc\appweb.h
DEPS_21 = $(DEPS_21) build\$(CONFIG)\inc\customize.h
DEPS_21 = $(DEPS_21) build\$(CONFIG)\obj\config.obj
DEPS_21 = $(DEPS_21) build\$(CONFIG)\obj\convenience.obj

build\$(CONFIG)\bin\libappweb.dll: $(DEPS_21)
	@echo ..... [Link] build\$(CONFIG)\bin\libappweb.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libappweb.dll "$(BUILD)\obj\config.obj" "$(BUILD)\obj\convenience.obj" $(LOG)

#
#   esp.h
#
DEPS_22 = $(DEPS_22) paks\esp\dist\esp.h
DEPS_22 = $(DEPS_22) build\$(CONFIG)\inc\me.h
DEPS_22 = $(DEPS_22) build\$(CONFIG)\inc\osdep.h
DEPS_22 = $(DEPS_22) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\inc\esp.h: $(DEPS_22)
	@echo ..... [Copy] build\$(CONFIG)\inc\esp.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\esp\dist\esp.h+modified build\$(CONFIG)\inc\esp.h $(LOG)

#
#   esp.h
#

paks\esp\dist\esp.h: $(DEPS_23)

#
#   espLib.obj
#
DEPS_24 = $(DEPS_24) paks\esp\dist\esp.h
DEPS_24 = $(DEPS_24) build\$(CONFIG)\inc\pcre.h
DEPS_24 = $(DEPS_24) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\obj\espLib.obj: \
    paks\esp\dist\espLib.c $(DEPS_24)
	@echo .. [Compile] build\$(CONFIG)\obj\espLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espLib.obj -Fd$(BUILD)\obj\espLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\esp\dist\espLib.c $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   libesp
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_25 = $(DEPS_25) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
DEPS_25 = $(DEPS_25) build\$(CONFIG)\inc\esp.h
DEPS_25 = $(DEPS_25) build\$(CONFIG)\obj\espLib.obj

build\$(CONFIG)\bin\libesp.dll: $(DEPS_25)
	@echo ..... [Link] build\$(CONFIG)\bin\libesp.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libesp.dll "$(BUILD)\obj\espLib.obj" $(LOG)
!ENDIF

#
#   espHandler.obj
#
DEPS_26 = $(DEPS_26) build\$(CONFIG)\inc\appweb.h
DEPS_26 = $(DEPS_26) build\$(CONFIG)\inc\esp.h

build\$(CONFIG)\obj\espHandler.obj: \
    src\modules\espHandler.c $(DEPS_26)
	@echo .. [Compile] build\$(CONFIG)\obj\espHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espHandler.obj -Fd$(BUILD)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\espHandler.c $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   libmod_esp
#
DEPS_27 = $(DEPS_27) build\$(CONFIG)\bin\libappweb.dll
DEPS_27 = $(DEPS_27) build\$(CONFIG)\bin\libesp.dll
DEPS_27 = $(DEPS_27) build\$(CONFIG)\obj\espHandler.obj

build\$(CONFIG)\bin\libmod_esp.dll: $(DEPS_27)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_esp.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libmod_esp.dll "$(BUILD)\obj\espHandler.obj" $(LOG)
!ENDIF

#
#   slink.obj
#
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\mpr.h
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\esp.h

build\$(CONFIG)\obj\slink.obj: \
    src\server\slink.c $(DEPS_28)
	@echo .. [Compile] build\$(CONFIG)\obj\slink.obj
	"$(CC)" -c -Fo$(BUILD)\obj\slink.obj -Fd$(BUILD)\obj\slink.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\slink.c $(LOG)

#
#   libslink
#
!IF "$(ME_COM_ESP)" == "1"
DEPS_29 = $(DEPS_29) build\$(CONFIG)\bin\libesp.dll
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
DEPS_29 = $(DEPS_29) build\$(CONFIG)\bin\libmod_esp.dll
!ENDIF
DEPS_29 = $(DEPS_29) build\$(CONFIG)\obj\slink.obj

build\$(CONFIG)\bin\libslink.dll: $(DEPS_29)
	@echo ..... [Link] build\$(CONFIG)\bin\libslink.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libslink.dll "$(BUILD)\obj\slink.obj" $(LOG)

#
#   est.h
#
DEPS_30 = $(DEPS_30) paks\est\dist\est.h

build\$(CONFIG)\inc\est.h: $(DEPS_30)
	@echo ..... [Copy] build\$(CONFIG)\inc\est.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\est\dist\est.h+modified build\$(CONFIG)\inc\est.h $(LOG)

#
#   est.h
#

paks\est\dist\est.h: $(DEPS_31)

#
#   estLib.obj
#
DEPS_32 = $(DEPS_32) paks\est\dist\est.h

build\$(CONFIG)\obj\estLib.obj: \
    paks\est\dist\estLib.c $(DEPS_32)
	@echo .. [Compile] build\$(CONFIG)\obj\estLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\estLib.obj -Fd$(BUILD)\obj\estLib.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) $(IFLAGS) paks\est\dist\estLib.c $(LOG)

!IF "$(ME_COM_EST)" == "1"
#
#   libest
#
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\osdep.h
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\est.h
DEPS_33 = $(DEPS_33) build\$(CONFIG)\obj\estLib.obj

build\$(CONFIG)\bin\libest.dll: $(DEPS_33)
	@echo ..... [Link] build\$(CONFIG)\bin\libest.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libest.dll "$(BUILD)\obj\estLib.obj" $(LOG)
!ENDIF

#
#   mprSsl.obj
#
DEPS_34 = $(DEPS_34) paks\mpr\dist\mpr.h

build\$(CONFIG)\obj\mprSsl.obj: \
    paks\mpr\dist\mprSsl.c $(DEPS_34)
	@echo .. [Compile] build\$(CONFIG)\obj\mprSsl.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprSsl.obj -Fd$(BUILD)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" paks\mpr\dist\mprSsl.c $(LOG)

#
#   libmprssl
#
DEPS_35 = $(DEPS_35) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_EST)" == "1"
DEPS_35 = $(DEPS_35) build\$(CONFIG)\bin\libest.dll
!ENDIF
DEPS_35 = $(DEPS_35) build\$(CONFIG)\obj\mprSsl.obj

build\$(CONFIG)\bin\libmprssl.dll: $(DEPS_35)
	@echo ..... [Link] build\$(CONFIG)\bin\libmprssl.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libmprssl.dll "$(BUILD)\obj\mprSsl.obj" $(LOG)

#
#   sslModule.obj
#
DEPS_36 = $(DEPS_36) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\sslModule.obj: \
    src\modules\sslModule.c $(DEPS_36)
	@echo .. [Compile] build\$(CONFIG)\obj\sslModule.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sslModule.obj -Fd$(BUILD)\obj\sslModule.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\modules\sslModule.c $(LOG)

!IF "$(ME_COM_SSL)" == "1"
#
#   libmod_ssl
#
DEPS_37 = $(DEPS_37) build\$(CONFIG)\bin\libappweb.dll
DEPS_37 = $(DEPS_37) build\$(CONFIG)\bin\libmprssl.dll
DEPS_37 = $(DEPS_37) build\$(CONFIG)\obj\sslModule.obj

build\$(CONFIG)\bin\libmod_ssl.dll: $(DEPS_37)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_ssl.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libmod_ssl.dll "$(BUILD)\obj\sslModule.obj" $(LOG)
!ENDIF

#
#   zlib.h
#
DEPS_38 = $(DEPS_38) paks\zlib\dist\zlib.h

build\$(CONFIG)\inc\zlib.h: $(DEPS_38)
	@echo ..... [Copy] build\$(CONFIG)\inc\zlib.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\zlib\dist\zlib.h+modified build\$(CONFIG)\inc\zlib.h $(LOG)

#
#   zlib.h
#

paks\zlib\dist\zlib.h: $(DEPS_39)

#
#   zlib.obj
#
DEPS_40 = $(DEPS_40) build\$(CONFIG)\inc\me.h
DEPS_40 = $(DEPS_40) paks\zlib\dist\zlib.h

build\$(CONFIG)\obj\zlib.obj: \
    paks\zlib\dist\zlib.c $(DEPS_40)
	@echo .. [Compile] build\$(CONFIG)\obj\zlib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\zlib.obj -Fd$(BUILD)\obj\zlib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\zlib\dist\zlib.c $(LOG)

!IF "$(ME_COM_ZLIB)" == "1"
#
#   libzlib
#
DEPS_41 = $(DEPS_41) build\$(CONFIG)\inc\zlib.h
DEPS_41 = $(DEPS_41) build\$(CONFIG)\obj\zlib.obj

build\$(CONFIG)\bin\libzlib.dll: $(DEPS_41)
	@echo ..... [Link] build\$(CONFIG)\bin\libzlib.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libzlib.dll "$(BUILD)\obj\zlib.obj" $(LOG)
!ENDIF

#
#   ejs.h
#
DEPS_42 = $(DEPS_42) paks\ejs\dist\ejs.h

build\$(CONFIG)\inc\ejs.h: $(DEPS_42)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejs.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\ejs\dist\ejs.h+modified build\$(CONFIG)\inc\ejs.h $(LOG)

#
#   ejs.slots.h
#
DEPS_43 = $(DEPS_43) paks\ejs\dist\ejs.slots.h

build\$(CONFIG)\inc\ejs.slots.h: $(DEPS_43)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejs.slots.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\ejs\dist\ejs.slots.h+modified build\$(CONFIG)\inc\ejs.slots.h $(LOG)

#
#   ejsByteGoto.h
#
DEPS_44 = $(DEPS_44) paks\ejs\dist\ejsByteGoto.h

build\$(CONFIG)\inc\ejsByteGoto.h: $(DEPS_44)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejsByteGoto.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\ejs\dist\ejsByteGoto.h+modified build\$(CONFIG)\inc\ejsByteGoto.h $(LOG)

#
#   ejs.h
#

paks\ejs\dist\ejs.h: $(DEPS_45)

#
#   ejsLib.obj
#
DEPS_46 = $(DEPS_46) paks\ejs\dist\ejs.h
DEPS_46 = $(DEPS_46) build\$(CONFIG)\inc\mpr.h
DEPS_46 = $(DEPS_46) build\$(CONFIG)\inc\pcre.h
DEPS_46 = $(DEPS_46) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\obj\ejsLib.obj: \
    paks\ejs\dist\ejsLib.c $(DEPS_46)
	@echo .. [Compile] build\$(CONFIG)\obj\ejsLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\ejsLib.obj -Fd$(BUILD)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\ejs\dist\ejsLib.c $(LOG)

!IF "$(ME_COM_EJS)" == "1"
#
#   libejs
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_47 = $(DEPS_47) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
DEPS_47 = $(DEPS_47) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_47 = $(DEPS_47) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_ZLIB)" == "1"
DEPS_47 = $(DEPS_47) build\$(CONFIG)\bin\libzlib.dll
!ENDIF
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\ejs.h
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\ejs.slots.h
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\ejsByteGoto.h
DEPS_47 = $(DEPS_47) build\$(CONFIG)\obj\ejsLib.obj

build\$(CONFIG)\bin\libejs.dll: $(DEPS_47)
	@echo ..... [Link] build\$(CONFIG)\bin\libejs.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libejs.dll "$(BUILD)\obj\ejsLib.obj" $(LOG)
!ENDIF

#
#   ejsHandler.obj
#
DEPS_48 = $(DEPS_48) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\ejsHandler.obj: \
    src\modules\ejsHandler.c $(DEPS_48)
	@echo .. [Compile] build\$(CONFIG)\obj\ejsHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\ejsHandler.obj -Fd$(BUILD)\obj\ejsHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\ejsHandler.c $(LOG)

!IF "$(ME_COM_EJS)" == "1"
#
#   libmod_ejs
#
DEPS_49 = $(DEPS_49) build\$(CONFIG)\bin\libappweb.dll
DEPS_49 = $(DEPS_49) build\$(CONFIG)\bin\libejs.dll
DEPS_49 = $(DEPS_49) build\$(CONFIG)\obj\ejsHandler.obj

build\$(CONFIG)\bin\libmod_ejs.dll: $(DEPS_49)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_ejs.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libmod_ejs.dll "$(BUILD)\obj\ejsHandler.obj" $(LOG)
!ENDIF

#
#   phpHandler.obj
#
DEPS_50 = $(DEPS_50) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\phpHandler.obj: \
    src\modules\phpHandler.c $(DEPS_50)
	@echo .. [Compile] build\$(CONFIG)\obj\phpHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\phpHandler.obj -Fd$(BUILD)\obj\phpHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) "-I$(ME_COM_PHP_PATH)" "-I$(ME_COM_PHP_PATH)\main" "-I$(ME_COM_PHP_PATH)\Zend" "-I$(ME_COM_PHP_PATH)\TSRM" src\modules\phpHandler.c $(LOG)

!IF "$(ME_COM_PHP)" == "1"
#
#   libmod_php
#
DEPS_51 = $(DEPS_51) build\$(CONFIG)\bin\libappweb.dll
DEPS_51 = $(DEPS_51) build\$(CONFIG)\obj\phpHandler.obj

build\$(CONFIG)\bin\libmod_php.dll: $(DEPS_51)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_php.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libmod_php.dll "$(BUILD)\obj\phpHandler.obj" $(LOG)
!ENDIF

#
#   cgiHandler.obj
#
DEPS_52 = $(DEPS_52) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\cgiHandler.obj: \
    src\modules\cgiHandler.c $(DEPS_52)
	@echo .. [Compile] build\$(CONFIG)\obj\cgiHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\cgiHandler.obj -Fd$(BUILD)\obj\cgiHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\cgiHandler.c $(LOG)

!IF "$(ME_COM_CGI)" == "1"
#
#   libmod_cgi
#
DEPS_53 = $(DEPS_53) build\$(CONFIG)\bin\libappweb.dll
DEPS_53 = $(DEPS_53) build\$(CONFIG)\obj\cgiHandler.obj

build\$(CONFIG)\bin\libmod_cgi.dll: $(DEPS_53)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_cgi.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libmod_cgi.dll "$(BUILD)\obj\cgiHandler.obj" $(LOG)
!ENDIF

#
#   appweb.obj
#
DEPS_54 = $(DEPS_54) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\appweb.obj: \
    src\server\appweb.c $(DEPS_54)
	@echo .. [Compile] build\$(CONFIG)\obj\appweb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appweb.obj -Fd$(BUILD)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" "-I$(ME_COM_PHP_PATH)" "-I$(ME_COM_PHP_PATH)\main" "-I$(ME_COM_PHP_PATH)\Zend" "-I$(ME_COM_PHP_PATH)\TSRM" src\server\appweb.c $(LOG)

#
#   appweb
#
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libappweb.dll
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libslink.dll
!IF "$(ME_COM_ESP)" == "1"
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libmod_esp.dll
!ENDIF
!IF "$(ME_COM_SSL)" == "1"
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libmod_ssl.dll
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libmod_ejs.dll
!ENDIF
!IF "$(ME_COM_PHP)" == "1"
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libmod_php.dll
!ENDIF
!IF "$(ME_COM_CGI)" == "1"
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libmod_cgi.dll
!ENDIF
DEPS_55 = $(DEPS_55) build\$(CONFIG)\obj\appweb.obj

LIBS_55 = $(LIBS_55) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_55 = $(LIBS_55) libhttp.lib
!ENDIF
LIBS_55 = $(LIBS_55) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_55 = $(LIBS_55) libpcre.lib
!ENDIF
LIBS_55 = $(LIBS_55) libslink.lib
!IF "$(ME_COM_ESP)" == "1"
LIBS_55 = $(LIBS_55) libesp.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_55 = $(LIBS_55) libsql.lib
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
LIBS_55 = $(LIBS_55) libmod_esp.lib
!ENDIF
!IF "$(ME_COM_SSL)" == "1"
LIBS_55 = $(LIBS_55) libmod_ssl.lib
!ENDIF
LIBS_55 = $(LIBS_55) libmprssl.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_55 = $(LIBS_55) libeay32.lib
LIBPATHS_55 = $(LIBPATHS_55) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_55 = $(LIBPATHS_55) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_55 = $(LIBS_55) libssleay32.lib
LIBPATHS_55 = $(LIBPATHS_55) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_55 = $(LIBPATHS_55) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_55 = $(LIBS_55) libest.lib
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
LIBS_55 = $(LIBS_55) libmod_ejs.lib
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
LIBS_55 = $(LIBS_55) libejs.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_55 = $(LIBS_55) libzlib.lib
!ENDIF
!IF "$(ME_COM_PHP)" == "1"
LIBS_55 = $(LIBS_55) libmod_php.lib
!ENDIF
!IF "$(ME_COM_PHP)" == "1"
LIBS_55 = $(LIBS_55) libphp5ts.lib
LIBPATHS_55 = $(LIBPATHS_55) -libpath:$(ME_COM_PHP_PATH)/libs
!ENDIF
!IF "$(ME_COM_CGI)" == "1"
LIBS_55 = $(LIBS_55) libmod_cgi.lib
!ENDIF

build\$(CONFIG)\bin\appweb.exe: $(DEPS_55)
	@echo ..... [Link] build\$(CONFIG)\bin\appweb.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)    "$(BUILD)\obj\appweb.obj" $(LIBPATHS_55) $(LIBS_55) $(LIBS_55) $(LIBS)  $(LOG)

#
#   appwebMonitor.h
#
DEPS_56 = $(DEPS_56) src\server\windows\appwebMonitor.h

build\$(CONFIG)\inc\appwebMonitor.h: $(DEPS_56)
	@echo ..... [Copy] build\$(CONFIG)\inc\appwebMonitor.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\server\windows\appwebMonitor.h+modified build\$(CONFIG)\inc\appwebMonitor.h $(LOG)

#
#   monitorResources.h
#
DEPS_57 = $(DEPS_57) src\server\windows\monitorResources.h

build\$(CONFIG)\inc\monitorResources.h: $(DEPS_57)
	@echo ..... [Copy] build\$(CONFIG)\inc\monitorResources.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\server\windows\monitorResources.h+modified build\$(CONFIG)\inc\monitorResources.h $(LOG)

#
#   appwebMonitor.res
#

build\$(CONFIG)\obj\appwebMonitor.res: \
        src\server\windows\appwebMonitor.rc $(DEPS_58)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebMonitor.res
	"$(RC)" -nologo -Fo $(BUILD)\obj\appwebMonitor.res src\server\windows\appwebMonitor.rc

#
#   appwebMonitor.obj
#
DEPS_59 = $(DEPS_59) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\appwebMonitor.obj: \
    src\server\windows\appwebMonitor.c $(DEPS_59)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebMonitor.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appwebMonitor.obj -Fd$(BUILD)\obj\appwebMonitor.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\windows\appwebMonitor.c $(LOG)

#
#   appwebMonitor
#
DEPS_60 = $(DEPS_60) build\$(CONFIG)\bin\libappweb.dll
DEPS_60 = $(DEPS_60) build\$(CONFIG)\inc\appwebMonitor.h
DEPS_60 = $(DEPS_60) build\$(CONFIG)\inc\monitorResources.h
DEPS_60 = $(DEPS_60) build\$(CONFIG)\obj\appwebMonitor.res
DEPS_60 = $(DEPS_60) build\$(CONFIG)\obj\appwebMonitor.obj

LIBS_60 = $(LIBS_60) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_60 = $(LIBS_60) libhttp.lib
!ENDIF
LIBS_60 = $(LIBS_60) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_60 = $(LIBS_60) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\appwebMonitor.exe: $(DEPS_60)
	@echo ..... [Link] build\$(CONFIG)\bin\appwebMonitor.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appwebMonitor.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\appwebMonitor.res" "$(BUILD)\obj\appwebMonitor.obj" shell32.lib ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib  $(LIBPATHS_60) $(LIBS_60) $(LIBS_60) $(LOG)

#
#   appwebMonitor.ico
#
DEPS_61 = $(DEPS_61) src\server\windows\appwebMonitor.ico

build\$(CONFIG)\bin\appwebMonitor.ico: $(DEPS_61)
	@echo ..... [Copy] build\$(CONFIG)\bin\appwebMonitor.ico
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\server\windows\appwebMonitor.ico+modified build\$(CONFIG)\bin\appwebMonitor.ico $(LOG)

#
#   authpass.obj
#
DEPS_62 = $(DEPS_62) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\authpass.obj: \
    src\utils\authpass.c $(DEPS_62)
	@echo .. [Compile] build\$(CONFIG)\obj\authpass.obj
	"$(CC)" -c -Fo$(BUILD)\obj\authpass.obj -Fd$(BUILD)\obj\authpass.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\authpass.c $(LOG)

#
#   authpass
#
DEPS_63 = $(DEPS_63) build\$(CONFIG)\bin\libappweb.dll
DEPS_63 = $(DEPS_63) build\$(CONFIG)\obj\authpass.obj

LIBS_63 = $(LIBS_63) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_63 = $(LIBS_63) libhttp.lib
!ENDIF
LIBS_63 = $(LIBS_63) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_63 = $(LIBS_63) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\authpass.exe: $(DEPS_63)
	@echo ..... [Link] build\$(CONFIG)\bin\authpass.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\authpass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\authpass.obj" $(LIBPATHS_63) $(LIBS_63) $(LIBS_63) $(LIBS)  $(LOG)

#
#   cgiProgram.obj
#

build\$(CONFIG)\obj\cgiProgram.obj: \
    src\utils\cgiProgram.c $(DEPS_64)
	@echo .. [Compile] build\$(CONFIG)\obj\cgiProgram.obj
	"$(CC)" -c -Fo$(BUILD)\obj\cgiProgram.obj -Fd$(BUILD)\obj\cgiProgram.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\cgiProgram.c $(LOG)

#
#   ejsc.obj
#
DEPS_65 = $(DEPS_65) paks\ejs\dist\ejs.h

build\$(CONFIG)\obj\ejsc.obj: \
    paks\ejs\dist\ejsc.c $(DEPS_65)
	@echo .. [Compile] build\$(CONFIG)\obj\ejsc.obj
	"$(CC)" -c -Fo$(BUILD)\obj\ejsc.obj -Fd$(BUILD)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\ejs\dist\ejsc.c $(LOG)

!IF "$(ME_COM_EJS)" == "1"
#
#   ejsc
#
DEPS_66 = $(DEPS_66) build\$(CONFIG)\bin\libejs.dll
DEPS_66 = $(DEPS_66) build\$(CONFIG)\obj\ejsc.obj

LIBS_66 = $(LIBS_66) libejs.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_66 = $(LIBS_66) libhttp.lib
!ENDIF
LIBS_66 = $(LIBS_66) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_66 = $(LIBS_66) libpcre.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_66 = $(LIBS_66) libzlib.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_66 = $(LIBS_66) libsql.lib
!ENDIF

build\$(CONFIG)\bin\ejsc.exe: $(DEPS_66)
	@echo ..... [Link] build\$(CONFIG)\bin\ejsc.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejsc.obj" $(LIBPATHS_66) $(LIBS_66) $(LIBS_66) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   ejs.mod
#
DEPS_67 = $(DEPS_67) paks\ejs\dist\ejs.es
DEPS_67 = $(DEPS_67) build\$(CONFIG)\bin\ejsc.exe

build\$(CONFIG)\bin\ejs.mod: $(DEPS_67)
	cd paks\ejs\dist
	@echo .. [Compile] ejs.mod
	..\..\..\$(BUILD)\bin\ejsc --out ../../../$(BUILD)/bin/ejs.mod --optimize 9 --bind --require null ejs.es
	cd ..\..\..
!ENDIF

#
#   ejs.obj
#
DEPS_68 = $(DEPS_68) paks\ejs\dist\ejs.h

build\$(CONFIG)\obj\ejs.obj: \
    paks\ejs\dist\ejs.c $(DEPS_68)
	@echo .. [Compile] build\$(CONFIG)\obj\ejs.obj
	"$(CC)" -c -Fo$(BUILD)\obj\ejs.obj -Fd$(BUILD)\obj\ejs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\ejs\dist\ejs.c $(LOG)

!IF "$(ME_COM_EJS)" == "1"
#
#   ejscmd
#
DEPS_69 = $(DEPS_69) build\$(CONFIG)\bin\libejs.dll
DEPS_69 = $(DEPS_69) build\$(CONFIG)\obj\ejs.obj

LIBS_69 = $(LIBS_69) libejs.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_69 = $(LIBS_69) libhttp.lib
!ENDIF
LIBS_69 = $(LIBS_69) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_69 = $(LIBS_69) libpcre.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_69 = $(LIBS_69) libzlib.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_69 = $(LIBS_69) libsql.lib
!ENDIF

build\$(CONFIG)\bin\ejs.exe: $(DEPS_69)
	@echo ..... [Link] build\$(CONFIG)\bin\ejs.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\ejs.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejs.obj" $(LIBPATHS_69) $(LIBS_69) $(LIBS_69) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_ESP)" == "1"
#
#   esp-compile.json
#
DEPS_70 = $(DEPS_70) paks\esp\dist\esp-compile.json

build\$(CONFIG)\bin\esp-compile.json: $(DEPS_70)
	@echo ..... [Copy] build\$(CONFIG)\bin\esp-compile.json
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B paks\esp\dist\esp-compile.json+modified build\$(CONFIG)\bin\esp-compile.json $(LOG)
!ENDIF

#
#   esp.obj
#
DEPS_71 = $(DEPS_71) paks\esp\dist\esp.h

build\$(CONFIG)\obj\esp.obj: \
    paks\esp\dist\esp.c $(DEPS_71)
	@echo .. [Compile] build\$(CONFIG)\obj\esp.obj
	"$(CC)" -c -Fo$(BUILD)\obj\esp.obj -Fd$(BUILD)\obj\esp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\esp\dist\esp.c $(LOG)

!IF "$(ME_COM_ESP)" == "1"
#
#   espcmd
#
DEPS_72 = $(DEPS_72) build\$(CONFIG)\bin\libesp.dll
DEPS_72 = $(DEPS_72) build\$(CONFIG)\obj\esp.obj

LIBS_72 = $(LIBS_72) libesp.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_72 = $(LIBS_72) libhttp.lib
!ENDIF
LIBS_72 = $(LIBS_72) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_72 = $(LIBS_72) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_72 = $(LIBS_72) libsql.lib
!ENDIF

build\$(CONFIG)\bin\esp.exe: $(DEPS_72)
	@echo ..... [Link] build\$(CONFIG)\bin\esp.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\esp.obj" $(LIBPATHS_72) $(LIBS_72) $(LIBS_72) $(LIBS)  $(LOG)
!ENDIF

#
#   http-ca-crt
#
DEPS_73 = $(DEPS_73) paks\http\dist\ca.crt

build\$(CONFIG)\bin\ca.crt: $(DEPS_73)
	@echo ..... [Copy] build\$(CONFIG)\bin\ca.crt
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B paks\http\dist\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)

#
#   http.obj
#
DEPS_74 = $(DEPS_74) paks\http\dist\http.h

build\$(CONFIG)\obj\http.obj: \
    paks\http\dist\http.c $(DEPS_74)
	@echo .. [Compile] build\$(CONFIG)\obj\http.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(DFLAGS) -DME_COM_OPENSSL_PATH="$(ME_COM_OPENSSL_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" paks\http\dist\http.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   httpcmd
#
DEPS_75 = $(DEPS_75) build\$(CONFIG)\bin\libhttp.dll
DEPS_75 = $(DEPS_75) build\$(CONFIG)\bin\libmprssl.dll
DEPS_75 = $(DEPS_75) build\$(CONFIG)\obj\http.obj

LIBS_75 = $(LIBS_75) libhttp.lib
LIBS_75 = $(LIBS_75) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_75 = $(LIBS_75) libpcre.lib
!ENDIF
LIBS_75 = $(LIBS_75) libmprssl.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_75 = $(LIBS_75) libeay32.lib
LIBPATHS_75 = $(LIBPATHS_75) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_75 = $(LIBPATHS_75) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_75 = $(LIBS_75) libssleay32.lib
LIBPATHS_75 = $(LIBPATHS_75) -libpath:$(ME_COM_OPENSSL_PATH)/lib
LIBPATHS_75 = $(LIBPATHS_75) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_75 = $(LIBS_75) libest.lib
!ENDIF

build\$(CONFIG)\bin\http.exe: $(DEPS_75)
	@echo ..... [Link] build\$(CONFIG)\bin\http.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)   "$(BUILD)\obj\http.obj" $(LIBPATHS_75) $(LIBS_75) $(LIBS_75) $(LIBS)  $(LOG)
!ENDIF

#
#   sqlite3.h
#
DEPS_76 = $(DEPS_76) paks\sqlite\dist\sqlite3.h

build\$(CONFIG)\inc\sqlite3.h: $(DEPS_76)
	@echo ..... [Copy] build\$(CONFIG)\inc\sqlite3.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B paks\sqlite\dist\sqlite3.h+modified build\$(CONFIG)\inc\sqlite3.h $(LOG)

#
#   sqlite3.h
#

paks\sqlite\dist\sqlite3.h: $(DEPS_77)

#
#   sqlite3.obj
#
DEPS_78 = $(DEPS_78) build\$(CONFIG)\inc\me.h
DEPS_78 = $(DEPS_78) paks\sqlite\dist\sqlite3.h

build\$(CONFIG)\obj\sqlite3.obj: \
    paks\sqlite\dist\sqlite3.c $(DEPS_78)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite3.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite3.obj -Fd$(BUILD)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\sqlite\dist\sqlite3.c $(LOG)

!IF "$(ME_COM_SQLITE)" == "1"
#
#   libsql
#
DEPS_79 = $(DEPS_79) build\$(CONFIG)\inc\sqlite3.h
DEPS_79 = $(DEPS_79) build\$(CONFIG)\obj\sqlite3.obj

build\$(CONFIG)\bin\libsql.dll: $(DEPS_79)
	@echo ..... [Link] build\$(CONFIG)\bin\libsql.dll
	"lib.exe" -nologo -out:$(BUILD)\bin\libsql.dll "$(BUILD)\obj\sqlite3.obj" $(LOG)
!ENDIF

#
#   makerom.obj
#
DEPS_80 = $(DEPS_80) paks\mpr\dist\mpr.h

build\$(CONFIG)\obj\makerom.obj: \
    paks\mpr\dist\makerom.c $(DEPS_80)
	@echo .. [Compile] build\$(CONFIG)\obj\makerom.obj
	"$(CC)" -c -Fo$(BUILD)\obj\makerom.obj -Fd$(BUILD)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\mpr\dist\makerom.c $(LOG)

#
#   manager.obj
#
DEPS_81 = $(DEPS_81) paks\mpr\dist\mpr.h

build\$(CONFIG)\obj\manager.obj: \
    paks\mpr\dist\manager.c $(DEPS_81)
	@echo .. [Compile] build\$(CONFIG)\obj\manager.obj
	"$(CC)" -c -Fo$(BUILD)\obj\manager.obj -Fd$(BUILD)\obj\manager.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\mpr\dist\manager.c $(LOG)

#
#   manager
#
DEPS_82 = $(DEPS_82) build\$(CONFIG)\bin\libmpr.dll
DEPS_82 = $(DEPS_82) build\$(CONFIG)\obj\manager.obj

LIBS_82 = $(LIBS_82) libmpr.lib

build\$(CONFIG)\bin\appman.exe: $(DEPS_82)
	@echo ..... [Link] build\$(CONFIG)\bin\appman.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\appman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\manager.obj" $(LIBPATHS_82) $(LIBS_82) $(LIBS_82) $(LIBS)  $(LOG)

#
#   server-cache
#

src\server\cache: $(DEPS_83)
	cd src\server
	if not exist "cache" md "cache"
	cd ..\..

#
#   sqlite.obj
#
DEPS_84 = $(DEPS_84) build\$(CONFIG)\inc\me.h
DEPS_84 = $(DEPS_84) paks\sqlite\dist\sqlite3.h

build\$(CONFIG)\obj\sqlite.obj: \
    paks\sqlite\dist\sqlite.c $(DEPS_84)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite.obj -Fd$(BUILD)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) paks\sqlite\dist\sqlite.c $(LOG)

