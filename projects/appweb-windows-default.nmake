#
#   appweb-windows-default.nmake -- Makefile to build Embedthis Appweb for windows
#

PRODUCT         =appweb
VERSION         =4.3.0
BUILD_NUMBER    =0
PROFILE  = default
PA        = $(PROCESSOR_ARCHITECTURE)
!IF "$(PA)" == "AMD64"
ARCH     = x64
ENTRY    = _DllMainCRTStartup
!ELSE
ARCH  = x86
ENTRY    = _DllMainCRTStartup@12
!ENDIF

OS       = windows
CONFIG   = $(OS)-$(ARCH)-$(PROFILE)
CC       = cl
LD       = link
RC       = rc
CFLAGS   = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS   = -D_REENTRANT -D_MT -DBIT_DEBUG
IFLAGS   = -I$(CONFIG)\inc
LDFLAGS  = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS = -libpath:$(CONFIG)\bin
LIBS     = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

all compile: prep \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\bin\libmprssl.dll \
        $(CONFIG)\bin\appman.exe \
        $(CONFIG)\bin\libest.dll \
        $(CONFIG)\bin\ca.crt \
        $(CONFIG)\bin\libpcre.dll \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\bin\http.exe \
        $(CONFIG)\bin\http-ca.crt \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\bin\libmod_esp.dll \
        $(CONFIG)\bin\esp.exe \
        $(CONFIG)\bin\esp.conf \
        src\server\esp.conf \
        $(CONFIG)\bin\esp-www \
        $(CONFIG)\bin\esp-appweb.conf \
        $(CONFIG)\bin\libejs.dll \
        $(CONFIG)\bin\ejs.exe \
        $(CONFIG)\bin\ejsc.exe \
        $(CONFIG)\bin\ejs.mod \
        $(CONFIG)\bin\libmod_cgi.dll \
        $(CONFIG)\bin\libmod_ssl.dll \
        $(CONFIG)\bin\authpass.exe \
        $(CONFIG)\bin\cgiProgram.exe \
        $(CONFIG)\bin\setConfig.exe \
        src\server\slink.c \
        $(CONFIG)\bin\libapp.dll \
        $(CONFIG)\bin\appweb.exe \
        $(CONFIG)\bin\appwebMonitor.exe \
        $(CONFIG)\bin\appwebMonitor.ico \
        src\server\cache \
        $(CONFIG)\bin\testAppweb.exe \
        test\cgi-bin\testScript \
        test\web\caching\cache.cgi \
        test\web\auth\basic\basic.cgi \
        test\cgi-bin\cgiProgram.exe \
        test\web\js \
        $(CONFIG)\bin\removeFiles.exe

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc\bit.h copy projects\appweb-$(OS)-$(PROFILE)-bit.h $(CONFIG)\inc\bit.h
	@echo $(DFLAGS) $(CFLAGS) >projects/.flags

clean:
	-if exist $(CONFIG)\bin\libmpr.dll del /Q $(CONFIG)\bin\libmpr.dll
	-if exist $(CONFIG)\bin\libmprssl.dll del /Q $(CONFIG)\bin\libmprssl.dll
	-if exist $(CONFIG)\bin\appman.exe del /Q $(CONFIG)\bin\appman.exe
	-if exist $(CONFIG)\bin\libest.dll del /Q $(CONFIG)\bin\libest.dll
	-if exist $(CONFIG)\bin\ca.crt del /Q $(CONFIG)\bin\ca.crt
	-if exist $(CONFIG)\bin\libpcre.dll del /Q $(CONFIG)\bin\libpcre.dll
	-if exist $(CONFIG)\bin\libhttp.dll del /Q $(CONFIG)\bin\libhttp.dll
	-if exist $(CONFIG)\bin\http.exe del /Q $(CONFIG)\bin\http.exe
	-if exist $(CONFIG)\bin\http-ca.crt del /Q $(CONFIG)\bin\http-ca.crt
	-if exist $(CONFIG)\bin\libappweb.dll del /Q $(CONFIG)\bin\libappweb.dll
	-if exist $(CONFIG)\bin\libmod_esp.dll del /Q $(CONFIG)\bin\libmod_esp.dll
	-if exist $(CONFIG)\bin\esp.exe del /Q $(CONFIG)\bin\esp.exe
	-if exist $(CONFIG)\bin\esp.conf del /Q $(CONFIG)\bin\esp.conf
	-if exist src\server\esp.conf del /Q src\server\esp.conf
	-if exist $(CONFIG)\bin\esp-www del /Q $(CONFIG)\bin\esp-www
	-if exist $(CONFIG)\bin\esp-appweb.conf del /Q $(CONFIG)\bin\esp-appweb.conf
	-if exist $(CONFIG)\bin\libejs.dll del /Q $(CONFIG)\bin\libejs.dll
	-if exist $(CONFIG)\bin\ejs.exe del /Q $(CONFIG)\bin\ejs.exe
	-if exist $(CONFIG)\bin\ejsc.exe del /Q $(CONFIG)\bin\ejsc.exe
	-if exist $(CONFIG)\bin\ejs.mod del /Q $(CONFIG)\bin\ejs.mod
	-if exist $(CONFIG)\bin\libmod_cgi.dll del /Q $(CONFIG)\bin\libmod_cgi.dll
	-if exist $(CONFIG)\bin\libmod_ssl.dll del /Q $(CONFIG)\bin\libmod_ssl.dll
	-if exist $(CONFIG)\bin\authpass.exe del /Q $(CONFIG)\bin\authpass.exe
	-if exist $(CONFIG)\bin\cgiProgram.exe del /Q $(CONFIG)\bin\cgiProgram.exe
	-if exist $(CONFIG)\bin\setConfig.exe del /Q $(CONFIG)\bin\setConfig.exe
	-if exist $(CONFIG)\bin\libapp.dll del /Q $(CONFIG)\bin\libapp.dll
	-if exist $(CONFIG)\bin\appweb.exe del /Q $(CONFIG)\bin\appweb.exe
	-if exist $(CONFIG)\bin\appwebMonitor.exe del /Q $(CONFIG)\bin\appwebMonitor.exe
	-if exist $(CONFIG)\bin\appwebMonitor.ico del /Q $(CONFIG)\bin\appwebMonitor.ico
	-if exist $(CONFIG)\bin\testAppweb.exe del /Q $(CONFIG)\bin\testAppweb.exe
	-if exist test\cgi-bin\testScript del /Q test\cgi-bin\testScript
	-if exist test\web\caching\cache.cgi del /Q test\web\caching\cache.cgi
	-if exist test\web\auth\basic\basic.cgi del /Q test\web\auth\basic\basic.cgi
	-if exist test\cgi-bin\cgiProgram.exe del /Q test\cgi-bin\cgiProgram.exe
	-if exist test\web\js del /Q test\web\js
	-if exist $(CONFIG)\bin\removeFiles.exe del /Q $(CONFIG)\bin\removeFiles.exe
	-if exist $(CONFIG)\obj\mprLib.obj del /Q $(CONFIG)\obj\mprLib.obj
	-if exist $(CONFIG)\obj\mprSsl.obj del /Q $(CONFIG)\obj\mprSsl.obj
	-if exist $(CONFIG)\obj\manager.obj del /Q $(CONFIG)\obj\manager.obj
	-if exist $(CONFIG)\obj\makerom.obj del /Q $(CONFIG)\obj\makerom.obj
	-if exist $(CONFIG)\obj\estLib.obj del /Q $(CONFIG)\obj\estLib.obj
	-if exist $(CONFIG)\obj\pcre.obj del /Q $(CONFIG)\obj\pcre.obj
	-if exist $(CONFIG)\obj\httpLib.obj del /Q $(CONFIG)\obj\httpLib.obj
	-if exist $(CONFIG)\obj\http.obj del /Q $(CONFIG)\obj\http.obj
	-if exist $(CONFIG)\obj\sqlite3.obj del /Q $(CONFIG)\obj\sqlite3.obj
	-if exist $(CONFIG)\obj\sqlite.obj del /Q $(CONFIG)\obj\sqlite.obj
	-if exist $(CONFIG)\obj\config.obj del /Q $(CONFIG)\obj\config.obj
	-if exist $(CONFIG)\obj\convenience.obj del /Q $(CONFIG)\obj\convenience.obj
	-if exist $(CONFIG)\obj\dirHandler.obj del /Q $(CONFIG)\obj\dirHandler.obj
	-if exist $(CONFIG)\obj\fileHandler.obj del /Q $(CONFIG)\obj\fileHandler.obj
	-if exist $(CONFIG)\obj\log.obj del /Q $(CONFIG)\obj\log.obj
	-if exist $(CONFIG)\obj\server.obj del /Q $(CONFIG)\obj\server.obj
	-if exist $(CONFIG)\obj\edi.obj del /Q $(CONFIG)\obj\edi.obj
	-if exist $(CONFIG)\obj\espAbbrev.obj del /Q $(CONFIG)\obj\espAbbrev.obj
	-if exist $(CONFIG)\obj\espFramework.obj del /Q $(CONFIG)\obj\espFramework.obj
	-if exist $(CONFIG)\obj\espHandler.obj del /Q $(CONFIG)\obj\espHandler.obj
	-if exist $(CONFIG)\obj\espHtml.obj del /Q $(CONFIG)\obj\espHtml.obj
	-if exist $(CONFIG)\obj\espTemplate.obj del /Q $(CONFIG)\obj\espTemplate.obj
	-if exist $(CONFIG)\obj\mdb.obj del /Q $(CONFIG)\obj\mdb.obj
	-if exist $(CONFIG)\obj\sdb.obj del /Q $(CONFIG)\obj\sdb.obj
	-if exist $(CONFIG)\obj\esp.obj del /Q $(CONFIG)\obj\esp.obj
	-if exist $(CONFIG)\obj\ejsLib.obj del /Q $(CONFIG)\obj\ejsLib.obj
	-if exist $(CONFIG)\obj\ejs.obj del /Q $(CONFIG)\obj\ejs.obj
	-if exist $(CONFIG)\obj\ejsc.obj del /Q $(CONFIG)\obj\ejsc.obj
	-if exist $(CONFIG)\obj\cgiHandler.obj del /Q $(CONFIG)\obj\cgiHandler.obj
	-if exist $(CONFIG)\obj\ejsHandler.obj del /Q $(CONFIG)\obj\ejsHandler.obj
	-if exist $(CONFIG)\obj\phpHandler.obj del /Q $(CONFIG)\obj\phpHandler.obj
	-if exist $(CONFIG)\obj\proxyHandler.obj del /Q $(CONFIG)\obj\proxyHandler.obj
	-if exist $(CONFIG)\obj\sslModule.obj del /Q $(CONFIG)\obj\sslModule.obj
	-if exist $(CONFIG)\obj\authpass.obj del /Q $(CONFIG)\obj\authpass.obj
	-if exist $(CONFIG)\obj\cgiProgram.obj del /Q $(CONFIG)\obj\cgiProgram.obj
	-if exist $(CONFIG)\obj\setConfig.obj del /Q $(CONFIG)\obj\setConfig.obj
	-if exist $(CONFIG)\obj\slink.obj del /Q $(CONFIG)\obj\slink.obj
	-if exist $(CONFIG)\obj\appweb.obj del /Q $(CONFIG)\obj\appweb.obj
	-if exist $(CONFIG)\obj\appwebMonitor.obj del /Q $(CONFIG)\obj\appwebMonitor.obj
	-if exist $(CONFIG)\obj\testAppweb.obj del /Q $(CONFIG)\obj\testAppweb.obj
	-if exist $(CONFIG)\obj\testHttp.obj del /Q $(CONFIG)\obj\testHttp.obj
	-if exist $(CONFIG)\obj\removeFiles.obj del /Q $(CONFIG)\obj\removeFiles.obj

$(CONFIG)\inc\bitos.h:  \
        $(CONFIG)\inc\bit.h
	-if exist $(CONFIG)\inc\bitos.h del /Q $(CONFIG)\inc\bitos.h
	copy /Y src\bitos.h $(CONFIG)\inc\bitos.h

$(CONFIG)\inc\mpr.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\bitos.h
	-if exist $(CONFIG)\inc\mpr.h del /Q $(CONFIG)\inc\mpr.h
	copy /Y src\deps\mpr\mpr.h $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\mprLib.obj: \
        src\deps\mpr\mprLib.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\mprLib.obj -Fd$(CONFIG)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\mpr\mprLib.c

$(CONFIG)\bin\libmpr.dll:  \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\obj\mprLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\mprLib.obj $(LIBS)

$(CONFIG)\inc\est.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\bitos.h
	-if exist $(CONFIG)\inc\est.h del /Q $(CONFIG)\inc\est.h
	copy /Y src\deps\est\est.h $(CONFIG)\inc\est.h

$(CONFIG)\obj\estLib.obj: \
        src\deps\est\estLib.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\estLib.obj -Fd$(CONFIG)\obj\estLib.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\est\estLib.c

$(CONFIG)\bin\libest.dll:  \
        $(CONFIG)\inc\est.h \
        $(CONFIG)\obj\estLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\estLib.obj $(LIBS)

$(CONFIG)\obj\mprSsl.obj: \
        src\deps\mpr\mprSsl.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\mprSsl.obj -Fd$(CONFIG)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\mpr\mprSsl.c

$(CONFIG)\bin\libmprssl.dll:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\bin\libest.dll \
        $(CONFIG)\obj\mprSsl.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\mprSsl.obj libest.lib libmpr.lib $(LIBS)

$(CONFIG)\obj\manager.obj: \
        src\deps\mpr\manager.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\manager.obj -Fd$(CONFIG)\obj\manager.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\mpr\manager.c

$(CONFIG)\bin\appman.exe:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\obj\manager.obj
	"$(LD)" -out:$(CONFIG)\bin\appman.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\manager.obj libmpr.lib $(LIBS)

$(CONFIG)\bin\ca.crt: 
	-if exist $(CONFIG)\bin\ca.crt del /Q $(CONFIG)\bin\ca.crt
	copy /Y src\deps\est\ca.crt $(CONFIG)\bin\ca.crt

$(CONFIG)\inc\pcre.h:  \
        $(CONFIG)\inc\bit.h
	-if exist $(CONFIG)\inc\pcre.h del /Q $(CONFIG)\inc\pcre.h
	copy /Y src\deps\pcre\pcre.h $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\pcre.obj: \
        src\deps\pcre\pcre.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre.obj -Fd$(CONFIG)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\pcre\pcre.c

$(CONFIG)\bin\libpcre.dll:  \
        $(CONFIG)\inc\pcre.h \
        $(CONFIG)\obj\pcre.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\pcre.obj $(LIBS)

$(CONFIG)\inc\http.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h
	-if exist $(CONFIG)\inc\http.h del /Q $(CONFIG)\inc\http.h
	copy /Y src\deps\http\http.h $(CONFIG)\inc\http.h

$(CONFIG)\obj\httpLib.obj: \
        src\deps\http\httpLib.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\http.h \
        $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\httpLib.obj -Fd$(CONFIG)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\http\httpLib.c

$(CONFIG)\bin\libhttp.dll:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\bin\libpcre.dll \
        $(CONFIG)\inc\http.h \
        $(CONFIG)\obj\httpLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\httpLib.obj libpcre.lib libmpr.lib $(LIBS)

$(CONFIG)\obj\http.obj: \
        src\deps\http\http.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\http.h
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\http\http.c

$(CONFIG)\bin\http.exe:  \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\obj\http.obj
	"$(LD)" -out:$(CONFIG)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\http.obj libhttp.lib $(LIBS) libpcre.lib libmpr.lib

$(CONFIG)\bin\http-ca.crt: 
	-if exist $(CONFIG)\bin\http-ca.crt del /Q $(CONFIG)\bin\http-ca.crt
	copy /Y src\deps\http\http-ca.crt $(CONFIG)\bin\http-ca.crt

$(CONFIG)\inc\customize.h:  \
        $(CONFIG)\inc\bit.h
	-if exist $(CONFIG)\inc\customize.h del /Q $(CONFIG)\inc\customize.h
	copy /Y src\customize.h $(CONFIG)\inc\customize.h

$(CONFIG)\inc\appweb.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\inc\http.h \
        $(CONFIG)\inc\customize.h
	-if exist $(CONFIG)\inc\appweb.h del /Q $(CONFIG)\inc\appweb.h
	copy /Y src\appweb.h $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\config.obj: \
        src\config.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h \
        $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\config.obj -Fd$(CONFIG)\obj\config.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\config.c

$(CONFIG)\obj\convenience.obj: \
        src\convenience.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\convenience.obj -Fd$(CONFIG)\obj\convenience.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\convenience.c

$(CONFIG)\obj\dirHandler.obj: \
        src\dirHandler.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\dirHandler.obj -Fd$(CONFIG)\obj\dirHandler.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\dirHandler.c

$(CONFIG)\obj\fileHandler.obj: \
        src\fileHandler.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\fileHandler.obj -Fd$(CONFIG)\obj\fileHandler.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\fileHandler.c

$(CONFIG)\obj\log.obj: \
        src\log.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\log.obj -Fd$(CONFIG)\obj\log.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\log.c

$(CONFIG)\obj\server.obj: \
        src\server.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\server.obj -Fd$(CONFIG)\obj\server.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\server.c

$(CONFIG)\bin\libappweb.dll:  \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\inc\appweb.h \
        $(CONFIG)\inc\bitos.h \
        $(CONFIG)\inc\customize.h \
        $(CONFIG)\obj\config.obj \
        $(CONFIG)\obj\convenience.obj \
        $(CONFIG)\obj\dirHandler.obj \
        $(CONFIG)\obj\fileHandler.obj \
        $(CONFIG)\obj\log.obj \
        $(CONFIG)\obj\server.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libappweb.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\config.obj $(CONFIG)\obj\convenience.obj $(CONFIG)\obj\dirHandler.obj $(CONFIG)\obj\fileHandler.obj $(CONFIG)\obj\log.obj $(CONFIG)\obj\server.obj libhttp.lib $(LIBS) libpcre.lib libmpr.lib

$(CONFIG)\inc\edi.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	-if exist $(CONFIG)\inc\edi.h del /Q $(CONFIG)\inc\edi.h
	copy /Y src\esp\edi.h $(CONFIG)\inc\edi.h

$(CONFIG)\inc\esp-app.h: 
	-if exist $(CONFIG)\inc\esp-app.h del /Q $(CONFIG)\inc\esp-app.h
	copy /Y src\esp\esp-app.h $(CONFIG)\inc\esp-app.h

$(CONFIG)\inc\esp.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h \
        $(CONFIG)\inc\edi.h
	-if exist $(CONFIG)\inc\esp.h del /Q $(CONFIG)\inc\esp.h
	copy /Y src\esp\esp.h $(CONFIG)\inc\esp.h

$(CONFIG)\inc\mdb.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h \
        $(CONFIG)\inc\edi.h
	-if exist $(CONFIG)\inc\mdb.h del /Q $(CONFIG)\inc\mdb.h
	copy /Y src\esp\mdb.h $(CONFIG)\inc\mdb.h

$(CONFIG)\obj\edi.obj: \
        src\esp\edi.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\edi.h \
        $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\edi.obj -Fd$(CONFIG)\obj\edi.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\edi.c

$(CONFIG)\obj\espAbbrev.obj: \
        src\esp\espAbbrev.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espAbbrev.obj -Fd$(CONFIG)\obj\espAbbrev.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\espAbbrev.c

$(CONFIG)\obj\espFramework.obj: \
        src\esp\espFramework.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espFramework.obj -Fd$(CONFIG)\obj\espFramework.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\espFramework.c

$(CONFIG)\obj\espHandler.obj: \
        src\esp\espHandler.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h \
        $(CONFIG)\inc\esp.h \
        $(CONFIG)\inc\edi.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espHandler.obj -Fd$(CONFIG)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\espHandler.c

$(CONFIG)\obj\espHtml.obj: \
        src\esp\espHtml.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\esp.h \
        $(CONFIG)\inc\edi.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espHtml.obj -Fd$(CONFIG)\obj\espHtml.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\espHtml.c

$(CONFIG)\obj\espTemplate.obj: \
        src\esp\espTemplate.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espTemplate.obj -Fd$(CONFIG)\obj\espTemplate.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\espTemplate.c

$(CONFIG)\obj\mdb.obj: \
        src\esp\mdb.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h \
        $(CONFIG)\inc\edi.h \
        $(CONFIG)\inc\mdb.h \
        $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\mdb.obj -Fd$(CONFIG)\obj\mdb.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\mdb.c

$(CONFIG)\obj\sdb.obj: \
        src\esp\sdb.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h \
        $(CONFIG)\inc\edi.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sdb.obj -Fd$(CONFIG)\obj\sdb.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\sdb.c

$(CONFIG)\bin\libmod_esp.dll:  \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\inc\edi.h \
        $(CONFIG)\inc\esp-app.h \
        $(CONFIG)\inc\esp.h \
        $(CONFIG)\inc\mdb.h \
        $(CONFIG)\obj\edi.obj \
        $(CONFIG)\obj\espAbbrev.obj \
        $(CONFIG)\obj\espFramework.obj \
        $(CONFIG)\obj\espHandler.obj \
        $(CONFIG)\obj\espHtml.obj \
        $(CONFIG)\obj\espTemplate.obj \
        $(CONFIG)\obj\mdb.obj \
        $(CONFIG)\obj\sdb.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_esp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\edi.obj $(CONFIG)\obj\espAbbrev.obj $(CONFIG)\obj\espFramework.obj $(CONFIG)\obj\espHandler.obj $(CONFIG)\obj\espHtml.obj $(CONFIG)\obj\espTemplate.obj $(CONFIG)\obj\mdb.obj $(CONFIG)\obj\sdb.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\esp.obj: \
        src\esp\esp.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\esp.obj -Fd$(CONFIG)\obj\esp.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\esp\esp.c

$(CONFIG)\bin\esp.exe:  \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\obj\edi.obj \
        $(CONFIG)\obj\esp.obj \
        $(CONFIG)\obj\espAbbrev.obj \
        $(CONFIG)\obj\espFramework.obj \
        $(CONFIG)\obj\espHandler.obj \
        $(CONFIG)\obj\espHtml.obj \
        $(CONFIG)\obj\espTemplate.obj \
        $(CONFIG)\obj\mdb.obj \
        $(CONFIG)\obj\sdb.obj
	"$(LD)" -out:$(CONFIG)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\edi.obj $(CONFIG)\obj\esp.obj $(CONFIG)\obj\espAbbrev.obj $(CONFIG)\obj\espFramework.obj $(CONFIG)\obj\espHandler.obj $(CONFIG)\obj\espHtml.obj $(CONFIG)\obj\espTemplate.obj $(CONFIG)\obj\mdb.obj $(CONFIG)\obj\sdb.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\bin\esp.conf: 
	-if exist $(CONFIG)\bin\esp.conf del /Q $(CONFIG)\bin\esp.conf
	copy /Y src\esp\esp.conf $(CONFIG)\bin\esp.conf

src\server\esp.conf: 
	-if exist src\server\esp.conf del /Q src\server\esp.conf
	copy /Y src\esp\esp.conf src\server\esp.conf

$(CONFIG)\bin\esp-www: 
	-if exist $(CONFIG)\bin\esp-www del /Q $(CONFIG)\bin\esp-www
	if not exist $(CONFIG)\bin\esp-www md $(CONFIG)\bin\esp-www
	xcopy /S /Y src\esp\www $(CONFIG)\bin\esp-www

$(CONFIG)\bin\esp-appweb.conf: 
	-if exist $(CONFIG)\bin\esp-appweb.conf del /Q $(CONFIG)\bin\esp-appweb.conf
	copy /Y src\esp\esp-appweb.conf $(CONFIG)\bin\esp-appweb.conf

$(CONFIG)\inc\ejs.slots.h:  \
        $(CONFIG)\inc\bit.h
	-if exist $(CONFIG)\inc\ejs.slots.h del /Q $(CONFIG)\inc\ejs.slots.h
	copy /Y src\deps\ejs\ejs.slots.h $(CONFIG)\inc\ejs.slots.h

$(CONFIG)\inc\ejs.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\bitos.h \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\inc\http.h \
        $(CONFIG)\inc\ejs.slots.h
	-if exist $(CONFIG)\inc\ejs.h del /Q $(CONFIG)\inc\ejs.h
	copy /Y src\deps\ejs\ejs.h $(CONFIG)\inc\ejs.h

$(CONFIG)\inc\ejsByteGoto.h: 
	-if exist $(CONFIG)\inc\ejsByteGoto.h del /Q $(CONFIG)\inc\ejsByteGoto.h
	copy /Y src\deps\ejs\ejsByteGoto.h $(CONFIG)\inc\ejsByteGoto.h

$(CONFIG)\inc\sqlite3.h:  \
        $(CONFIG)\inc\bit.h
	-if exist $(CONFIG)\inc\sqlite3.h del /Q $(CONFIG)\inc\sqlite3.h
	copy /Y src\deps\sqlite\sqlite3.h $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\ejsLib.obj: \
        src\deps\ejs\ejsLib.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\ejs.h \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\inc\pcre.h \
        $(CONFIG)\inc\sqlite3.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsLib.obj -Fd$(CONFIG)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\ejs\ejsLib.c

$(CONFIG)\bin\libejs.dll:  \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\bin\libpcre.dll \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\inc\ejs.h \
        $(CONFIG)\inc\ejs.slots.h \
        $(CONFIG)\inc\ejsByteGoto.h \
        $(CONFIG)\obj\ejsLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsLib.obj libmpr.lib libpcre.lib libhttp.lib $(LIBS) libpcre.lib libmpr.lib

$(CONFIG)\obj\ejs.obj: \
        src\deps\ejs\ejs.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\ejs.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejs.obj -Fd$(CONFIG)\obj\ejs.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\ejs\ejs.c

$(CONFIG)\bin\ejs.exe:  \
        $(CONFIG)\bin\libejs.dll \
        $(CONFIG)\obj\ejs.obj
	"$(LD)" -out:$(CONFIG)\bin\ejs.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejs.obj libejs.lib $(LIBS) libmpr.lib libpcre.lib libhttp.lib

$(CONFIG)\obj\ejsc.obj: \
        src\deps\ejs\ejsc.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\ejs.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsc.obj -Fd$(CONFIG)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\deps\ejs\ejsc.c

$(CONFIG)\bin\ejsc.exe:  \
        $(CONFIG)\bin\libejs.dll \
        $(CONFIG)\obj\ejsc.obj
	"$(LD)" -out:$(CONFIG)\bin\ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsc.obj libejs.lib $(LIBS) libmpr.lib libpcre.lib libhttp.lib

$(CONFIG)\bin\ejs.mod:  \
        $(CONFIG)\bin\ejsc.exe
	cd src\deps\ejs
		"..\..\..\$(CONFIG)\bin\ejsc" --out "..\..\..\$(CONFIG)\bin\ejs.mod" --optimize 9 --bind --require null "ejs.es"
		cd ..\..\..

$(CONFIG)\obj\cgiHandler.obj: \
        src\modules\cgiHandler.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\cgiHandler.obj -Fd$(CONFIG)\obj\cgiHandler.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\modules\cgiHandler.c

$(CONFIG)\bin\libmod_cgi.dll:  \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\obj\cgiHandler.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_cgi.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\cgiHandler.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\sslModule.obj: \
        src\modules\sslModule.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sslModule.obj -Fd$(CONFIG)\obj\sslModule.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\modules\sslModule.c

$(CONFIG)\bin\libmod_ssl.dll:  \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\obj\sslModule.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_ssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\sslModule.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\authpass.obj: \
        src\utils\authpass.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\authpass.obj -Fd$(CONFIG)\obj\authpass.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\utils\authpass.c

$(CONFIG)\bin\authpass.exe:  \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\obj\authpass.obj
	"$(LD)" -out:$(CONFIG)\bin\authpass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\authpass.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\cgiProgram.obj: \
        src\utils\cgiProgram.c \
        $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\cgiProgram.obj -Fd$(CONFIG)\obj\cgiProgram.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\utils\cgiProgram.c

$(CONFIG)\bin\cgiProgram.exe:  \
        $(CONFIG)\obj\cgiProgram.obj
	"$(LD)" -out:$(CONFIG)\bin\cgiProgram.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\cgiProgram.obj $(LIBS)

$(CONFIG)\obj\setConfig.obj: \
        src\utils\setConfig.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\setConfig.obj -Fd$(CONFIG)\obj\setConfig.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\utils\setConfig.c

$(CONFIG)\bin\setConfig.exe:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\obj\setConfig.obj
	"$(LD)" -out:$(CONFIG)\bin\setConfig.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\setConfig.obj libmpr.lib $(LIBS)

src\server\slink.c: 
	cd src\server
		if not exist slink.c copy slink.empty slink.c
		cd ..\..

$(CONFIG)\obj\slink.obj: \
        src\server\slink.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\slink.obj -Fd$(CONFIG)\obj\slink.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\server\slink.c

$(CONFIG)\bin\libapp.dll:  \
        src\server\slink.c \
        $(CONFIG)\bin\esp.exe \
        $(CONFIG)\bin\libmod_esp.dll \
        $(CONFIG)\obj\slink.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libapp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\slink.obj libmod_esp.lib $(LIBS) libappweb.lib libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\appweb.obj: \
        src\server\appweb.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\appweb.h \
        $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\appweb.obj -Fd$(CONFIG)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\server\appweb.c

$(CONFIG)\bin\appweb.exe:  \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\bin\libmod_esp.dll \
        $(CONFIG)\bin\libmod_ssl.dll \
        $(CONFIG)\bin\libmod_cgi.dll \
        $(CONFIG)\bin\libapp.dll \
        $(CONFIG)\obj\appweb.obj
	"$(LD)" -out:$(CONFIG)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\appweb.obj libapp.lib libmod_cgi.lib libmod_ssl.lib libmod_esp.lib libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\inc\appwebMonitor.h: 
	-if exist $(CONFIG)\inc\appwebMonitor.h del /Q $(CONFIG)\inc\appwebMonitor.h
	copy /Y src\server\windows\appwebMonitor.h $(CONFIG)\inc\appwebMonitor.h

$(CONFIG)\inc\monitorResources.h: 
	-if exist $(CONFIG)\inc\monitorResources.h del /Q $(CONFIG)\inc\monitorResources.h
	copy /Y src\server\windows\monitorResources.h $(CONFIG)\inc\monitorResources.h

$(CONFIG)\obj\appwebMonitor.res: \
        src\server\windows\appwebMonitor.rc
	"$(RC)" -nologo -Fo $(CONFIG)\obj\appwebMonitor.res src\server\windows\appwebMonitor.rc

$(CONFIG)\obj\appwebMonitor.obj: \
        src\server\windows\appwebMonitor.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\appwebMonitor.obj -Fd$(CONFIG)\obj\appwebMonitor.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc src\server\windows\appwebMonitor.c

$(CONFIG)\bin\appwebMonitor.exe:  \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\inc\appwebMonitor.h \
        $(CONFIG)\inc\monitorResources.h \
        $(CONFIG)\obj\appwebMonitor.res \
        $(CONFIG)\obj\appwebMonitor.obj
	"$(LD)" -out:$(CONFIG)\bin\appwebMonitor.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\appwebMonitor.res $(CONFIG)\obj\appwebMonitor.obj libappweb.lib shell32.lib libhttp.lib ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib libpcre.lib libmpr.lib

$(CONFIG)\bin\appwebMonitor.ico: 
	-if exist $(CONFIG)\bin\appwebMonitor.ico del /Q $(CONFIG)\bin\appwebMonitor.ico
	copy /Y src\server\windows\appwebMonitor.ico $(CONFIG)\bin\appwebMonitor.ico

src\server\cache: 
	cd src\server
		md cache
		cd ..\..

$(CONFIG)\inc\testAppweb.h:  \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\mpr.h \
        $(CONFIG)\inc\http.h
	-if exist $(CONFIG)\inc\testAppweb.h del /Q $(CONFIG)\inc\testAppweb.h
	copy /Y test\testAppweb.h $(CONFIG)\inc\testAppweb.h

$(CONFIG)\obj\testAppweb.obj: \
        test\testAppweb.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\testAppweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\testAppweb.obj -Fd$(CONFIG)\obj\testAppweb.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc test\testAppweb.c

$(CONFIG)\obj\testHttp.obj: \
        test\testHttp.c \
        $(CONFIG)\inc\bit.h \
        $(CONFIG)\inc\testAppweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\testHttp.obj -Fd$(CONFIG)\obj\testHttp.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc test\testHttp.c

$(CONFIG)\bin\testAppweb.exe:  \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\inc\testAppweb.h \
        $(CONFIG)\obj\testAppweb.obj \
        $(CONFIG)\obj\testHttp.obj
	"$(LD)" -out:$(CONFIG)\bin\testAppweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\testAppweb.obj $(CONFIG)\obj\testHttp.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

test\cgi-bin\testScript:  \
        $(CONFIG)\bin\cgiProgram.exe
#  Omit build script /Users/mob/git/appweb/test/cgi-bin/testScript

test\web\caching\cache.cgi: 
#  Omit build script /Users/mob/git/appweb/test/web/caching/cache.cgi

test\web\auth\basic\basic.cgi: 
#  Omit build script /Users/mob/git/appweb/test/web/auth/basic/basic.cgi

test\cgi-bin\cgiProgram.exe:  \
        $(CONFIG)\bin\cgiProgram.exe
#  Omit build script /Users/mob/git/appweb/test/cgi-bin/cgiProgram.exe

test\web\js: 
#  Omit build script /Users/mob/git/appweb/test/web/js

$(CONFIG)\obj\removeFiles.obj: \
        package\windows\removeFiles.c \
        $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) -I$(CONFIG)\inc package\windows\removeFiles.c

$(CONFIG)\bin\removeFiles.exe:  \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\obj\removeFiles.obj
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\removeFiles.obj libmpr.lib $(LIBS)

version: 
	@echo 4.3.0-0

genslink: 
	cd src\server
		esp --static --genlink slink.c --flat compile
		cd ..\..

run:  \
        compile
	cd src\server
		sudo ..\..\$(CONFIG)\bin\appweb -v
		cd ..\..

test-run:  \
        compile
	cd test
		/bin/appweb -v
		cd ..

install: 
	cd .
		sudo make root-install
		cd .

install-prep:  \
        compile
	cd .
		$(eval $(shell $(BIN)/ejs bits/getbitvals projects/$(NAME)-$(OS)-$(PROFILE)-bit.h 
	PRODUCT VERSION CFG_PREFIX PRD_PREFIX WEB_PREFIX LOG_PREFIX BIN_PREFIX SPL_PREFIX BIN_PREFIX 
	>.prefixes; chmod 666 .prefixes))
	$(eval include .prefixes)
		cd .

root-install:  \
        compile \
        install-prep
	cd .
		@$(BIN)/appman stop disable uninstall >/dev/null 2>&1 ; true
	rm -f $(BIT_PRD_PREFIX)/latest $(LBIN)/appweb $(LBIN)/appman $(LBIN)/esp
	install -d -m 755 $(BIT_CFG_PREFIX) $(BIT_BIN_PREFIX)
	install -m 644 src/server/appweb.conf src/server/esp.conf src/server/mime.types $(BIT_CFG_PREFIX)
	install -m 755 $(filter-out $(BIN)/esp-www,$(wildcard $(BIN)/*)) $(BIT_BIN_PREFIX)
	install -m 644 -o root -g wheel ./package/macosx/com.embedthis.appweb.plist /Library/LaunchDaemons
	$(OS)-$(ARCH)-$(PROFILE)/bin/setConfig --home $(BIT_CFG_PREFIX) --documents $(BIT_WEB_PREFIX) 
	--logs $(BIT_LOG_PREFIX) --cache $(BIT_SPL_PREFIX)/cache 
	--modules $(BIT_BIN_PREFIX)  $(BIT_CFG_PREFIX)/appweb.conf
	ln -s $(BIT_VERSION) $(BIT_PRD_PREFIX)/latest
	ln -s $(BIT_BIN_PREFIX)/appweb $(LBIN)/appweb
	ln -s $(BIT_BIN_PREFIX)/appman $(LBIN)/appman
	[ -f $(BIT_BIN_PREFIX)/esp ] && ln -s $(BIT_BIN_PREFIX)/esp $(LBIN)/esp
	$(BIN)/appman install enable start
	exit 0
		cd .

uninstall: 
	cd .
		sudo make root-uninstall
		cd .

root-uninstall:  \
        compile \
        install-prep
	cd .
		$(BIN)/appman stop disable uninstall
	rm -fr $(BIT_CFG_PREFIX) $(BIT_PRD_PREFIX)
		cd .

