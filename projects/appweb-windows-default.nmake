#
#   appweb-windows-default.nmake -- Makefile to build Embedthis Appweb for windows
#

NAME                  = appweb
VERSION               = 5.2.0

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = default
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_CGI)" == ""
ME_COM_CGI            = 1
!ENDIF
!IF "$(ME_COM_DIR)" == ""
ME_COM_DIR            = 1
!ENDIF
!IF "$(ME_COM_EJS)" == ""
ME_COM_EJS            = 0
!ENDIF
!IF "$(ME_COM_ESP)" == ""
ME_COM_ESP            = 1
!ENDIF
!IF "$(ME_COM_EST)" == ""
ME_COM_EST            = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_PHP)" == ""
ME_COM_PHP            = 0
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 0
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF
!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 0
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 1
!ENDIF

!IF "$(ME_COM_MDB)" == ""
ME_COM_MDB            = 1
!ENDIF


CC                    = cl
LD                    = link
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -D_REENTRANT -D_MT -DME_COM_CGI=$(ME_COM_CGI) -DME_COM_DIR=$(ME_COM_DIR) -DME_COM_EJS=$(ME_COM_EJS) -DME_COM_ESP=$(ME_COM_ESP) -DME_COM_EST=$(ME_COM_EST) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_MDB=$(ME_COM_MDB) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_PHP=$(ME_COM_PHP) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) -DME_COM_ZLIB=$(ME_COM_ZLIB) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis Appweb
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appweb.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appwebMonitor.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appwebMonitor.ico
!IF "$(ME_COM_CGI)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\cgiProgram.exe
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ejs.mod
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ejs.exe
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\esp.conf
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ca.crt
!IF "$(ME_COM_HTTP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\http.exe
!ENDIF
!IF "$(ME_COM_EST)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libest.dll
!ENDIF
!IF "$(ME_COM_CGI)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libmod_cgi.dll
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libmod_ejs.dll
!ENDIF
!IF "$(ME_COM_PHP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libmod_php.dll
!ENDIF
!IF "$(ME_COM_SSL)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libmod_ssl.dll
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libsql.dll
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\appman.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\removeFiles.exe
TARGETS               = $(TARGETS) src\server\cache

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\appweb-windows-default-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\appweb.obj" del /Q "build\$(CONFIG)\obj\appweb.obj"
	if exist "build\$(CONFIG)\obj\appwebMonitor.obj" del /Q "build\$(CONFIG)\obj\appwebMonitor.obj"
	if exist "build\$(CONFIG)\obj\cgiHandler.obj" del /Q "build\$(CONFIG)\obj\cgiHandler.obj"
	if exist "build\$(CONFIG)\obj\cgiProgram.obj" del /Q "build\$(CONFIG)\obj\cgiProgram.obj"
	if exist "build\$(CONFIG)\obj\config.obj" del /Q "build\$(CONFIG)\obj\config.obj"
	if exist "build\$(CONFIG)\obj\convenience.obj" del /Q "build\$(CONFIG)\obj\convenience.obj"
	if exist "build\$(CONFIG)\obj\ejs.obj" del /Q "build\$(CONFIG)\obj\ejs.obj"
	if exist "build\$(CONFIG)\obj\ejsHandler.obj" del /Q "build\$(CONFIG)\obj\ejsHandler.obj"
	if exist "build\$(CONFIG)\obj\ejsLib.obj" del /Q "build\$(CONFIG)\obj\ejsLib.obj"
	if exist "build\$(CONFIG)\obj\ejsc.obj" del /Q "build\$(CONFIG)\obj\ejsc.obj"
	if exist "build\$(CONFIG)\obj\espLib.obj" del /Q "build\$(CONFIG)\obj\espLib.obj"
	if exist "build\$(CONFIG)\obj\estLib.obj" del /Q "build\$(CONFIG)\obj\estLib.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\manager.obj" del /Q "build\$(CONFIG)\obj\manager.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\mprSsl.obj" del /Q "build\$(CONFIG)\obj\mprSsl.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\phpHandler.obj" del /Q "build\$(CONFIG)\obj\phpHandler.obj"
	if exist "build\$(CONFIG)\obj\removeFiles.obj" del /Q "build\$(CONFIG)\obj\removeFiles.obj"
	if exist "build\$(CONFIG)\obj\slink.obj" del /Q "build\$(CONFIG)\obj\slink.obj"
	if exist "build\$(CONFIG)\obj\sqlite3.obj" del /Q "build\$(CONFIG)\obj\sqlite3.obj"
	if exist "build\$(CONFIG)\obj\sslModule.obj" del /Q "build\$(CONFIG)\obj\sslModule.obj"
	if exist "build\$(CONFIG)\obj\zlib.obj" del /Q "build\$(CONFIG)\obj\zlib.obj"
	if exist "build\$(CONFIG)\bin\appweb.exe" del /Q "build\$(CONFIG)\bin\appweb.exe"
	if exist "build\$(CONFIG)\bin\appweb.lib" del /Q "build\$(CONFIG)\bin\appweb.lib"
	if exist "build\$(CONFIG)\bin\appweb.pdb" del /Q "build\$(CONFIG)\bin\appweb.pdb"
	if exist "build\$(CONFIG)\bin\appweb.exp" del /Q "build\$(CONFIG)\bin\appweb.exp"
	if exist "build\$(CONFIG)\bin\appwebMonitor.exe" del /Q "build\$(CONFIG)\bin\appwebMonitor.exe"
	if exist "build\$(CONFIG)\bin\appwebMonitor.lib" del /Q "build\$(CONFIG)\bin\appwebMonitor.lib"
	if exist "build\$(CONFIG)\bin\appwebMonitor.pdb" del /Q "build\$(CONFIG)\bin\appwebMonitor.pdb"
	if exist "build\$(CONFIG)\bin\appwebMonitor.exp" del /Q "build\$(CONFIG)\bin\appwebMonitor.exp"
	if exist "build\$(CONFIG)\bin\appwebMonitor.ico" del /Q "build\$(CONFIG)\bin\appwebMonitor.ico"
	if exist "build\$(CONFIG)\bin\cgiProgram.exe" del /Q "build\$(CONFIG)\bin\cgiProgram.exe"
	if exist "build\$(CONFIG)\bin\cgiProgram.lib" del /Q "build\$(CONFIG)\bin\cgiProgram.lib"
	if exist "build\$(CONFIG)\bin\cgiProgram.pdb" del /Q "build\$(CONFIG)\bin\cgiProgram.pdb"
	if exist "build\$(CONFIG)\bin\cgiProgram.exp" del /Q "build\$(CONFIG)\bin\cgiProgram.exp"
	if exist "build\$(CONFIG)\bin\ejsc.exe" del /Q "build\$(CONFIG)\bin\ejsc.exe"
	if exist "build\$(CONFIG)\bin\ejsc.lib" del /Q "build\$(CONFIG)\bin\ejsc.lib"
	if exist "build\$(CONFIG)\bin\ejsc.pdb" del /Q "build\$(CONFIG)\bin\ejsc.pdb"
	if exist "build\$(CONFIG)\bin\ejsc.exp" del /Q "build\$(CONFIG)\bin\ejsc.exp"
	if exist "build\$(CONFIG)\bin\ejs.exe" del /Q "build\$(CONFIG)\bin\ejs.exe"
	if exist "build\$(CONFIG)\bin\ejs.lib" del /Q "build\$(CONFIG)\bin\ejs.lib"
	if exist "build\$(CONFIG)\bin\ejs.pdb" del /Q "build\$(CONFIG)\bin\ejs.pdb"
	if exist "build\$(CONFIG)\bin\ejs.exp" del /Q "build\$(CONFIG)\bin\ejs.exp"
	if exist "build\$(CONFIG)\bin\esp.conf" del /Q "build\$(CONFIG)\bin\esp.conf"
	if exist "build\$(CONFIG)\bin\ca.crt" del /Q "build\$(CONFIG)\bin\ca.crt"
	if exist "build\$(CONFIG)\bin\http.exe" del /Q "build\$(CONFIG)\bin\http.exe"
	if exist "build\$(CONFIG)\bin\http.lib" del /Q "build\$(CONFIG)\bin\http.lib"
	if exist "build\$(CONFIG)\bin\http.pdb" del /Q "build\$(CONFIG)\bin\http.pdb"
	if exist "build\$(CONFIG)\bin\http.exp" del /Q "build\$(CONFIG)\bin\http.exp"
	if exist "build\$(CONFIG)\bin\libappweb.dll" del /Q "build\$(CONFIG)\bin\libappweb.dll"
	if exist "build\$(CONFIG)\bin\libappweb.lib" del /Q "build\$(CONFIG)\bin\libappweb.lib"
	if exist "build\$(CONFIG)\bin\libappweb.pdb" del /Q "build\$(CONFIG)\bin\libappweb.pdb"
	if exist "build\$(CONFIG)\bin\libappweb.exp" del /Q "build\$(CONFIG)\bin\libappweb.exp"
	if exist "build\$(CONFIG)\bin\libejs.dll" del /Q "build\$(CONFIG)\bin\libejs.dll"
	if exist "build\$(CONFIG)\bin\libejs.lib" del /Q "build\$(CONFIG)\bin\libejs.lib"
	if exist "build\$(CONFIG)\bin\libejs.pdb" del /Q "build\$(CONFIG)\bin\libejs.pdb"
	if exist "build\$(CONFIG)\bin\libejs.exp" del /Q "build\$(CONFIG)\bin\libejs.exp"
	if exist "build\$(CONFIG)\bin\libest.dll" del /Q "build\$(CONFIG)\bin\libest.dll"
	if exist "build\$(CONFIG)\bin\libest.lib" del /Q "build\$(CONFIG)\bin\libest.lib"
	if exist "build\$(CONFIG)\bin\libest.pdb" del /Q "build\$(CONFIG)\bin\libest.pdb"
	if exist "build\$(CONFIG)\bin\libest.exp" del /Q "build\$(CONFIG)\bin\libest.exp"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmod_cgi.dll" del /Q "build\$(CONFIG)\bin\libmod_cgi.dll"
	if exist "build\$(CONFIG)\bin\libmod_cgi.lib" del /Q "build\$(CONFIG)\bin\libmod_cgi.lib"
	if exist "build\$(CONFIG)\bin\libmod_cgi.pdb" del /Q "build\$(CONFIG)\bin\libmod_cgi.pdb"
	if exist "build\$(CONFIG)\bin\libmod_cgi.exp" del /Q "build\$(CONFIG)\bin\libmod_cgi.exp"
	if exist "build\$(CONFIG)\bin\libmod_ejs.dll" del /Q "build\$(CONFIG)\bin\libmod_ejs.dll"
	if exist "build\$(CONFIG)\bin\libmod_ejs.lib" del /Q "build\$(CONFIG)\bin\libmod_ejs.lib"
	if exist "build\$(CONFIG)\bin\libmod_ejs.pdb" del /Q "build\$(CONFIG)\bin\libmod_ejs.pdb"
	if exist "build\$(CONFIG)\bin\libmod_ejs.exp" del /Q "build\$(CONFIG)\bin\libmod_ejs.exp"
	if exist "build\$(CONFIG)\bin\libmod_esp.dll" del /Q "build\$(CONFIG)\bin\libmod_esp.dll"
	if exist "build\$(CONFIG)\bin\libmod_esp.lib" del /Q "build\$(CONFIG)\bin\libmod_esp.lib"
	if exist "build\$(CONFIG)\bin\libmod_esp.pdb" del /Q "build\$(CONFIG)\bin\libmod_esp.pdb"
	if exist "build\$(CONFIG)\bin\libmod_esp.exp" del /Q "build\$(CONFIG)\bin\libmod_esp.exp"
	if exist "build\$(CONFIG)\bin\libmod_php.dll" del /Q "build\$(CONFIG)\bin\libmod_php.dll"
	if exist "build\$(CONFIG)\bin\libmod_php.lib" del /Q "build\$(CONFIG)\bin\libmod_php.lib"
	if exist "build\$(CONFIG)\bin\libmod_php.pdb" del /Q "build\$(CONFIG)\bin\libmod_php.pdb"
	if exist "build\$(CONFIG)\bin\libmod_php.exp" del /Q "build\$(CONFIG)\bin\libmod_php.exp"
	if exist "build\$(CONFIG)\bin\libmod_ssl.dll" del /Q "build\$(CONFIG)\bin\libmod_ssl.dll"
	if exist "build\$(CONFIG)\bin\libmod_ssl.lib" del /Q "build\$(CONFIG)\bin\libmod_ssl.lib"
	if exist "build\$(CONFIG)\bin\libmod_ssl.pdb" del /Q "build\$(CONFIG)\bin\libmod_ssl.pdb"
	if exist "build\$(CONFIG)\bin\libmod_ssl.exp" del /Q "build\$(CONFIG)\bin\libmod_ssl.exp"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmprssl.dll" del /Q "build\$(CONFIG)\bin\libmprssl.dll"
	if exist "build\$(CONFIG)\bin\libmprssl.lib" del /Q "build\$(CONFIG)\bin\libmprssl.lib"
	if exist "build\$(CONFIG)\bin\libmprssl.pdb" del /Q "build\$(CONFIG)\bin\libmprssl.pdb"
	if exist "build\$(CONFIG)\bin\libmprssl.exp" del /Q "build\$(CONFIG)\bin\libmprssl.exp"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\libslink.dll" del /Q "build\$(CONFIG)\bin\libslink.dll"
	if exist "build\$(CONFIG)\bin\libslink.lib" del /Q "build\$(CONFIG)\bin\libslink.lib"
	if exist "build\$(CONFIG)\bin\libslink.pdb" del /Q "build\$(CONFIG)\bin\libslink.pdb"
	if exist "build\$(CONFIG)\bin\libslink.exp" del /Q "build\$(CONFIG)\bin\libslink.exp"
	if exist "build\$(CONFIG)\bin\libsql.dll" del /Q "build\$(CONFIG)\bin\libsql.dll"
	if exist "build\$(CONFIG)\bin\libsql.lib" del /Q "build\$(CONFIG)\bin\libsql.lib"
	if exist "build\$(CONFIG)\bin\libsql.pdb" del /Q "build\$(CONFIG)\bin\libsql.pdb"
	if exist "build\$(CONFIG)\bin\libsql.exp" del /Q "build\$(CONFIG)\bin\libsql.exp"
	if exist "build\$(CONFIG)\bin\libzlib.dll" del /Q "build\$(CONFIG)\bin\libzlib.dll"
	if exist "build\$(CONFIG)\bin\libzlib.lib" del /Q "build\$(CONFIG)\bin\libzlib.lib"
	if exist "build\$(CONFIG)\bin\libzlib.pdb" del /Q "build\$(CONFIG)\bin\libzlib.pdb"
	if exist "build\$(CONFIG)\bin\libzlib.exp" del /Q "build\$(CONFIG)\bin\libzlib.exp"
	if exist "build\$(CONFIG)\bin\appman.exe" del /Q "build\$(CONFIG)\bin\appman.exe"
	if exist "build\$(CONFIG)\bin\appman.lib" del /Q "build\$(CONFIG)\bin\appman.lib"
	if exist "build\$(CONFIG)\bin\appman.pdb" del /Q "build\$(CONFIG)\bin\appman.pdb"
	if exist "build\$(CONFIG)\bin\appman.exp" del /Q "build\$(CONFIG)\bin\appman.exp"
	if exist "build\$(CONFIG)\bin\removeFiles.exe" del /Q "build\$(CONFIG)\bin\removeFiles.exe"
	if exist "build\$(CONFIG)\bin\removeFiles.lib" del /Q "build\$(CONFIG)\bin\removeFiles.lib"
	if exist "build\$(CONFIG)\bin\removeFiles.pdb" del /Q "build\$(CONFIG)\bin\removeFiles.pdb"
	if exist "build\$(CONFIG)\bin\removeFiles.exp" del /Q "build\$(CONFIG)\bin\removeFiles.exp"


#
#   me.h
#
build\$(CONFIG)\inc\me.h: $(DEPS_1)

#
#   osdep.h
#
DEPS_2 = $(DEPS_2) src\paks\osdep\osdep.h
DEPS_2 = $(DEPS_2) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_2)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\osdep\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_3 = $(DEPS_3) src\paks\mpr\mpr.h
DEPS_3 = $(DEPS_3) build\$(CONFIG)\inc\me.h
DEPS_3 = $(DEPS_3) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_3)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\mpr\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   http.h
#
DEPS_4 = $(DEPS_4) src\paks\http\http.h
DEPS_4 = $(DEPS_4) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_4)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\http\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   customize.h
#
DEPS_5 = $(DEPS_5) src\customize.h

build\$(CONFIG)\inc\customize.h: $(DEPS_5)
	@echo ..... [Copy] build\$(CONFIG)\inc\customize.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\customize.h+modified build\$(CONFIG)\inc\customize.h $(LOG)

#
#   appweb.h
#
DEPS_6 = $(DEPS_6) src\appweb.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\osdep.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\mpr.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\http.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\customize.h

build\$(CONFIG)\inc\appweb.h: $(DEPS_6)
	@echo ..... [Copy] build\$(CONFIG)\inc\appweb.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\appweb.h+modified build\$(CONFIG)\inc\appweb.h $(LOG)

#
#   appwebMonitor.h
#
DEPS_7 = $(DEPS_7) src\server\windows\appwebMonitor.h

build\$(CONFIG)\inc\appwebMonitor.h: $(DEPS_7)
	@echo ..... [Copy] build\$(CONFIG)\inc\appwebMonitor.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\server\windows\appwebMonitor.h+modified build\$(CONFIG)\inc\appwebMonitor.h $(LOG)

#
#   ejs.h
#
DEPS_8 = $(DEPS_8) src\paks\ejs\ejs.h

build\$(CONFIG)\inc\ejs.h: $(DEPS_8)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejs.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\ejs\ejs.h+modified build\$(CONFIG)\inc\ejs.h $(LOG)

#
#   ejs.slots.h
#
DEPS_9 = $(DEPS_9) src\paks\ejs\ejs.slots.h

build\$(CONFIG)\inc\ejs.slots.h: $(DEPS_9)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejs.slots.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\ejs\ejs.slots.h+modified build\$(CONFIG)\inc\ejs.slots.h $(LOG)

#
#   ejsByteGoto.h
#
DEPS_10 = $(DEPS_10) src\paks\ejs\ejsByteGoto.h

build\$(CONFIG)\inc\ejsByteGoto.h: $(DEPS_10)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejsByteGoto.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\ejs\ejsByteGoto.h+modified build\$(CONFIG)\inc\ejsByteGoto.h $(LOG)

#
#   esp.h
#
DEPS_11 = $(DEPS_11) src\paks\esp\esp.h
DEPS_11 = $(DEPS_11) build\$(CONFIG)\inc\me.h
DEPS_11 = $(DEPS_11) build\$(CONFIG)\inc\osdep.h
DEPS_11 = $(DEPS_11) build\$(CONFIG)\inc\appweb.h
DEPS_11 = $(DEPS_11) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\inc\esp.h: $(DEPS_11)
	@echo ..... [Copy] build\$(CONFIG)\inc\esp.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\esp\esp.h+modified build\$(CONFIG)\inc\esp.h $(LOG)

#
#   est.h
#
DEPS_12 = $(DEPS_12) src\paks\est\est.h
DEPS_12 = $(DEPS_12) build\$(CONFIG)\inc\me.h
DEPS_12 = $(DEPS_12) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\est.h: $(DEPS_12)
	@echo ..... [Copy] build\$(CONFIG)\inc\est.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\est\est.h+modified build\$(CONFIG)\inc\est.h $(LOG)

#
#   monitorResources.h
#
DEPS_13 = $(DEPS_13) src\server\windows\monitorResources.h

build\$(CONFIG)\inc\monitorResources.h: $(DEPS_13)
	@echo ..... [Copy] build\$(CONFIG)\inc\monitorResources.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\server\windows\monitorResources.h+modified build\$(CONFIG)\inc\monitorResources.h $(LOG)

#
#   pcre.h
#
DEPS_14 = $(DEPS_14) src\paks\pcre\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_14)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\pcre\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   sqlite3.h
#
DEPS_15 = $(DEPS_15) src\paks\sqlite\sqlite3.h

build\$(CONFIG)\inc\sqlite3.h: $(DEPS_15)
	@echo ..... [Copy] build\$(CONFIG)\inc\sqlite3.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\sqlite\sqlite3.h+modified build\$(CONFIG)\inc\sqlite3.h $(LOG)

#
#   zlib.h
#
DEPS_16 = $(DEPS_16) src\paks\zlib\zlib.h

build\$(CONFIG)\inc\zlib.h: $(DEPS_16)
	@echo ..... [Copy] build\$(CONFIG)\inc\zlib.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\zlib\zlib.h+modified build\$(CONFIG)\inc\zlib.h $(LOG)

#
#   appweb.obj
#
DEPS_17 = $(DEPS_17) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\appweb.obj: \
    src\server\appweb.c $(DEPS_17)
	@echo .. [Compile] build\$(CONFIG)\obj\appweb.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appweb.obj -Fd$(BUILD)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\appweb.c $(LOG)

#
#   appwebMonitor.obj
#
DEPS_18 = $(DEPS_18) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\appwebMonitor.obj: \
    src\server\windows\appwebMonitor.c $(DEPS_18)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebMonitor.obj
	"$(CC)" -c -Fo$(BUILD)\obj\appwebMonitor.obj -Fd$(BUILD)\obj\appwebMonitor.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\windows\appwebMonitor.c $(LOG)

#
#   appwebMonitor.res
#
build\$(CONFIG)\obj\appwebMonitor.res: \
        src\server\windows\appwebMonitor.rc $(DEPS_19)
	@echo .. [Compile] build\$(CONFIG)\obj\appwebMonitor.res
	"$(RC)" -nologo -Fo $(BUILD)\obj\appwebMonitor.res src\server\windows\appwebMonitor.rc

#
#   cgiHandler.obj
#
DEPS_20 = $(DEPS_20) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\cgiHandler.obj: \
    src\modules\cgiHandler.c $(DEPS_20)
	@echo .. [Compile] build\$(CONFIG)\obj\cgiHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\cgiHandler.obj -Fd$(BUILD)\obj\cgiHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\cgiHandler.c $(LOG)

#
#   cgiProgram.obj
#
build\$(CONFIG)\obj\cgiProgram.obj: \
    src\utils\cgiProgram.c $(DEPS_21)
	@echo .. [Compile] build\$(CONFIG)\obj\cgiProgram.obj
	"$(CC)" -c -Fo$(BUILD)\obj\cgiProgram.obj -Fd$(BUILD)\obj\cgiProgram.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\cgiProgram.c $(LOG)

#
#   config.obj
#
DEPS_22 = $(DEPS_22) build\$(CONFIG)\inc\appweb.h
DEPS_22 = $(DEPS_22) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\config.obj: \
    src\config.c $(DEPS_22)
	@echo .. [Compile] build\$(CONFIG)\obj\config.obj
	"$(CC)" -c -Fo$(BUILD)\obj\config.obj -Fd$(BUILD)\obj\config.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\config.c $(LOG)

#
#   convenience.obj
#
DEPS_23 = $(DEPS_23) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\convenience.obj: \
    src\convenience.c $(DEPS_23)
	@echo .. [Compile] build\$(CONFIG)\obj\convenience.obj
	"$(CC)" -c -Fo$(BUILD)\obj\convenience.obj -Fd$(BUILD)\obj\convenience.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\convenience.c $(LOG)

#
#   ejs.h
#
src\paks\ejs\ejs.h: $(DEPS_24)

#
#   ejs.obj
#
DEPS_25 = $(DEPS_25) src\paks\ejs\ejs.h

build\$(CONFIG)\obj\ejs.obj: \
    src\paks\ejs\ejs.c $(DEPS_25)
	@echo .. [Compile] build\$(CONFIG)\obj\ejs.obj
	"$(CC)" -c -Fo$(BUILD)\obj\ejs.obj -Fd$(BUILD)\obj\ejs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\ejs\ejs.c $(LOG)

#
#   ejsHandler.obj
#
DEPS_26 = $(DEPS_26) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\ejsHandler.obj: \
    src\modules\ejsHandler.c $(DEPS_26)
	@echo .. [Compile] build\$(CONFIG)\obj\ejsHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\ejsHandler.obj -Fd$(BUILD)\obj\ejsHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\ejsHandler.c $(LOG)

#
#   ejsLib.obj
#
DEPS_27 = $(DEPS_27) src\paks\ejs\ejs.h
DEPS_27 = $(DEPS_27) build\$(CONFIG)\inc\mpr.h
DEPS_27 = $(DEPS_27) build\$(CONFIG)\inc\pcre.h
DEPS_27 = $(DEPS_27) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\obj\ejsLib.obj: \
    src\paks\ejs\ejsLib.c $(DEPS_27)
	@echo .. [Compile] build\$(CONFIG)\obj\ejsLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\ejsLib.obj -Fd$(BUILD)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\ejs\ejsLib.c $(LOG)

#
#   ejsc.obj
#
DEPS_28 = $(DEPS_28) src\paks\ejs\ejs.h

build\$(CONFIG)\obj\ejsc.obj: \
    src\paks\ejs\ejsc.c $(DEPS_28)
	@echo .. [Compile] build\$(CONFIG)\obj\ejsc.obj
	"$(CC)" -c -Fo$(BUILD)\obj\ejsc.obj -Fd$(BUILD)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\ejs\ejsc.c $(LOG)

#
#   espLib.obj
#
DEPS_29 = $(DEPS_29) build\$(CONFIG)\inc\esp.h
DEPS_29 = $(DEPS_29) build\$(CONFIG)\inc\pcre.h
DEPS_29 = $(DEPS_29) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\obj\espLib.obj: \
    src\paks\esp\espLib.c $(DEPS_29)
	@echo .. [Compile] build\$(CONFIG)\obj\espLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\espLib.obj -Fd$(BUILD)\obj\espLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\esp\espLib.c $(LOG)

#
#   estLib.obj
#
DEPS_30 = $(DEPS_30) build\$(CONFIG)\inc\est.h

build\$(CONFIG)\obj\estLib.obj: \
    src\paks\est\estLib.c $(DEPS_30)
	@echo .. [Compile] build\$(CONFIG)\obj\estLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\estLib.obj -Fd$(BUILD)\obj\estLib.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) $(IFLAGS) src\paks\est\estLib.c $(LOG)

#
#   http.obj
#
DEPS_31 = $(DEPS_31) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\obj\http.obj: \
    src\paks\http\http.c $(DEPS_31)
	@echo .. [Compile] build\$(CONFIG)\obj\http.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\http\http.c $(LOG)

#
#   httpLib.obj
#
DEPS_32 = $(DEPS_32) build\$(CONFIG)\inc\http.h

build\$(CONFIG)\obj\httpLib.obj: \
    src\paks\http\httpLib.c $(DEPS_32)
	@echo .. [Compile] build\$(CONFIG)\obj\httpLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\http\httpLib.c $(LOG)

#
#   manager.obj
#
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\manager.obj: \
    src\paks\mpr\manager.c $(DEPS_33)
	@echo .. [Compile] build\$(CONFIG)\obj\manager.obj
	"$(CC)" -c -Fo$(BUILD)\obj\manager.obj -Fd$(BUILD)\obj\manager.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\mpr\manager.c $(LOG)

#
#   mprLib.obj
#
DEPS_34 = $(DEPS_34) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    src\paks\mpr\mprLib.c $(DEPS_34)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\mpr\mprLib.c $(LOG)

#
#   mprSsl.obj
#
DEPS_35 = $(DEPS_35) build\$(CONFIG)\inc\me.h
DEPS_35 = $(DEPS_35) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\mprSsl.obj: \
    src\paks\mpr\mprSsl.c $(DEPS_35)
	@echo .. [Compile] build\$(CONFIG)\obj\mprSsl.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprSsl.obj -Fd$(BUILD)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\paks\mpr\mprSsl.c $(LOG)

#
#   pcre.obj
#
DEPS_36 = $(DEPS_36) build\$(CONFIG)\inc\me.h
DEPS_36 = $(DEPS_36) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    src\paks\pcre\pcre.c $(DEPS_36)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\pcre\pcre.c $(LOG)

#
#   phpHandler.obj
#
DEPS_37 = $(DEPS_37) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\phpHandler.obj: \
    src\modules\phpHandler.c $(DEPS_37)
	@echo .. [Compile] build\$(CONFIG)\obj\phpHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\phpHandler.obj -Fd$(BUILD)\obj\phpHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) "-I$(ME_COM_PHP_PATH)" "-I$(ME_COM_PHP_PATH)\main" "-I$(ME_COM_PHP_PATH)\Zend" "-I$(ME_COM_PHP_PATH)\TSRM" src\modules\phpHandler.c $(LOG)

#
#   removeFiles.obj
#
DEPS_38 = $(DEPS_38) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\obj\removeFiles.obj: \
    package\windows\removeFiles.c $(DEPS_38)
	@echo .. [Compile] build\$(CONFIG)\obj\removeFiles.obj
	"$(CC)" -c -Fo$(BUILD)\obj\removeFiles.obj -Fd$(BUILD)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) package\windows\removeFiles.c $(LOG)

#
#   slink.obj
#
DEPS_39 = $(DEPS_39) build\$(CONFIG)\inc\mpr.h
DEPS_39 = $(DEPS_39) build\$(CONFIG)\inc\esp.h

build\$(CONFIG)\obj\slink.obj: \
    src\server\slink.c $(DEPS_39)
	@echo .. [Compile] build\$(CONFIG)\obj\slink.obj
	"$(CC)" -c -Fo$(BUILD)\obj\slink.obj -Fd$(BUILD)\obj\slink.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\slink.c $(LOG)

#
#   sqlite3.h
#
src\paks\sqlite\sqlite3.h: $(DEPS_40)

#
#   sqlite3.obj
#
DEPS_41 = $(DEPS_41) build\$(CONFIG)\inc\me.h
DEPS_41 = $(DEPS_41) src\paks\sqlite\sqlite3.h

build\$(CONFIG)\obj\sqlite3.obj: \
    src\paks\sqlite\sqlite3.c $(DEPS_41)
	@echo .. [Compile] build\$(CONFIG)\obj\sqlite3.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sqlite3.obj -Fd$(BUILD)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\sqlite\sqlite3.c $(LOG)

#
#   sslModule.obj
#
DEPS_42 = $(DEPS_42) build\$(CONFIG)\inc\appweb.h

build\$(CONFIG)\obj\sslModule.obj: \
    src\modules\sslModule.c $(DEPS_42)
	@echo .. [Compile] build\$(CONFIG)\obj\sslModule.obj
	"$(CC)" -c -Fo$(BUILD)\obj\sslModule.obj -Fd$(BUILD)\obj\sslModule.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\modules\sslModule.c $(LOG)

#
#   zlib.h
#
src\paks\zlib\zlib.h: $(DEPS_43)

#
#   zlib.obj
#
DEPS_44 = $(DEPS_44) build\$(CONFIG)\inc\me.h
DEPS_44 = $(DEPS_44) src\paks\zlib\zlib.h

build\$(CONFIG)\obj\zlib.obj: \
    src\paks\zlib\zlib.c $(DEPS_44)
	@echo .. [Compile] build\$(CONFIG)\obj\zlib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\zlib.obj -Fd$(BUILD)\obj\zlib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\zlib\zlib.c $(LOG)

#
#   libmpr
#
DEPS_45 = $(DEPS_45) build\$(CONFIG)\inc\mpr.h
DEPS_45 = $(DEPS_45) build\$(CONFIG)\obj\mprLib.obj

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_45)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\mprLib.obj" $(LIBS)  $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_46 = $(DEPS_46) build\$(CONFIG)\inc\pcre.h
DEPS_46 = $(DEPS_46) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_46)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\pcre.obj" $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_47 = $(DEPS_47) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_47 = $(DEPS_47) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_47 = $(DEPS_47) build\$(CONFIG)\inc\http.h
DEPS_47 = $(DEPS_47) build\$(CONFIG)\obj\httpLib.obj

LIBS_47 = $(LIBS_47) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_47 = $(LIBS_47) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_47)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\httpLib.obj" $(LIBPATHS_47) $(LIBS_47) $(LIBS_47) $(LIBS)  $(LOG)
!ENDIF

#
#   libappweb
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_48 = $(DEPS_48) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
DEPS_48 = $(DEPS_48) build\$(CONFIG)\bin\libmpr.dll
DEPS_48 = $(DEPS_48) build\$(CONFIG)\inc\appweb.h
DEPS_48 = $(DEPS_48) build\$(CONFIG)\inc\customize.h
DEPS_48 = $(DEPS_48) build\$(CONFIG)\obj\config.obj
DEPS_48 = $(DEPS_48) build\$(CONFIG)\obj\convenience.obj

!IF "$(ME_COM_HTTP)" == "1"
LIBS_48 = $(LIBS_48) libhttp.lib
!ENDIF
LIBS_48 = $(LIBS_48) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_48 = $(LIBS_48) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libappweb.dll: $(DEPS_48)
	@echo ..... [Link] build\$(CONFIG)\bin\libappweb.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libappweb.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\config.obj" "$(BUILD)\obj\convenience.obj" $(LIBPATHS_48) $(LIBS_48) $(LIBS_48) $(LIBS)  $(LOG)

#
#   libslink
#
DEPS_49 = $(DEPS_49) build\$(CONFIG)\obj\slink.obj

build\$(CONFIG)\bin\libslink.dll: $(DEPS_49)
	@echo ..... [Link] build\$(CONFIG)\bin\libslink.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libslink.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\slink.obj" $(LIBS)  $(LOG)

#
#   appweb
#
DEPS_50 = $(DEPS_50) build\$(CONFIG)\bin\libappweb.dll
DEPS_50 = $(DEPS_50) build\$(CONFIG)\bin\libslink.dll
DEPS_50 = $(DEPS_50) build\$(CONFIG)\obj\appweb.obj

LIBS_50 = $(LIBS_50) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_50 = $(LIBS_50) libhttp.lib
!ENDIF
LIBS_50 = $(LIBS_50) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_50 = $(LIBS_50) libpcre.lib
!ENDIF
LIBS_50 = $(LIBS_50) libslink.lib

build\$(CONFIG)\bin\appweb.exe: $(DEPS_50)
	@echo ..... [Link] build\$(CONFIG)\bin\appweb.exe
	"$(LD)" -out:$(BUILD)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\appweb.obj" $(LIBPATHS_50) $(LIBS_50) $(LIBS_50) $(LIBS)  $(LOG)

#
#   appwebMonitor
#
DEPS_51 = $(DEPS_51) build\$(CONFIG)\bin\libappweb.dll
DEPS_51 = $(DEPS_51) build\$(CONFIG)\inc\appwebMonitor.h
DEPS_51 = $(DEPS_51) build\$(CONFIG)\inc\monitorResources.h
DEPS_51 = $(DEPS_51) build\$(CONFIG)\obj\appwebMonitor.res
DEPS_51 = $(DEPS_51) build\$(CONFIG)\obj\appwebMonitor.obj

LIBS_51 = $(LIBS_51) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_51 = $(LIBS_51) libhttp.lib
!ENDIF
LIBS_51 = $(LIBS_51) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_51 = $(LIBS_51) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\appwebMonitor.exe: $(DEPS_51)
	@echo ..... [Link] build\$(CONFIG)\bin\appwebMonitor.exe
	"$(LD)" -out:$(BUILD)\bin\appwebMonitor.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\appwebMonitor.res" "$(BUILD)\obj\appwebMonitor.obj" shell32.lib ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib  $(LIBPATHS_51) $(LIBS_51) $(LIBS_51) $(LOG)

#
#   appwebMonitor.ico
#
DEPS_52 = $(DEPS_52) src\server\windows\appwebMonitor.ico

build\$(CONFIG)\bin\appwebMonitor.ico: $(DEPS_52)
	@echo ..... [Copy] build\$(CONFIG)\bin\appwebMonitor.ico
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\server\windows\appwebMonitor.ico+modified build\$(CONFIG)\bin\appwebMonitor.ico $(LOG)

!IF "$(ME_COM_CGI)" == "1"
#
#   cgiProgram
#
DEPS_53 = $(DEPS_53) build\$(CONFIG)\obj\cgiProgram.obj

build\$(CONFIG)\bin\cgiProgram.exe: $(DEPS_53)
	@echo ..... [Link] build\$(CONFIG)\bin\cgiProgram.exe
	"$(LD)" -out:$(BUILD)\bin\cgiProgram.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\cgiProgram.obj" $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_ZLIB)" == "1"
#
#   libzlib
#
DEPS_54 = $(DEPS_54) build\$(CONFIG)\inc\zlib.h
DEPS_54 = $(DEPS_54) build\$(CONFIG)\obj\zlib.obj

build\$(CONFIG)\bin\libzlib.dll: $(DEPS_54)
	@echo ..... [Link] build\$(CONFIG)\bin\libzlib.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libzlib.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\zlib.obj" $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   libejs
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_ZLIB)" == "1"
DEPS_55 = $(DEPS_55) build\$(CONFIG)\bin\libzlib.dll
!ENDIF
DEPS_55 = $(DEPS_55) build\$(CONFIG)\inc\ejs.h
DEPS_55 = $(DEPS_55) build\$(CONFIG)\inc\ejs.slots.h
DEPS_55 = $(DEPS_55) build\$(CONFIG)\inc\ejsByteGoto.h
DEPS_55 = $(DEPS_55) build\$(CONFIG)\obj\ejsLib.obj

!IF "$(ME_COM_HTTP)" == "1"
LIBS_55 = $(LIBS_55) libhttp.lib
!ENDIF
LIBS_55 = $(LIBS_55) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_55 = $(LIBS_55) libpcre.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_55 = $(LIBS_55) libzlib.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_55 = $(LIBS_55) libsql.lib
!ENDIF

build\$(CONFIG)\bin\libejs.dll: $(DEPS_55)
	@echo ..... [Link] build\$(CONFIG)\bin\libejs.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejsLib.obj" $(LIBPATHS_55) $(LIBS_55) $(LIBS_55) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   ejsc
#
DEPS_56 = $(DEPS_56) build\$(CONFIG)\bin\libejs.dll
DEPS_56 = $(DEPS_56) build\$(CONFIG)\obj\ejsc.obj

LIBS_56 = $(LIBS_56) libejs.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_56 = $(LIBS_56) libhttp.lib
!ENDIF
LIBS_56 = $(LIBS_56) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_56 = $(LIBS_56) libpcre.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_56 = $(LIBS_56) libzlib.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_56 = $(LIBS_56) libsql.lib
!ENDIF

build\$(CONFIG)\bin\ejsc.exe: $(DEPS_56)
	@echo ..... [Link] build\$(CONFIG)\bin\ejsc.exe
	"$(LD)" -out:$(BUILD)\bin\ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejsc.obj" $(LIBPATHS_56) $(LIBS_56) $(LIBS_56) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   ejs.mod
#
DEPS_57 = $(DEPS_57) src\paks\ejs\ejs.es
DEPS_57 = $(DEPS_57) build\$(CONFIG)\bin\ejsc.exe

build\$(CONFIG)\bin\ejs.mod: $(DEPS_57)
	cd src\paks\ejs
	@echo .. [Compile] ejs.mod
	..\..\..\$(BUILD)\bin\ejsc --out ../../../$(BUILD)/bin/ejs.mod --optimize 9 --bind --require null ejs.es
	cd ..\..\..
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   ejscmd
#
DEPS_58 = $(DEPS_58) build\$(CONFIG)\bin\libejs.dll
DEPS_58 = $(DEPS_58) build\$(CONFIG)\obj\ejs.obj

LIBS_58 = $(LIBS_58) libejs.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_58 = $(LIBS_58) libhttp.lib
!ENDIF
LIBS_58 = $(LIBS_58) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_58 = $(LIBS_58) libpcre.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_58 = $(LIBS_58) libzlib.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_58 = $(LIBS_58) libsql.lib
!ENDIF

build\$(CONFIG)\bin\ejs.exe: $(DEPS_58)
	@echo ..... [Link] build\$(CONFIG)\bin\ejs.exe
	"$(LD)" -out:$(BUILD)\bin\ejs.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejs.obj" $(LIBPATHS_58) $(LIBS_58) $(LIBS_58) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_ESP)" == "1"
#
#   esp.conf
#
DEPS_59 = $(DEPS_59) src\paks\esp\esp.conf

build\$(CONFIG)\bin\esp.conf: $(DEPS_59)
	@echo ..... [Copy] build\$(CONFIG)\bin\esp.conf
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\paks\esp\esp.conf+modified build\$(CONFIG)\bin\esp.conf $(LOG)
!ENDIF


!IF "$(ME_COM_ESP)" == "1"
#
#   libmod_esp
#
DEPS_60 = $(DEPS_60) build\$(CONFIG)\bin\libappweb.dll
DEPS_60 = $(DEPS_60) build\$(CONFIG)\inc\esp.h
DEPS_60 = $(DEPS_60) build\$(CONFIG)\obj\espLib.obj

LIBS_60 = $(LIBS_60) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_60 = $(LIBS_60) libhttp.lib
!ENDIF
LIBS_60 = $(LIBS_60) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_60 = $(LIBS_60) libpcre.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_60 = $(LIBS_60) libsql.lib
!ENDIF

build\$(CONFIG)\bin\libmod_esp.dll: $(DEPS_60)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_esp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmod_esp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\espLib.obj" $(LIBPATHS_60) $(LIBS_60) $(LIBS_60) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_ESP)" == "1"
#
#   genslink
#
genslink: $(DEPS_61)
	cd src\server
	@echo ... [Create] slink.c
	esp --static --genlink slink.c compile
	cd ..\..
!ENDIF

#
#   http-ca-crt
#
DEPS_62 = $(DEPS_62) src\paks\http\ca.crt

build\$(CONFIG)\bin\ca.crt: $(DEPS_62)
	@echo ..... [Copy] build\$(CONFIG)\bin\ca.crt
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\paks\http\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   httpcmd
#
DEPS_63 = $(DEPS_63) build\$(CONFIG)\bin\libhttp.dll
DEPS_63 = $(DEPS_63) build\$(CONFIG)\obj\http.obj

LIBS_63 = $(LIBS_63) libhttp.lib
LIBS_63 = $(LIBS_63) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_63 = $(LIBS_63) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\http.exe: $(DEPS_63)
	@echo ..... [Link] build\$(CONFIG)\bin\http.exe
	"$(LD)" -out:$(BUILD)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\http.obj" $(LIBPATHS_63) $(LIBS_63) $(LIBS_63) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EST)" == "1"
#
#   libest
#
DEPS_64 = $(DEPS_64) build\$(CONFIG)\inc\est.h
DEPS_64 = $(DEPS_64) build\$(CONFIG)\obj\estLib.obj

build\$(CONFIG)\bin\libest.dll: $(DEPS_64)
	@echo ..... [Link] build\$(CONFIG)\bin\libest.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\estLib.obj" $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_CGI)" == "1"
#
#   libmod_cgi
#
DEPS_65 = $(DEPS_65) build\$(CONFIG)\bin\libappweb.dll
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\cgiHandler.obj

LIBS_65 = $(LIBS_65) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_65 = $(LIBS_65) libhttp.lib
!ENDIF
LIBS_65 = $(LIBS_65) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_65 = $(LIBS_65) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libmod_cgi.dll: $(DEPS_65)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_cgi.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmod_cgi.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\cgiHandler.obj" $(LIBPATHS_65) $(LIBS_65) $(LIBS_65) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   libmod_ejs
#
DEPS_66 = $(DEPS_66) build\$(CONFIG)\bin\libappweb.dll
DEPS_66 = $(DEPS_66) build\$(CONFIG)\bin\libejs.dll
DEPS_66 = $(DEPS_66) build\$(CONFIG)\obj\ejsHandler.obj

LIBS_66 = $(LIBS_66) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_66 = $(LIBS_66) libhttp.lib
!ENDIF
LIBS_66 = $(LIBS_66) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_66 = $(LIBS_66) libpcre.lib
!ENDIF
LIBS_66 = $(LIBS_66) libejs.lib
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_66 = $(LIBS_66) libzlib.lib
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
LIBS_66 = $(LIBS_66) libsql.lib
!ENDIF

build\$(CONFIG)\bin\libmod_ejs.dll: $(DEPS_66)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_ejs.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmod_ejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejsHandler.obj" $(LIBPATHS_66) $(LIBS_66) $(LIBS_66) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_PHP)" == "1"
#
#   libmod_php
#
DEPS_67 = $(DEPS_67) build\$(CONFIG)\bin\libappweb.dll
DEPS_67 = $(DEPS_67) build\$(CONFIG)\obj\phpHandler.obj

LIBS_67 = $(LIBS_67) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_67 = $(LIBS_67) libhttp.lib
!ENDIF
LIBS_67 = $(LIBS_67) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_67 = $(LIBS_67) libpcre.lib
!ENDIF
LIBS_67 = $(LIBS_67) libphp5ts.lib
LIBPATHS_67 = $(LIBPATHS_67) -libpath:$(ME_COM_PHP_PATH)/libs

build\$(CONFIG)\bin\libmod_php.dll: $(DEPS_67)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_php.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmod_php.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\phpHandler.obj" $(LIBPATHS_67) $(LIBS_67) $(LIBS_67) $(LIBS)  $(LOG)
!ENDIF

#
#   libmprssl
#
DEPS_68 = $(DEPS_68) build\$(CONFIG)\bin\libmpr.dll
DEPS_68 = $(DEPS_68) build\$(CONFIG)\obj\mprSsl.obj

LIBS_68 = $(LIBS_68) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_68 = $(LIBS_68) libeay32.lib
LIBPATHS_68 = $(LIBPATHS_68) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_68 = $(LIBS_68) libssleay32.lib
LIBPATHS_68 = $(LIBPATHS_68) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_68 = $(LIBS_68) libest.lib
!ENDIF

build\$(CONFIG)\bin\libmprssl.dll: $(DEPS_68)
	@echo ..... [Link] build\$(CONFIG)\bin\libmprssl.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\mprSsl.obj" $(LIBPATHS_68) $(LIBS_68) $(LIBS_68) $(LIBS)  $(LOG)

!IF "$(ME_COM_SSL)" == "1"
#
#   libmod_ssl
#
DEPS_69 = $(DEPS_69) build\$(CONFIG)\bin\libappweb.dll
DEPS_69 = $(DEPS_69) build\$(CONFIG)\bin\libmprssl.dll
DEPS_69 = $(DEPS_69) build\$(CONFIG)\obj\sslModule.obj

LIBS_69 = $(LIBS_69) libappweb.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_69 = $(LIBS_69) libhttp.lib
!ENDIF
LIBS_69 = $(LIBS_69) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_69 = $(LIBS_69) libpcre.lib
!ENDIF
LIBS_69 = $(LIBS_69) libmprssl.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_69 = $(LIBS_69) libeay32.lib
LIBPATHS_69 = $(LIBPATHS_69) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_69 = $(LIBS_69) libssleay32.lib
LIBPATHS_69 = $(LIBPATHS_69) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_69 = $(LIBS_69) libest.lib
!ENDIF

build\$(CONFIG)\bin\libmod_ssl.dll: $(DEPS_69)
	@echo ..... [Link] build\$(CONFIG)\bin\libmod_ssl.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmod_ssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\sslModule.obj" $(LIBPATHS_69) $(LIBS_69) $(LIBS_69) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_SQLITE)" == "1"
#
#   libsql
#
DEPS_70 = $(DEPS_70) build\$(CONFIG)\inc\sqlite3.h
DEPS_70 = $(DEPS_70) build\$(CONFIG)\obj\sqlite3.obj

build\$(CONFIG)\bin\libsql.dll: $(DEPS_70)
	@echo ..... [Link] build\$(CONFIG)\bin\libsql.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libsql.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\sqlite3.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   manager
#
DEPS_71 = $(DEPS_71) build\$(CONFIG)\bin\libmpr.dll
DEPS_71 = $(DEPS_71) build\$(CONFIG)\obj\manager.obj

LIBS_71 = $(LIBS_71) libmpr.lib

build\$(CONFIG)\bin\appman.exe: $(DEPS_71)
	@echo ..... [Link] build\$(CONFIG)\bin\appman.exe
	"$(LD)" -out:$(BUILD)\bin\appman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\manager.obj" $(LIBPATHS_71) $(LIBS_71) $(LIBS_71) $(LIBS)  $(LOG)

#
#   removeFiles
#
DEPS_72 = $(DEPS_72) build\$(CONFIG)\obj\removeFiles.obj

build\$(CONFIG)\bin\removeFiles.exe: $(DEPS_72)
	@echo ..... [Link] build\$(CONFIG)\bin\removeFiles.exe
	"$(LD)" -out:$(BUILD)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\removeFiles.obj" $(LIBS)  $(LOG)

#
#   server-cache
#
src\server\cache: $(DEPS_73)
	cd src\server
	if not exist "cache" md "cache"
	cd ..\..


#
#   stop
#
DEPS_74 = $(DEPS_74) compile

stop: $(DEPS_74)
	cd .
	@./$(BUILD)/bin/appman stop disable uninstall >/dev/null 2>&1 ; true
	cd .

#
#   installBinary
#
installBinary: $(DEPS_75)
	cd .
	if not exist "$(ME_VAPP_PREFIX)\log" md "$(ME_VAPP_PREFIX)\log"
	if not exist "$(ME_VAPP_PREFIX)\cache" md "$(ME_VAPP_PREFIX)\cache"
	if not exist "$(ME_VAPP_PREFIX)\bin" md "$(ME_VAPP_PREFIX)\bin"
	copy /Y /B build\$(CONFIG)\bin\appweb.exe+modified "$(ME_VAPP_PREFIX)\bin\appweb.exe" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\appman.exe+modified "$(ME_VAPP_PREFIX)\bin\appman.exe" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\http.exe+modified "$(ME_VAPP_PREFIX)\bin\http.exe" $(LOG)
!IF "$(ME_COM_ESP)" == "1"
	copy /Y /B build\$(CONFIG)\bin\esp.exe+modified "$(ME_VAPP_PREFIX)\bin\appesp.exe" $(LOG)
!ENDIF
	copy /Y /B build\$(CONFIG)\bin\appwebMonitor.exe+modified "$(ME_VAPP_PREFIX)\bin\appwebMonitor.exe" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\appwebMonitor.ico+modified "$(ME_VAPP_PREFIX)\bin\appwebMonitor.ico" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libappweb.dll+modified "$(ME_VAPP_PREFIX)\bin\libappweb.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libhttp.dll+modified "$(ME_VAPP_PREFIX)\bin\libhttp.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libmpr.dll+modified "$(ME_VAPP_PREFIX)\bin\libmpr.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libpcre.dll+modified "$(ME_VAPP_PREFIX)\bin\libpcre.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libslink.dll+modified "$(ME_VAPP_PREFIX)\bin\libslink.dll" $(LOG)
!IF "$(ME_COM_SSL)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libmprssl.dll+modified "$(ME_VAPP_PREFIX)\bin\libmprssl.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libmod_ssl.dll+modified "$(ME_VAPP_PREFIX)\bin\libmod_ssl.dll" $(LOG)
!ENDIF
!IF "$(ME_COM_SSL)" == "1"
	copy /Y /B src\paks\est\ca.crt+modified "$(ME_VAPP_PREFIX)\bin\ca.crt" $(LOG)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libeay32.dll+modified "$(ME_VAPP_PREFIX)\bin\libeay32.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\ssleay32.dll+modified "$(ME_VAPP_PREFIX)\bin\ssleay32.dll" $(LOG)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libest.dll+modified "$(ME_VAPP_PREFIX)\bin\libest.dll" $(LOG)
!ENDIF
!IF "$(ME_COM_SQLITE)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libsql.dll+modified "$(ME_VAPP_PREFIX)\bin\libsql.dll" $(LOG)
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libmod_esp.dll+modified "$(ME_VAPP_PREFIX)\bin\libmod_esp.dll" $(LOG)
!ENDIF
!IF "$(ME_COM_CGI)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libmod_cgi.dll+modified "$(ME_VAPP_PREFIX)\bin\libmod_cgi.dll" $(LOG)
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libejs.dll+modified "$(ME_VAPP_PREFIX)\bin\libejs.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libmod_ejs.dll+modified "$(ME_VAPP_PREFIX)\bin\libmod_ejs.dll" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libzlib.dll+modified "$(ME_VAPP_PREFIX)\bin\libzlib.dll" $(LOG)
!ENDIF
!IF "$(ME_COM_PHP)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libmod_php.dll+modified "$(ME_VAPP_PREFIX)\bin\libmod_php.dll" $(LOG)
!ENDIF
!IF "$(ME_COM_PHP)" == "1"
	copy /Y /B build\$(CONFIG)\bin\php5ts.dll+modified "$(ME_VAPP_PREFIX)\bin\php5ts.dll" $(LOG)
!ENDIF
	copy /Y /B build\$(CONFIG)\bin\libappweb.lib+modified "$(ME_VAPP_PREFIX)\bin\libappweb.lib" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libpcre.lib+modified "$(ME_VAPP_PREFIX)\bin\libpcre.lib" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libhttp.lib+modified "$(ME_VAPP_PREFIX)\bin\libhttp.lib" $(LOG)
	copy /Y /B build\$(CONFIG)\bin\libmpr.lib+modified "$(ME_VAPP_PREFIX)\bin\libmpr.lib" $(LOG)
!IF "$(ME_COM_SSL)" == "1"
	copy /Y /B build\$(CONFIG)\bin\libmprssl.lib+modified "$(ME_VAPP_PREFIX)\bin\libmprssl.lib" $(LOG)
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0" md "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0"
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client" md "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client"
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client\assets" md "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client\assets"
	copy /Y /B src\paks\esp-html-mvc\client\assets\favicon.ico+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client\assets\favicon.ico" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client\css" md "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client\css"
	copy /Y /B src\paks\esp-html-mvc\client\css\all.css+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client\css\all.css" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\client\css\all.less+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client\css\all.less" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\client\index.esp+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\client\index.esp" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\css" md "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\css"
	copy /Y /B src\paks\esp-html-mvc\css\app.less+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\css\app.less" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\css\theme.less+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\css\theme.less" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\generate" md "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\generate"
	copy /Y /B src\paks\esp-html-mvc\generate\appweb.conf+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\generate\appweb.conf" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\generate\controller.c+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\generate\controller.c" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\generate\controllerSingleton.c+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\generate\controllerSingleton.c" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\generate\edit.esp+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\generate\edit.esp" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\generate\list.esp+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\generate\list.esp" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\layouts" md "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\layouts"
	copy /Y /B src\paks\esp-html-mvc\layouts\default.esp+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\layouts\default.esp" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\LICENSE.md+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\LICENSE.md" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\package.json+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\package.json" $(LOG)
	copy /Y /B src\paks\esp-html-mvc\README.md+modified "$(ME_VAPP_PREFIX)\esp\esp-html-mvc\5.2.0\README.md" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0" md "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0"
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\generate" md "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\generate"
	copy /Y /B src\paks\esp-mvc\generate\appweb.conf+modified "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\generate\appweb.conf" $(LOG)
	copy /Y /B src\paks\esp-mvc\generate\controller.c+modified "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\generate\controller.c" $(LOG)
	copy /Y /B src\paks\esp-mvc\generate\migration.c+modified "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\generate\migration.c" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\generate\src" md "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\generate\src"
	copy /Y /B src\paks\esp-mvc\generate\src\app.c+modified "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\generate\src\app.c" $(LOG)
	copy /Y /B src\paks\esp-mvc\LICENSE.md+modified "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\LICENSE.md" $(LOG)
	copy /Y /B src\paks\esp-mvc\package.json+modified "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\package.json" $(LOG)
	copy /Y /B src\paks\esp-mvc\README.md+modified "$(ME_VAPP_PREFIX)\esp\esp-mvc\5.2.0\README.md" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-server\5.2.0" md "$(ME_VAPP_PREFIX)\esp\esp-server\5.2.0"
	if not exist "$(ME_VAPP_PREFIX)\esp\esp-server\5.2.0\generate" md "$(ME_VAPP_PREFIX)\esp\esp-server\5.2.0\generate"
	copy /Y /B src\paks\esp-server\generate\appweb.conf+modified "$(ME_VAPP_PREFIX)\esp\esp-server\5.2.0\generate\appweb.conf" $(LOG)
	copy /Y /B src\paks\esp-server\LICENSE.md+modified "$(ME_VAPP_PREFIX)\esp\esp-server\5.2.0\LICENSE.md" $(LOG)
	copy /Y /B src\paks\esp-server\package.json+modified "$(ME_VAPP_PREFIX)\esp\esp-server\5.2.0\package.json" $(LOG)
	copy /Y /B src\paks\esp-server\README.md+modified "$(ME_VAPP_PREFIX)\esp\esp-server\5.2.0\README.md" $(LOG)
!ENDIF
!IF "$(ME_COM_ESP)" == "1"
	copy /Y /B build\$(CONFIG)\bin\esp.conf+modified "$(ME_VAPP_PREFIX)\bin\esp.conf" $(LOG)
!ENDIF
	if not exist "$(ME_VAPP_PREFIX)\web\bench" md "$(ME_VAPP_PREFIX)\web\bench"
	copy /Y /B src\server\web\bench\1b.html+modified "$(ME_VAPP_PREFIX)\web\bench\1b.html" $(LOG)
	copy /Y /B src\server\web\bench\4k.html+modified "$(ME_VAPP_PREFIX)\web\bench\4k.html" $(LOG)
	copy /Y /B src\server\web\bench\64k.html+modified "$(ME_VAPP_PREFIX)\web\bench\64k.html" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\web" md "$(ME_VAPP_PREFIX)\web"
	copy /Y /B src\server\web\favicon.ico+modified "$(ME_VAPP_PREFIX)\web\favicon.ico" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\web\icons" md "$(ME_VAPP_PREFIX)\web\icons"
	copy /Y /B src\server\web\icons\back.gif+modified "$(ME_VAPP_PREFIX)\web\icons\back.gif" $(LOG)
	copy /Y /B src\server\web\icons\blank.gif+modified "$(ME_VAPP_PREFIX)\web\icons\blank.gif" $(LOG)
	copy /Y /B src\server\web\icons\compressed.gif+modified "$(ME_VAPP_PREFIX)\web\icons\compressed.gif" $(LOG)
	copy /Y /B src\server\web\icons\folder.gif+modified "$(ME_VAPP_PREFIX)\web\icons\folder.gif" $(LOG)
	copy /Y /B src\server\web\icons\parent.gif+modified "$(ME_VAPP_PREFIX)\web\icons\parent.gif" $(LOG)
	copy /Y /B src\server\web\icons\space.gif+modified "$(ME_VAPP_PREFIX)\web\icons\space.gif" $(LOG)
	copy /Y /B src\server\web\icons\text.gif+modified "$(ME_VAPP_PREFIX)\web\icons\text.gif" $(LOG)
	copy /Y /B src\server\web\iehacks.css+modified "$(ME_VAPP_PREFIX)\web\iehacks.css" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\web\images" md "$(ME_VAPP_PREFIX)\web\images"
	copy /Y /B src\server\web\images\banner.jpg+modified "$(ME_VAPP_PREFIX)\web\images\banner.jpg" $(LOG)
	copy /Y /B src\server\web\images\bottomShadow.jpg+modified "$(ME_VAPP_PREFIX)\web\images\bottomShadow.jpg" $(LOG)
	copy /Y /B src\server\web\images\shadow.jpg+modified "$(ME_VAPP_PREFIX)\web\images\shadow.jpg" $(LOG)
	copy /Y /B src\server\web\index.html+modified "$(ME_VAPP_PREFIX)\web\index.html" $(LOG)
	copy /Y /B src\server\web\min-index.html+modified "$(ME_VAPP_PREFIX)\web\min-index.html" $(LOG)
	copy /Y /B src\server\web\print.css+modified "$(ME_VAPP_PREFIX)\web\print.css" $(LOG)
	copy /Y /B src\server\web\screen.css+modified "$(ME_VAPP_PREFIX)\web\screen.css" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\web\test" md "$(ME_VAPP_PREFIX)\web\test"
	copy /Y /B src\server\web\test\bench.html+modified "$(ME_VAPP_PREFIX)\web\test\bench.html" $(LOG)
	copy /Y /B src\server\web\test\test.cgi+modified "$(ME_VAPP_PREFIX)\web\test\test.cgi" $(LOG)
	copy /Y /B src\server\web\test\test.ejs+modified "$(ME_VAPP_PREFIX)\web\test\test.ejs" $(LOG)
	copy /Y /B src\server\web\test\test.esp+modified "$(ME_VAPP_PREFIX)\web\test\test.esp" $(LOG)
	copy /Y /B src\server\web\test\test.html+modified "$(ME_VAPP_PREFIX)\web\test\test.html" $(LOG)
	copy /Y /B src\server\web\test\test.php+modified "$(ME_VAPP_PREFIX)\web\test\test.php" $(LOG)
	copy /Y /B src\server\web\test\test.pl+modified "$(ME_VAPP_PREFIX)\web\test\test.pl" $(LOG)
	copy /Y /B src\server\web\test\test.py+modified "$(ME_VAPP_PREFIX)\web\test\test.py" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\web\test\src\server\web\test" md "$(ME_VAPP_PREFIX)\web\test\src\server\web\test"
	copy /Y /B src\server\web\test\test.cgi+modified "$(ME_VAPP_PREFIX)\web\test\src\server\web\test\test.cgi" $(LOG)
	copy /Y /B src\server\web\test\test.pl+modified "$(ME_VAPP_PREFIX)\web\test\src\server\web\test\test.pl" $(LOG)
	copy /Y /B src\server\web\test\test.py+modified "$(ME_VAPP_PREFIX)\web\test\src\server\web\test\test.py" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)\src\server" md "$(ME_VAPP_PREFIX)\src\server"
	copy /Y /B src\server\mime.types+modified "$(ME_VAPP_PREFIX)\src\server\mime.types" $(LOG)
	if not exist "$(ME_VAPP_PREFIX)" md "$(ME_VAPP_PREFIX)"
	copy /Y /B src\server\self.crt+modified "$(ME_VAPP_PREFIX)\self.crt" $(LOG)
	copy /Y /B src\server\self.key+modified "$(ME_VAPP_PREFIX)\self.key" $(LOG)
!IF "$(ME_COM_PHP)" == "1"
	copy /Y /B src\server\php.ini+modified "$(ME_VAPP_PREFIX)\src\server\php.ini" $(LOG)
!ENDIF
	copy /Y /B src\server\appweb.conf+modified "$(ME_VAPP_PREFIX)\appweb.conf" $(LOG)
	copy /Y /B src\server\sample.conf+modified "$(ME_VAPP_PREFIX)\sample.conf" $(LOG)
	copy /Y /B src\server\self.crt+modified "$(ME_VAPP_PREFIX)\src\server\self.crt" $(LOG)
	copy /Y /B src\server\self.key+modified "$(ME_VAPP_PREFIX)\src\server\self.key" $(LOG)
	echo 'set LOG_DIR "$(ME_VAPP_PREFIX)/log"\nset CACHE_DIR "$(ME_VAPP_PREFIX)/cache"\nDocuments "$(ME_VAPP_PREFIX)/web\nListen 80\n<if SSL_MODULE>\nListenSecure 443\n</if>\n' >$(ME_VAPP_PREFIX)/install.conf
	if not exist "$(ME_VAPP_PREFIX)\inc" md "$(ME_VAPP_PREFIX)\inc"
	copy /Y /B build\$(CONFIG)\inc\me.h+modified "$(ME_VAPP_PREFIX)\inc\me.h" $(LOG)
	copy /Y /B src\paks\osdep\osdep.h+modified "$(ME_VAPP_PREFIX)\inc\osdep.h" $(LOG)
	copy /Y /B src\appweb.h+modified "$(ME_VAPP_PREFIX)\inc\appweb.h" $(LOG)
	copy /Y /B src\customize.h+modified "$(ME_VAPP_PREFIX)\inc\customize.h" $(LOG)
	copy /Y /B src\paks\est\est.h+modified "$(ME_VAPP_PREFIX)\inc\est.h" $(LOG)
	copy /Y /B src\paks\http\http.h+modified "$(ME_VAPP_PREFIX)\inc\http.h" $(LOG)
	copy /Y /B src\paks\mpr\mpr.h+modified "$(ME_VAPP_PREFIX)\inc\mpr.h" $(LOG)
	copy /Y /B src\paks\pcre\pcre.h+modified "$(ME_VAPP_PREFIX)\inc\pcre.h" $(LOG)
	copy /Y /B src\paks\sqlite\sqlite3.h+modified "$(ME_VAPP_PREFIX)\inc\sqlite3.h" $(LOG)
!IF "$(ME_COM_ESP)" == "1"
	copy /Y /B src\paks\esp\esp.h+modified "$(ME_VAPP_PREFIX)\inc\esp.h" $(LOG)
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
	copy /Y /B src\paks\ejs\ejs.h+modified "$(ME_VAPP_PREFIX)\inc\ejs.h" $(LOG)
	copy /Y /B src\paks\ejs\ejs.slots.h+modified "$(ME_VAPP_PREFIX)\inc\ejs.slots.h" $(LOG)
	copy /Y /B src\paks\ejs\ejsByteGoto.h+modified "$(ME_VAPP_PREFIX)\inc\ejsByteGoto.h" $(LOG)
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
	if not exist "$(ME_VAPP_PREFIX)\bin.\build\$(CONFIG)\bin" md "$(ME_VAPP_PREFIX)\bin.\build\$(CONFIG)\bin"
	copy /Y /B build\$(CONFIG)\bin\ejs.mod+modified "$(ME_VAPP_PREFIX)\bin.\build\$(CONFIG)\bin\ejs.mod" $(LOG)
!ENDIF
	cd .

#
#   start
#
DEPS_76 = $(DEPS_76) compile
DEPS_76 = $(DEPS_76) stop

start: $(DEPS_76)
	cd .
	./$(BUILD)/bin/appman install enable start
	cd .

#
#   install
#
DEPS_77 = $(DEPS_77) stop
DEPS_77 = $(DEPS_77) installBinary
DEPS_77 = $(DEPS_77) start

install: $(DEPS_77)
#  Omit build script install

#
#   run
#
DEPS_78 = $(DEPS_78) compile

run: $(DEPS_78)
	cd src\server
	appweb --log stdout:2
	cd ..\..


#
#   uninstall
#
DEPS_79 = $(DEPS_79) build
DEPS_79 = $(DEPS_79) stop

uninstall: $(DEPS_79)
	cd package
	if exist "$(ME_VAPP_PREFIX)\web" rd /Q /S "$(ME_VAPP_PREFIX)\web"
	if exist "$(ME_VAPP_PREFIX)\tmp" rd /Q /S "$(ME_VAPP_PREFIX)\tmp"
	if exist "$(ME_VAPP_PREFIX)\cache" rd /Q /S "$(ME_VAPP_PREFIX)\cache"
	if exist "$(ME_VAPP_PREFIX)\log" rd /Q /S "$(ME_VAPP_PREFIX)\log"
	if exist "$(ME_VAPP_PREFIX)" rd /Q /S "$(ME_VAPP_PREFIX)"
	if exist "$(ME_VAPP_PREFIX)\bin" rd /Q "$(ME_VAPP_PREFIX)\bin"
	if exist "$(ME_VAPP_PREFIX)\inc" rd /Q "$(ME_VAPP_PREFIX)\inc"
	if exist "$(ME_VAPP_PREFIX)\man" rd /Q "$(ME_VAPP_PREFIX)\man"
	if exist "$(ME_VAPP_PREFIX)" rd /Q "$(ME_VAPP_PREFIX)"
	if exist "$(ME_VAPP_PREFIX)\web" rd /Q "$(ME_VAPP_PREFIX)\web"
	if exist "$(ME_VAPP_PREFIX)\log" rd /Q "$(ME_VAPP_PREFIX)\log"
	if exist "$(ME_VAPP_PREFIX)\tmp" rd /Q "$(ME_VAPP_PREFIX)\tmp"
	if exist "$(ME_VAPP_PREFIX)\cache" rd /Q "$(ME_VAPP_PREFIX)\cache"
	if exist "$(ME_VAPP_PREFIX)\latest" del /Q "$(ME_VAPP_PREFIX)\latest"
	if exist "$(ME_VAPP_PREFIX)" rd /Q "$(ME_VAPP_PREFIX)"
	if exist "$(ME_VAPP_PREFIX)\appweb.conf" del /Q "$(ME_VAPP_PREFIX)\appweb.conf"
	if exist "$(ME_VAPP_PREFIX)\esp.conf" del /Q "$(ME_VAPP_PREFIX)\esp.conf"
	if exist "$(ME_VAPP_PREFIX)\mine.types" del /Q "$(ME_VAPP_PREFIX)\mine.types"
	if exist "$(ME_VAPP_PREFIX)\install.conf" del /Q "$(ME_VAPP_PREFIX)\install.conf"
	if exist "$(ME_VAPP_PREFIX)\inc\appweb" rd /Q /S "$(ME_VAPP_PREFIX)\inc\appweb"
	if exist "$(ME_VAPP_PREFIX)\web" rd /Q /S "$(ME_VAPP_PREFIX)\web"
	if exist "$(ME_VAPP_PREFIX)\tmp" rd /Q /S "$(ME_VAPP_PREFIX)\tmp"
	if exist "$(ME_VAPP_PREFIX)\cache" rd /Q /S "$(ME_VAPP_PREFIX)\cache"
	if exist "$(ME_VAPP_PREFIX)\log" rd /Q /S "$(ME_VAPP_PREFIX)\log"
	if exist "$(ME_VAPP_PREFIX)" rd /Q /S "$(ME_VAPP_PREFIX)"
	if exist "$(ME_VAPP_PREFIX)\bin" rd /Q "$(ME_VAPP_PREFIX)\bin"
	if exist "$(ME_VAPP_PREFIX)\inc" rd /Q "$(ME_VAPP_PREFIX)\inc"
	if exist "$(ME_VAPP_PREFIX)\man" rd /Q "$(ME_VAPP_PREFIX)\man"
	if exist "$(ME_VAPP_PREFIX)" rd /Q "$(ME_VAPP_PREFIX)"
	if exist "$(ME_VAPP_PREFIX)\web" rd /Q "$(ME_VAPP_PREFIX)\web"
	if exist "$(ME_VAPP_PREFIX)\log" rd /Q "$(ME_VAPP_PREFIX)\log"
	if exist "$(ME_VAPP_PREFIX)\tmp" rd /Q "$(ME_VAPP_PREFIX)\tmp"
	if exist "$(ME_VAPP_PREFIX)\cache" rd /Q "$(ME_VAPP_PREFIX)\cache"
	if exist "$(ME_VAPP_PREFIX)\latest" del /Q "$(ME_VAPP_PREFIX)\latest"
	if exist "$(ME_VAPP_PREFIX)" rd /Q "$(ME_VAPP_PREFIX)"
	cd ..

#
#   version
#
version: $(DEPS_80)
	echo 5.2.0

