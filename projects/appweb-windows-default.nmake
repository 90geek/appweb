#
#   appweb-windows-default.nmake -- Makefile to build Embedthis Appweb for windows
#

PRODUCT         = appweb
VERSION         = 4.3.0
BUILD_NUMBER    = 0
PROFILE         = default
PA              = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH            = x64
ENTRY           = _DllMainCRTStartup
!ELSE
ARCH            = x86
ENTRY           = _DllMainCRTStartup@12
!ENDIF

OS              = windows
CONFIG          = $(OS)-$(ARCH)-$(PROFILE)
LBIN            = $(CONFIG)\bin
CC              = cl
LD              = link
RC              = rc
CFLAGS          = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS          = -D_REENTRANT -D_MT -DBIT_DEBUG
IFLAGS          = -I$(CONFIG)\inc
LDFLAGS         = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS        = -libpath:$(CONFIG)\bin
LIBS            = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX       = C:
BIT_BASE_PREFIX       = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX        = $(BIT_BASE_PREFIX)\Embedthis Appweb
BIT_VAPP_PREFIX       = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX       = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX      = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX        = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX        = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX        = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX        = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX        = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX        = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX        = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX      = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX      = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX        = $(BIT_VAPP_PREFIX)\src

all compile: prep \
        $(CONFIG)\bin\removeFiles.exe \
        $(CONFIG)\bin\libmpr.dll \
        $(CONFIG)\bin\libmprssl.dll \
        $(CONFIG)\bin\appman.exe \
        $(CONFIG)\bin\makerom.exe \
        $(CONFIG)\bin\libest.dll \
        $(CONFIG)\bin\ca.crt \
        $(CONFIG)\bin\libpcre.dll \
        $(CONFIG)\bin\libhttp.dll \
        $(CONFIG)\bin\http.exe \
        $(CONFIG)\bin\libsqlite3.dll \
        $(CONFIG)\bin\sqlite.exe \
        $(CONFIG)\bin\libappweb.dll \
        $(CONFIG)\bin\libmod_esp.dll \
        $(CONFIG)\bin\esp.exe \
        $(CONFIG)\bin\esp.conf \
        src\server\esp.conf \
        $(CONFIG)\bin\esp-www \
        $(CONFIG)\bin\esp-appweb.conf \
        $(CONFIG)\bin\libejs.dll \
        $(CONFIG)\bin\ejs.exe \
        $(CONFIG)\bin\ejsc.exe \
        $(CONFIG)\bin\ejs.mod \
        $(CONFIG)\bin\libmod_cgi.dll \
        $(CONFIG)\bin\libmod_ejs.dll \
        $(CONFIG)\bin\libmod_ssl.dll \
        $(CONFIG)\bin\authpass.exe \
        $(CONFIG)\bin\cgiProgram.exe \
        src\server\slink.c \
        $(CONFIG)\bin\libapp.dll \
        $(CONFIG)\bin\appweb.exe \
        $(CONFIG)\bin\appwebMonitor.exe \
        $(CONFIG)\bin\appwebMonitor.ico \
        src\server\cache \
        $(CONFIG)\bin\testAppweb.exe \
        test\cgi-bin\testScript \
        test\web\caching\cache.cgi \
        test\web\auth\basic\basic.cgi \
        test\cgi-bin\cgiProgram.exe \
        test\web\js

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\appweb-windows-default-bit.h $(CONFIG)\inc\bit.h
clean:
	-if exist $(CONFIG)\bin\removeFiles.exe del /Q $(CONFIG)\bin\removeFiles.exe
	-if exist $(CONFIG)\bin\libmpr.dll del /Q $(CONFIG)\bin\libmpr.dll
	-if exist $(CONFIG)\bin\libmprssl.dll del /Q $(CONFIG)\bin\libmprssl.dll
	-if exist $(CONFIG)\bin\appman.exe del /Q $(CONFIG)\bin\appman.exe
	-if exist $(CONFIG)\bin\makerom.exe del /Q $(CONFIG)\bin\makerom.exe
	-if exist $(CONFIG)\bin\libest.dll del /Q $(CONFIG)\bin\libest.dll
	-if exist $(CONFIG)\bin\ca.crt del /Q $(CONFIG)\bin\ca.crt
	-if exist $(CONFIG)\bin\libpcre.dll del /Q $(CONFIG)\bin\libpcre.dll
	-if exist $(CONFIG)\bin\libhttp.dll del /Q $(CONFIG)\bin\libhttp.dll
	-if exist $(CONFIG)\bin\http.exe del /Q $(CONFIG)\bin\http.exe
	-if exist $(CONFIG)\bin\libsqlite3.dll del /Q $(CONFIG)\bin\libsqlite3.dll
	-if exist $(CONFIG)\bin\sqlite.exe del /Q $(CONFIG)\bin\sqlite.exe
	-if exist $(CONFIG)\bin\libappweb.dll del /Q $(CONFIG)\bin\libappweb.dll
	-if exist $(CONFIG)\bin\libmod_esp.dll del /Q $(CONFIG)\bin\libmod_esp.dll
	-if exist $(CONFIG)\bin\esp.exe del /Q $(CONFIG)\bin\esp.exe
	-if exist $(CONFIG)\bin\esp.conf del /Q $(CONFIG)\bin\esp.conf
	-if exist src\server\esp.conf del /Q src\server\esp.conf
	-if exist $(CONFIG)\bin\esp-www del /Q $(CONFIG)\bin\esp-www
	-if exist $(CONFIG)\bin\esp-appweb.conf del /Q $(CONFIG)\bin\esp-appweb.conf
	-if exist $(CONFIG)\bin\libejs.dll del /Q $(CONFIG)\bin\libejs.dll
	-if exist $(CONFIG)\bin\ejs.exe del /Q $(CONFIG)\bin\ejs.exe
	-if exist $(CONFIG)\bin\ejsc.exe del /Q $(CONFIG)\bin\ejsc.exe
	-if exist $(CONFIG)\bin\ejs.mod del /Q $(CONFIG)\bin\ejs.mod
	-if exist $(CONFIG)\bin\libmod_cgi.dll del /Q $(CONFIG)\bin\libmod_cgi.dll
	-if exist $(CONFIG)\bin\libmod_ejs.dll del /Q $(CONFIG)\bin\libmod_ejs.dll
	-if exist $(CONFIG)\bin\libmod_ssl.dll del /Q $(CONFIG)\bin\libmod_ssl.dll
	-if exist $(CONFIG)\bin\authpass.exe del /Q $(CONFIG)\bin\authpass.exe
	-if exist $(CONFIG)\bin\cgiProgram.exe del /Q $(CONFIG)\bin\cgiProgram.exe
	-if exist $(CONFIG)\bin\libapp.dll del /Q $(CONFIG)\bin\libapp.dll
	-if exist $(CONFIG)\bin\appweb.exe del /Q $(CONFIG)\bin\appweb.exe
	-if exist $(CONFIG)\bin\appwebMonitor.exe del /Q $(CONFIG)\bin\appwebMonitor.exe
	-if exist $(CONFIG)\bin\appwebMonitor.ico del /Q $(CONFIG)\bin\appwebMonitor.ico
	-if exist $(CONFIG)\bin\testAppweb.exe del /Q $(CONFIG)\bin\testAppweb.exe
	-if exist test\cgi-bin\testScript del /Q test\cgi-bin\testScript
	-if exist test\web\caching\cache.cgi del /Q test\web\caching\cache.cgi
	-if exist test\web\auth\basic\basic.cgi del /Q test\web\auth\basic\basic.cgi
	-if exist test\cgi-bin\cgiProgram.exe del /Q test\cgi-bin\cgiProgram.exe
	-if exist test\web\js del /Q test\web\js
	-if exist $(CONFIG)\obj\removeFiles.obj del /Q $(CONFIG)\obj\removeFiles.obj
	-if exist $(CONFIG)\obj\mprLib.obj del /Q $(CONFIG)\obj\mprLib.obj
	-if exist $(CONFIG)\obj\mprSsl.obj del /Q $(CONFIG)\obj\mprSsl.obj
	-if exist $(CONFIG)\obj\manager.obj del /Q $(CONFIG)\obj\manager.obj
	-if exist $(CONFIG)\obj\makerom.obj del /Q $(CONFIG)\obj\makerom.obj
	-if exist $(CONFIG)\obj\estLib.obj del /Q $(CONFIG)\obj\estLib.obj
	-if exist $(CONFIG)\obj\pcre.obj del /Q $(CONFIG)\obj\pcre.obj
	-if exist $(CONFIG)\obj\httpLib.obj del /Q $(CONFIG)\obj\httpLib.obj
	-if exist $(CONFIG)\obj\http.obj del /Q $(CONFIG)\obj\http.obj
	-if exist $(CONFIG)\obj\sqlite3.obj del /Q $(CONFIG)\obj\sqlite3.obj
	-if exist $(CONFIG)\obj\sqlite.obj del /Q $(CONFIG)\obj\sqlite.obj
	-if exist $(CONFIG)\obj\config.obj del /Q $(CONFIG)\obj\config.obj
	-if exist $(CONFIG)\obj\convenience.obj del /Q $(CONFIG)\obj\convenience.obj
	-if exist $(CONFIG)\obj\dirHandler.obj del /Q $(CONFIG)\obj\dirHandler.obj
	-if exist $(CONFIG)\obj\fileHandler.obj del /Q $(CONFIG)\obj\fileHandler.obj
	-if exist $(CONFIG)\obj\log.obj del /Q $(CONFIG)\obj\log.obj
	-if exist $(CONFIG)\obj\server.obj del /Q $(CONFIG)\obj\server.obj
	-if exist $(CONFIG)\obj\edi.obj del /Q $(CONFIG)\obj\edi.obj
	-if exist $(CONFIG)\obj\espAbbrev.obj del /Q $(CONFIG)\obj\espAbbrev.obj
	-if exist $(CONFIG)\obj\espFramework.obj del /Q $(CONFIG)\obj\espFramework.obj
	-if exist $(CONFIG)\obj\espHandler.obj del /Q $(CONFIG)\obj\espHandler.obj
	-if exist $(CONFIG)\obj\espHtml.obj del /Q $(CONFIG)\obj\espHtml.obj
	-if exist $(CONFIG)\obj\espTemplate.obj del /Q $(CONFIG)\obj\espTemplate.obj
	-if exist $(CONFIG)\obj\mdb.obj del /Q $(CONFIG)\obj\mdb.obj
	-if exist $(CONFIG)\obj\sdb.obj del /Q $(CONFIG)\obj\sdb.obj
	-if exist $(CONFIG)\obj\esp.obj del /Q $(CONFIG)\obj\esp.obj
	-if exist $(CONFIG)\obj\ejsLib.obj del /Q $(CONFIG)\obj\ejsLib.obj
	-if exist $(CONFIG)\obj\ejs.obj del /Q $(CONFIG)\obj\ejs.obj
	-if exist $(CONFIG)\obj\ejsc.obj del /Q $(CONFIG)\obj\ejsc.obj
	-if exist $(CONFIG)\obj\cgiHandler.obj del /Q $(CONFIG)\obj\cgiHandler.obj
	-if exist $(CONFIG)\obj\ejsHandler.obj del /Q $(CONFIG)\obj\ejsHandler.obj
	-if exist $(CONFIG)\obj\phpHandler.obj del /Q $(CONFIG)\obj\phpHandler.obj
	-if exist $(CONFIG)\obj\proxyHandler.obj del /Q $(CONFIG)\obj\proxyHandler.obj
	-if exist $(CONFIG)\obj\sslModule.obj del /Q $(CONFIG)\obj\sslModule.obj
	-if exist $(CONFIG)\obj\authpass.obj del /Q $(CONFIG)\obj\authpass.obj
	-if exist $(CONFIG)\obj\cgiProgram.obj del /Q $(CONFIG)\obj\cgiProgram.obj
	-if exist $(CONFIG)\obj\slink.obj del /Q $(CONFIG)\obj\slink.obj
	-if exist $(CONFIG)\obj\appweb.obj del /Q $(CONFIG)\obj\appweb.obj
	-if exist $(CONFIG)\obj\appwebMonitor.obj del /Q $(CONFIG)\obj\appwebMonitor.obj
	-if exist $(CONFIG)\obj\testAppweb.obj del /Q $(CONFIG)\obj\testAppweb.obj
	-if exist $(CONFIG)\obj\testHttp.obj del /Q $(CONFIG)\obj\testHttp.obj

$(CONFIG)\obj\removeFiles.obj: \
    ..\bit\macosx-x64-release\bin\package\windows\removeFiles.c\
    $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) ..\bit\macosx-x64-release\bin\package\windows\removeFiles.c

$(CONFIG)\bin\removeFiles.exe: \
    $(CONFIG)\obj\removeFiles.obj
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\removeFiles.obj $(LIBS)

$(CONFIG)\inc\mpr.h: 
	-if exist $(CONFIG)\inc\mpr.h del /Q $(CONFIG)\inc\mpr.h
	copy /Y src\deps\mpr\mpr.h $(CONFIG)\inc\mpr.h

$(CONFIG)\inc\bitos.h: \
    $(CONFIG)\inc\bit.h
	-if exist $(CONFIG)\inc\bitos.h del /Q $(CONFIG)\inc\bitos.h
	copy /Y src\bitos.h $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\mprLib.obj: \
    src\deps\mpr\mprLib.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\mpr.h \
    $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\mprLib.obj -Fd$(CONFIG)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\mpr\mprLib.c

$(CONFIG)\bin\libmpr.dll: \
    $(CONFIG)\inc\mpr.h \
    $(CONFIG)\obj\mprLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\mprLib.obj $(LIBS)

$(CONFIG)\inc\est.h: 
	-if exist $(CONFIG)\inc\est.h del /Q $(CONFIG)\inc\est.h
	copy /Y src\deps\est\est.h $(CONFIG)\inc\est.h

$(CONFIG)\obj\estLib.obj: \
    src\deps\est\estLib.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\est.h \
    $(CONFIG)\inc\bitos.h
	"$(CC)" -c -Fo$(CONFIG)\obj\estLib.obj -Fd$(CONFIG)\obj\estLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\est\estLib.c

$(CONFIG)\bin\libest.dll: \
    $(CONFIG)\inc\est.h \
    $(CONFIG)\obj\estLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libest.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\estLib.obj $(LIBS)

$(CONFIG)\obj\mprSsl.obj: \
    src\deps\mpr\mprSsl.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\mpr.h \
    $(CONFIG)\inc\est.h
	"$(CC)" -c -Fo$(CONFIG)\obj\mprSsl.obj -Fd$(CONFIG)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\mpr\mprSsl.c

$(CONFIG)\bin\libmprssl.dll: \
    $(CONFIG)\bin\libmpr.dll \
    $(CONFIG)\bin\libest.dll \
    $(CONFIG)\obj\mprSsl.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\mprSsl.obj libest.lib libmpr.lib $(LIBS)

$(CONFIG)\obj\manager.obj: \
    src\deps\mpr\manager.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\manager.obj -Fd$(CONFIG)\obj\manager.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\mpr\manager.c

$(CONFIG)\bin\appman.exe: \
    $(CONFIG)\bin\libmpr.dll \
    $(CONFIG)\obj\manager.obj
	"$(LD)" -out:$(CONFIG)\bin\appman.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\manager.obj libmpr.lib $(LIBS)

$(CONFIG)\obj\makerom.obj: \
    src\deps\mpr\makerom.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\makerom.obj -Fd$(CONFIG)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\mpr\makerom.c

$(CONFIG)\bin\makerom.exe: \
    $(CONFIG)\bin\libmpr.dll \
    $(CONFIG)\obj\makerom.obj
	"$(LD)" -out:$(CONFIG)\bin\makerom.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\makerom.obj libmpr.lib $(LIBS)

$(CONFIG)\bin\ca.crt: src/deps/est/ca.crt
	-if exist $(CONFIG)\bin\ca.crt del /Q $(CONFIG)\bin\ca.crt
	copy /Y src\deps\est\ca.crt $(CONFIG)\bin\ca.crt

$(CONFIG)\inc\pcre.h: 
	-if exist $(CONFIG)\inc\pcre.h del /Q $(CONFIG)\inc\pcre.h
	copy /Y src\deps\pcre\pcre.h $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\pcre.obj: \
    src\deps\pcre\pcre.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre.obj -Fd$(CONFIG)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\pcre\pcre.c

$(CONFIG)\bin\libpcre.dll: \
    $(CONFIG)\inc\pcre.h \
    $(CONFIG)\obj\pcre.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\pcre.obj $(LIBS)

$(CONFIG)\inc\http.h: 
	-if exist $(CONFIG)\inc\http.h del /Q $(CONFIG)\inc\http.h
	copy /Y src\deps\http\http.h $(CONFIG)\inc\http.h

$(CONFIG)\obj\httpLib.obj: \
    src\deps\http\httpLib.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\http.h \
    $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\httpLib.obj -Fd$(CONFIG)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\http\httpLib.c

$(CONFIG)\bin\libhttp.dll: \
    $(CONFIG)\bin\libmpr.dll \
    $(CONFIG)\bin\libpcre.dll \
    $(CONFIG)\inc\http.h \
    $(CONFIG)\obj\httpLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\httpLib.obj libpcre.lib libmpr.lib $(LIBS)

$(CONFIG)\obj\http.obj: \
    src\deps\http\http.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\http.h
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\http\http.c

$(CONFIG)\bin\http.exe: \
    $(CONFIG)\bin\libhttp.dll \
    $(CONFIG)\obj\http.obj
	"$(LD)" -out:$(CONFIG)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\http.obj libhttp.lib $(LIBS) libpcre.lib libmpr.lib

$(CONFIG)\inc\sqlite3.h: 
	-if exist $(CONFIG)\inc\sqlite3.h del /Q $(CONFIG)\inc\sqlite3.h
	copy /Y src\deps\sqlite\sqlite3.h $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite3.obj: \
    src\deps\sqlite\sqlite3.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\sqlite3.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite3.obj -Fd$(CONFIG)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\sqlite\sqlite3.c

$(CONFIG)\bin\libsqlite3.dll: \
    $(CONFIG)\inc\sqlite3.h \
    $(CONFIG)\obj\sqlite3.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libsqlite3.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\sqlite3.obj $(LIBS)

$(CONFIG)\obj\sqlite.obj: \
    src\deps\sqlite\sqlite.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\sqlite3.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite.obj -Fd$(CONFIG)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\sqlite\sqlite.c

$(CONFIG)\bin\sqlite.exe: \
    $(CONFIG)\bin\libsqlite3.dll \
    $(CONFIG)\obj\sqlite.obj
	"$(LD)" -out:$(CONFIG)\bin\sqlite.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\sqlite.obj libsqlite3.lib $(LIBS)

$(CONFIG)\inc\appweb.h: 
	-if exist $(CONFIG)\inc\appweb.h del /Q $(CONFIG)\inc\appweb.h
	copy /Y src\appweb.h $(CONFIG)\inc\appweb.h

$(CONFIG)\inc\customize.h: 
	-if exist $(CONFIG)\inc\customize.h del /Q $(CONFIG)\inc\customize.h
	copy /Y src\customize.h $(CONFIG)\inc\customize.h

$(CONFIG)\obj\config.obj: \
    src\config.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h \
    $(CONFIG)\inc\pcre.h \
    $(CONFIG)\inc\mpr.h \
    $(CONFIG)\inc\http.h \
    $(CONFIG)\inc\customize.h
	"$(CC)" -c -Fo$(CONFIG)\obj\config.obj -Fd$(CONFIG)\obj\config.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\config.c

$(CONFIG)\obj\convenience.obj: \
    src\convenience.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\convenience.obj -Fd$(CONFIG)\obj\convenience.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\convenience.c

$(CONFIG)\obj\dirHandler.obj: \
    src\dirHandler.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\dirHandler.obj -Fd$(CONFIG)\obj\dirHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\dirHandler.c

$(CONFIG)\obj\fileHandler.obj: \
    src\fileHandler.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\fileHandler.obj -Fd$(CONFIG)\obj\fileHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\fileHandler.c

$(CONFIG)\obj\log.obj: \
    src\log.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\log.obj -Fd$(CONFIG)\obj\log.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\log.c

$(CONFIG)\obj\server.obj: \
    src\server.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\server.obj -Fd$(CONFIG)\obj\server.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server.c

$(CONFIG)\bin\libappweb.dll: \
    $(CONFIG)\bin\libhttp.dll \
    $(CONFIG)\inc\appweb.h \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\customize.h \
    $(CONFIG)\obj\config.obj \
    $(CONFIG)\obj\convenience.obj \
    $(CONFIG)\obj\dirHandler.obj \
    $(CONFIG)\obj\fileHandler.obj \
    $(CONFIG)\obj\log.obj \
    $(CONFIG)\obj\server.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libappweb.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\config.obj $(CONFIG)\obj\convenience.obj $(CONFIG)\obj\dirHandler.obj $(CONFIG)\obj\fileHandler.obj $(CONFIG)\obj\log.obj $(CONFIG)\obj\server.obj libhttp.lib $(LIBS) libpcre.lib libmpr.lib

$(CONFIG)\inc\edi.h: 
	-if exist $(CONFIG)\inc\edi.h del /Q $(CONFIG)\inc\edi.h
	copy /Y src\esp\edi.h $(CONFIG)\inc\edi.h

$(CONFIG)\inc\esp-app.h: 
	-if exist $(CONFIG)\inc\esp-app.h del /Q $(CONFIG)\inc\esp-app.h
	copy /Y src\esp\esp-app.h $(CONFIG)\inc\esp-app.h

$(CONFIG)\inc\esp.h: 
	-if exist $(CONFIG)\inc\esp.h del /Q $(CONFIG)\inc\esp.h
	copy /Y src\esp\esp.h $(CONFIG)\inc\esp.h

$(CONFIG)\inc\mdb.h: 
	-if exist $(CONFIG)\inc\mdb.h del /Q $(CONFIG)\inc\mdb.h
	copy /Y src\esp\mdb.h $(CONFIG)\inc\mdb.h

$(CONFIG)\obj\edi.obj: \
    src\esp\edi.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\edi.h \
    $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\edi.obj -Fd$(CONFIG)\obj\edi.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\edi.c

$(CONFIG)\obj\espAbbrev.obj: \
    src\esp\espAbbrev.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espAbbrev.obj -Fd$(CONFIG)\obj\espAbbrev.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espAbbrev.c

$(CONFIG)\obj\espFramework.obj: \
    src\esp\espFramework.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espFramework.obj -Fd$(CONFIG)\obj\espFramework.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espFramework.c

$(CONFIG)\obj\espHandler.obj: \
    src\esp\espHandler.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h \
    $(CONFIG)\inc\esp.h \
    $(CONFIG)\inc\edi.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espHandler.obj -Fd$(CONFIG)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espHandler.c

$(CONFIG)\obj\espHtml.obj: \
    src\esp\espHtml.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\esp.h \
    $(CONFIG)\inc\edi.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espHtml.obj -Fd$(CONFIG)\obj\espHtml.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espHtml.c

$(CONFIG)\obj\espTemplate.obj: \
    src\esp\espTemplate.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\espTemplate.obj -Fd$(CONFIG)\obj\espTemplate.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espTemplate.c

$(CONFIG)\obj\mdb.obj: \
    src\esp\mdb.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h \
    $(CONFIG)\inc\edi.h \
    $(CONFIG)\inc\mdb.h \
    $(CONFIG)\inc\pcre.h
	"$(CC)" -c -Fo$(CONFIG)\obj\mdb.obj -Fd$(CONFIG)\obj\mdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\mdb.c

$(CONFIG)\obj\sdb.obj: \
    src\esp\sdb.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h \
    $(CONFIG)\inc\edi.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sdb.obj -Fd$(CONFIG)\obj\sdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\sdb.c

$(CONFIG)\bin\libmod_esp.dll: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\inc\edi.h \
    $(CONFIG)\inc\esp-app.h \
    $(CONFIG)\inc\esp.h \
    $(CONFIG)\inc\mdb.h \
    $(CONFIG)\obj\edi.obj \
    $(CONFIG)\obj\espAbbrev.obj \
    $(CONFIG)\obj\espFramework.obj \
    $(CONFIG)\obj\espHandler.obj \
    $(CONFIG)\obj\espHtml.obj \
    $(CONFIG)\obj\espTemplate.obj \
    $(CONFIG)\obj\mdb.obj \
    $(CONFIG)\obj\sdb.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_esp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\edi.obj $(CONFIG)\obj\espAbbrev.obj $(CONFIG)\obj\espFramework.obj $(CONFIG)\obj\espHandler.obj $(CONFIG)\obj\espHtml.obj $(CONFIG)\obj\espTemplate.obj $(CONFIG)\obj\mdb.obj $(CONFIG)\obj\sdb.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\esp.obj: \
    src\esp\esp.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\esp.obj -Fd$(CONFIG)\obj\esp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\esp.c

$(CONFIG)\bin\esp.exe: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\obj\edi.obj \
    $(CONFIG)\obj\esp.obj \
    $(CONFIG)\obj\espAbbrev.obj \
    $(CONFIG)\obj\espFramework.obj \
    $(CONFIG)\obj\espHandler.obj \
    $(CONFIG)\obj\espHtml.obj \
    $(CONFIG)\obj\espTemplate.obj \
    $(CONFIG)\obj\mdb.obj \
    $(CONFIG)\obj\sdb.obj
	"$(LD)" -out:$(CONFIG)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\edi.obj $(CONFIG)\obj\esp.obj $(CONFIG)\obj\espAbbrev.obj $(CONFIG)\obj\espFramework.obj $(CONFIG)\obj\espHandler.obj $(CONFIG)\obj\espHtml.obj $(CONFIG)\obj\espTemplate.obj $(CONFIG)\obj\mdb.obj $(CONFIG)\obj\sdb.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\bin\esp.conf: src/esp/esp.conf
	-if exist $(CONFIG)\bin\esp.conf del /Q $(CONFIG)\bin\esp.conf
	copy /Y src\esp\esp.conf $(CONFIG)\bin\esp.conf

src\server\esp.conf: src/esp/esp.conf
	-if exist src\server\esp.conf del /Q src\server\esp.conf
	copy /Y src\esp\esp.conf src\server\esp.conf

$(CONFIG)\bin\esp-www: src/esp/www
	-if exist $(CONFIG)\bin\esp-www del /Q $(CONFIG)\bin\esp-www
	if not exist $(CONFIG)\bin\esp-www md $(CONFIG)\bin\esp-www
	xcopy /S /Y src\esp\www $(CONFIG)\bin\esp-www

$(CONFIG)\bin\esp-appweb.conf: src/esp/esp-appweb.conf
	-if exist $(CONFIG)\bin\esp-appweb.conf del /Q $(CONFIG)\bin\esp-appweb.conf
	copy /Y src\esp\esp-appweb.conf $(CONFIG)\bin\esp-appweb.conf

$(CONFIG)\inc\ejs.h: 
	-if exist $(CONFIG)\inc\ejs.h del /Q $(CONFIG)\inc\ejs.h
	copy /Y src\deps\ejs\ejs.h $(CONFIG)\inc\ejs.h

$(CONFIG)\inc\ejs.slots.h: 
	-if exist $(CONFIG)\inc\ejs.slots.h del /Q $(CONFIG)\inc\ejs.slots.h
	copy /Y src\deps\ejs\ejs.slots.h $(CONFIG)\inc\ejs.slots.h

$(CONFIG)\inc\ejsByteGoto.h: 
	-if exist $(CONFIG)\inc\ejsByteGoto.h del /Q $(CONFIG)\inc\ejsByteGoto.h
	copy /Y src\deps\ejs\ejsByteGoto.h $(CONFIG)\inc\ejsByteGoto.h

$(CONFIG)\obj\ejsLib.obj: \
    src\deps\ejs\ejsLib.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\ejs.h \
    $(CONFIG)\inc\mpr.h \
    $(CONFIG)\inc\pcre.h \
    $(CONFIG)\inc\bitos.h \
    $(CONFIG)\inc\http.h \
    $(CONFIG)\inc\ejs.slots.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsLib.obj -Fd$(CONFIG)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\ejs\ejsLib.c

$(CONFIG)\bin\libejs.dll: \
    $(CONFIG)\bin\libhttp.dll \
    $(CONFIG)\bin\libpcre.dll \
    $(CONFIG)\bin\libmpr.dll \
    $(CONFIG)\bin\libsqlite3.dll \
    $(CONFIG)\inc\ejs.h \
    $(CONFIG)\inc\ejs.slots.h \
    $(CONFIG)\inc\ejsByteGoto.h \
    $(CONFIG)\obj\ejsLib.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsLib.obj libsqlite3.lib libmpr.lib libpcre.lib libhttp.lib $(LIBS) libpcre.lib libmpr.lib

$(CONFIG)\obj\ejs.obj: \
    src\deps\ejs\ejs.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\ejs.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejs.obj -Fd$(CONFIG)\obj\ejs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\ejs\ejs.c

$(CONFIG)\bin\ejs.exe: \
    $(CONFIG)\bin\libejs.dll \
    $(CONFIG)\obj\ejs.obj
	"$(LD)" -out:$(CONFIG)\bin\ejs.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejs.obj libejs.lib $(LIBS) libsqlite3.lib libmpr.lib libpcre.lib libhttp.lib

$(CONFIG)\obj\ejsc.obj: \
    src\deps\ejs\ejsc.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\ejs.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsc.obj -Fd$(CONFIG)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\ejs\ejsc.c

$(CONFIG)\bin\ejsc.exe: \
    $(CONFIG)\bin\libejs.dll \
    $(CONFIG)\obj\ejsc.obj
	"$(LD)" -out:$(CONFIG)\bin\ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsc.obj libejs.lib $(LIBS) libsqlite3.lib libmpr.lib libpcre.lib libhttp.lib

$(CONFIG)\bin\ejs.mod: $(CONFIG)\bin\ejsc.exe
	"$(LBIN)\ejsc" --out ".\$(CONFIG)\bin\ejs.mod" --optimize 9 --bind --require null src/deps/ejs/ejs.es

$(CONFIG)\obj\cgiHandler.obj: \
    src\modules\cgiHandler.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\cgiHandler.obj -Fd$(CONFIG)\obj\cgiHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\cgiHandler.c

$(CONFIG)\bin\libmod_cgi.dll: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\obj\cgiHandler.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_cgi.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\cgiHandler.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\ejsHandler.obj: \
    src\modules\ejsHandler.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsHandler.obj -Fd$(CONFIG)\obj\ejsHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\ejsHandler.c

$(CONFIG)\bin\libmod_ejs.dll: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\bin\libejs.dll \
    $(CONFIG)\obj\ejsHandler.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_ejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsHandler.obj libejs.lib libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib libsqlite3.lib

$(CONFIG)\obj\sslModule.obj: \
    src\modules\sslModule.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\sslModule.obj -Fd$(CONFIG)\obj\sslModule.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\sslModule.c

$(CONFIG)\bin\libmod_ssl.dll: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\obj\sslModule.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_ssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\sslModule.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\authpass.obj: \
    src\utils\authpass.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\authpass.obj -Fd$(CONFIG)\obj\authpass.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\authpass.c

$(CONFIG)\bin\authpass.exe: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\obj\authpass.obj
	"$(LD)" -out:$(CONFIG)\bin\authpass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\authpass.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\cgiProgram.obj: \
    src\utils\cgiProgram.c\
    $(CONFIG)\inc\bit.h
	"$(CC)" -c -Fo$(CONFIG)\obj\cgiProgram.obj -Fd$(CONFIG)\obj\cgiProgram.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\cgiProgram.c

$(CONFIG)\bin\cgiProgram.exe: \
    $(CONFIG)\obj\cgiProgram.obj
	"$(LD)" -out:$(CONFIG)\bin\cgiProgram.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\cgiProgram.obj $(LIBS)

src\server\slink.c: 
	cd src\server
	if not exist slink.c copy slink.empty slink.c
	cd ..\..

$(CONFIG)\obj\slink.obj: \
    src\server\slink.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\slink.obj -Fd$(CONFIG)\obj\slink.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\slink.c

$(CONFIG)\bin\libapp.dll: \
    src\server\slink.c \
    $(CONFIG)\bin\esp.exe \
    $(CONFIG)\bin\libmod_esp.dll \
    $(CONFIG)\obj\slink.obj
	"$(LD)" -dll -out:$(CONFIG)\bin\libapp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\slink.obj libmod_esp.lib $(LIBS) libappweb.lib libhttp.lib libpcre.lib libmpr.lib

$(CONFIG)\obj\appweb.obj: \
    src\server\appweb.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\appweb.h \
    $(CONFIG)\inc\esp.h
	"$(CC)" -c -Fo$(CONFIG)\obj\appweb.obj -Fd$(CONFIG)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\appweb.c

$(CONFIG)\bin\appweb.exe: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\bin\libmod_esp.dll \
    $(CONFIG)\bin\libmod_ssl.dll \
    $(CONFIG)\bin\libmod_ejs.dll \
    $(CONFIG)\bin\libmod_cgi.dll \
    $(CONFIG)\bin\libapp.dll \
    $(CONFIG)\obj\appweb.obj
	"$(LD)" -out:$(CONFIG)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\appweb.obj libapp.lib libmod_cgi.lib libmod_ejs.lib libmod_ssl.lib libmod_esp.lib libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib libejs.lib libsqlite3.lib

$(CONFIG)\inc\appwebMonitor.h: 
	-if exist $(CONFIG)\inc\appwebMonitor.h del /Q $(CONFIG)\inc\appwebMonitor.h
	copy /Y src\server\windows\appwebMonitor.h $(CONFIG)\inc\appwebMonitor.h

$(CONFIG)\inc\monitorResources.h: 
	-if exist $(CONFIG)\inc\monitorResources.h del /Q $(CONFIG)\inc\monitorResources.h
	copy /Y src\server\windows\monitorResources.h $(CONFIG)\inc\monitorResources.h

$(CONFIG)\obj\appwebMonitor.res: \
        src\server\windows\appwebMonitor.rc
	"$(RC)" -nologo -Fo $(CONFIG)\obj\appwebMonitor.res src\server\windows\appwebMonitor.rc

$(CONFIG)\obj\appwebMonitor.obj: \
    src\server\windows\appwebMonitor.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\mpr.h
	"$(CC)" -c -Fo$(CONFIG)\obj\appwebMonitor.obj -Fd$(CONFIG)\obj\appwebMonitor.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\windows\appwebMonitor.c

$(CONFIG)\bin\appwebMonitor.exe: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\inc\appwebMonitor.h \
    $(CONFIG)\inc\monitorResources.h \
    $(CONFIG)\obj\appwebMonitor.res \
    $(CONFIG)\obj\appwebMonitor.obj
	"$(LD)" -out:$(CONFIG)\bin\appwebMonitor.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\appwebMonitor.res $(CONFIG)\obj\appwebMonitor.obj libappweb.lib shell32.lib libhttp.lib ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib libpcre.lib libmpr.lib

$(CONFIG)\bin\appwebMonitor.ico: src/server/windows/appwebMonitor.ico
	cd src\server
	copy windows/appwebMonitor.ico ..\..\$(CONFIG)\bin
	cd ..\..

$(CONFIG)\bin\appwebMonitor.ico: src/server/windows/appwebMonitor.ico
	-if exist $(CONFIG)\bin\appwebMonitor.ico del /Q $(CONFIG)\bin\appwebMonitor.ico
	copy /Y src\server\windows\appwebMonitor.ico $(CONFIG)\bin\appwebMonitor.ico

src\server\cache: 
	cd src\server
	md cache
	cd ..\..

$(CONFIG)\inc\testAppweb.h: 
	-if exist $(CONFIG)\inc\testAppweb.h del /Q $(CONFIG)\inc\testAppweb.h
	copy /Y test\testAppweb.h $(CONFIG)\inc\testAppweb.h

$(CONFIG)\obj\testAppweb.obj: \
    test\testAppweb.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\testAppweb.h \
    $(CONFIG)\inc\mpr.h \
    $(CONFIG)\inc\http.h
	"$(CC)" -c -Fo$(CONFIG)\obj\testAppweb.obj -Fd$(CONFIG)\obj\testAppweb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testAppweb.c

$(CONFIG)\obj\testHttp.obj: \
    test\testHttp.c\
    $(CONFIG)\inc\bit.h \
    $(CONFIG)\inc\testAppweb.h
	"$(CC)" -c -Fo$(CONFIG)\obj\testHttp.obj -Fd$(CONFIG)\obj\testHttp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testHttp.c

$(CONFIG)\bin\testAppweb.exe: \
    $(CONFIG)\bin\libappweb.dll \
    $(CONFIG)\inc\testAppweb.h \
    $(CONFIG)\obj\testAppweb.obj \
    $(CONFIG)\obj\testHttp.obj
	"$(LD)" -out:$(CONFIG)\bin\testAppweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\testAppweb.obj $(CONFIG)\obj\testHttp.obj libappweb.lib $(LIBS) libhttp.lib libpcre.lib libmpr.lib

test\cgi-bin\testScript: $(CONFIG)\bin\cgiProgram.exe
#  Omit build script /Users/mob/git/appweb/test/cgi-bin/testScript

test\web\caching\cache.cgi: 
#  Omit build script /Users/mob/git/appweb/test/web/caching/cache.cgi

test\web\auth\basic\basic.cgi: 
#  Omit build script /Users/mob/git/appweb/test/web/auth/basic/basic.cgi

test\cgi-bin\cgiProgram.exe: $(CONFIG)\bin\cgiProgram.exe
#  Omit build script /Users/mob/git/appweb/test/cgi-bin/cgiProgram.exe

test\web\js: 
#  Omit build script /Users/mob/git/appweb/test/web/js

version: 
	@echo 4.3.0-0

stop: 


installBinary: stop
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	if not exist "$(BIT_VAPP_PREFIX)\inc" md "$(BIT_VAPP_PREFIX)\inc"
	if not exist "$(BIT_VAPP_PREFIX)\man" md "$(BIT_VAPP_PREFIX)\man"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	if not exist "$(BIT_VAPP_PREFIX)\tmp" md "$(BIT_VAPP_PREFIX)\tmp"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\appman.exe" "$(BIT_VAPP_PREFIX)\bin\appman.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\appweb.exe" "$(BIT_VAPP_PREFIX)\bin\appweb.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\esp.exe" "$(BIT_VAPP_PREFIX)\bin\esp.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\http.exe" "$(BIT_VAPP_PREFIX)\bin\http.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\libappweb.exe" "$(BIT_VAPP_PREFIX)\bin\libappweb.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\libest.exe" "$(BIT_VAPP_PREFIX)\bin\libest.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\libhttp.exe" "$(BIT_VAPP_PREFIX)\bin\libhttp.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\libmod*.exe" "$(BIT_VAPP_PREFIX)\bin\libmod*.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\libmpr*.exe" "$(BIT_VAPP_PREFIX)\bin\libmpr*.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\libpcre.exe" "$(BIT_VAPP_PREFIX)\bin\libpcre.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\libsqlite3.exe" "$(BIT_VAPP_PREFIX)\bin\libsqlite3.exe"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\esp-*" "$(BIT_VAPP_PREFIX)\bin\esp-*"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	copy /Y "$(CONFIG)\bin\esp.conf" "$(BIT_VAPP_PREFIX)\esp.conf"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	if not exist "$(BIT_VAPP_PREFIX)\web\bench" md "$(BIT_VAPP_PREFIX)\web\bench"
	if not exist "$(BIT_VAPP_PREFIX)\web\bench" md "$(BIT_VAPP_PREFIX)\web\bench"
	copy /Y "src\server\web\bench\1b.html" "$(BIT_VAPP_PREFIX)\web\bench\1b.html"
	if not exist "$(BIT_VAPP_PREFIX)\web\bench" md "$(BIT_VAPP_PREFIX)\web\bench"
	copy /Y "src\server\web\bench\4k.html" "$(BIT_VAPP_PREFIX)\web\bench\4k.html"
	if not exist "$(BIT_VAPP_PREFIX)\web\bench" md "$(BIT_VAPP_PREFIX)\web\bench"
	copy /Y "src\server\web\bench\64k.html" "$(BIT_VAPP_PREFIX)\web\bench\64k.html"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	copy /Y "src\server\web\favicon.ico" "$(BIT_VAPP_PREFIX)\web\favicon.ico"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y "src\server\web\icons\back.gif" "$(BIT_VAPP_PREFIX)\web\icons\back.gif"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y "src\server\web\icons\blank.gif" "$(BIT_VAPP_PREFIX)\web\icons\blank.gif"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y "src\server\web\icons\compressed.gif" "$(BIT_VAPP_PREFIX)\web\icons\compressed.gif"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y "src\server\web\icons\folder.gif" "$(BIT_VAPP_PREFIX)\web\icons\folder.gif"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y "src\server\web\icons\parent.gif" "$(BIT_VAPP_PREFIX)\web\icons\parent.gif"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y "src\server\web\icons\space.gif" "$(BIT_VAPP_PREFIX)\web\icons\space.gif"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y "src\server\web\icons\text.gif" "$(BIT_VAPP_PREFIX)\web\icons\text.gif"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	copy /Y "src\server\web\iehacks.css" "$(BIT_VAPP_PREFIX)\web\iehacks.css"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	if not exist "$(BIT_VAPP_PREFIX)\web\images" md "$(BIT_VAPP_PREFIX)\web\images"
	if not exist "$(BIT_VAPP_PREFIX)\web\images" md "$(BIT_VAPP_PREFIX)\web\images"
	copy /Y "src\server\web\images\banner.jpg" "$(BIT_VAPP_PREFIX)\web\images\banner.jpg"
	if not exist "$(BIT_VAPP_PREFIX)\web\images" md "$(BIT_VAPP_PREFIX)\web\images"
	copy /Y "src\server\web\images\bottomShadow.jpg" "$(BIT_VAPP_PREFIX)\web\images\bottomShadow.jpg"
	if not exist "$(BIT_VAPP_PREFIX)\web\images" md "$(BIT_VAPP_PREFIX)\web\images"
	copy /Y "src\server\web\images\shadow.jpg" "$(BIT_VAPP_PREFIX)\web\images\shadow.jpg"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	copy /Y "src\server\web\index.html" "$(BIT_VAPP_PREFIX)\web\index.html"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	copy /Y "src\server\web\min-index.html" "$(BIT_VAPP_PREFIX)\web\min-index.html"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	copy /Y "src\server\web\print.css" "$(BIT_VAPP_PREFIX)\web\print.css"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	copy /Y "src\server\web\screen.css" "$(BIT_VAPP_PREFIX)\web\screen.css"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\bench.html" "$(BIT_VAPP_PREFIX)\web\test\bench.html"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\test.cgi" "$(BIT_VAPP_PREFIX)\web\test\test.cgi"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\test.ejs" "$(BIT_VAPP_PREFIX)\web\test\test.ejs"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\test.esp" "$(BIT_VAPP_PREFIX)\web\test\test.esp"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\test.html" "$(BIT_VAPP_PREFIX)\web\test\test.html"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\test.php" "$(BIT_VAPP_PREFIX)\web\test\test.php"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\test.pl" "$(BIT_VAPP_PREFIX)\web\test\test.pl"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\test.py" "$(BIT_VAPP_PREFIX)\web\test\test.py"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	copy /Y "src\server\mime.types" "$(BIT_VAPP_PREFIX)\mime.types"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	copy /Y "src\server\appweb.conf" "$(BIT_VAPP_PREFIX)\appweb.conf"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\ejs.mod" "$(BIT_VAPP_PREFIX)\bin\ejs.mod"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "${bit.packs.compiler.dir}\VC\redist\${bit.platform.arch}\Microsoft.VC0.CRT\msvcr0.dll" "$(BIT_VAPP_PREFIX)\bin\msvcr0.dll"


start: 


install: stop installBinary start


uninstall: stop
	if exist "$(BIT_VAPP_PREFIX)" rd /Q /S "$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q /S "$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\bin" rd /Q /S "$(BIT_VAPP_PREFIX)\bin"
	if exist "$(BIT_VAPP_PREFIX)\inc" rd /Q /S "$(BIT_VAPP_PREFIX)\inc"
	if exist "$(BIT_VAPP_PREFIX)\man" rd /Q /S "$(BIT_VAPP_PREFIX)\man"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q /S "$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\web" rd /Q /S "$(BIT_VAPP_PREFIX)\web"
	if exist "$(BIT_VAPP_PREFIX)\log" rd /Q /S "$(BIT_VAPP_PREFIX)\log"
	if exist "$(BIT_VAPP_PREFIX)\tmp" rd /Q /S "$(BIT_VAPP_PREFIX)\tmp"


genslink: 
	cd src\server
	esp --static --genlink slink.c --flat compile
	cd ..\..

