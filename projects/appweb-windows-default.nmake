#
#   appweb-windows-default.nmake -- Makefile to build Embedthis Appweb for windows
#

PRODUCT         = appweb
VERSION         = 4.3.0
BUILD_NUMBER    = 0
PROFILE         = default
PA              = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH            = x64
ENTRY           = _DllMainCRTStartup
!ELSE
ARCH            = x86
ENTRY           = _DllMainCRTStartup@12
!ENDIF

OS              = windows
CONFIG          = $(OS)-$(ARCH)-$(PROFILE)
LBIN            = $(CONFIG)\bin
CC              = cl
LD              = link
RC              = rc
CFLAGS          = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS          = -D_REENTRANT -D_MT -DBIT_DEBUG
IFLAGS          = -I$(CONFIG)\inc
LDFLAGS         = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS        = -libpath:$(CONFIG)\bin
LIBS            = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_PACK_EJSCRIPT     = 1
BIT_PACK_CGI          = 1
BIT_PACK_ESP          = 1
BIT_PACK_SQLITE       = 1

BIT_ROOT_PREFIX       = C:
BIT_BASE_PREFIX       = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX        = $(BIT_BASE_PREFIX)\Embedthis Appweb
BIT_VAPP_PREFIX       = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX       = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX      = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX        = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX        = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX        = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX        = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX        = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX        = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX        = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX      = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX      = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX        = $(BIT_VAPP_PREFIX)\src


TARGETS     = $(TARGETS) $(CONFIG)\bin\removeFiles.exe
TARGETS     = $(TARGETS) $(CONFIG)\bin\libmpr.dll
TARGETS     = $(TARGETS) $(CONFIG)\bin\libmprssl.dll
TARGETS     = $(TARGETS) $(CONFIG)\bin\appman.exe
TARGETS     = $(TARGETS) $(CONFIG)\bin\makerom.exe
TARGETS     = $(TARGETS) $(CONFIG)\bin\ca.crt
TARGETS     = $(TARGETS) $(CONFIG)\bin\libpcre.dll
TARGETS     = $(TARGETS) $(CONFIG)\bin\libhttp.dll
TARGETS     = $(TARGETS) $(CONFIG)\bin\http.exe
!IF "$(BIT_PACK_SQLITE)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\libsqlite3.dll
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\sqlite.exe
!ENDIF
TARGETS     = $(TARGETS) $(CONFIG)\bin\libappweb.dll
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\libmod_esp.dll
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\esp.exe
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\esp.conf
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS = $(TARGETS) src\server\esp.conf
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\esp-www
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\esp-appweb.conf
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\libejs.dll
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\ejs.exe
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\ejsc.exe
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\ejs.mod
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\libmod_cgi.dll
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\libmod_ejs.dll
!ENDIF
TARGETS     = $(TARGETS) $(CONFIG)\bin\authpass.exe
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS = $(TARGETS) $(CONFIG)\bin\cgiProgram.exe
!ENDIF
TARGETS     = $(TARGETS) src\server\slink.c
TARGETS     = $(TARGETS) $(CONFIG)\bin\libapp.dll
TARGETS     = $(TARGETS) $(CONFIG)\bin\appweb.exe
TARGETS     = $(TARGETS) $(CONFIG)\bin\appwebMonitor.exe
TARGETS     = $(TARGETS) $(CONFIG)\bin\appwebMonitor.ico
TARGETS     = $(TARGETS) src\server\cache
TARGETS     = $(TARGETS) $(CONFIG)\bin\testAppweb.exe
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS = $(TARGETS) test\cgi-bin\testScript
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS = $(TARGETS) test\web\caching\cache.cgi
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS = $(TARGETS) test\web\auth\basic\basic.cgi
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
TARGETS = $(TARGETS) test\cgi-bin\cgiProgram.exe
!ENDIF
TARGETS     = $(TARGETS) test\web\js

!IFNDEF SHOW
.SILENT:
!ENDIF

all compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\appweb-windows-default-bit.h $(CONFIG)\inc\bit.h

clean:
	-if exist $(CONFIG)\bin\removeFiles.exe del /Q $(CONFIG)\bin\removeFiles.exe
	-if exist $(CONFIG)\bin\libmpr.dll del /Q $(CONFIG)\bin\libmpr.dll
	-if exist $(CONFIG)\bin\libmprssl.dll del /Q $(CONFIG)\bin\libmprssl.dll
	-if exist $(CONFIG)\bin\appman.exe del /Q $(CONFIG)\bin\appman.exe
	-if exist $(CONFIG)\bin\makerom.exe del /Q $(CONFIG)\bin\makerom.exe
	-if exist $(CONFIG)\bin\ca.crt del /Q $(CONFIG)\bin\ca.crt
	-if exist $(CONFIG)\bin\libpcre.dll del /Q $(CONFIG)\bin\libpcre.dll
	-if exist $(CONFIG)\bin\libhttp.dll del /Q $(CONFIG)\bin\libhttp.dll
	-if exist $(CONFIG)\bin\http.exe del /Q $(CONFIG)\bin\http.exe
	-if exist $(CONFIG)\bin\libsqlite3.dll del /Q $(CONFIG)\bin\libsqlite3.dll
	-if exist $(CONFIG)\bin\sqlite.exe del /Q $(CONFIG)\bin\sqlite.exe
	-if exist $(CONFIG)\bin\libappweb.dll del /Q $(CONFIG)\bin\libappweb.dll
	-if exist $(CONFIG)\bin\libmod_esp.dll del /Q $(CONFIG)\bin\libmod_esp.dll
	-if exist $(CONFIG)\bin\esp.exe del /Q $(CONFIG)\bin\esp.exe
	-if exist $(CONFIG)\bin\esp.conf del /Q $(CONFIG)\bin\esp.conf
	-if exist src\server\esp.conf del /Q src\server\esp.conf
	-if exist $(CONFIG)\bin\esp-www del /Q $(CONFIG)\bin\esp-www
	-if exist $(CONFIG)\bin\esp-appweb.conf del /Q $(CONFIG)\bin\esp-appweb.conf
	-if exist $(CONFIG)\bin\libejs.dll del /Q $(CONFIG)\bin\libejs.dll
	-if exist $(CONFIG)\bin\ejs.exe del /Q $(CONFIG)\bin\ejs.exe
	-if exist $(CONFIG)\bin\ejsc.exe del /Q $(CONFIG)\bin\ejsc.exe
	-if exist $(CONFIG)\bin\ejs.mod del /Q $(CONFIG)\bin\ejs.mod
	-if exist $(CONFIG)\bin\libmod_cgi.dll del /Q $(CONFIG)\bin\libmod_cgi.dll
	-if exist $(CONFIG)\bin\libmod_ejs.dll del /Q $(CONFIG)\bin\libmod_ejs.dll
	-if exist $(CONFIG)\bin\authpass.exe del /Q $(CONFIG)\bin\authpass.exe
	-if exist $(CONFIG)\bin\cgiProgram.exe del /Q $(CONFIG)\bin\cgiProgram.exe
	-if exist $(CONFIG)\bin\libapp.dll del /Q $(CONFIG)\bin\libapp.dll
	-if exist $(CONFIG)\bin\appweb.exe del /Q $(CONFIG)\bin\appweb.exe
	-if exist $(CONFIG)\bin\appwebMonitor.exe del /Q $(CONFIG)\bin\appwebMonitor.exe
	-if exist $(CONFIG)\bin\appwebMonitor.ico del /Q $(CONFIG)\bin\appwebMonitor.ico
	-if exist $(CONFIG)\bin\testAppweb.exe del /Q $(CONFIG)\bin\testAppweb.exe
	-if exist test\cgi-bin\testScript del /Q test\cgi-bin\testScript
	-if exist test\web\caching\cache.cgi del /Q test\web\caching\cache.cgi
	-if exist test\web\auth\basic\basic.cgi del /Q test\web\auth\basic\basic.cgi
	-if exist test\cgi-bin\cgiProgram.exe del /Q test\cgi-bin\cgiProgram.exe
	-if exist test\web\js del /Q test\web\js
	-if exist $(CONFIG)\obj\removeFiles.obj del /Q $(CONFIG)\obj\removeFiles.obj
	-if exist $(CONFIG)\obj\mprLib.obj del /Q $(CONFIG)\obj\mprLib.obj
	-if exist $(CONFIG)\obj\mprSsl.obj del /Q $(CONFIG)\obj\mprSsl.obj
	-if exist $(CONFIG)\obj\manager.obj del /Q $(CONFIG)\obj\manager.obj
	-if exist $(CONFIG)\obj\makerom.obj del /Q $(CONFIG)\obj\makerom.obj
	-if exist $(CONFIG)\obj\pcre.obj del /Q $(CONFIG)\obj\pcre.obj
	-if exist $(CONFIG)\obj\httpLib.obj del /Q $(CONFIG)\obj\httpLib.obj
	-if exist $(CONFIG)\obj\http.obj del /Q $(CONFIG)\obj\http.obj
	-if exist $(CONFIG)\obj\sqlite3.obj del /Q $(CONFIG)\obj\sqlite3.obj
	-if exist $(CONFIG)\obj\sqlite.obj del /Q $(CONFIG)\obj\sqlite.obj
	-if exist $(CONFIG)\obj\config.obj del /Q $(CONFIG)\obj\config.obj
	-if exist $(CONFIG)\obj\convenience.obj del /Q $(CONFIG)\obj\convenience.obj
	-if exist $(CONFIG)\obj\dirHandler.obj del /Q $(CONFIG)\obj\dirHandler.obj
	-if exist $(CONFIG)\obj\fileHandler.obj del /Q $(CONFIG)\obj\fileHandler.obj
	-if exist $(CONFIG)\obj\log.obj del /Q $(CONFIG)\obj\log.obj
	-if exist $(CONFIG)\obj\server.obj del /Q $(CONFIG)\obj\server.obj
	-if exist $(CONFIG)\obj\edi.obj del /Q $(CONFIG)\obj\edi.obj
	-if exist $(CONFIG)\obj\esp.obj del /Q $(CONFIG)\obj\esp.obj
	-if exist $(CONFIG)\obj\espAbbrev.obj del /Q $(CONFIG)\obj\espAbbrev.obj
	-if exist $(CONFIG)\obj\espFramework.obj del /Q $(CONFIG)\obj\espFramework.obj
	-if exist $(CONFIG)\obj\espHandler.obj del /Q $(CONFIG)\obj\espHandler.obj
	-if exist $(CONFIG)\obj\espHtml.obj del /Q $(CONFIG)\obj\espHtml.obj
	-if exist $(CONFIG)\obj\espTemplate.obj del /Q $(CONFIG)\obj\espTemplate.obj
	-if exist $(CONFIG)\obj\mdb.obj del /Q $(CONFIG)\obj\mdb.obj
	-if exist $(CONFIG)\obj\sdb.obj del /Q $(CONFIG)\obj\sdb.obj
	-if exist $(CONFIG)\obj\ejsLib.obj del /Q $(CONFIG)\obj\ejsLib.obj
	-if exist $(CONFIG)\obj\ejs.obj del /Q $(CONFIG)\obj\ejs.obj
	-if exist $(CONFIG)\obj\ejsc.obj del /Q $(CONFIG)\obj\ejsc.obj
	-if exist $(CONFIG)\obj\cgiHandler.obj del /Q $(CONFIG)\obj\cgiHandler.obj
	-if exist $(CONFIG)\obj\ejsHandler.obj del /Q $(CONFIG)\obj\ejsHandler.obj
	-if exist $(CONFIG)\obj\authpass.obj del /Q $(CONFIG)\obj\authpass.obj
	-if exist $(CONFIG)\obj\cgiProgram.obj del /Q $(CONFIG)\obj\cgiProgram.obj
	-if exist $(CONFIG)\obj\slink.obj del /Q $(CONFIG)\obj\slink.obj
	-if exist $(CONFIG)\obj\appweb.obj del /Q $(CONFIG)\obj\appweb.obj
	-if exist $(CONFIG)\obj\appwebMonitor.obj del /Q $(CONFIG)\obj\appwebMonitor.obj
	-if exist $(CONFIG)\obj\testAppweb.obj del /Q $(CONFIG)\obj\testAppweb.obj
	-if exist $(CONFIG)\obj\testHttp.obj del /Q $(CONFIG)\obj\testHttp.obj

#
#   bit.h
#
$(CONFIG)\inc\bit.h: $(DEPS_1)

#
#   removeFiles.obj
#
DEPS_2 = $(DEPS_2) $(CONFIG)\inc\bit.h

$(CONFIG)\obj\removeFiles.obj: \
    package\windows\removeFiles.c $(DEPS_2)
	@echo '   [Compile] package/windows/removeFiles.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) package\windows\removeFiles.c

#
#   removeFiles
#
DEPS_3 = $(DEPS_3) $(CONFIG)\obj\removeFiles.obj

$(CONFIG)\bin\removeFiles.exe: $(DEPS_3)
	@echo '      [Link] removeFiles'
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\removeFiles.obj $(LIBS)

#
#   mpr.h
#
$(CONFIG)\inc\mpr.h: $(DEPS_4)
	@echo '      [File] windows-x86-default/inc/mpr.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\deps\mpr\mpr.h" "$(CONFIG)\inc\mpr.h"

#
#   bitos.h
#
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\bit.h

$(CONFIG)\inc\bitos.h: $(DEPS_5)
	@echo '      [File] windows-x86-default/inc/bitos.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\bitos.h" "$(CONFIG)\inc\bitos.h"

#
#   mprLib.obj
#
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bit.h
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\mpr.h
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\mprLib.obj: \
    src\deps\mpr\mprLib.c $(DEPS_6)
	@echo '   [Compile] src/deps/mpr/mprLib.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\mprLib.obj -Fd$(CONFIG)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\mpr\mprLib.c

#
#   libmpr
#
DEPS_7 = $(DEPS_7) $(CONFIG)\inc\mpr.h
DEPS_7 = $(DEPS_7) $(CONFIG)\obj\mprLib.obj

$(CONFIG)\bin\libmpr.dll: $(DEPS_7)
	@echo '      [Link] libmpr'
	"$(LD)" -dll -out:$(CONFIG)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\mprLib.obj $(LIBS)

#
#   est.h
#
$(CONFIG)\inc\est.h: $(DEPS_8)

#
#   mprSsl.obj
#
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\bit.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\mpr.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\est.h

$(CONFIG)\obj\mprSsl.obj: \
    src\deps\mpr\mprSsl.c $(DEPS_9)
	@echo '   [Compile] src/deps/mpr/mprSsl.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\mprSsl.obj -Fd$(CONFIG)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\mpr\mprSsl.c

#
#   libmprssl
#
DEPS_10 = $(DEPS_10) $(CONFIG)\bin\libmpr.dll
DEPS_10 = $(DEPS_10) $(CONFIG)\obj\mprSsl.obj

LIBS_10 = $(LIBS_10) libmpr.lib

$(CONFIG)\bin\libmprssl.dll: $(DEPS_10)
	@echo '      [Link] libmprssl'
	"$(LD)" -dll -out:$(CONFIG)\bin\libmprssl.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\mprSsl.obj $(LIBS_10) $(LIBS_10) $(LIBS)

#
#   manager.obj
#
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\bit.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\manager.obj: \
    src\deps\mpr\manager.c $(DEPS_11)
	@echo '   [Compile] src/deps/mpr/manager.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\manager.obj -Fd$(CONFIG)\obj\manager.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\mpr\manager.c

#
#   manager
#
DEPS_12 = $(DEPS_12) $(CONFIG)\bin\libmpr.dll
DEPS_12 = $(DEPS_12) $(CONFIG)\obj\manager.obj

LIBS_12 = $(LIBS_12) libmpr.lib

$(CONFIG)\bin\appman.exe: $(DEPS_12)
	@echo '      [Link] manager'
	"$(LD)" -out:$(CONFIG)\bin\appman.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\manager.obj $(LIBS_12) $(LIBS_12) $(LIBS)

#
#   makerom.obj
#
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\bit.h
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\makerom.obj: \
    src\deps\mpr\makerom.c $(DEPS_13)
	@echo '   [Compile] src/deps/mpr/makerom.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\makerom.obj -Fd$(CONFIG)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\mpr\makerom.c

#
#   makerom
#
DEPS_14 = $(DEPS_14) $(CONFIG)\bin\libmpr.dll
DEPS_14 = $(DEPS_14) $(CONFIG)\obj\makerom.obj

LIBS_14 = $(LIBS_14) libmpr.lib

$(CONFIG)\bin\makerom.exe: $(DEPS_14)
	@echo '      [Link] makerom'
	"$(LD)" -out:$(CONFIG)\bin\makerom.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\makerom.obj $(LIBS_14) $(LIBS_14) $(LIBS)

#
#   ca-crt
#
DEPS_15 = $(DEPS_15) src\deps\est\ca.crt

$(CONFIG)\bin\ca.crt: $(DEPS_15)
	@echo '      [File] windows-x86-default/bin/ca.crt'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y "src\deps\est\ca.crt" "$(CONFIG)\bin\ca.crt"

#
#   pcre.h
#
$(CONFIG)\inc\pcre.h: $(DEPS_16)
	@echo '      [File] windows-x86-default/inc/pcre.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\deps\pcre\pcre.h" "$(CONFIG)\inc\pcre.h"

#
#   pcre.obj
#
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\bit.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\pcre.obj: \
    src\deps\pcre\pcre.c $(DEPS_17)
	@echo '   [Compile] src/deps/pcre/pcre.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre.obj -Fd$(CONFIG)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\pcre\pcre.c

#
#   libpcre
#
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\pcre.h
DEPS_18 = $(DEPS_18) $(CONFIG)\obj\pcre.obj

$(CONFIG)\bin\libpcre.dll: $(DEPS_18)
	@echo '      [Link] libpcre'
	"$(LD)" -dll -out:$(CONFIG)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\pcre.obj $(LIBS)

#
#   http.h
#
$(CONFIG)\inc\http.h: $(DEPS_19)
	@echo '      [File] windows-x86-default/inc/http.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\deps\http\http.h" "$(CONFIG)\inc\http.h"

#
#   httpLib.obj
#
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\bit.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\http.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\httpLib.obj: \
    src\deps\http\httpLib.c $(DEPS_20)
	@echo '   [Compile] src/deps/http/httpLib.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\httpLib.obj -Fd$(CONFIG)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\http\httpLib.c

#
#   libhttp
#
DEPS_21 = $(DEPS_21) $(CONFIG)\bin\libmpr.dll
DEPS_21 = $(DEPS_21) $(CONFIG)\bin\libpcre.dll
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\http.h
DEPS_21 = $(DEPS_21) $(CONFIG)\obj\httpLib.obj

LIBS_21 = $(LIBS_21) libpcre.lib
LIBS_21 = $(LIBS_21) libmpr.lib

$(CONFIG)\bin\libhttp.dll: $(DEPS_21)
	@echo '      [Link] libhttp'
	"$(LD)" -dll -out:$(CONFIG)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\httpLib.obj $(LIBS_21) $(LIBS_21) $(LIBS)

#
#   http.obj
#
DEPS_22 = $(DEPS_22) $(CONFIG)\inc\bit.h
DEPS_22 = $(DEPS_22) $(CONFIG)\inc\http.h

$(CONFIG)\obj\http.obj: \
    src\deps\http\http.c $(DEPS_22)
	@echo '   [Compile] src/deps/http/http.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\http\http.c

#
#   http
#
DEPS_23 = $(DEPS_23) $(CONFIG)\bin\libhttp.dll
DEPS_23 = $(DEPS_23) $(CONFIG)\obj\http.obj

LIBS_23 = $(LIBS_23) libhttp.lib
LIBS_23 = $(LIBS_23) libpcre.lib
LIBS_23 = $(LIBS_23) libmpr.lib

$(CONFIG)\bin\http.exe: $(DEPS_23)
	@echo '      [Link] http'
	"$(LD)" -out:$(CONFIG)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\http.obj $(LIBS_23) $(LIBS_23) $(LIBS) libmpr.lib

#
#   sqlite3.h
#
$(CONFIG)\inc\sqlite3.h: $(DEPS_24)
	@echo '      [File] windows-x86-default/inc/sqlite3.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\deps\sqlite\sqlite3.h" "$(CONFIG)\inc\sqlite3.h"

#
#   sqlite3.obj
#
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\bit.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite3.obj: \
    src\deps\sqlite\sqlite3.c $(DEPS_25)
	@echo '   [Compile] src/deps/sqlite/sqlite3.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite3.obj -Fd$(CONFIG)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\sqlite\sqlite3.c

!IF "$(BIT_PACK_SQLITE)" == "1"
#
#   libsqlite3
#
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\sqlite3.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\sqlite3.obj

$(CONFIG)\bin\libsqlite3.dll: $(DEPS_26)
	@echo '      [Link] libsqlite3'
	"$(LD)" -dll -out:$(CONFIG)\bin\libsqlite3.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\sqlite3.obj $(LIBS)
!ENDIF

#
#   sqlite.obj
#
DEPS_27 = $(DEPS_27) $(CONFIG)\inc\bit.h
DEPS_27 = $(DEPS_27) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite.obj: \
    src\deps\sqlite\sqlite.c $(DEPS_27)
	@echo '   [Compile] src/deps/sqlite/sqlite.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite.obj -Fd$(CONFIG)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\sqlite\sqlite.c

!IF "$(BIT_PACK_SQLITE)" == "1"
#
#   sqlite
#
!IF "$(BIT_PACK_SQLITE)" == "1"
DEPS_28 = $(DEPS_28) $(CONFIG)\bin\libsqlite3.dll
!ENDIF
DEPS_28 = $(DEPS_28) $(CONFIG)\obj\sqlite.obj

!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_28 = $(LIBS_28) libsqlite3.lib
!ENDIF

$(CONFIG)\bin\sqlite.exe: $(DEPS_28)
	@echo '      [Link] sqlite'
	"$(LD)" -out:$(CONFIG)\bin\sqlite.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\sqlite.obj $(LIBS_28) $(LIBS_28) $(LIBS)
!ENDIF

#
#   appweb.h
#
$(CONFIG)\inc\appweb.h: $(DEPS_29)
	@echo '      [File] windows-x86-default/inc/appweb.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\appweb.h" "$(CONFIG)\inc\appweb.h"

#
#   customize.h
#
$(CONFIG)\inc\customize.h: $(DEPS_30)
	@echo '      [File] windows-x86-default/inc/customize.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\customize.h" "$(CONFIG)\inc\customize.h"

#
#   config.obj
#
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\bit.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\appweb.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\pcre.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\mpr.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\http.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\customize.h

$(CONFIG)\obj\config.obj: \
    src\config.c $(DEPS_31)
	@echo '   [Compile] src/config.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\config.obj -Fd$(CONFIG)\obj\config.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\config.c

#
#   convenience.obj
#
DEPS_32 = $(DEPS_32) $(CONFIG)\inc\bit.h
DEPS_32 = $(DEPS_32) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\convenience.obj: \
    src\convenience.c $(DEPS_32)
	@echo '   [Compile] src/convenience.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\convenience.obj -Fd$(CONFIG)\obj\convenience.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\convenience.c

#
#   dirHandler.obj
#
DEPS_33 = $(DEPS_33) $(CONFIG)\inc\bit.h
DEPS_33 = $(DEPS_33) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\dirHandler.obj: \
    src\dirHandler.c $(DEPS_33)
	@echo '   [Compile] src/dirHandler.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\dirHandler.obj -Fd$(CONFIG)\obj\dirHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\dirHandler.c

#
#   fileHandler.obj
#
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\bit.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\fileHandler.obj: \
    src\fileHandler.c $(DEPS_34)
	@echo '   [Compile] src/fileHandler.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\fileHandler.obj -Fd$(CONFIG)\obj\fileHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\fileHandler.c

#
#   log.obj
#
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\bit.h
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\log.obj: \
    src\log.c $(DEPS_35)
	@echo '   [Compile] src/log.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\log.obj -Fd$(CONFIG)\obj\log.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\log.c

#
#   server.obj
#
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\bit.h
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\server.obj: \
    src\server.c $(DEPS_36)
	@echo '   [Compile] src/server.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\server.obj -Fd$(CONFIG)\obj\server.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server.c

#
#   libappweb
#
DEPS_37 = $(DEPS_37) $(CONFIG)\bin\libhttp.dll
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\appweb.h
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\bitos.h
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\customize.h
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\config.obj
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\convenience.obj
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\dirHandler.obj
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\fileHandler.obj
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\log.obj
DEPS_37 = $(DEPS_37) $(CONFIG)\obj\server.obj

LIBS_37 = $(LIBS_37) libhttp.lib
LIBS_37 = $(LIBS_37) libpcre.lib
LIBS_37 = $(LIBS_37) libmpr.lib

$(CONFIG)\bin\libappweb.dll: $(DEPS_37)
	@echo '      [Link] libappweb'
	"$(LD)" -dll -out:$(CONFIG)\bin\libappweb.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\config.obj $(CONFIG)\obj\convenience.obj $(CONFIG)\obj\dirHandler.obj $(CONFIG)\obj\fileHandler.obj $(CONFIG)\obj\log.obj $(CONFIG)\obj\server.obj $(LIBS_37) $(LIBS_37) $(LIBS) libmpr.lib

#
#   edi.h
#
$(CONFIG)\inc\edi.h: $(DEPS_38)
	@echo '      [File] windows-x86-default/inc/edi.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\esp\edi.h" "$(CONFIG)\inc\edi.h"

#
#   esp-app.h
#
$(CONFIG)\inc\esp-app.h: $(DEPS_39)
	@echo '      [File] windows-x86-default/inc/esp-app.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\esp\esp-app.h" "$(CONFIG)\inc\esp-app.h"

#
#   esp.h
#
$(CONFIG)\inc\esp.h: $(DEPS_40)
	@echo '      [File] windows-x86-default/inc/esp.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\esp\esp.h" "$(CONFIG)\inc\esp.h"

#
#   mdb.h
#
$(CONFIG)\inc\mdb.h: $(DEPS_41)
	@echo '      [File] windows-x86-default/inc/mdb.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\esp\mdb.h" "$(CONFIG)\inc\mdb.h"

#
#   edi.obj
#
DEPS_42 = $(DEPS_42) $(CONFIG)\inc\bit.h
DEPS_42 = $(DEPS_42) $(CONFIG)\inc\edi.h
DEPS_42 = $(DEPS_42) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\edi.obj: \
    src\esp\edi.c $(DEPS_42)
	@echo '   [Compile] src/esp/edi.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\edi.obj -Fd$(CONFIG)\obj\edi.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\edi.c

#
#   esp.obj
#
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\bit.h
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\esp.obj: \
    src\esp\esp.c $(DEPS_43)
	@echo '   [Compile] src/esp/esp.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\esp.obj -Fd$(CONFIG)\obj\esp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\esp.c

#
#   espAbbrev.obj
#
DEPS_44 = $(DEPS_44) $(CONFIG)\inc\bit.h
DEPS_44 = $(DEPS_44) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espAbbrev.obj: \
    src\esp\espAbbrev.c $(DEPS_44)
	@echo '   [Compile] src/esp/espAbbrev.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\espAbbrev.obj -Fd$(CONFIG)\obj\espAbbrev.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espAbbrev.c

#
#   espFramework.obj
#
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\bit.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espFramework.obj: \
    src\esp\espFramework.c $(DEPS_45)
	@echo '   [Compile] src/esp/espFramework.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\espFramework.obj -Fd$(CONFIG)\obj\espFramework.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espFramework.c

#
#   espHandler.obj
#
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\bit.h
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\appweb.h
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\esp.h
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\edi.h

$(CONFIG)\obj\espHandler.obj: \
    src\esp\espHandler.c $(DEPS_46)
	@echo '   [Compile] src/esp/espHandler.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\espHandler.obj -Fd$(CONFIG)\obj\espHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espHandler.c

#
#   espHtml.obj
#
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\bit.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\esp.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\edi.h

$(CONFIG)\obj\espHtml.obj: \
    src\esp\espHtml.c $(DEPS_47)
	@echo '   [Compile] src/esp/espHtml.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\espHtml.obj -Fd$(CONFIG)\obj\espHtml.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espHtml.c

#
#   espTemplate.obj
#
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\bit.h
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\espTemplate.obj: \
    src\esp\espTemplate.c $(DEPS_48)
	@echo '   [Compile] src/esp/espTemplate.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\espTemplate.obj -Fd$(CONFIG)\obj\espTemplate.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\espTemplate.c

#
#   mdb.obj
#
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\bit.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\appweb.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\edi.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\mdb.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\mdb.obj: \
    src\esp\mdb.c $(DEPS_49)
	@echo '   [Compile] src/esp/mdb.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\mdb.obj -Fd$(CONFIG)\obj\mdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\mdb.c

#
#   sdb.obj
#
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\bit.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\appweb.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\edi.h

$(CONFIG)\obj\sdb.obj: \
    src\esp\sdb.c $(DEPS_50)
	@echo '   [Compile] src/esp/sdb.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\sdb.obj -Fd$(CONFIG)\obj\sdb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\esp\sdb.c

!IF "$(BIT_PACK_ESP)" == "1"
#
#   libmod_esp
#
DEPS_51 = $(DEPS_51) $(CONFIG)\bin\libappweb.dll
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\edi.h
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\esp-app.h
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\esp.h
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\mdb.h
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\edi.obj
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\esp.obj
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\espAbbrev.obj
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\espFramework.obj
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\espHandler.obj
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\espHtml.obj
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\espTemplate.obj
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\mdb.obj
DEPS_51 = $(DEPS_51) $(CONFIG)\obj\sdb.obj

LIBS_51 = $(LIBS_51) libappweb.lib
LIBS_51 = $(LIBS_51) libhttp.lib
LIBS_51 = $(LIBS_51) libpcre.lib
LIBS_51 = $(LIBS_51) libmpr.lib

$(CONFIG)\bin\libmod_esp.dll: $(DEPS_51)
	@echo '      [Link] libmod_esp'
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_esp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\edi.obj $(CONFIG)\obj\esp.obj $(CONFIG)\obj\espAbbrev.obj $(CONFIG)\obj\espFramework.obj $(CONFIG)\obj\espHandler.obj $(CONFIG)\obj\espHtml.obj $(CONFIG)\obj\espTemplate.obj $(CONFIG)\obj\mdb.obj $(CONFIG)\obj\sdb.obj $(LIBS_51) $(LIBS_51) $(LIBS) libmpr.lib
!ENDIF

!IF "$(BIT_PACK_ESP)" == "1"
#
#   esp
#
DEPS_52 = $(DEPS_52) $(CONFIG)\bin\libappweb.dll
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\edi.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\esp.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espAbbrev.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espFramework.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espHandler.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espHtml.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\espTemplate.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\mdb.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\sdb.obj

LIBS_52 = $(LIBS_52) libappweb.lib
LIBS_52 = $(LIBS_52) libhttp.lib
LIBS_52 = $(LIBS_52) libpcre.lib
LIBS_52 = $(LIBS_52) libmpr.lib

$(CONFIG)\bin\esp.exe: $(DEPS_52)
	@echo '      [Link] esp'
	"$(LD)" -out:$(CONFIG)\bin\esp.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\edi.obj $(CONFIG)\obj\esp.obj $(CONFIG)\obj\espAbbrev.obj $(CONFIG)\obj\espFramework.obj $(CONFIG)\obj\espHandler.obj $(CONFIG)\obj\espHtml.obj $(CONFIG)\obj\espTemplate.obj $(CONFIG)\obj\mdb.obj $(CONFIG)\obj\sdb.obj $(LIBS_52) $(LIBS_52) $(LIBS) libmpr.lib
!ENDIF

!IF "$(BIT_PACK_ESP)" == "1"
#
#   esp.conf
#
DEPS_53 = $(DEPS_53) src\esp\esp.conf

$(CONFIG)\bin\esp.conf: $(DEPS_53)
	@echo '      [File] windows-x86-default/bin/esp.conf'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y "src\esp\esp.conf" "$(CONFIG)\bin\esp.conf"
!ENDIF

!IF "$(BIT_PACK_ESP)" == "1"
#
#   esp.conf.server
#
DEPS_54 = $(DEPS_54) src\esp\esp.conf

src\server\esp.conf: $(DEPS_54)
	@echo '      [File] src/server/esp.conf'
	if not exist "src\server" md "src\server"
	copy /Y "src\esp\esp.conf" "src\server\esp.conf"
!ENDIF

!IF "$(BIT_PACK_ESP)" == "1"
#
#   esp.www
#
DEPS_55 = $(DEPS_55) src\esp\esp-www

$(CONFIG)\bin\esp-www: $(DEPS_55)
	@echo '      [File] windows-x86-default/bin/esp-www'
	if not exist "$(CONFIG)\bin\esp-www" md "$(CONFIG)\bin\esp-www"
	copy /Y "src\esp\esp-www\app.conf" "$(CONFIG)\bin\esp-www\app.conf"
	copy /Y "src\esp\esp-www\appweb.conf" "$(CONFIG)\bin\esp-www\appweb.conf"
	if not exist "$(CONFIG)\bin\esp-www\files\layouts" md "$(CONFIG)\bin\esp-www\files\layouts"
	copy /Y "src\esp\esp-www\files\layouts\default.esp" "$(CONFIG)\bin\esp-www\files\layouts\default.esp"
	if not exist "$(CONFIG)\bin\esp-www\files\static\images" md "$(CONFIG)\bin\esp-www\files\static\images"
	copy /Y "src\esp\esp-www\files\static\images\banner.jpg" "$(CONFIG)\bin\esp-www\files\static\images\banner.jpg"
	copy /Y "src\esp\esp-www\files\static\images\favicon.ico" "$(CONFIG)\bin\esp-www\files\static\images\favicon.ico"
	copy /Y "src\esp\esp-www\files\static\images\splash.jpg" "$(CONFIG)\bin\esp-www\files\static\images\splash.jpg"
	if not exist "$(CONFIG)\bin\esp-www\files\static" md "$(CONFIG)\bin\esp-www\files\static"
	copy /Y "src\esp\esp-www\files\static\index.esp" "$(CONFIG)\bin\esp-www\files\static\index.esp"
	if not exist "$(CONFIG)\bin\esp-www\files\static\js" md "$(CONFIG)\bin\esp-www\files\static\js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.esp.js" "$(CONFIG)\bin\esp-www\files\static\js\jquery.esp.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.js" "$(CONFIG)\bin\esp-www\files\static\js\jquery.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.simplemodal.js" "$(CONFIG)\bin\esp-www\files\static\js\jquery.simplemodal.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.tablesorter.js" "$(CONFIG)\bin\esp-www\files\static\js\jquery.tablesorter.js"
	copy /Y "src\esp\esp-www\files\static\layout.css" "$(CONFIG)\bin\esp-www\files\static\layout.css"
	if not exist "$(CONFIG)\bin\esp-www\files\static\themes" md "$(CONFIG)\bin\esp-www\files\static\themes"
	copy /Y "src\esp\esp-www\files\static\themes\default.css" "$(CONFIG)\bin\esp-www\files\static\themes\default.css"
!ENDIF

!IF "$(BIT_PACK_ESP)" == "1"
#
#   esp-appweb.conf
#
DEPS_56 = $(DEPS_56) src\esp\esp-appweb.conf

$(CONFIG)\bin\esp-appweb.conf: $(DEPS_56)
	@echo '      [File] windows-x86-default/bin/esp-appweb.conf'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y "src\esp\esp-appweb.conf" "$(CONFIG)\bin\esp-appweb.conf"
!ENDIF

#
#   ejs.h
#
$(CONFIG)\inc\ejs.h: $(DEPS_57)
	@echo '      [File] windows-x86-default/inc/ejs.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\deps\ejs\ejs.h" "$(CONFIG)\inc\ejs.h"

#
#   ejs.slots.h
#
$(CONFIG)\inc\ejs.slots.h: $(DEPS_58)
	@echo '      [File] windows-x86-default/inc/ejs.slots.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\deps\ejs\ejs.slots.h" "$(CONFIG)\inc\ejs.slots.h"

#
#   ejsByteGoto.h
#
$(CONFIG)\inc\ejsByteGoto.h: $(DEPS_59)
	@echo '      [File] windows-x86-default/inc/ejsByteGoto.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\deps\ejs\ejsByteGoto.h" "$(CONFIG)\inc\ejsByteGoto.h"

#
#   ejsLib.obj
#
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\bit.h
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\ejs.h
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\mpr.h
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\pcre.h
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\bitos.h
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\http.h
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\ejs.slots.h

$(CONFIG)\obj\ejsLib.obj: \
    src\deps\ejs\ejsLib.c $(DEPS_60)
	@echo '   [Compile] src/deps/ejs/ejsLib.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsLib.obj -Fd$(CONFIG)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\ejs\ejsLib.c

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   libejs
#
DEPS_61 = $(DEPS_61) $(CONFIG)\bin\libhttp.dll
DEPS_61 = $(DEPS_61) $(CONFIG)\bin\libpcre.dll
DEPS_61 = $(DEPS_61) $(CONFIG)\bin\libmpr.dll
!IF "$(BIT_PACK_SQLITE)" == "1"
DEPS_61 = $(DEPS_61) $(CONFIG)\bin\libsqlite3.dll
!ENDIF
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\ejs.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\ejs.slots.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\ejsByteGoto.h
DEPS_61 = $(DEPS_61) $(CONFIG)\obj\ejsLib.obj

!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_61 = $(LIBS_61) libsqlite3.lib
!ENDIF
LIBS_61 = $(LIBS_61) libmpr.lib
LIBS_61 = $(LIBS_61) libpcre.lib
LIBS_61 = $(LIBS_61) libhttp.lib
LIBS_61 = $(LIBS_61) libpcre.lib
LIBS_61 = $(LIBS_61) libmpr.lib

$(CONFIG)\bin\libejs.dll: $(DEPS_61)
	@echo '      [Link] libejs'
	"$(LD)" -dll -out:$(CONFIG)\bin\libejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsLib.obj $(LIBS_61) $(LIBS_61) $(LIBS) libmpr.lib
!ENDIF

#
#   ejs.obj
#
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\bit.h
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejs.obj: \
    src\deps\ejs\ejs.c $(DEPS_62)
	@echo '   [Compile] src/deps/ejs/ejs.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejs.obj -Fd$(CONFIG)\obj\ejs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\ejs\ejs.c

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   ejs
#
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
DEPS_63 = $(DEPS_63) $(CONFIG)\bin\libejs.dll
!ENDIF
DEPS_63 = $(DEPS_63) $(CONFIG)\obj\ejs.obj

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
LIBS_63 = $(LIBS_63) libejs.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_63 = $(LIBS_63) libsqlite3.lib
!ENDIF
LIBS_63 = $(LIBS_63) libmpr.lib
LIBS_63 = $(LIBS_63) libpcre.lib
LIBS_63 = $(LIBS_63) libhttp.lib

$(CONFIG)\bin\ejs.exe: $(DEPS_63)
	@echo '      [Link] ejs'
	"$(LD)" -out:$(CONFIG)\bin\ejs.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejs.obj $(LIBS_63) $(LIBS_63) $(LIBS) libhttp.lib
!ENDIF

#
#   ejsc.obj
#
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\bit.h
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejsc.obj: \
    src\deps\ejs\ejsc.c $(DEPS_64)
	@echo '   [Compile] src/deps/ejs/ejsc.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsc.obj -Fd$(CONFIG)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\ejs\ejsc.c

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   ejsc
#
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
DEPS_65 = $(DEPS_65) $(CONFIG)\bin\libejs.dll
!ENDIF
DEPS_65 = $(DEPS_65) $(CONFIG)\obj\ejsc.obj

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
LIBS_65 = $(LIBS_65) libejs.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_65 = $(LIBS_65) libsqlite3.lib
!ENDIF
LIBS_65 = $(LIBS_65) libmpr.lib
LIBS_65 = $(LIBS_65) libpcre.lib
LIBS_65 = $(LIBS_65) libhttp.lib

$(CONFIG)\bin\ejsc.exe: $(DEPS_65)
	@echo '      [Link] ejsc'
	"$(LD)" -out:$(CONFIG)\bin\ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsc.obj $(LIBS_65) $(LIBS_65) $(LIBS) libhttp.lib
!ENDIF

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   ejs.mod
#
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
DEPS_66 = $(DEPS_66) $(CONFIG)\bin\ejsc.exe
!ENDIF

$(CONFIG)\bin\ejs.mod: $(DEPS_66)
	"$(LBIN)\ejsc" --out ".\$(CONFIG)\bin\ejs.mod" --optimize 9 --bind --require null src/deps/ejs/ejs.es
!ENDIF

#
#   cgiHandler.obj
#
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\bit.h
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\cgiHandler.obj: \
    src\modules\cgiHandler.c $(DEPS_67)
	@echo '   [Compile] src/modules/cgiHandler.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\cgiHandler.obj -Fd$(CONFIG)\obj\cgiHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\cgiHandler.c

!IF "$(BIT_PACK_CGI)" == "1"
#
#   libmod_cgi
#
DEPS_68 = $(DEPS_68) $(CONFIG)\bin\libappweb.dll
DEPS_68 = $(DEPS_68) $(CONFIG)\obj\cgiHandler.obj

LIBS_68 = $(LIBS_68) libappweb.lib
LIBS_68 = $(LIBS_68) libhttp.lib
LIBS_68 = $(LIBS_68) libpcre.lib
LIBS_68 = $(LIBS_68) libmpr.lib

$(CONFIG)\bin\libmod_cgi.dll: $(DEPS_68)
	@echo '      [Link] libmod_cgi'
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_cgi.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\cgiHandler.obj $(LIBS_68) $(LIBS_68) $(LIBS) libmpr.lib
!ENDIF

#
#   ejsHandler.obj
#
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\bit.h
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\ejsHandler.obj: \
    src\modules\ejsHandler.c $(DEPS_69)
	@echo '   [Compile] src/modules/ejsHandler.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsHandler.obj -Fd$(CONFIG)\obj\ejsHandler.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\modules\ejsHandler.c

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
#
#   libmod_ejs
#
DEPS_70 = $(DEPS_70) $(CONFIG)\bin\libappweb.dll
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
DEPS_70 = $(DEPS_70) $(CONFIG)\bin\libejs.dll
!ENDIF
DEPS_70 = $(DEPS_70) $(CONFIG)\obj\ejsHandler.obj

!IF "$(BIT_PACK_EJSCRIPT)" == "1"
LIBS_70 = $(LIBS_70) libejs.lib
!ENDIF
LIBS_70 = $(LIBS_70) libappweb.lib
LIBS_70 = $(LIBS_70) libhttp.lib
LIBS_70 = $(LIBS_70) libpcre.lib
LIBS_70 = $(LIBS_70) libmpr.lib
!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_70 = $(LIBS_70) libsqlite3.lib
!ENDIF

$(CONFIG)\bin\libmod_ejs.dll: $(DEPS_70)
	@echo '      [Link] libmod_ejs'
	"$(LD)" -dll -out:$(CONFIG)\bin\libmod_ejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\ejsHandler.obj $(LIBS_70) $(LIBS_70) $(LIBS) libsqlite3.lib
!ENDIF

#
#   authpass.obj
#
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\bit.h
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\appweb.h

$(CONFIG)\obj\authpass.obj: \
    src\utils\authpass.c $(DEPS_71)
	@echo '   [Compile] src/utils/authpass.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\authpass.obj -Fd$(CONFIG)\obj\authpass.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\authpass.c

#
#   authpass
#
DEPS_72 = $(DEPS_72) $(CONFIG)\bin\libappweb.dll
DEPS_72 = $(DEPS_72) $(CONFIG)\obj\authpass.obj

LIBS_72 = $(LIBS_72) libappweb.lib
LIBS_72 = $(LIBS_72) libhttp.lib
LIBS_72 = $(LIBS_72) libpcre.lib
LIBS_72 = $(LIBS_72) libmpr.lib

$(CONFIG)\bin\authpass.exe: $(DEPS_72)
	@echo '      [Link] authpass'
	"$(LD)" -out:$(CONFIG)\bin\authpass.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\authpass.obj $(LIBS_72) $(LIBS_72) $(LIBS) libmpr.lib

#
#   cgiProgram.obj
#
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\bit.h

$(CONFIG)\obj\cgiProgram.obj: \
    src\utils\cgiProgram.c $(DEPS_73)
	@echo '   [Compile] src/utils/cgiProgram.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\cgiProgram.obj -Fd$(CONFIG)\obj\cgiProgram.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\cgiProgram.c

!IF "$(BIT_PACK_CGI)" == "1"
#
#   cgiProgram
#
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\cgiProgram.obj

$(CONFIG)\bin\cgiProgram.exe: $(DEPS_74)
	@echo '      [Link] cgiProgram'
	"$(LD)" -out:$(CONFIG)\bin\cgiProgram.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\cgiProgram.obj $(LIBS)
!ENDIF

#
#   slink.c
#
src\server\slink.c: $(DEPS_75)
	cd src\server
	if not exist slink.c copy slink.empty slink.c
	cd ..\..

#
#   slink.obj
#
DEPS_76 = $(DEPS_76) $(CONFIG)\inc\bit.h
DEPS_76 = $(DEPS_76) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\slink.obj: \
    src\server\slink.c $(DEPS_76)
	@echo '   [Compile] src/server/slink.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\slink.obj -Fd$(CONFIG)\obj\slink.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\slink.c

#
#   libapp
#
DEPS_77 = $(DEPS_77) src\server\slink.c
!IF "$(BIT_PACK_ESP)" == "1"
DEPS_77 = $(DEPS_77) $(CONFIG)\bin\esp.exe
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
DEPS_77 = $(DEPS_77) $(CONFIG)\bin\libmod_esp.dll
!ENDIF
DEPS_77 = $(DEPS_77) $(CONFIG)\obj\slink.obj

!IF "$(BIT_PACK_ESP)" == "1"
LIBS_77 = $(LIBS_77) libmod_esp.lib
!ENDIF
LIBS_77 = $(LIBS_77) libappweb.lib
LIBS_77 = $(LIBS_77) libhttp.lib
LIBS_77 = $(LIBS_77) libpcre.lib
LIBS_77 = $(LIBS_77) libmpr.lib

$(CONFIG)\bin\libapp.dll: $(DEPS_77)
	@echo '      [Link] libapp'
	"$(LD)" -dll -out:$(CONFIG)\bin\libapp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\slink.obj $(LIBS_77) $(LIBS_77) $(LIBS) libmpr.lib

#
#   appweb.obj
#
DEPS_78 = $(DEPS_78) $(CONFIG)\inc\bit.h
DEPS_78 = $(DEPS_78) $(CONFIG)\inc\appweb.h
DEPS_78 = $(DEPS_78) $(CONFIG)\inc\esp.h

$(CONFIG)\obj\appweb.obj: \
    src\server\appweb.c $(DEPS_78)
	@echo '   [Compile] src/server/appweb.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\appweb.obj -Fd$(CONFIG)\obj\appweb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\appweb.c

#
#   appweb
#
DEPS_79 = $(DEPS_79) $(CONFIG)\bin\libappweb.dll
!IF "$(BIT_PACK_ESP)" == "1"
DEPS_79 = $(DEPS_79) $(CONFIG)\bin\libmod_esp.dll
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
DEPS_79 = $(DEPS_79) $(CONFIG)\bin\libmod_ejs.dll
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
DEPS_79 = $(DEPS_79) $(CONFIG)\bin\libmod_cgi.dll
!ENDIF
DEPS_79 = $(DEPS_79) $(CONFIG)\bin\libapp.dll
DEPS_79 = $(DEPS_79) $(CONFIG)\obj\appweb.obj

LIBS_79 = $(LIBS_79) libapp.lib
!IF "$(BIT_PACK_CGI)" == "1"
LIBS_79 = $(LIBS_79) libmod_cgi.lib
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
LIBS_79 = $(LIBS_79) libmod_ejs.lib
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
LIBS_79 = $(LIBS_79) libmod_esp.lib
!ENDIF
LIBS_79 = $(LIBS_79) libappweb.lib
LIBS_79 = $(LIBS_79) libhttp.lib
LIBS_79 = $(LIBS_79) libpcre.lib
LIBS_79 = $(LIBS_79) libmpr.lib
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
LIBS_79 = $(LIBS_79) libejs.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
LIBS_79 = $(LIBS_79) libsqlite3.lib
!ENDIF

$(CONFIG)\bin\appweb.exe: $(DEPS_79)
	@echo '      [Link] appweb'
	"$(LD)" -out:$(CONFIG)\bin\appweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\appweb.obj $(LIBS_79) $(LIBS_79) $(LIBS) libsqlite3.lib

#
#   appwebMonitor.h
#
$(CONFIG)\inc\appwebMonitor.h: $(DEPS_80)
	@echo '      [File] windows-x86-default/inc/appwebMonitor.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\server\windows\appwebMonitor.h" "$(CONFIG)\inc\appwebMonitor.h"

#
#   monitorResources.h
#
$(CONFIG)\inc\monitorResources.h: $(DEPS_81)
	@echo '      [File] windows-x86-default/inc/monitorResources.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "src\server\windows\monitorResources.h" "$(CONFIG)\inc\monitorResources.h"

#
#   appwebMonitor.res
#
$(CONFIG)\obj\appwebMonitor.res: \
        src\server\windows\appwebMonitor.rc $(DEPS_82)
	@echo '   [Compile] src/server/windows/appwebMonitor.rc'
	"$(RC)" -nologo -Fo $(CONFIG)\obj\appwebMonitor.res src\server\windows\appwebMonitor.rc

#
#   appwebMonitor.obj
#
DEPS_83 = $(DEPS_83) $(CONFIG)\inc\bit.h
DEPS_83 = $(DEPS_83) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\appwebMonitor.obj: \
    src\server\windows\appwebMonitor.c $(DEPS_83)
	@echo '   [Compile] src/server/windows/appwebMonitor.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\appwebMonitor.obj -Fd$(CONFIG)\obj\appwebMonitor.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\server\windows\appwebMonitor.c

#
#   appwebMonitor
#
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libappweb.dll
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\appwebMonitor.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\monitorResources.h
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\appwebMonitor.res
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\appwebMonitor.obj

LIBS_84 = $(LIBS_84) libappweb.lib
LIBS_84 = $(LIBS_84) libhttp.lib
LIBS_84 = $(LIBS_84) libpcre.lib
LIBS_84 = $(LIBS_84) libmpr.lib

$(CONFIG)\bin\appwebMonitor.exe: $(DEPS_84)
	@echo '      [Link] appwebMonitor'
	"$(LD)" -out:$(CONFIG)\bin\appwebMonitor.exe -entry:WinMainCRTStartup -subsystem:Windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\appwebMonitor.res $(CONFIG)\obj\appwebMonitor.obj shell32.lib ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib libmpr.lib

#
#   appwebMonitor.ico
#
DEPS_85 = $(DEPS_85) src\server\windows\appwebMonitor.ico

$(CONFIG)\bin\appwebMonitor.ico: $(DEPS_85)
	cd src\server
	copy windows/appwebMonitor.ico ..\..\$(CONFIG)\bin
	cd ..\..
#
#   appwebMonitor.ico
#
DEPS_86 = $(DEPS_86) src\server\windows\appwebMonitor.ico

$(CONFIG)\bin\appwebMonitor.ico: $(DEPS_86)
	@echo '      [File] windows-x86-default/bin/appwebMonitor.ico'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y "src\server\windows\appwebMonitor.ico" "$(CONFIG)\bin\appwebMonitor.ico"

#
#   server-cache
#
src\server\cache: $(DEPS_87)
	cd src\server
	md cache
	cd ..\..

#
#   testAppweb.h
#
$(CONFIG)\inc\testAppweb.h: $(DEPS_88)
	@echo '      [File] windows-x86-default/inc/testAppweb.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y "test\testAppweb.h" "$(CONFIG)\inc\testAppweb.h"

#
#   testAppweb.obj
#
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\bit.h
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\testAppweb.h
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\mpr.h
DEPS_89 = $(DEPS_89) $(CONFIG)\inc\http.h

$(CONFIG)\obj\testAppweb.obj: \
    test\testAppweb.c $(DEPS_89)
	@echo '   [Compile] test/testAppweb.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\testAppweb.obj -Fd$(CONFIG)\obj\testAppweb.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testAppweb.c

#
#   testHttp.obj
#
DEPS_90 = $(DEPS_90) $(CONFIG)\inc\bit.h
DEPS_90 = $(DEPS_90) $(CONFIG)\inc\testAppweb.h

$(CONFIG)\obj\testHttp.obj: \
    test\testHttp.c $(DEPS_90)
	@echo '   [Compile] test/testHttp.c'
	"$(CC)" -c -Fo$(CONFIG)\obj\testHttp.obj -Fd$(CONFIG)\obj\testHttp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testHttp.c

#
#   testAppweb
#
DEPS_91 = $(DEPS_91) $(CONFIG)\bin\libappweb.dll
DEPS_91 = $(DEPS_91) $(CONFIG)\inc\testAppweb.h
DEPS_91 = $(DEPS_91) $(CONFIG)\obj\testAppweb.obj
DEPS_91 = $(DEPS_91) $(CONFIG)\obj\testHttp.obj

LIBS_91 = $(LIBS_91) libappweb.lib
LIBS_91 = $(LIBS_91) libhttp.lib
LIBS_91 = $(LIBS_91) libpcre.lib
LIBS_91 = $(LIBS_91) libmpr.lib

$(CONFIG)\bin\testAppweb.exe: $(DEPS_91)
	@echo '      [Link] testAppweb'
	"$(LD)" -out:$(CONFIG)\bin\testAppweb.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\testAppweb.obj $(CONFIG)\obj\testHttp.obj $(LIBS_91) $(LIBS_91) $(LIBS) libmpr.lib

!IF "$(BIT_PACK_CGI)" == "1"
#
#   test-testScript
#
!IF "$(BIT_PACK_CGI)" == "1"
DEPS_92 = $(DEPS_92) $(CONFIG)\bin\cgiProgram.exe
!ENDIF

test\cgi-bin\testScript: $(DEPS_92)
#  Omit build script test-testScript
!ENDIF

!IF "$(BIT_PACK_CGI)" == "1"
#
#   test-cache.cgi
#
test\web\caching\cache.cgi: $(DEPS_93)
#  Omit build script test-cache.cgi
!ENDIF

!IF "$(BIT_PACK_CGI)" == "1"
#
#   test-basic.cgi
#
test\web\auth\basic\basic.cgi: $(DEPS_94)
#  Omit build script test-basic.cgi
!ENDIF

!IF "$(BIT_PACK_CGI)" == "1"
#
#   test-cgiProgram
#
!IF "$(BIT_PACK_CGI)" == "1"
DEPS_95 = $(DEPS_95) $(CONFIG)\bin\cgiProgram.exe
!ENDIF

test\cgi-bin\cgiProgram.exe: $(DEPS_95)
#  Omit build script test-cgiProgram
!ENDIF

#
#   test.js
#
DEPS_96 = $(DEPS_96) src\esp\esp-www\files\static\js

test\web\js: $(DEPS_96)
	@echo '      [File] test/web/js'
	if not exist "test\web\js" md "test\web\js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.esp.js" "test\web\js\jquery.esp.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.js" "test\web\js\jquery.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.simplemodal.js" "test\web\js\jquery.simplemodal.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.tablesorter.js" "test\web\js\jquery.tablesorter.js"

#
#   version
#
version: $(DEPS_97)
	@echo 4.3.0-0


#
#   stop
#
DEPS_98 = $(DEPS_98) compile

stop: $(DEPS_98)
	@.\$(CONFIG)\bin\appman stop disable uninstall >/dev/null 2>&1 ; true

#
#   installBinary
#
DEPS_99 = $(DEPS_99) stop

installBinary: $(DEPS_99)
	if not exist "$(BIT_VAPP_PREFIX)\log" md "$(BIT_VAPP_PREFIX)\log"
	if not exist "$(BIT_VAPP_PREFIX)\cache" md "$(BIT_VAPP_PREFIX)\cache"
	if not exist "$(BIT_VAPP_PREFIX)\bin" md "$(BIT_VAPP_PREFIX)\bin"
	copy /Y "$(CONFIG)\bin\appman.exe" "$(BIT_VAPP_PREFIX)\bin\appman.exe"
	copy /Y "$(CONFIG)\bin\appweb.exe" "$(BIT_VAPP_PREFIX)\bin\appweb.exe"
	copy /Y "$(CONFIG)\bin\http.exe" "$(BIT_VAPP_PREFIX)\bin\http.exe"
!IF "$(BIT_PACK_ESP)" == "1"
	copy /Y "$(CONFIG)\bin\esp.exe" "$(BIT_VAPP_PREFIX)\bin\esp.exe"
!ENDIF
	copy /Y "$(CONFIG)\bin\appwebMonitor.exe" "$(BIT_VAPP_PREFIX)\bin\appwebMonitor.exe"
	copy /Y "$(CONFIG)\bin\appwebMonitor.ico" "$(BIT_VAPP_PREFIX)\bin\appwebMonitor.ico"
	copy /Y "$(CONFIG)\bin\libapp.dll" "$(BIT_VAPP_PREFIX)\bin\libapp.dll"
	copy /Y "$(CONFIG)\bin\libappweb.dll" "$(BIT_VAPP_PREFIX)\bin\libappweb.dll"
	copy /Y "$(CONFIG)\bin\libhttp.dll" "$(BIT_VAPP_PREFIX)\bin\libhttp.dll"
	copy /Y "$(CONFIG)\bin\libmod_ssl.dll" "$(BIT_VAPP_PREFIX)\bin\libmod_ssl.dll"
	copy /Y "$(CONFIG)\bin\libmpr.dll" "$(BIT_VAPP_PREFIX)\bin\libmpr.dll"
	copy /Y "$(CONFIG)\bin\libmprssl.dll" "$(BIT_VAPP_PREFIX)\bin\libmprssl.dll"
	copy /Y "$(CONFIG)\bin\libpcre.dll" "$(BIT_VAPP_PREFIX)\bin\libpcre.dll"
	copy /Y "$(CONFIG)\bin\ca.crt" "$(BIT_VAPP_PREFIX)\bin\ca.crt"
!IF "$(BIT_PACK_SQLITE)" == "1"
	copy /Y "$(CONFIG)\bin\libsqlite3.dll" "$(BIT_VAPP_PREFIX)\bin\libsqlite3.dll"
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
	copy /Y "$(CONFIG)\bin\libmod_esp.dll" "$(BIT_VAPP_PREFIX)\bin\libmod_esp.dll"
!ENDIF
!IF "$(BIT_PACK_CGI)" == "1"
	copy /Y "$(CONFIG)\bin\libmod_cgi.dll" "$(BIT_VAPP_PREFIX)\bin\libmod_cgi.dll"
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
	copy /Y "$(CONFIG)\bin\libejs.dll" "$(BIT_VAPP_PREFIX)\bin\libejs.dll"
	copy /Y "$(CONFIG)\bin\libmod_ejs.dll" "$(BIT_VAPP_PREFIX)\bin\libmod_ejs.dll"
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
	copy /Y "$(CONFIG)\bin\libmod_esp.lib" "$(BIT_VAPP_PREFIX)\bin\libmod_esp.lib"
	copy /Y "$(CONFIG)\bin\libappweb.lib" "$(BIT_VAPP_PREFIX)\bin\libappweb.lib"
	copy /Y "$(CONFIG)\bin\libpcre.lib" "$(BIT_VAPP_PREFIX)\bin\libpcre.lib"
	copy /Y "$(CONFIG)\bin\libhttp.lib" "$(BIT_VAPP_PREFIX)\bin\libhttp.lib"
	copy /Y "$(CONFIG)\bin\libmpr.lib" "$(BIT_VAPP_PREFIX)\bin\libmpr.lib"
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-www" md "$(BIT_VAPP_PREFIX)\bin\esp-www"
	copy /Y "src\esp\esp-www\app.conf" "$(BIT_VAPP_PREFIX)\bin\esp-www\app.conf"
	copy /Y "src\esp\esp-www\appweb.conf" "$(BIT_VAPP_PREFIX)\bin\esp-www\appweb.conf"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-www\files\layouts" md "$(BIT_VAPP_PREFIX)\bin\esp-www\files\layouts"
	copy /Y "src\esp\esp-www\files\layouts\default.esp" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\layouts\default.esp"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\images" md "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\images"
	copy /Y "src\esp\esp-www\files\static\images\banner.jpg" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\images\banner.jpg"
	copy /Y "src\esp\esp-www\files\static\images\favicon.ico" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\images\favicon.ico"
	copy /Y "src\esp\esp-www\files\static\images\splash.jpg" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\images\splash.jpg"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static" md "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static"
	copy /Y "src\esp\esp-www\files\static\index.esp" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\index.esp"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\js" md "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.esp.js" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\js\jquery.esp.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.js" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\js\jquery.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.simplemodal.js" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\js\jquery.simplemodal.js"
	copy /Y "src\esp\esp-www\files\static\js\jquery.tablesorter.js" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\js\jquery.tablesorter.js"
	copy /Y "src\esp\esp-www\files\static\layout.css" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\layout.css"
	if not exist "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\themes" md "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\themes"
	copy /Y "src\esp\esp-www\files\static\themes\default.css" "$(BIT_VAPP_PREFIX)\bin\esp-www\files\static\themes\default.css"
	copy /Y "src\esp\esp-appweb.conf" "$(BIT_VAPP_PREFIX)\bin\esp-appweb.conf"
!ENDIF
!IF "$(BIT_PACK_ESP)" == "1"
	if not exist "$(BIT_VAPP_PREFIX)" md "$(BIT_VAPP_PREFIX)"
	copy /Y "$(CONFIG)\bin\esp.conf" "$(BIT_VAPP_PREFIX)\esp.conf"
!ENDIF
	if not exist "$(BIT_VAPP_PREFIX)\web\bench" md "$(BIT_VAPP_PREFIX)\web\bench"
	copy /Y "src\server\web\bench\1b.html" "$(BIT_VAPP_PREFIX)\web\bench\1b.html"
	copy /Y "src\server\web\bench\4k.html" "$(BIT_VAPP_PREFIX)\web\bench\4k.html"
	copy /Y "src\server\web\bench\64k.html" "$(BIT_VAPP_PREFIX)\web\bench\64k.html"
	if not exist "$(BIT_VAPP_PREFIX)\web" md "$(BIT_VAPP_PREFIX)\web"
	copy /Y "src\server\web\favicon.ico" "$(BIT_VAPP_PREFIX)\web\favicon.ico"
	if not exist "$(BIT_VAPP_PREFIX)\web\icons" md "$(BIT_VAPP_PREFIX)\web\icons"
	copy /Y "src\server\web\icons\back.gif" "$(BIT_VAPP_PREFIX)\web\icons\back.gif"
	copy /Y "src\server\web\icons\blank.gif" "$(BIT_VAPP_PREFIX)\web\icons\blank.gif"
	copy /Y "src\server\web\icons\compressed.gif" "$(BIT_VAPP_PREFIX)\web\icons\compressed.gif"
	copy /Y "src\server\web\icons\folder.gif" "$(BIT_VAPP_PREFIX)\web\icons\folder.gif"
	copy /Y "src\server\web\icons\parent.gif" "$(BIT_VAPP_PREFIX)\web\icons\parent.gif"
	copy /Y "src\server\web\icons\space.gif" "$(BIT_VAPP_PREFIX)\web\icons\space.gif"
	copy /Y "src\server\web\icons\text.gif" "$(BIT_VAPP_PREFIX)\web\icons\text.gif"
	copy /Y "src\server\web\iehacks.css" "$(BIT_VAPP_PREFIX)\web\iehacks.css"
	if not exist "$(BIT_VAPP_PREFIX)\web\images" md "$(BIT_VAPP_PREFIX)\web\images"
	copy /Y "src\server\web\images\banner.jpg" "$(BIT_VAPP_PREFIX)\web\images\banner.jpg"
	copy /Y "src\server\web\images\bottomShadow.jpg" "$(BIT_VAPP_PREFIX)\web\images\bottomShadow.jpg"
	copy /Y "src\server\web\images\shadow.jpg" "$(BIT_VAPP_PREFIX)\web\images\shadow.jpg"
	copy /Y "src\server\web\index.html" "$(BIT_VAPP_PREFIX)\web\index.html"
	copy /Y "src\server\web\min-index.html" "$(BIT_VAPP_PREFIX)\web\min-index.html"
	copy /Y "src\server\web\print.css" "$(BIT_VAPP_PREFIX)\web\print.css"
	copy /Y "src\server\web\screen.css" "$(BIT_VAPP_PREFIX)\web\screen.css"
	if not exist "$(BIT_VAPP_PREFIX)\web\test" md "$(BIT_VAPP_PREFIX)\web\test"
	copy /Y "src\server\web\test\bench.html" "$(BIT_VAPP_PREFIX)\web\test\bench.html"
	copy /Y "src\server\web\test\test.cgi" "$(BIT_VAPP_PREFIX)\web\test\test.cgi"
	copy /Y "src\server\web\test\test.ejs" "$(BIT_VAPP_PREFIX)\web\test\test.ejs"
	copy /Y "src\server\web\test\test.esp" "$(BIT_VAPP_PREFIX)\web\test\test.esp"
	copy /Y "src\server\web\test\test.html" "$(BIT_VAPP_PREFIX)\web\test\test.html"
	copy /Y "src\server\web\test\test.php" "$(BIT_VAPP_PREFIX)\web\test\test.php"
	copy /Y "src\server\web\test\test.pl" "$(BIT_VAPP_PREFIX)\web\test\test.pl"
	copy /Y "src\server\web\test\test.py" "$(BIT_VAPP_PREFIX)\web\test\test.py"
	copy /Y "src\server\mime.types" "$(BIT_VAPP_PREFIX)\mime.types"
	copy /Y "src\server\appweb.conf" "$(BIT_VAPP_PREFIX)\appweb.conf"
	if not exist "$(BIT_VAPP_PREFIX)\inc" md "$(BIT_VAPP_PREFIX)\inc"
	copy /Y "$(CONFIG)\inc\bit.h" "$(BIT_VAPP_PREFIX)\inc\bit.h"
	copy /Y "src\bitos.h" "$(BIT_VAPP_PREFIX)\inc\bitos.h"
	copy /Y "src\appweb.h" "$(BIT_VAPP_PREFIX)\inc\appweb.h"
	copy /Y "src\customize.h" "$(BIT_VAPP_PREFIX)\inc\customize.h"
	copy /Y "src\deps\est\est.h" "$(BIT_VAPP_PREFIX)\inc\est.h"
	copy /Y "src\deps\http\http.h" "$(BIT_VAPP_PREFIX)\inc\http.h"
	copy /Y "src\deps\mpr\mpr.h" "$(BIT_VAPP_PREFIX)\inc\mpr.h"
	copy /Y "src\deps\pcre\pcre.h" "$(BIT_VAPP_PREFIX)\inc\pcre.h"
	copy /Y "src\deps\sqlite\sqlite3.h" "$(BIT_VAPP_PREFIX)\inc\sqlite3.h"
!IF "$(BIT_PACK_ESP)" == "1"
	copy /Y "src\esp\edi.h" "$(BIT_VAPP_PREFIX)\inc\edi.h"
	copy /Y "src\esp\esp-app.h" "$(BIT_VAPP_PREFIX)\inc\esp-app.h"
	copy /Y "src\esp\esp.h" "$(BIT_VAPP_PREFIX)\inc\esp.h"
	copy /Y "src\esp\mdb.h" "$(BIT_VAPP_PREFIX)\inc\mdb.h"
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
	copy /Y "src\deps\ejs\ejs.h" "$(BIT_VAPP_PREFIX)\inc\ejs.h"
	copy /Y "src\deps\ejs\ejs.slots.h" "$(BIT_VAPP_PREFIX)\inc\ejs.slots.h"
	copy /Y "src\deps\ejs\ejsByteGoto.h" "$(BIT_VAPP_PREFIX)\inc\ejsByteGoto.h"
!ENDIF
!IF "$(BIT_PACK_EJSCRIPT)" == "1"
	copy /Y "$(CONFIG)\bin\ejs.mod" "$(BIT_VAPP_PREFIX)\bin\ejs.mod"
!ENDIF
	echo 'set LOG_DIR "$(BIT_VAPP_PREFIX)/log"\nset CACHE_DIR "$(BIT_VAPP_PREFIX)/cache"\nDocuments "$(BIT_VAPP_PREFIX)/web\nListen 80\n' >$(BIT_VAPP_PREFIX)/install.conf

#
#   start
#
DEPS_100 = $(DEPS_100) compile
DEPS_100 = $(DEPS_100) stop

start: $(DEPS_100)
	.\$(CONFIG)\bin\appman install enable start

#
#   install
#
DEPS_101 = $(DEPS_101) stop
DEPS_101 = $(DEPS_101) installBinary
DEPS_101 = $(DEPS_101) start

install: $(DEPS_101)


#
#   uninstall
#
DEPS_102 = $(DEPS_102) stop

uninstall: $(DEPS_102)
	if exist "$(BIT_VAPP_PREFIX)\install.conf" rd /Q "$(BIT_VAPP_PREFIX)\install.conf"
	if exist "$(BIT_VAPP_PREFIX)\inc\appweb" rd /Q /S"$(BIT_VAPP_PREFIX)\inc\appweb"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q /S"$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\bin" rd /Q "$(BIT_VAPP_PREFIX)\bin"
	if exist "$(BIT_VAPP_PREFIX)\inc" rd /Q "$(BIT_VAPP_PREFIX)\inc"
	if exist "$(BIT_VAPP_PREFIX)\man" rd /Q "$(BIT_VAPP_PREFIX)\man"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q "$(BIT_VAPP_PREFIX)"
	if exist "$(BIT_VAPP_PREFIX)\web" rd /Q "$(BIT_VAPP_PREFIX)\web"
	if exist "$(BIT_VAPP_PREFIX)\log" rd /Q "$(BIT_VAPP_PREFIX)\log"
	if exist "$(BIT_VAPP_PREFIX)\tmp" rd /Q "$(BIT_VAPP_PREFIX)\tmp"
	if exist "$(BIT_VAPP_PREFIX)\cache" rd /Q "$(BIT_VAPP_PREFIX)\cache"
	if exist "$(BIT_VAPP_PREFIX)\latest" rd /Q "$(BIT_VAPP_PREFIX)\latest"
	if exist "$(BIT_VAPP_PREFIX)" rd /Q "$(BIT_VAPP_PREFIX)"

#
#   genslink
#
genslink: $(DEPS_103)
	cd src\server
	esp --static --genlink slink.c --flat compile
	cd ..\..

#
#   run
#
DEPS_104 = $(DEPS_104) compile

run: $(DEPS_104)
	cd src\server
	sudo ..\..\$(CONFIG)\bin\appweb -v
	cd ..\..

