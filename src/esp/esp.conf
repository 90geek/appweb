#
#   esp.conf -- Appweb configuration for Embedded Server Pages
#   

#   MOB - review
#   Commands can be hard coded or they can used tokens of the form ${TOKEN}. The supported tokens are:
#       ARCH            - Target cpu architecture (arm, mips, ppc, x86)
#       OS              - Target operating system (lower case)
#       PLATFORM        - Target platform system (os-arch)
#       LIB             - Library search path (MOB - change to LIBPATH)
#       CC              - Compiler command path
#       DEBUG           - Compiler debug switches (MOB - these are set for the dev system)
#       MOD             - Output module filename
#       SHOBJ           - Shared library extension including period
#       SRC             - Input source file name
#       VS              - Visual Studio install directory
#       WINSDK          - Windows SDK install directory
#       INC             - Default include directory path
#       LIBS            - Libraries to link with
#       GCC_ARCH        - Gcc architecture mtune|mcpu setting
#       WIND_BASE       - Windows
#       WIND_GNU_PATH   - Windows
#       WIND_HOME       - Windows
#       WIND_HOST_TYPE  - Windows
#       WIND_PLATFORM   - Windows

#   The <if Condition> declarations here can use either:
#       Operating systems: freebsd, linux, macosx, win, vxworks 
#       CPU architectures: arm, mips, ppc, sparc, x64, x86
#       Platforms: E.g. vxworks-arm, vxworks-pcc, linux-arm

#
#   This is the default compilation command for Linux and Freebsd. Overridden below for some operating systems.
#
EspCompile ${CC} -shared ${DEBUG} -Wall -Wno-unused-result -DPIC -fPIC -I. -I${INC} -L${LIBPATH} -Wl,--enable-new-dtags -Wl,-rpath,$ORIGIN/ -Wl,-rpath,$ORIGIN/../lib ${LIBS} -o ${MOD}${SHOBJ} ${SRC}

<if macosx>
    #
    #   Mac gcc requires a separate compile and link to get debug symbols. If debug is not required, use the one-step
    #   compile command below.
    #
    EspCompile ${CC} -c ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${INC} ${SRC} -o ${OBJ}
    EspLink ${CC} -dynamiclib ${DEBUG} -arch ${GCC_ARCH} -L${LIBPATH} -Wl,-rpath,@executable_path/../lib -Wl,-rpath,@executable_path/ -Wl,-rpath,@loader_path/ ${LIBS} -o ${MOD}${SHOBJ} ${OBJ} 
    # EspCompile ${CC} -dynamiclib ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${INC} -L${LIBPATH} -Wl,-rpath,@executable_path/../lib -Wl,-rpath,@executable_path/ -Wl,-rpath,@loader_path/ ${LIBS} -o ${MOD}${SHOBJ} ${SRC} 
</if>

<if win>
    EspCompile "${CC}" -LD ${DEBUG} -D_REENTRANT -D_MT -nologo -GR- -W3 -MDd -I. -I"${INC}" -Fe"${MOD}${SHOBJ}" "${SRC}" ${LIBS} ws2_32.lib
    # Use these definitions if appweb is not invoked with the VS env vars (INCLUDE, LIB and PATH) appropriately defined
    EspEnv INCLUDE "${VS}\VC\INCLUDE;${WINSDK}\include"
    EspEnv LIB "${WINSDK}\LIB;${VS}\VC\lib"
    EspEnv PATH "${VS}\Common7\IDE;${VS}\VC\bin;${VS}\Common7\Tools;${VS}\SDK\v3.5\bin;${VS}\VC\VCPackages;${WINSDK}\bin"

    EspEnv LIB "${WINSDK}\LIB\x64;${VS}\VC\lib\amd64"
    EspEnv PATH "${VS}\Common7\IDE;${VS}\VC\amd64\bin;${VS}\Common7\Tools;${VS}\SDK\v3.5\bin;${VS}\VC\VCPackages;${WINSDK}\bin\x64"
    EspEnv TMP "${TMP}"
</if>

<if vxworks>
    EspEnv WIND_BASE "${WIND_BASE}"
    EspEnv WIND_GNU_PATH "${WIND_GNU_PATH}"
    EspEnv WIND_HOME "${WIND_HOME}"
    EspEnv WIND_HOST_TYPE "${WIND_HOST_TYPE}"
    EspEnv WIND_PLATFORM "${WIND_PLATFORM}"
    EspCompile "${WIND_GNU_PATH}/${WIND_HOST_TYPE}/bin/${CCNAME}" ${DEBUG} -DRW_MULTI_THREAD -D_REENTRANT -Wall -fno-builtin -fno-defer-pop -fvolatile -mtune=${GCC_ARCH} "-I${WIND_BASE}/target/h" "-I${WIND_BASE}/target/h/wrn/coreip" -I${INC} -L${LIBPATH} -o ${MOD}${SHOBJ} ${SRC} 
</if>

<if cygwin>
    # This is unsupported. Cygwin is unreliable.
    EspCompile ${CC} -shared ${DEBUG} -Wall -Wno-unused-result -DPIC -fPIC -I. -I${INC} -L${LIBPATH} -Wl,-rpath,$ORIGIN/ -Wl,-rpath,$ORIGIN/../lib ${LIBS} -o ${MOD}${SHOBJ} ${SRC}
</if>

<if SCRIPT>
#
#   Use this style to run a script to compile. The script would look like:
#   MOB - won't work because of spaces and quotes
#
#    #!/bin/bash
#    for f in $* ; do
#        eval $f
#    done
#    ${CC} -c ${DEBUG} -Wall -DPIC -fPIC -arch ${GCC_ARCH} -I. -I${INC} ${SRC} 
#    ${CC} -dynamiclib ${DEBUG} -L${LIBPATH} -Wl,-rpath,@executable_path/../lib -Wl,-rpath,@executable_path/ -Wl,-rpath,@loader_path/ ${LIBS} -o ${MOD}${SHOBJ} ${OBJ} 
#    rm -f ${OBJ}
#    exit 0
    # EspCompile script DEBUG="${DEBUG}" ARCH="${ARCH}" INC="${INC}" LIB="${LIBPATH}" OBJ="${OBJ}" MOD="${MOD}" SRC="${SRC}" SHOBJ="${SHOBJ}"
</if>
