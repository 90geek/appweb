/*
    esp.bit -- Bit File for Embedded Server Pages
 */

Bit.load({
    targets: {
        libmod_esp: {
            enable: "bit.packs.esp.enable",
            type: 'lib',
            depends: [ 'libappweb', 'sqlite' ],
            sources: [ '*.c' ],
            headers: [ '*.h' ],
            exclude: /esp\.c/,
            packs: [ 'esp' ],
        },

        espcmd: {
            path: '${BIN}/esp',
            enable: "bit.packs.esp.enable",
            type: 'exe',
            depends: [ 'libappweb', 'sqlite' ],
            sources: [ '*.c' ]
            platforms: [ 'local' ],
            packs: 'esp',
        },

        'esp.conf': {
            type: 'file',
            files: [ 'esp.conf' ],
            packs: 'esp',
        },

        'esp.conf.server': {
            type: 'file',
            path: '../server/esp.conf',
            files: [ 'esp.conf' ],
            packs: 'esp',
        },

        'esp.www': {
            type: 'file',
            path: '${BIN}/esp-www',
            files: [ 'esp-www/' ],
            platforms: [ 'local' ],
            packs: 'esp',
        },

        'esp-appweb.conf': {
            type: 'file',
            path: '${BIN}/esp-appweb.conf',
            files: [ 'esp-appweb.conf' ],
            platforms: [ 'local' ],
            packs: 'esp',
        },

        'esp-configure': {
            scripts: {
                postconfig: "
                    if (bit.platform.os == 'vxworks') {
                        let evars = []
                        for (let [key,value] in bit.env) {
                            evars.push('EspEnv ' + key + ' \"' + value + '\"\n')
                        }
                        bit.dir.lib.join('esp-' + bit.platform.os + '.conf').write(evars.join())
                    }
                ",
            },
        },
    },
})
