/*
    Initialize for Appweb unit tests
 */
require ejs.unix

let conf         = Path("appweb.conf").readString()
const PORT       = conf.replace(/.*Listen *([0-9]+) *# MAIN.*/ms, "$1")
const IPV6       = conf.replace(/.*Listen *(\[::\]:[0-9]+) *# IPV6.*/ms, "$1")
const SSL_PORT   = conf.replace(/.*Listen *([0-9]+) *# SSL.*/ms, "$1")
const VHOST_PORT = conf.replace(/.*Listen *([0-9]+) *# VHOST.*/ms, "$1")
const IPHOST     = conf.replace(/.*Listen *([0-9]+) *# IPHOST.*/ms, "$1")
const LOCALHOST  = "127.0.0.1"
const HTTP       = "http://" + LOCALHOST + ":" + PORT
const HTTPS      = "https://" + LOCALHOST + ":" + SSL_PORT
const PIDFILE    = ".pidfile"

let cmd = Cmd.locate("appweb").portable + " --log trace.txt:4 --name forAppwebTest --config appweb.conf"

if (test.phase == "init") {
    if (!App.getenv("SECOND")) {
        for each (file in find("cache", "*.mod")) {
            rm(file)
        }
        cleanDir("web/tmp")
        for each (f in find(".", "*.tdat", true)) {
            rm(f)
        }
    }
    startService(cmd, {port: PORT})
} else {
    stopService()
    for each (f in find(".", "*.tdat", true)) {
        rm(f)
    }
}

share("host", HTTP)
share("port", PORT)
share("http", "http://" + LOCALHOST + ":" + PORT)
share("https", "https://" + LOCALHOST + ":" + SSL_PORT)
share("ipv6", "http://" + IPV6)
share("vhost", "http://" + LOCALHOST + ":" + VHOST_PORT)
share("vhostPort", VHOST_PORT)
share("iphost", "http://" + LOCALHOST + ":" + IPHOST)
