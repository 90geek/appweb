#
#   appweb.conf -- Appweb unit testing configuration
#   

# ErrorLog              log/error.log rotate,limit=10K,level=2
# AccessLog             conf/log.conf append,rotate,limit=10K
# TraceRx               conn=5, first=2, headers=3, body=5, time=4, size=10240, filter="jpg,gif,png,ico,css,js"
# TraceTx               first=3, headers=3, body=5, size=10240, filter="jpg,gif,png,ico,css,js"
# TraceRx               conn:5, first:2, headers:3, body:5, time:4, size:10240, filter:"jpg,gif,png,ico,css,js"

#
#   - Use same rotate code for error log and access log
#   - Rotate policy
#       - rotate when size reaches certain level
#       - append ".N" to old files
#       - rename all 5 when size reaches limit. 
#   - Remove LogRotation
#   - Add access log
#   - Deprecate from doc CustomLog, LogLevel, LogTrace, LogTraceFilter
#   - Add time tracing

ErrorLog                stdout
# LogRotation           5 1

LogLevel                0
LogTrace                3 headers,request,response,time
LogTraceFilter          4096 "*" "gif,jpg,png,ico,css,ico"

# Listen                [::]:5100
Listen                  4100         # MAIN - dont remove comment
DocumentRoot            "web"

LoadModulePath          "../../out/bin:../../out/lib"

DirectoryIndex          index.html
PutMethod               on
TraceMethod             off
KeepAlive               on

ClientCache             86400 html gif jpeg jpg png pdf ico js
Timeout                 600
KeepAliveTimeout        30
MaxKeepAliveRequests    200
ThreadLimit             8
LimitClients            40
LimitStageBuffer        65536
LimitChunkSize          32768

LimitUrl                1000000
LimitRequestHeaderCount 10000 
LimitRequestHeaderSize  10000000

LimitRequestBody        20000000000
LimitUploadSize         20000000000
LimitResponseBody       20000000000
LimitRequestFields      512
LimitRequestFieldSize   1000000

LimitMemoryMax          1000000000
LimitMemoryRedline      800000000
MemoryDepletionPolicy   exit      

UploadDir               .
UploadAutoDelete        on

AuthGroupFile           groups.db
AuthUserFile            users.db
AuthDigestQop           auth

SetConnector            netConnector
AddOutputFilter         rangeFilter
AddFilter               chunkFilter
AddInputFilter          uploadFilter
AddHandler              fileHandler html git jpeg jpg png pdf ico css js ""

<if CGI_MODULE>
    LoadModule cgiHandler mod_cgi
    AddHandler cgiHandler exe cgi cgi-nph bat cmd pl py
    ScriptAlias /cgi-bin/ "${SERVER_ROOT}/cgi-bin/"
    ScriptAlias /MyScripts/ "${SERVER_ROOT}/cgi-bin/"
    ScriptAlias /YourScripts/ "${DOCUMENT_ROOT}/"
    Action application/x-appweb-perl /usr/bin/perl
    Action application/x-appweb-python /usr/bin/python
    Action application/x-appweb-lua /usr/bin/lua
    Action application/x-appweb-ruby /usr/bin/ruby
    Action application/x-appweb-php /usr/bin/php
</if>

<if DIR_MODULE>
    AddHandler dirHandler
    Options Indexes
    IndexOrder ascending name
    IndexOptions FancyIndexing FoldersFirst
</if>

<if EJS_MODULE>
    LoadModule ejsHandler mod_ejs
    # UnloadModule ejsHandler 60
    AddHandler ejsHandler ejs es
</if>

<if PHP_MODULE>
    LoadModule phpHandler mod_php
    AddHandler phpHandler php
</if>

##	<if ESP_MODULE>
##	    LoadModule espHandler mod_esp
##      UnloadModule espHandler 60
##	    AddHandler espHandler *.esp
##	    include ${LIBDIR}/esp.conf
##	    EspDir cache cache
##	    EspRouteLine esp ALL \.[eE][sS][pP]$
##	    <Route /app>
##	        # MOB - test flat compilation loading
##			# EspLoad app app/cache/app
##	        EspAlias /app app mvc
##          DocumentRoot ./app
##	        # MOB - just for test
##	        <EspRoute "test">
##	            EspUri          ^/(XX|YY)/{controller}(/{action})
##	            EspHeader       User-Agent ! MOZ
##	            EspHeader       User-Agent Embedthis
##	            EspField        name john
##	            EspMethods      GET,POST
##	            # EspCondition    missing
##	            EspAction       ${controller}-${action}-${header:User-Agent}-${field:name}
##	            EspController   ${controller}.c
##	        </EspRoute>
##	        EspLogRoutes
##	    </Route>
##	    EspAlias /app2 app mvc
##	</if>

#######

# Set selected language var to XXXX (where)
# SET <html lang="@@LANG"


#OK	<Route /abc>
#OK	    Condition   ! exists ${request:filename}
#OK	    Target redirect 302 missing.html
#OK	    <Route /abc/def>
#OK	        Target virtual user-login
#OK	    </Route>
#OK	</Route>

DefaultLanguage en

<Route %(.*)(\.html)$>
    RouteName   manual
    # AddLanguageRoot en english before
    AddLanguage en en before
    Target      file $&
    # Target      file $1.${request:Language=ge}$2
    # Target      file $1.${request:Language=ge}$2
    # Target      file ${request:LanguageRoot}/$&
</Route>

<Route /mob>
    DocumentRoot ${DOCUMENT_ROOT}/mob
    AuthType basic
    AuthName "Acme Inc"
    Require valid-user
</Route>

#   <Route dir>
#       Uri         %(.*)/$
#       Condition   directory 
#       Condition   hasindex
#       Target      redirect $1{special:index}
#   </Route>

#   <Route dir>
#       Uri         %(.*)[^/]$
#       Condition   directory 
#       Target      redirect $1/
#   </Route>

#   <Route addext>
#       Uri         ! %(.*\.php)$
#       Condition   directory 
#       Target      redirect $1.php
#   </Route>

#   <Route /xx>
#       AddHandler fileHandler *.ext
#       SetHandler fileHandler
#       Target accept ${controller}-${action}-${header:User-Agent}-${field:name}
#   </Route>

#   <Route /prefix>
#       Base /path/to/dir
#       AddHandler fileHandler *.ext
#       SetHandler fileHandler
#       Target accept ${controller}-${action}-${header:User-Agent}-${field:name}
#   </Route>

#   EspRouteLine esp ALL \.[eE][sS][pP]$

#   <Route \.[eE][sS][pP]$>
#       Name            esp
#       Condition       extension esp
#       SetHandler      espHandler
#       Target          accept          
#   </Route>

#   <Route /SimpleAlias/>
#       DocumentRoot "${DOCUMENT_ROOT}/"
#   </Route alias>


#   MOB - what is the difference between target-route and target-redirect
#   MOB - rename actionKey to routeTarget

    <route ^/abc>
        Target          redirect /test.esp
        RouteName       ABC
        Compress        gzip

        #
        # Methods       GET,POST
        # Header        User-Agent Embedthis
        # Field         name john

        # Condition     ! exists ${request:filename} 
        # Condition     directory ${request:filename} 
        # Condition     match ${request:clientAddress} (embedthis|mbedthis).com
        # Condition     match "(embedthis|mbedthis).com-user" ${request:clientAddress}-${controller} 
        # Condition     ! match "hacker.com" ${request:clientAddress} 
 
        # DocumentRoot  /some/path
        # Update        field LANG $1
        # Update        cmd "mkdir -p /tmp/xxx/${request:uri}"
        # MOB - should multiple actions be allowed?
        # Target        redirect    english/${header:language}
        # Target        alias       /some/dir//${request:uri}
        # Target        virtual       ${controller}-${action}-${header:User-Agent}-${field:name}
        # Target        file        dir/${controller}-${action}.esp
        # Source        ${controller}.c
        # Load          app app/cache/app

        # Target        redirect /index.html
        # Target        cmd command line
        # Target        close [immediate | ban]

        #OK Target      redirect 301 /index.html
    </Route>

#    <Route ^/{controller}(/{action})

<if SSL_MODULE>
    LoadModule sslModule mod_ssl
    SSLCertificateFile "ssl/server.crt"
    SSLCertificateKeyFile "ssl/server.key.pem"

    Listen 4110     # SSL - dont remove comment
    <VirtualHost *:4110>
        DocumentRoot "web"
        SSLEngine on
    </VirtualHost>                                  
</if>

Alias /SimpleAlias/ "${DOCUMENT_ROOT}/"
Alias /aliasDir/ ${DOCUMENT_ROOT}/alias/
Alias /aliasFile ${DOCUMENT_ROOT}/alias/index.html
Alias /AliasForMyDocuments/ "${DOCUMENT_ROOT}/My Documents/"

Listen 4111             # VHOST - dont remove comment
NameVirtualHost *:4111
<VirtualHost *:4111>
    ServerName      localhost:4111
    DocumentRoot    "${SERVER_ROOT}/web/vhost/namehost1"
</VirtualHost>

<VirtualHost *:4111>
    ServerName 127.0.0.1:4111
    DocumentRoot "${SERVER_ROOT}/web/vhost/namehost2"
    ResetPipeline
    AddHandler fileHandler html
    <if EJS_MODULE>
        AddHandler ejsHandler ejs
        DirectoryIndex index.ejs
    </if>
</VirtualHost>

#
#   IP virtual host
#
Listen 4112             # IPHOST
<VirtualHost *:4112>
    DocumentRoot "${SERVER_ROOT}/web/vhost/iphost"
    AuthType basic
    AuthName "Acme Inc"
    Require user mary
</VirtualHost>

#
#   Routes with basic authentication
#
<Route /basic>
    DocumentRoot ${DOCUMENT_ROOT}/basic
    AuthType basic
    AuthName "Acme Inc"
    Require valid-user
    <Route /basic/group>
        DocumentRoot ${DOCUMENT_ROOT}/basic/group
        Require group acmeExec
    </Route>
    <Route /basic/user>
        DocumentRoot ${DOCUMENT_ROOT}/basic/user
        Require user joshua
    </Route>
</Route>
<Route /digest>
    DocumentRoot ${DOCUMENT_ROOT}/digest>
    AuthType digest
    AuthName "Acme Inc"
    Require valid-user
    <Route /digest/group>
        DocumentRoot ${DOCUMENT_ROOT}/digest/group>
        Require group acmeExec
    </Route>
    <Route /digest/user>
        DocumentRoot ${DOCUMENT_ROOT}/digest/user>
        Require user joshua
    </Route>
</Route>

#
#   Test external apps
#
<Route /blog>
    DocumentRoot /Users/mob/git/www/blog
    DirectoryIndex index.php
</Route>
<Route /forum>
    DocumentRoot /Users/mob/git/www/forum/appweb
    DirectoryIndex index.php
</Route>

include conf/*
