#
#  ejs.lst -- Module Listing for /Users/mob/git/appweb/projects/MACOSX/appweb-all/build/Debug/ejs.mod
#

==============================================================================================

MODULE:   ejs <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : void

   LOCAL:   [local-00] var block_0028_1 : Block
   LOCAL:   [local-01] var block_0406_19 : Block
   LOCAL:   [local-02] var block_0918_39 : Block
   LOCAL:   [local-03] var block_1261_47 : Block
   LOCAL:   [local-04] var block_1323_48 : Block
   LOCAL:   [local-05] var block_1389_49 : Block
   LOCAL:   [local-06] var block_1842_50 : Block
   LOCAL:   [local-07] var block_1963_51 : Block
   LOCAL:   [local-08] var block_2183_83 : Block
   LOCAL:   [local-09] var block_2307_84 : Block
   LOCAL:   [local-10] var block_2385_85 : Block
   LOCAL:   [local-11] var block_3088_87 : Block
   LOCAL:   [local-12] var block_3169_88 : Block
   LOCAL:   [local-13] var block_3381_116 : Block
   LOCAL:   [local-14] var block_3687_117 : Block
   LOCAL:   [local-15] var block_3804_118 : Block
   LOCAL:   [local-16] var block_4043_120 : Block
   LOCAL:   [local-17] var block_4168_121 : Block
   LOCAL:   [local-18] var block_4226_122 : Block
   LOCAL:   [local-19] var block_4351_123 : Block
   LOCAL:   [local-20] var block_4448_124 : Block
   LOCAL:   [local-21] var block_4868_129 : Block
   LOCAL:   [local-22] var block_5514_134 : Block
   LOCAL:   [local-23] var block_5611_135 : Block
   LOCAL:   [local-24] var block_5748_136 : Block
   LOCAL:   [local-25] var block_5828_137 : Block
   LOCAL:   [local-26] var block_6154_146 : Block
   LOCAL:   [local-27] var block_6393_147 : Block
   LOCAL:   [local-28] var block_6537_148 : Block
   LOCAL:   [local-29] var block_6605_149 : Block
   LOCAL:   [local-30] var block_6665_150 : Block
   LOCAL:   [local-31] var block_6739_151 : Block
   LOCAL:   [local-32] var block_7001_156 : Block
   LOCAL:   [local-33] var block_7308_159 : Block
   LOCAL:   [local-34] var block_7945_178 : Block
   LOCAL:   [local-35] var block_8183_195 : Block
   LOCAL:   [local-36] var block_8351_196 : Block
   LOCAL:   [local-37] var block_8557_197 : Block
   LOCAL:   [local-38] var block_8736_198 : Block
   LOCAL:   [local-39] var block_8881_199 : Block
   LOCAL:   [local-40] var block_9411_204 : Block
   LOCAL:   [local-41] var block_9530_205 : Block
   LOCAL:   [local-42] var block_9850_230 : Block
   LOCAL:   [local-43] var block_9994_231 : Block
   LOCAL:   [local-44] var block_10122_232 : Block
   LOCAL:   [local-45] var block_10552_239 : Block
   LOCAL:   [local-46] var block_10628_240 : Block
   LOCAL:   [local-47] var block_10847_241 : Block
   LOCAL:   [local-48] var block_11261_242 : Block
   LOCAL:   [local-49] var block_11509_249 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 02 c6 05 10 ............. debug 

    # ejs.es:355                }

    0008: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0010: [0] 01 6c ...................... addNamespace <ejs> 
    0012: [0] 33 02 38 74 ................ debug 

    # ejs.es:28                 module ejs {

    0016: [0] 33 02 46 8e 01 ............. debug 

    # ejs.es:35                     public var stderr: TextStream

    0021: [0] 33 02 54 84 02 ............. debug 

    # ejs.es:42                     public var stdin: TextStream

    0026: [0] 33 02 62 d2 02 ............. debug 

    # ejs.es:49                     public var stdout: TextStream

    0031: [0] 33 02 76 a4 03 ............. debug 

    # ejs.es:59                     class App {

    0036: [0] 34 1c ...................... defineClass <type: 0xe,  ejs::App> 
    0038: [0] 33 02 ca 04 cc 33 .......... debug 

    # ejs.es:293                    function appInit(): Void {

    0044: [0] 33 02 c4 05 9e 4c .......... debug 

    # ejs.es:354                    appInit()

    0050: [0] 17 08 00 ................... callGlobalSlot <slot: 4> <argc: 0> 
    0053: [0] 24 ......................... closeBlock 
    0054: [0] 8d 02 00 ................... openBlock <slot: 1> <0> 
    0057: [0] 33 02 c6 0d 10 ............. debug 

    # ejs.es:867                }

    0062: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0064: [0] 01 6c ...................... addNamespace <ejs> 
    0066: [0] 33 02 ac 06 74 ............. debug 

    # ejs.es:406                module ejs {

    0071: [0] 33 02 c6 06 e4 4c .......... debug 

    # ejs.es:419                    dynamic native class Array {

    0077: [0] 34 2c ...................... defineClass <type: 0x16,  ejs::Array> 
    0079: [0] 24 ......................... closeBlock 
    0080: [0] 8d 04 00 ................... openBlock <slot: 2> <0> 
    0083: [0] 33 02 f2 12 10 ............. debug 

    # ejs.es:1209               }

    0088: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0090: [0] 01 6c ...................... addNamespace <ejs> 
    0092: [0] 33 02 ac 0e 74 ............. debug 

    # ejs.es:918                module ejs {

    0097: [0] 33 02 bc 0e d0 81 01 ....... debug 

    # ejs.es:926                    class BinaryStream implements Stream {

    0104: [0] 34 34 ...................... defineClass <type: 0x1a,  ejs::BinaryStream> 
    0106: [0] 24 ......................... closeBlock 
    0107: [0] 8d 06 00 ................... openBlock <slot: 3> <0> 
    0110: [0] 33 02 ee 13 10 ............. debug 

    # ejs.es:1271               }

    0115: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0117: [0] 01 6c ...................... addNamespace <ejs> 
    0119: [0] 33 02 da 13 74 ............. debug 

    # ejs.es:1261               module ejs {

    0124: [0] 33 02 ec 13 c0 c1 01 ....... debug 

    # ejs.es:1270                   native final class Block { }

    0131: [0] 34 3c ...................... defineClass <type: 0x1e,  ejs::Block> 
    0133: [0] 24 ......................... closeBlock 
    0134: [0] 8d 08 00 ................... openBlock <slot: 4> <0> 
    0137: [0] 33 02 f4 14 10 ............. debug 

    # ejs.es:1338               }

    0142: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0144: [0] 01 6c ...................... addNamespace <ejs> 
    0146: [0] 33 02 d6 14 74 ............. debug 

    # ejs.es:1323               module ejs {

    0151: [0] 33 02 e2 14 aa c2 01 ....... debug 

    # ejs.es:1329                   native final class Boolean {

    0158: [0] 34 44 ...................... defineClass <type: 0x22,  ejs::Boolean> 
    0160: [0] 24 ......................... closeBlock 
    0161: [0] 8d 0a 00 ................... openBlock <slot: 5> <0> 
    0164: [0] 33 02 fc 1b 10 ............. debug 

    # ejs.es:1790               }

    0169: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0171: [0] 01 6c ...................... addNamespace <ejs> 
    0173: [0] 33 02 da 15 74 ............. debug 

    # ejs.es:1389               module ejs {

    0178: [0] 33 02 9a 16 fa c3 01 ....... debug 

    # ejs.es:1421                   final class ByteArray implements Stream {

    0185: [0] 34 4c ...................... defineClass <type: 0x26,  ejs::ByteArray> 
    0187: [0] 24 ......................... closeBlock 
    0188: [0] 8d 0c 00 ................... openBlock <slot: 6> <0> 
    0191: [0] 33 02 f0 1d 10 ............. debug 

    # ejs.es:1912               }

    0196: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0198: [0] 01 6c ...................... addNamespace <ejs> 
    0200: [0] 33 02 e4 1c 74 ............. debug 

    # ejs.es:1842               module ejs {

    0205: [0] 33 02 f2 1c c6 f0 01 ....... debug 

    # ejs.es:1849                   class Cmd {

    0212: [0] 34 54 ...................... defineClass <type: 0x2a,  ejs::Cmd> 
    0214: [0] 24 ......................... closeBlock 
    0215: [0] 8d 0e 00 ................... openBlock <slot: 7> <0> 
    0218: [0] 33 02 a2 21 10 ............. debug 

    # ejs.es:2129               }

    0223: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0225: [0] 01 6c ...................... addNamespace <ejs> 
    0227: [0] 33 02 d6 1e 74 ............. debug 

    # ejs.es:1963               module ejs {

    0232: [0] 33 02 84 1f a8 f9 01 ....... debug 

    # ejs.es:1986                   class CmdArgs {

    0239: [0] 34 5c ...................... defineClass <type: 0x2e,  ejs::CmdArgs> 
    0241: [0] 24 ......................... closeBlock 
    0242: [0] 8d 10 00 ................... openBlock <slot: 8> <0> 
    0245: [0] 33 02 90 23 10 ............. debug 

    # ejs.es:2248               }

    0250: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0252: [0] 01 6c ...................... addNamespace <ejs> 
    0254: [0] 33 02 8e 22 74 ............. debug 

    # ejs.es:2183               module ejs {

    0259: [0] 33 02 92 22 ae af 02 ....... debug 

    # ejs.es:2185                   use default namespace public

    0266: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0268: [1] 02 ......................... addNamespaceRef 
    0269: [0] 33 02 98 22 f0 af 02 ....... debug 

    # ejs.es:2188                   function gc(): Void

    0276: [0] 33 02 a0 22 c6 b0 02 ....... debug 

    # ejs.es:2192                   function readFile(path: String, encoding: String? = null): String

    0283: [0] 24 ......................... closeBlock 
    0284: [0] 8d 12 00 ................... openBlock <slot: 9> <0> 
    0287: [0] 33 02 f6 24 10 ............. debug 

    # ejs.es:2363               }

    0292: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0294: [0] 01 6c ...................... addNamespace <ejs> 
    0296: [0] 33 02 86 24 74 ............. debug 

    # ejs.es:2307               module ejs {

    0301: [0] 33 02 94 24 c0 b2 02 ....... debug 

    # ejs.es:2314                   enumerable class Config extends Object {

    0308: [0] 34 74 ...................... defineClass <type: 0x3a,  ejs::Config> 
    0310: [0] 24 ......................... closeBlock 
    0311: [0] 8d 14 00 ................... openBlock <slot: 10> <0> 
    0314: [0] 33 02 b8 2f 10 ............. debug 

    # ejs.es:3036               }

    0319: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0321: [0] 01 6c ...................... addNamespace <ejs> 
    0323: [0] 33 02 a2 25 74 ............. debug 

    # ejs.es:2385               module ejs {

    0328: [0] 33 02 ae 25 92 b9 02 ....... debug 

    # ejs.es:2391                   final class Date {

    0335: [0] 34 7c ...................... defineClass <type: 0x3e,  ejs::Date> 
    0337: [0] 24 ......................... closeBlock 
    0338: [0] 8d 16 00 ................... openBlock <slot: 11> <0> 
    0341: [0] 33 02 dc 30 10 ............. debug 

    # ejs.es:3118               }

    0346: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0348: [0] 01 6c ...................... addNamespace <ejs> 
    0350: [0] 33 02 a0 30 74 ............. debug 

    # ejs.es:3088               module ejs {

    0355: [0] 24 ......................... closeBlock 
    0356: [0] 8d 18 00 ................... openBlock <slot: 12> <0> 
    0359: [0] 33 02 82 34 10 ............. debug 

    # ejs.es:3329               }

    0364: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0366: [0] 01 6c ...................... addNamespace <ejs> 
    0368: [0] 33 02 c2 31 74 ............. debug 

    # ejs.es:3169               module ejs {

    0373: [0] 33 02 d8 31 c8 8c 03 ....... debug 

    # ejs.es:3180                   class Emitter {

    0380: [0] 34 84 01 ................... defineClass <type: 0x42,  ejs::Emitter> 
    0383: [0] 33 02 ee 33 ee ba 03 ....... debug 

    # ejs.es:3319                   internal class Endpoint {

    0390: [0] 34 8c 01 ................... defineClass <type: 0x46,  internal-ed363076473b51ca685af450cc662b39-0::Endpoint> 
    0393: [0] 24 ......................... closeBlock 
    0394: [0] 8d 1a 00 ................... openBlock <slot: 13> <0> 
    0397: [0] 33 02 e4 38 10 ............. debug 

    # ejs.es:3634               }

    0402: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0404: [0] 01 6c ...................... addNamespace <ejs> 
    0406: [0] 33 02 ea 34 74 ............. debug 

    # ejs.es:3381               module ejs {

    0411: [0] 33 02 fc 34 dc bf 03 ....... debug 

    # ejs.es:3390                   native dynamic class ArgError extends Error {

    0418: [0] 34 94 01 ................... defineClass <type: 0x4a,  ejs::ArgError> 
    0421: [0] 33 02 98 35 fa c1 03 ....... debug 

    # ejs.es:3404                   native dynamic class ArithmeticError extends Error {

    0428: [0] 34 9c 01 ................... defineClass <type: 0x4e,  ejs::ArithmeticError> 
    0431: [0] 33 02 b2 35 90 c4 03 ....... debug 

    # ejs.es:3417                   native dynamic class AssertError extends Error {

    0438: [0] 34 a4 01 ................... defineClass <type: 0x52,  ejs::AssertError> 
    0441: [0] 33 02 ce 35 8e c6 03 ....... debug 

    # ejs.es:3431                   native dynamic class InstructionError extends Error {

    0448: [0] 34 ac 01 ................... defineClass <type: 0x56,  ejs::InstructionError> 
    0451: [0] 33 02 f0 35 aa c8 03 ....... debug 

    # ejs.es:3448                   native dynamic class Error {

    0458: [0] 34 b4 01 ................... defineClass <type: 0x5a,  ejs::Error> 
    0461: [0] 33 02 bc 36 a6 cc 03 ....... debug 

    # ejs.es:3486                   native dynamic class IOError extends Error {

    0468: [0] 34 bc 01 ................... defineClass <type: 0x5e,  ejs::IOError> 
    0471: [0] 33 02 d8 36 8c ce 03 ....... debug 

    # ejs.es:3500                   native dynamic class InternalError extends Error {

    0478: [0] 34 c4 01 ................... defineClass <type: 0x62,  ejs::InternalError> 
    0481: [0] 33 02 f4 36 96 d0 03 ....... debug 

    # ejs.es:3514                   native dynamic class MemoryError extends Error {

    0488: [0] 34 cc 01 ................... defineClass <type: 0x66,  ejs::MemoryError> 
    0491: [0] 33 02 94 37 94 d2 03 ....... debug 

    # ejs.es:3530                   native dynamic class OutOfBoundsError extends Error {

    0498: [0] 34 d4 01 ................... defineClass <type: 0x6a,  ejs::OutOfBoundsError> 
    0501: [0] 33 02 ae 37 b0 d4 03 ....... debug 

    # ejs.es:3543                   native dynamic class ReferenceError extends Error {

    0508: [0] 34 dc 01 ................... defineClass <type: 0x6e,  ejs::ReferenceError> 
    0511: [0] 33 02 ca 37 be d6 03 ....... debug 

    # ejs.es:3557                   native dynamic class ResourceError extends Error {

    0518: [0] 34 e4 01 ................... defineClass <type: 0x72,  ejs::ResourceError> 
    0521: [0] 33 02 ea 37 c8 d8 03 ....... debug 

    # ejs.es:3573                   native dynamic class SecurityError extends Error {

    0528: [0] 34 ec 01 ................... defineClass <type: 0x76,  ejs::SecurityError> 
    0531: [0] 33 02 86 38 d2 da 03 ....... debug 

    # ejs.es:3587                   native dynamic class StateError extends Error {

    0538: [0] 34 f4 01 ................... defineClass <type: 0x7a,  ejs::StateError> 
    0541: [0] 33 02 a0 38 ca dc 03 ....... debug 

    # ejs.es:3600                   native dynamic class SyntaxError extends Error {

    0548: [0] 34 fc 01 ................... defineClass <type: 0x7e,  ejs::SyntaxError> 
    0551: [0] 33 02 bc 38 c8 de 03 ....... debug 

    # ejs.es:3614                   native dynamic class TypeError extends Error {

    0558: [0] 34 84 02 ................... defineClass <type: 0x82,  ejs::TypeError> 
    0561: [0] 33 02 d6 38 ba e0 03 ....... debug 

    # ejs.es:3627                   native dynamic class URIError extends Error {

    0568: [0] 34 8c 02 ................... defineClass <type: 0x86,  ejs::URIError> 
    0571: [0] 24 ......................... closeBlock 
    0572: [0] 8d 1c 00 ................... openBlock <slot: 14> <0> 
    0575: [0] 33 02 d0 3a 10 ............. debug 

    # ejs.es:3752               }

    0580: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0582: [0] 01 6c ...................... addNamespace <ejs> 
    0584: [0] 33 02 ce 39 74 ............. debug 

    # ejs.es:3687               module ejs {

    0589: [0] 33 02 e4 39 c4 e2 03 ....... debug 

    # ejs.es:3698                   class Event {

    0596: [0] 34 94 02 ................... defineClass <type: 0x8a,  ejs::Event> 
    0599: [0] 33 02 a2 3a a0 e7 03 ....... debug 

    # ejs.es:3729                   class ErrorEvent extends Event {

    0606: [0] 34 9c 02 ................... defineClass <type: 0x8e,  ejs::ErrorEvent> 
    0609: [0] 24 ......................... closeBlock 
    0610: [0] 8d 1e 00 ................... openBlock <slot: 15> <0> 
    0613: [0] 33 02 b0 3e 10 ............. debug 

    # ejs.es:3992               }

    0618: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0620: [0] 01 6c ...................... addNamespace <ejs> 
    0622: [0] 33 02 b8 3b 74 ............. debug 

    # ejs.es:3804               module ejs {

    0627: [0] 33 02 cc 3b 9a ea 03 ....... debug 

    # ejs.es:3814                   final class File implements Stream {

    0634: [0] 34 a4 02 ................... defineClass <type: 0x92,  ejs::File> 
    0637: [0] 24 ......................... closeBlock 
    0638: [0] 8d 20 00 ................... openBlock <slot: 16> <0> 
    0641: [0] 33 02 aa 40 10 ............. debug 

    # ejs.es:4117               }

    0646: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0648: [0] 01 6c ...................... addNamespace <ejs> 
    0650: [0] 33 02 96 3f 74 ............. debug 

    # ejs.es:4043               module ejs {

    0655: [0] 33 02 a4 3f ba fa 03 ....... debug 

    # ejs.es:4050                   class FileSystem {

    0662: [0] 34 ac 02 ................... defineClass <type: 0x96,  ejs::FileSystem> 
    0665: [0] 24 ......................... closeBlock 
    0666: [0] 8d 22 00 ................... openBlock <slot: 17> <0> 
    0669: [0] 33 02 a0 41 10 ............. debug 

    # ejs.es:4176               }

    0674: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0676: [0] 01 6c ...................... addNamespace <ejs> 
    0678: [0] 33 02 90 41 74 ............. debug 

    # ejs.es:4168               module ejs {

    0683: [0] 33 02 9c 41 d2 81 04 ....... debug 

    # ejs.es:4174                   native final class Frame extends Function {

    0690: [0] 34 b4 02 ................... defineClass <type: 0x9a,  ejs::Frame> 
    0693: [0] 24 ......................... closeBlock 
    0694: [0] 8d 24 00 ................... openBlock <slot: 18> <0> 
    0697: [0] 33 02 98 43 10 ............. debug 

    # ejs.es:4300               }

    0702: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0704: [0] 01 6c ...................... addNamespace <ejs> 
    0706: [0] 33 02 84 42 74 ............. debug 

    # ejs.es:4226               module ejs {

    0711: [0] 33 02 92 42 8c 83 04 ....... debug 

    # ejs.es:4233                   native class Function {

    0718: [0] 34 bc 02 ................... defineClass <type: 0x9e,  ejs::Function> 
    0721: [0] 33 02 90 43 fa 88 04 ....... debug 

    # ejs.es:4296                   native function makeGetter(fn: Function): Function

    0728: [0] 33 02 96 43 84 8a 04 ....... debug 

    # ejs.es:4299                   native function clearBoundThis(fn: Function): Function

    0735: [0] 24 ......................... closeBlock 
    0736: [0] 8d 26 00 ................... openBlock <slot: 19> <0> 
    0739: [0] 33 02 da 44 10 ............. debug 

    # ejs.es:4397               }

    0744: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0746: [0] 01 6c ...................... addNamespace <ejs> 
    0748: [0] 33 02 fe 43 74 ............. debug 

    # ejs.es:4351               module ejs {

    0753: [0] 33 02 8c 44 b6 8b 04 ....... debug 

    # ejs.es:4358                   class GC {

    0760: [0] 34 d4 02 ................... defineClass <type: 0xaa,  ejs::GC> 
    0763: [0] 24 ......................... closeBlock 
    0764: [0] 8d 28 00 ................... openBlock <slot: 20> <0> 
    0767: [0] 33 02 a2 4b 10 ............. debug 

    # ejs.es:4817               }

    0772: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0774: [0] 01 6c ...................... addNamespace <ejs> 
    0776: [0] 33 02 c0 45 74 ............. debug 

    # ejs.es:4448               module ejs {

    0781: [0] 33 02 ca 45 88 91 04 ....... debug 

    # ejs.es:4453                   public var EJSCRIPT: Boolean = true

    0788: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0791: [1] b7 56 ...................... putGlobalSlot <slot: 43> 
    0793: [0] 33 02 d2 45 ea 91 04 ....... debug 

    # ejs.es:4457                   public var ECMA: Boolean = false

    0800: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0802: [1] b7 58 ...................... putGlobalSlot <slot: 44> 
    0804: [0] 33 02 d8 45 be 92 04 ....... debug 

    # ejs.es:4460               public namespace ejs

    0811: [0] 53 6c ...................... loadNamespace <ejs> 
    0813: [1] b7 5a ...................... putGlobalSlot <slot: 45> 
    0815: [0] 33 02 e0 45 fc 92 04 ....... debug 

    # ejs.es:4464                   public namespace public

    0822: [0] 53 e0 01 ................... loadNamespace <public> 
    0825: [1] b7 5c ...................... putGlobalSlot <slot: 46> 
    0827: [0] 33 02 ea 45 b4 93 04 ....... debug 

    # ejs.es:4469                   public namespace internal

    0834: [0] 53 f0 93 04 ................ loadNamespace <internal> 
    0838: [1] b7 5e ...................... putGlobalSlot <slot: 47> 
    0840: [0] 33 02 f4 45 82 94 04 ....... debug 

    # ejs.es:4474                   public namespace iterator

    0847: [0] 53 e2 31 ................... loadNamespace <iterator> 
    0850: [1] b7 60 ...................... putGlobalSlot <slot: 48> 
    0852: [0] 33 02 80 46 be 94 04 ....... debug 

    # ejs.es:4480                   public namespace CONFIG

    0859: [0] 53 f6 94 04 ................ loadNamespace <CONFIG> 
    0863: [1] b7 62 ...................... putGlobalSlot <slot: 49> 
    0865: [0] 33 02 86 46 84 95 04 ....... debug 

    # ejs.es:4483                   use namespace iterator

    0872: [0] 7e 60 ...................... getGlobalSlot <slot: 48> 
    0874: [1] 02 ......................... addNamespaceRef 
    0875: [0] 33 02 96 46 c4 95 04 ....... debug 

    # ejs.es:4491                   const TODO: Boolean = false

    0882: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0884: [1] b7 64 ...................... putGlobalSlot <slot: 50> 
    0886: [0] 33 02 a0 46 84 96 04 ....... debug 

    # ejs.es:4496                   const FUTURE: Boolean = false

    0893: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0895: [1] b7 66 ...................... putGlobalSlot <slot: 51> 
    0897: [0] 33 02 aa 46 d6 96 04 ....... debug 

    # ejs.es:4501                   const ASC: Boolean = false

    0904: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0906: [1] b7 68 ...................... putGlobalSlot <slot: 52> 
    0908: [0] 33 02 b4 46 9c 97 04 ....... debug 

    # ejs.es:4506                   const DOC_ONLY: Boolean = false

    0915: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0917: [1] b7 6a ...................... putGlobalSlot <slot: 53> 
    0919: [0] 33 02 be 46 f6 97 04 ....... debug 

    # ejs.es:4511                   const DEPRECATED: Boolean = false

    0926: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0928: [1] b7 6c ...................... putGlobalSlot <slot: 54> 
    0930: [0] 33 02 cc 46 d8 98 04 ....... debug 

    # ejs.es:4518                   native const boolean: Type

    0937: [0] 33 02 d8 46 b0 99 04 ....... debug 

    # ejs.es:4524                   native const double: Type

    0944: [0] 33 02 e6 46 fa 99 04 ....... debug 

    # ejs.es:4531                   native const num: Type

    0951: [0] 33 02 f0 46 b8 9a 04 ....... debug 

    # ejs.es:4536                   native const string: Type

    0958: [0] 33 02 fa 46 82 9b 04 ....... debug 

    # ejs.es:4541                   native const false: Boolean

    0965: [0] 33 02 86 47 c2 9b 04 ....... debug 

    # ejs.es:4547                   native var global: Object

    0972: [0] 33 02 92 47 8c 9c 04 ....... debug 

    # ejs.es:4553                   native const null: Null

    0979: [0] 33 02 9c 47 d8 9c 04 ....... debug 

    # ejs.es:4558                   native const Infinity: Number

    0986: [0] 33 02 a6 47 ae 9d 04 ....... debug 

    # ejs.es:4563                   native const NegativeInfinity: Number

    0993: [0] 33 02 b0 47 a4 9e 04 ....... debug 

    # ejs.es:4568                   native const NaN: Number

    1000: [0] 33 02 ba 47 e6 9e 04 ....... debug 

    # ejs.es:4573                   native const true: Boolean

    1007: [0] 33 02 c6 47 a4 9f 04 ....... debug 

    # ejs.es:4579                   native const undefined: Void

    1014: [0] 33 02 d4 47 fa 9f 04 ....... debug 

    # ejs.es:4586                   native const void: Type

    1021: [0] 33 02 e6 47 bc a0 04 ....... debug 

    # ejs.es:4595                   native function assert(condition: Boolean): Boolean

    1028: [0] 33 02 f0 47 ce a1 04 ....... debug 

    # ejs.es:4600                   native function breakpoint(): Void

    1035: [0] 33 02 fe 47 b2 a2 04 ....... debug 

    # ejs.es:4607                   native function cloneBase(klass: Type): Void

    1042: [0] 33 02 8c 48 b4 a3 04 ....... debug 

    # ejs.es:4614                   native function decodeURI(str: String): String

    1049: [0] 33 02 9e 48 b6 a4 04 ....... debug 

    # ejs.es:4623                   function dump(...args): Void {

    1056: [0] 33 02 ac 48 ca a6 04 ....... debug 

    # ejs.es:4630                   function dumpAll(...args): Void {

    1063: [0] 33 02 ba 48 ee a8 04 ....... debug 

    # ejs.es:4637                   function dumpDef(...args): Void {

    1070: [0] 33 02 d6 48 80 ae 04 ....... debug 

    # ejs.es:4651                   native function encodeURI(str: String): String

    1077: [0] 33 02 e8 48 fa ae 04 ....... debug 

    # ejs.es:4660                   native function escape(str: String): String

    1084: [0] 33 02 fc 48 e8 af 04 ....... debug 

    # ejs.es:4670                   native function md5(str: String): String

    1091: [0] 33 02 96 49 ca b0 04 ....... debug 

    # ejs.es:4683                   native function blend(dest: Object, src: Object, overwrite: Boolean = true): Object

    1098: [0] 33 02 a6 49 86 b2 04 ....... debug 

    # ejs.es:4691                   native function eval(script: String, cache: String? = null): Object

    1105: [0] 33 02 b4 49 ae b3 04 ....... debug 

    # ejs.es:4698                   native function formatStack(): String

    1112: [0] 33 02 c0 49 9a b4 04 ....... debug 

    # ejs.es:4704                   native function hashcode(o: Object): Number

    1119: [0] 33 02 ce 49 8c b5 04 ....... debug 

    # ejs.es:4711                   function isNaN(arg: Number): Boolean

    1126: [0] 33 02 de 49 8e b6 04 ....... debug 

    # ejs.es:4719                   function isFinite(arg: Number): Boolean

    1133: [0] 33 02 f4 49 a2 b7 04 ....... debug 

    # ejs.es:4730                   native function load(file: String, cache: String? = null): Object

    1140: [0] 33 02 86 4a c2 b8 04 ....... debug 

    # ejs.es:4739                   native function print(...args): void

    1147: [0] 33 02 96 4a a0 b9 04 ....... debug 

    # ejs.es:4747                   native function parse(str: String, preferredType: Type? = null): Object

    1154: [0] 33 02 a4 4a d4 ba 04 ....... debug 

    # ejs.es:4754                   function parseFloat(str: String): Number

    1161: [0] 33 02 b6 4a fa bb 04 ....... debug 

    # ejs.es:4763                   native function parseInt(str: String, radix: Number = 10): Number

    1168: [0] 33 02 da 4a a4 bd 04 ....... debug 

    # ejs.es:4781                   function printHash(name: String, o: Object): Void

    1175: [0] 33 02 e2 4a 92 bf 04 ....... debug 

    # ejs.es:4785                   function instanceOf(obj: Object, target: Object): Boolean

    1182: [0] 33 02 fa 4a de c0 04 ....... debug 

    # ejs.es:4797                   native function error(...args): void

    1189: [0] 33 02 8a 4b bc c1 04 ....... debug 

    # ejs.es:4805                   native function input(): String

    1196: [0] 33 02 a0 4b 84 c2 04 ....... debug 

    # ejs.es:4816                   native function output(...args): void

    1203: [0] 24 ......................... closeBlock 
    1204: [0] 8d 2a 00 ................... openBlock <slot: 21> <0> 
    1207: [0] 33 02 aa 55 10 ............. debug 

    # ejs.es:5461               }

    1212: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1214: [0] 01 6c ...................... addNamespace <ejs> 
    1216: [0] 33 02 88 4c 74 ............. debug 

    # ejs.es:4868               module ejs {

    1221: [0] 33 02 9c 4c f6 c2 04 ....... debug 

    # ejs.es:4878                   dynamic class Http implements Stream {

    1228: [0] 34 f4 05 ................... defineClass <type: 0x17a,  ejs::Http> 
    1231: [0] 24 ......................... closeBlock 
    1232: [0] 8d 2c 00 ................... openBlock <slot: 22> <0> 
    1235: [0] 33 02 ee 56 10 ............. debug 

    # ejs.es:5559               }

    1240: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1242: [0] 01 6c ...................... addNamespace <ejs> 
    1244: [0] 33 02 94 56 74 ............. debug 

    # ejs.es:5514               module ejs {

    1249: [0] 33 02 a2 56 8c d2 05 ....... debug 

    # ejs.es:5521                   iterator interface Iterable {

    1256: [0] 34 fc 05 ................... defineClass <type: 0x17e,  iterator::Iterable> 
    1259: [0] 33 02 ca 56 e2 d2 05 ....... debug 

    # ejs.es:5541                   iterator native final class Iterator {

    1266: [0] 34 84 06 ................... defineClass <type: 0x182,  iterator::Iterator> 
    1269: [0] 33 02 ea 56 90 d4 05 ....... debug 

    # ejs.es:5557                   iterator native final class StopIteration {}

    1276: [0] 34 8c 06 ................... defineClass <type: 0x186,  iterator::StopIteration> 
    1279: [0] 24 ......................... closeBlock 
    1280: [0] 8d 2e 00 ................... openBlock <slot: 23> <0> 
    1283: [0] 33 02 f6 58 10 ............. debug 

    # ejs.es:5691               }

    1288: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1290: [0] 01 6c ...................... addNamespace <ejs> 
    1292: [0] 33 02 d6 57 74 ............. debug 

    # ejs.es:5611               module ejs {

    1297: [0] 33 02 e4 57 90 d5 05 ....... debug 

    # ejs.es:5618                   final class JSON {

    1304: [0] 34 94 06 ................... defineClass <type: 0x18a,  ejs::JSON> 
    1307: [0] 33 02 c0 58 d0 da 05 ....... debug 

    # ejs.es:5664                   native function deserialize(str: String): Object

    1314: [0] 33 02 f4 58 d2 db 05 ....... debug 

    # ejs.es:5690                   native function serialize(obj: Object, options: Object? = null): String

    1321: [0] 24 ......................... closeBlock 
    1322: [0] 8d 30 00 ................... openBlock <slot: 24> <0> 
    1325: [0] 33 02 a0 5a 10 ............. debug 

    # ejs.es:5776               }

    1330: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1332: [0] 01 6c ...................... addNamespace <ejs> 
    1334: [0] 33 02 e8 59 74 ............. debug 

    # ejs.es:5748               module ejs {

    1339: [0] 33 02 f4 59 9c dd 05 ....... debug 

    # ejs.es:5754                   class Locale {

    1346: [0] 34 ac 06 ................... defineClass <type: 0x196,  ejs::Locale> 
    1349: [0] 24 ......................... closeBlock 
    1350: [0] 8d 32 00 ................... openBlock <slot: 25> <0> 
    1353: [0] 33 02 ea 5f 10 ............. debug 

    # ejs.es:6133               }

    1358: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1360: [0] 01 6c ...................... addNamespace <ejs> 
    1362: [0] 33 02 88 5b 74 ............. debug 

    # ejs.es:5828               module ejs {

    1367: [0] 33 02 ac 5b d6 e0 05 ....... debug 

    # ejs.es:5846                   class Logger implements Stream {

    1374: [0] 34 b4 06 ................... defineClass <type: 0x19a,  ejs::Logger> 
    1377: [0] 24 ......................... closeBlock 
    1378: [0] 8d 34 00 ................... openBlock <slot: 26> <0> 
    1381: [0] 33 02 8c 63 10 ............. debug 

    # ejs.es:6342               }

    1386: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1388: [0] 01 6c ...................... addNamespace <ejs> 
    1390: [0] 33 02 94 60 74 ............. debug 

    # ejs.es:6154               module ejs {

    1395: [0] 33 02 a6 60 86 9d 06 ....... debug 

    # ejs.es:6163                   class Math extends Object {

    1402: [0] 34 bc 06 ................... defineClass <type: 0x19e,  ejs::Math> 
    1405: [0] 24 ......................... closeBlock 
    1406: [0] 8d 36 00 ................... openBlock <slot: 27> <0> 
    1409: [0] 33 02 aa 65 10 ............. debug 

    # ejs.es:6485               }

    1414: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1416: [0] 01 6c ...................... addNamespace <ejs> 
    1418: [0] 33 02 f2 63 74 ............. debug 

    # ejs.es:6393               module ejs {

    1423: [0] 33 02 80 64 90 b9 06 ....... debug 

    # ejs.es:6400                   class Memory {

    1430: [0] 34 c4 06 ................... defineClass <type: 0x1a2,  ejs::Memory> 
    1433: [0] 24 ......................... closeBlock 
    1434: [0] 8d 38 00 ................... openBlock <slot: 28> <0> 
    1437: [0] 33 02 b0 66 10 ............. debug 

    # ejs.es:6552               }

    1442: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1444: [0] 01 6c ...................... addNamespace <ejs> 
    1446: [0] 33 02 92 66 74 ............. debug 

    # ejs.es:6537               module ejs {

    1451: [0] 24 ......................... closeBlock 
    1452: [0] 8d 3a 00 ................... openBlock <slot: 29> <0> 
    1455: [0] 33 02 ac 67 10 ............. debug 

    # ejs.es:6614               }

    1460: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1462: [0] 01 6c ...................... addNamespace <ejs> 
    1464: [0] 33 02 9a 67 74 ............. debug 

    # ejs.es:6605               module ejs {

    1469: [0] 33 02 a8 67 8c c5 06 ....... debug 

    # ejs.es:6612                   native final class Namespace {

    1476: [0] 34 cc 06 ................... defineClass <type: 0x1a6,  ejs::Namespace> 
    1479: [0] 24 ......................... closeBlock 
    1480: [0] 8d 3c 00 ................... openBlock <slot: 30> <0> 
    1483: [0] 33 02 c0 68 10 ............. debug 

    # ejs.es:6688               }

    1488: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1490: [0] 01 6c ...................... addNamespace <ejs> 
    1492: [0] 33 02 92 68 74 ............. debug 

    # ejs.es:6665               module ejs {

    1497: [0] 33 02 a0 68 f0 c5 06 ....... debug 

    # ejs.es:6672                   native final class Null {

    1504: [0] 34 d4 06 ................... defineClass <type: 0x1aa,  ejs::Null> 
    1507: [0] 24 ......................... closeBlock 
    1508: [0] 8d 3e 00 ................... openBlock <slot: 31> <0> 
    1511: [0] 33 02 ce 6c 10 ............. debug 

    # ejs.es:6951               }

    1516: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1518: [0] 01 6c ...................... addNamespace <ejs> 
    1520: [0] 33 02 a6 69 74 ............. debug 

    # ejs.es:6739               module ejs {

    1525: [0] 33 02 b6 69 ca c6 06 ....... debug 

    # ejs.es:6747                   native final class Number {

    1532: [0] 34 dc 06 ................... defineClass <type: 0x1ae,  ejs::Number> 
    1535: [0] 24 ......................... closeBlock 
    1536: [0] 8d 40 00 ................... openBlock <slot: 32> <0> 
    1539: [0] 33 02 86 71 10 ............. debug 

    # ejs.es:7235               }

    1544: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1546: [0] 01 6c ...................... addNamespace <ejs> 
    1548: [0] 33 02 b2 6d 74 ............. debug 

    # ejs.es:7001               module ejs {

    1553: [0] 33 02 c0 6d d4 e2 06 ....... debug 

    # ejs.es:7008                   dynamic native class Object implements Iterable {

    1560: [0] 34 e4 06 ................... defineClass <type: 0x1b2,  ejs::Object> 
    1563: [0] 24 ......................... closeBlock 
    1564: [0] 8d 42 00 ................... openBlock <slot: 33> <0> 
    1567: [0] 33 02 ae 7b 10 ............. debug 

    # ejs.es:7895               }

    1572: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1574: [0] 01 6c ...................... addNamespace <ejs> 
    1576: [0] 33 02 98 72 74 ............. debug 

    # ejs.es:7308               module ejs {

    1581: [0] 33 02 aa 72 dc 82 07 ....... debug 

    # ejs.es:7317                   final class Path {

    1588: [0] 34 ec 06 ................... defineClass <type: 0x1b6,  ejs::Path> 
    1591: [0] 24 ......................... closeBlock 
    1592: [0] 8d 44 00 ................... openBlock <slot: 34> <0> 
    1595: [0] 33 02 86 7f 10 ............. debug 

    # ejs.es:8131               }

    1600: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1602: [0] 01 6c ...................... addNamespace <ejs> 
    1604: [0] 33 02 92 7c 74 ............. debug 

    # ejs.es:7945               module ejs {

    1609: [0] 33 02 a4 7c b4 dc 07 ....... debug 

    # ejs.es:7954                   dynamic class Promise extends Emitter {

    1616: [0] 34 f4 06 ................... defineClass <type: 0x1ba,  ejs::Promise> 
    1619: [0] 24 ......................... closeBlock 
    1620: [0] 8d 46 00 ................... openBlock <slot: 35> <0> 
    1623: [0] 33 02 d8 81 01 10 .......... debug 

    # ejs.es:8300               }

    1629: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1631: [0] 01 6c ...................... addNamespace <ejs> 
    1633: [0] 33 02 ee 7f 74 ............. debug 

    # ejs.es:8183               module ejs {

    1638: [0] 33 02 84 80 01 a6 84 08 .... debug 

    # ejs.es:8194                   final class Reflect {

    1646: [0] 34 fc 06 ................... defineClass <type: 0x1be,  ejs::Reflect> 
    1649: [0] 33 02 d6 80 01 b4 89 08 .... debug 

    # ejs.es:8235                   native function typeOf(o): String

    1657: [0] 24 ......................... closeBlock 
    1658: [0] 8d 48 00 ................... openBlock <slot: 36> <0> 
    1661: [0] 33 02 f6 84 01 10 .......... debug 

    # ejs.es:8507               }

    1667: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1669: [0] 01 6c ...................... addNamespace <ejs> 
    1671: [0] 33 02 be 82 01 74 .......... debug 

    # ejs.es:8351               module ejs {

    1677: [0] 33 02 94 83 01 ac 8a 08 .... debug 

    # ejs.es:8394                   native final class RegExp {

    1685: [0] 34 8c 07 ................... defineClass <type: 0x1c6,  ejs::RegExp> 
    1688: [0] 24 ......................... closeBlock 
    1689: [0] 8d 4a 00 ................... openBlock <slot: 37> <0> 
    1692: [0] 33 02 d8 87 01 10 .......... debug 

    # ejs.es:8684               }

    1698: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1700: [0] 01 6c ...................... addNamespace <ejs> 
    1702: [0] 33 02 da 85 01 74 .......... debug 

    # ejs.es:8557               module ejs {

    1708: [0] 33 02 ea 85 01 bc 9a 08 .... debug 

    # ejs.es:8565                   class Socket implements Stream {

    1716: [0] 34 94 07 ................... defineClass <type: 0x1ca,  ejs::Socket> 
    1719: [0] 24 ......................... closeBlock 
    1720: [0] 8d 4c 00 ................... openBlock <slot: 38> <0> 
    1723: [0] 33 02 fa 89 01 10 .......... debug 

    # ejs.es:8829               }

    1729: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1731: [0] 01 6c ...................... addNamespace <ejs> 
    1733: [0] 33 02 c0 88 01 74 .......... debug 

    # ejs.es:8736               module ejs {

    1739: [0] 33 02 d8 88 01 b0 a3 08 .... debug 

    # ejs.es:8748                   interface Stream {

    1747: [0] 34 9c 07 ................... defineClass <type: 0x1ce,  ejs::Stream> 
    1750: [0] 24 ......................... closeBlock 
    1751: [0] 8d 4e 00 ................... openBlock <slot: 39> <0> 
    1754: [0] 33 02 9e 92 01 10 .......... debug 

    # ejs.es:9359               }

    1760: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1762: [0] 01 6c ...................... addNamespace <ejs> 
    1764: [0] 33 02 e2 8a 01 74 .......... debug 

    # ejs.es:8881               module ejs {

    1770: [0] 33 02 f0 8a 01 fc a3 08 .... debug 

    # ejs.es:8888                   native final class String {

    1778: [0] 34 a4 07 ................... defineClass <type: 0x1d2,  ejs::String> 
    1781: [0] 24 ......................... closeBlock 
    1782: [0] 8d 50 00 ................... openBlock <slot: 40> <0> 
    1785: [0] 33 02 8e 94 01 10 .......... debug 

    # ejs.es:9479               }

    1791: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1793: [0] 01 6c ...................... addNamespace <ejs> 
    1795: [0] 33 02 86 93 01 74 .......... debug 

    # ejs.es:9411               module ejs {

    1801: [0] 33 02 9c 93 01 ee d0 08 .... debug 

    # ejs.es:9422                   class System {

    1809: [0] 34 ac 07 ................... defineClass <type: 0x1d6,  ejs::System> 
    1812: [0] 24 ......................... closeBlock 
    1813: [0] 8d 52 00 ................... openBlock <slot: 41> <0> 
    1816: [0] 33 02 8e 99 01 10 .......... debug 

    # ejs.es:9799               }

    1822: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1824: [0] 01 6c ...................... addNamespace <ejs> 
    1826: [0] 33 02 f4 94 01 74 .......... debug 

    # ejs.es:9530               module ejs {

    1832: [0] 33 02 86 95 01 f4 da 08 .... debug 

    # ejs.es:9539                   class TextStream implements Stream {

    1840: [0] 34 b4 07 ................... defineClass <type: 0x1da,  ejs::TextStream> 
    1843: [0] 24 ......................... closeBlock 
    1844: [0] 8d 54 00 ................... openBlock <slot: 42> <0> 
    1847: [0] 33 02 ac 9b 01 10 .......... debug 

    # ejs.es:9942               }

    1853: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1855: [0] 01 6c ...................... addNamespace <ejs> 
    1857: [0] 33 02 f4 99 01 74 .......... debug 

    # ejs.es:9850               module ejs {

    1863: [0] 33 02 92 9a 01 c6 8f 09 .... debug 

    # ejs.es:9865                   class Timer {

    1871: [0] 34 bc 07 ................... defineClass <type: 0x1de,  ejs::Timer> 
    1874: [0] 33 02 88 9b 01 ba 96 09 .... debug 

    # ejs.es:9924                   function setInterval(callback: Function, delay: Number)

    1882: [0] 33 02 9c 9b 01 94 98 09 .... debug 

    # ejs.es:9934                   function setTimeout(callback: Function, delay: Number): Void {

    1890: [0] 33 02 aa 9b 01 ee 99 09 .... debug 

    # ejs.es:9941                   class TimerEvent extends Event { }

    1898: [0] 34 d4 07 ................... defineClass <type: 0x1ea,  ejs::TimerEvent> 
    1901: [0] 24 ......................... closeBlock 
    1902: [0] 8d 56 00 ................... openBlock <slot: 43> <0> 
    1905: [0] 33 02 b0 9d 01 10 .......... debug 

    # ejs.es:10072              }

    1911: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1913: [0] 01 6c ...................... addNamespace <ejs> 
    1915: [0] 33 02 94 9c 01 74 .......... debug 

    # ejs.es:9994               module ejs {

    1921: [0] 33 02 b2 9c 01 f0 9a 09 .... debug 

    # ejs.es:10009                  native final class Type {

    1929: [0] 34 dc 07 ................... defineClass <type: 0x1ee,  ejs::Type> 
    1932: [0] 24 ......................... closeBlock 
    1933: [0] 8d 58 00 ................... openBlock <slot: 44> <0> 
    1936: [0] 33 02 88 a4 01 10 .......... debug 

    # ejs.es:10500              }

    1942: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1944: [0] 01 6c ...................... addNamespace <ejs> 
    1946: [0] 33 02 94 9e 01 74 .......... debug 

    # ejs.es:10122              module ejs {

    1952: [0] 33 02 a4 9e 01 ca 9b 09 .... debug 

    # ejs.es:10130                  class Uri {

    1960: [0] 34 e4 07 ................... defineClass <type: 0x1f2,  ejs::Uri> 
    1963: [0] 33 02 f2 a3 01 ee d4 09 .... debug 

    # ejs.es:10489                  function decodeUri(str: String): String

    1971: [0] 33 02 82 a4 01 8a d6 09 .... debug 

    # ejs.es:10497                  function decodeUriComponent(str: String): String

    1979: [0] 24 ......................... closeBlock 
    1980: [0] 8d 5a 00 ................... openBlock <slot: 45> <0> 
    1983: [0] 33 02 a0 a5 01 10 .......... debug 

    # ejs.es:10576              }

    1989: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    1991: [0] 01 6c ...................... addNamespace <ejs> 
    1993: [0] 33 02 f0 a4 01 74 .......... debug 

    # ejs.es:10552              module ejs {

    1999: [0] 33 02 80 a5 01 82 d8 09 .... debug 

    # ejs.es:10560                  native final class Void {

    2007: [0] 34 fc 07 ................... defineClass <type: 0x1fe,  ejs::Void> 
    2010: [0] 24 ......................... closeBlock 
    2011: [0] 8d 5c 00 ................... openBlock <slot: 46> <0> 
    2014: [0] 33 02 8a a9 01 10 .......... debug 

    # ejs.es:10821              }

    2020: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    2022: [0] 01 6c ...................... addNamespace <ejs> 
    2024: [0] 33 02 88 a6 01 74 .......... debug 

    # ejs.es:10628              module ejs {

    2030: [0] 33 02 9e a6 01 de d8 09 .... debug 

    # ejs.es:10639                  class Worker {

    2038: [0] 34 84 08 ................... defineClass <type: 0x202,  ejs::Worker> 
    2041: [0] 33 02 94 a8 01 e6 4b ....... debug 

    # ejs.es:10762                  }

    2048: [0] 33 02 a0 a8 01 de e7 09 .... debug 

    # ejs.es:10768                  use default namespace "ejs.worker"

    2056: [0] 01 ac e8 09 ................ addNamespace <ejs.worker> 
    2060: [0] 33 02 ac a8 01 cc e8 09 .... debug 

    # ejs.es:10774                  var self: Worker

    2068: [0] 33 02 b8 a8 01 f6 e8 09 .... debug 

    # ejs.es:10780                  function exit(): Void

    2076: [0] 33 02 c8 a8 01 d6 e9 09 .... debug 

    # ejs.es:10788                  function postMessage(data: Object, ports: Array? = null): Void

    2084: [0] 33 02 d4 a8 01 a8 eb 09 .... debug 

    # ejs.es:10794                  function get onerror(): Function

    2092: [0] 33 02 e2 a8 01 9c ec 09 .... debug 

    # ejs.es:10801                  function set onerror(fun: Function): Void {

    2100: [0] 33 02 f0 a8 01 ba ed 09 .... debug 

    # ejs.es:10808                  function get onmessage(): Function

    2108: [0] 33 02 fe a8 01 b6 ee 09 .... debug 

    # ejs.es:10815                  function set onmessage(fun: Function): Void {

    2116: [0] 24 ......................... closeBlock 
    2117: [0] 8d 5e 00 ................... openBlock <slot: 47> <0> 
    2120: [0] 33 02 94 af 01 10 .......... debug 

    # ejs.es:11210              }

    2126: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    2128: [0] 01 6c ...................... addNamespace <ejs> 
    2130: [0] 33 02 be a9 01 74 .......... debug 

    # ejs.es:10847              module ejs {

    2136: [0] 33 02 c8 a9 01 f4 ef 09 .... debug 

    # ejs.es:10852                  final native class XML extends Object {

    2144: [0] 34 b4 08 ................... defineClass <type: 0x21a,  ejs::XML> 
    2147: [0] 24 ......................... closeBlock 
    2148: [0] 8d 60 00 ................... openBlock <slot: 48> <0> 
    2151: [0] 33 02 82 b3 01 10 .......... debug 

    # ejs.es:11457              }

    2157: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    2159: [0] 01 6c ...................... addNamespace <ejs> 
    2161: [0] 33 02 fa af 01 74 .......... debug 

    # ejs.es:11261              module ejs {

    2167: [0] 33 02 8c b0 01 b6 f5 09 .... debug 

    # ejs.es:11270                  class XMLHttp {

    2175: [0] 34 bc 08 ................... defineClass <type: 0x21e,  ejs::XMLHttp> 
    2178: [0] 24 ......................... closeBlock 
    2179: [0] 8d 62 00 ................... openBlock <slot: 49> <0> 
    2182: [0] 33 02 b8 b9 01 10 .......... debug 

    # ejs.es:11868              }

    2188: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    2190: [0] 01 6c ...................... addNamespace <ejs> 
    2192: [0] 33 02 ea b3 01 74 .......... debug 

    # ejs.es:11509              module ejs {

    2198: [0] 33 02 f8 b3 01 f2 9f 0a .... debug 

    # ejs.es:11516                  final native class XMLList extends Object {

    2206: [0] 34 c4 08 ................... defineClass <type: 0x222,  ejs::XMLList> 
    2209: [0] 24 ......................... closeBlock 
    2210: [0] 3b ......................... endCode 
    

BLOCK:      [block_0028_1-00]  block_0028_1 (Slots 0)

BLOCK:      [block_0406_19-01]  block_0406_19 (Slots 0)

BLOCK:      [block_0918_39-02]  block_0918_39 (Slots 0)

BLOCK:      [block_1261_47-03]  block_1261_47 (Slots 0)

BLOCK:      [block_1323_48-04]  block_1323_48 (Slots 0)

BLOCK:      [block_1389_49-05]  block_1389_49 (Slots 0)

BLOCK:      [block_1842_50-06]  block_1842_50 (Slots 0)

BLOCK:      [block_1963_51-07]  block_1963_51 (Slots 0)

BLOCK:      [block_2183_83-08]  block_2183_83 (Slots 0)

BLOCK:      [block_2307_84-09]  block_2307_84 (Slots 0)

BLOCK:      [block_2385_85-10]  block_2385_85 (Slots 0)

BLOCK:      [block_3088_87-11]  block_3088_87 (Slots 0)

BLOCK:      [block_3169_88-12]  block_3169_88 (Slots 0)

BLOCK:      [block_3381_116-13]  block_3381_116 (Slots 0)

BLOCK:      [block_3687_117-14]  block_3687_117 (Slots 0)

BLOCK:      [block_3804_118-15]  block_3804_118 (Slots 0)

BLOCK:      [block_4043_120-16]  block_4043_120 (Slots 0)

BLOCK:      [block_4168_121-17]  block_4168_121 (Slots 0)

BLOCK:      [block_4226_122-18]  block_4226_122 (Slots 0)

BLOCK:      [block_4351_123-19]  block_4351_123 (Slots 0)

BLOCK:      [block_4448_124-20]  block_4448_124 (Slots 0)

BLOCK:      [block_4868_129-21]  block_4868_129 (Slots 0)

BLOCK:      [block_5514_134-22]  block_5514_134 (Slots 0)

BLOCK:      [block_5611_135-23]  block_5611_135 (Slots 0)

BLOCK:      [block_5748_136-24]  block_5748_136 (Slots 0)

BLOCK:      [block_5828_137-25]  block_5828_137 (Slots 0)

BLOCK:      [block_6154_146-26]  block_6154_146 (Slots 0)

BLOCK:      [block_6393_147-27]  block_6393_147 (Slots 0)

BLOCK:      [block_6537_148-28]  block_6537_148 (Slots 0)

BLOCK:      [block_6605_149-29]  block_6605_149 (Slots 0)

BLOCK:      [block_6665_150-30]  block_6665_150 (Slots 0)

BLOCK:      [block_6739_151-31]  block_6739_151 (Slots 0)

BLOCK:      [block_7001_156-32]  block_7001_156 (Slots 0)

BLOCK:      [block_7308_159-33]  block_7308_159 (Slots 0)

BLOCK:      [block_7945_178-34]  block_7945_178 (Slots 0)

BLOCK:      [block_8183_195-35]  block_8183_195 (Slots 0)

BLOCK:      [block_8351_196-36]  block_8351_196 (Slots 0)

BLOCK:      [block_8557_197-37]  block_8557_197 (Slots 0)

BLOCK:      [block_8736_198-38]  block_8736_198 (Slots 0)

BLOCK:      [block_8881_199-39]  block_8881_199 (Slots 0)

BLOCK:      [block_9411_204-40]  block_9411_204 (Slots 0)

BLOCK:      [block_9530_205-41]  block_9530_205 (Slots 0)

BLOCK:      [block_9850_230-42]  block_9850_230 (Slots 0)

BLOCK:      [block_9994_231-43]  block_9994_231 (Slots 0)

BLOCK:      [block_10122_232-44]  block_10122_232 (Slots 0)

BLOCK:      [block_10552_239-45]  block_10552_239 (Slots 0)

BLOCK:      [block_10628_240-46]  block_10628_240 (Slots 0)

BLOCK:      [block_10847_241-47]  block_10847_241 (Slots 0)

BLOCK:      [block_11261_242-48]  block_11261_242 (Slots 0)

BLOCK:      [block_11509_249-49]  block_11509_249 (Slots 0)
VARIABLE:   [stderr-00]  public var stderr
VARIABLE:   [stdin-01]  public var stdin
VARIABLE:   [stdout-02]  public var stdout

CLASS:      class Iterable
            #  Class Details: 2 class traits, 0 instance traits, requested slot 95

FUNCTION:   [Iterable-00]  iterator const function get() : void


    

FUNCTION:   [Iterable-01]  iterator const function getValues() : void


    

CLASS:      native dynamic class Object
            #  Class Details: 26 class traits, 0 instance traits, requested slot 108

FUNCTION:   [Object-00]  public native const get function constructor() : void


    

FUNCTION:   [Object-01]  ejs native const static get function length() : void


    

FUNCTION:   [Object-02]  public native const static get function prototype() : Object


    

FUNCTION:   [Object-03]  public native const function clone(deep) : Object

     ARG:   [arg-00]   private deep

    
VARIABLE:   [deep-00]  private var deep

FUNCTION:   [Object-04]  public native const static function create(prototype, props: Object) : Object

     ARG:   [arg-00]   private prototype
     ARG:   [arg-01]   private props : Object

    
VARIABLE:   [prototype-00]  private var prototype
VARIABLE:   [props-01]  private var props : Object

FUNCTION:   [Object-05]  public native const static function defineProperty(obj: Object, name, options: Object) : void

     ARG:   [arg-00]   private obj : Object
     ARG:   [arg-01]   private name
     ARG:   [arg-02]   private options : Object

    
VARIABLE:   [obj-00]  private var obj : Object
VARIABLE:   [name-01]  private var name
VARIABLE:   [options-02]  private var options : Object

FUNCTION:   [Object-06]  public const static function defineProperties(obj: Object, properties: Object) : void

     ARG:   [arg-00]   private obj : Object
     ARG:   [arg-01]   private properties : Object
   LOCAL:   [local-02] var p

    0000: [0] 33 02 ae 6e c0 eb 06 ....... debug 

    # ejs.es:7063                           for (p in properties) {

    0007: [0] 5c ......................... getLocalSlot1 
    0008: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 39 ......................... dup 
    0016: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0019: [1] 93 ......................... pushResult 
    0020: [2] 96 ......................... putLocalSlot2 
    0021: [1] 33 02 b0 6e 8c ec 06 ....... debug 

    # ejs.es:7064                               defineProperty(obj, p, properties[p])

    0028: [1] 5b ......................... getLocalSlot0 
    0029: [2] 5d ......................... getLocalSlot2 
    0030: [3] 5c ......................... getLocalSlot1 
    0031: [4] 56 d8 31 ................... loadString <> 
    0034: [5] 5d ......................... getLocalSlot2 
    0035: [6] 7c ......................... getObjNameExpr 
    0036: [4] 1f fe e9 06 e0 01 06 ....... callScopedName <defineProperty> <public> <argc: 3> 
    0043: [1] 3e e2 ...................... goto8 <addr: 15> 
    0045: [1] 90 ......................... pop 
    0046: [0] 54 ......................... loadNull 
    0047: [1] bf ......................... returnValue 
    0048: [0] 33 02 b4 6e b4 16 .......... debug 

    # ejs.es:7066                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     16      19         45           45       

VARIABLE:   [obj-00]  private var obj : Object
VARIABLE:   [properties-01]  private var properties : Object
VARIABLE:   [p-02]  -hoisted-2 var p

FUNCTION:   [Object-07]  public native const static function freeze(obj: Object) : void

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-08]  iterator native const function get(options: Object) : void

     ARG:   [arg-00]   private options : Object

    
VARIABLE:   [options-00]  private var options : Object

FUNCTION:   [Object-09]  public native const static function getOwnPropertyDescriptor(obj: Object, prop) : Object

     ARG:   [arg-00]   private obj : Object
     ARG:   [arg-01]   private prop

    
VARIABLE:   [obj-00]  private var obj : Object
VARIABLE:   [prop-01]  private var prop

FUNCTION:   [Object-10]  public native const static function getOwnPropertyNames(obj: Object) : void

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-11]  public native const static function getOwnPrototypeOf(obj: Object) : void

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-12]  iterator native const function getValues() : void


    

FUNCTION:   [Object-13]  public native const function hasOwnProperty(name) : void

     ARG:   [arg-00]   private name

    
VARIABLE:   [name-00]  private var name

FUNCTION:   [Object-14]  public native const static function isExtensible(obj: Object) : void

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-15]  public native const static function isFrozen(obj: Object) : void

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-16]  public native const function isPrototypeOf(obj: Object) : void

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-17]  public native const static function isSealed(obj: Object) : void

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-18]  public const static function keys(obj: Object) : void

     ARG:   [arg-00]   private obj : Object
   LOCAL:   [local-01] var result
   LOCAL:   [local-02] var key

    0000: [0] 33 02 fe 6f bc fa 06 ....... debug 

    # ejs.es:7167                           let result = []

    0007: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0009: [1] 89 ......................... new 
    0010: [1] 95 ......................... putLocalSlot1 
    0011: [0] 33 02 80 70 f4 fa 06 ....... debug 

    # ejs.es:7168                           for (key in obj) {

    0018: [0] 5b ......................... getLocalSlot0 
    0019: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 39 ......................... dup 
    0027: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0030: [1] 93 ......................... pushResult 
    0031: [2] 96 ......................... putLocalSlot2 
    0032: [1] 33 02 82 70 b2 fb 06 ....... debug 

    # ejs.es:7169                               result.append(key)

    0039: [1] 5c ......................... getLocalSlot1 
    0040: [2] 5d ......................... getLocalSlot2 
    0041: [3] 1e 88 4f 00 02 ............. callObjName <append> <> <argc: 1> 
    0046: [1] 3e ea ...................... goto8 <addr: 26> 
    0048: [1] 90 ......................... pop 
    0049: [0] 33 02 86 70 a4 5d .......... debug 

    # ejs.es:7171                           return result

    0055: [0] 5c ......................... getLocalSlot1 
    0056: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     27      30         48           48       

VARIABLE:   [obj-00]  private var obj : Object
VARIABLE:   [result-01]  private var result
VARIABLE:   [key-02]  -hoisted-2 var key

FUNCTION:   [Object-19]  public native const static function preventExtensions(obj: Object) : Object

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-20]  public native const function propertyIsEnumerable(property) : void

     ARG:   [arg-00]   private property

    
VARIABLE:   [property-00]  private var property

FUNCTION:   [Object-21]  public native const static function seal(obj: Object) : void

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Object-22]  public native const function toJSON() : void


    

FUNCTION:   [Object-23]  public native const function toLocaleString() : void


    

FUNCTION:   [Object-24]  public native const function toString() : void


    

FUNCTION:   [Object-25]  public const function valueOf() : void


    0000: [0] 33 02 82 71 9c 82 07 ....... debug 

    # ejs.es:7233                           this

    0007: [0] 57 ......................... loadThis 
    0008: [1] bf ......................... returnValue 
    

CLASS:      class App extends Object
            #  Class Details: 52 class traits, 0 instance traits, requested slot 3

FUNCTION:   [App-26]  -initializer- static function App-initializer() : void


    0000: [0] 33 02 7a c4 03 ............. debug 

    # ejs.es:61                         use default namespace public

    0005: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0007: [1] 02 ......................... addNamespaceRef 
    0008: [0] 33 02 84 01 8e 04 .......... debug 

    # ejs.es:66                         static var config: Object

    0014: [0] 33 02 8e 01 ee 04 .......... debug 

    # ejs.es:71                         private static var _errorStream: Stream

    0020: [0] 33 02 90 01 9c 06 .......... debug 

    # ejs.es:72                         private static var _inputStream: Stream

    0026: [0] 33 02 92 01 96 07 .......... debug 

    # ejs.es:73                         private static var _outputStream: Stream

    0032: [0] 33 02 96 01 94 08 .......... debug 

    # ejs.es:75                         static internal var defaultConfig = {

    0038: [0] 33 02 a0 01 8c 09 .......... debug 

    # ejs.es:80                             log: {

    0044: [0] 56 00 ...................... loadString <> 
    0046: [1] 56 b2 09 ................... loadString <log> 
    0049: [2] 33 02 a2 01 ba 09 .......... debug 

    # ejs.es:81                                 enable: true,

    0055: [2] 56 00 ...................... loadString <> 
    0057: [3] 56 f6 09 ................... loadString <enable> 
    0060: [4] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0063: [5] 33 02 a4 01 84 0a .......... debug 

    # ejs.es:82                                 where: "stdout",

    0069: [5] 56 00 ...................... loadString <> 
    0071: [6] 56 c6 0a ................... loadString <where> 
    0074: [7] 56 96 03 ................... loadString <stdout> 
    0077: [8] 33 02 a6 01 d2 0a .......... debug 

    # ejs.es:83                                 level: 2,

    0083: [8] 56 00 ...................... loadString <> 
    0085: [9] 56 86 0b ................... loadString <level> 
    0088: [10] 46 ......................... load2 
    0089: [11] 8a e4 06 06 00 00 00 ....... newObject <type: 0x1b2,  ejs::Object> <argc: 3> <att: 3 3 3 >
    0096: [3] 33 02 b0 01 92 0b .......... debug 

    # ejs.es:88                             cache: {

    0102: [3] 56 00 ...................... loadString <> 
    0104: [4] 56 bc 0b ................... loadString <cache> 
    0107: [5] 33 02 b2 01 ba 09 .......... debug 

    # ejs.es:89                                 enable: true,

    0113: [5] 56 00 ...................... loadString <> 
    0115: [6] 56 f6 09 ................... loadString <enable> 
    0118: [7] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0121: [8] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0126: [6] 33 02 b6 01 c8 0b .......... debug 

    # ejs.es:91                             directories: {

    0132: [6] 56 00 ...................... loadString <> 
    0134: [7] 56 fe 0b ................... loadString <directories> 
    0137: [8] 33 02 b8 01 96 0c .......... debug 

    # ejs.es:92                                 cache: "cache",

    0143: [8] 56 00 ...................... loadString <> 
    0145: [9] 56 bc 0b ................... loadString <cache> 
    0148: [10] 56 bc 0b ................... loadString <cache> 
    0151: [11] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0156: [9] 8a e4 06 06 00 00 00 ....... newObject <type: 0x1b2,  ejs::Object> <argc: 3> <att: 3 3 3 >
    0163: [1] 33 02 96 01 94 08 .......... debug 

    # ejs.es:75                         static internal var defaultConfig = {

    0169: [1] 57 ......................... loadThis 
    0170: [2] b3 f0 08 14 ................ putObjName <defaultConfig> <internal-ed363076473b51ca685af450cc662b39-0> 
    0174: [0] 33 02 c8 01 d6 0c .......... debug 

    # ejs.es:100                        native static function get args(): Array

    0180: [0] 33 02 d4 01 ce 0d .......... debug 

    # ejs.es:106                        native static function get dir(): Path

    0186: [0] 33 02 e0 01 be 0e .......... debug 

    # ejs.es:112                        native static function chdir(value: Object): Void

    0192: [0] 33 02 ea 01 e4 0f .......... debug 

    # ejs.es:117                        native static function get exeDir(): Path

    0198: [0] 33 02 f4 01 d6 10 .......... debug 

    # ejs.es:122                        native static function get exePath(): Path

    0204: [0] 33 02 fe 01 cc 11 .......... debug 

    # ejs.es:127                        static function get errorStream(): Stream

    0210: [0] 33 02 8c 02 fa 12 .......... debug 

    # ejs.es:134                        static function set errorStream(stream: Stream): Void {

    0216: [0] 33 02 a6 02 d6 16 .......... debug 

    # ejs.es:147                        native static function exit(status: Number = 0): Void

    0222: [0] 33 02 b4 02 f8 17 .......... debug 

    # ejs.es:154                        native static function getenv(name: String): String

    0228: [0] 33 02 be 02 96 19 .......... debug 

    # ejs.es:159                        static function get inputStream(): Stream

    0234: [0] 33 02 cc 02 c4 1a .......... debug 

    # ejs.es:166                       static function set inputStream(stream: Stream): Void {

    0240: [0] 33 02 80 03 ce 1d .......... debug 

    # ejs.es:192                        public static var logger: Logger

    0246: [0] 33 02 8a 03 bc 1e .......... debug 

    # ejs.es:197                        static function get name(): String

    0252: [0] 33 02 9e 03 d8 1f .......... debug 

    # ejs.es:207                        native static function noexit(exit: Boolean = true): Void

    0258: [0] 33 02 a8 03 fa 20 .......... debug 

    # ejs.es:212                        static function get outputStream(): Stream

    0264: [0] 33 02 b6 03 ae 22 .......... debug 

    # ejs.es:219                        static function set outputStream(stream: Stream): Void {

    0270: [0] 33 02 d0 03 c6 25 .......... debug 

    # ejs.es:232                        native static function putenv(name: String, value: String): Void

    0276: [0] 33 02 da 03 e6 26 .......... debug 

    # ejs.es:237                        native static function get search(): Array

    0282: [0] 33 02 e6 03 da 27 .......... debug 

    # ejs.es:243                        native static function set search(paths: Array): Void

    0288: [0] 33 02 f6 03 e2 28 .......... debug 

    # ejs.es:251                        native static function createSearch(searchPath: String? = null): Array

    0294: [0] 33 02 86 04 b0 2a .......... debug 

    # ejs.es:259                        native static function serviceEvents(timeout: Number = -1, oneEvent: Boolean = false): Void

    0300: [0] 33 02 a4 04 b6 2c .......... debug 

    # ejs.es:274                        native static function sleep(delay: Number = -1): Void

    0306: [0] 33 02 ae 04 cc 2d .......... debug 

    # ejs.es:279                        static static function get title(): String

    0312: [0] 33 02 ba 04 fc 2e .......... debug 

    # ejs.es:285                        static static function get version(): String

    0318: [0] be ......................... return 
    
VARIABLE:   [App-27]  public static var config : Object
VARIABLE:   [App-28]  [ejs::App,private] static var _errorStream
VARIABLE:   [App-29]  [ejs::App,private] static var _inputStream
VARIABLE:   [App-30]  [ejs::App,private] static var _outputStream
VARIABLE:   [App-31]  internal-ed363076473b51ca685af450cc662b39-0 static var defaultConfig

FUNCTION:   [App-32]  public native const static get function args() : void


    

FUNCTION:   [App-33]  public native const static get function dir() : void


    

FUNCTION:   [App-34]  public native const static function chdir(value: Object) : void

     ARG:   [arg-00]   private value : Object

    
VARIABLE:   [value-00]  private var value : Object

FUNCTION:   [App-35]  public native const static get function exeDir() : void


    

FUNCTION:   [App-36]  public native const static get function exePath() : void


    

FUNCTION:   [App-37]  public const static get function errorStream() : void


    0000: [0] 33 02 80 02 b0 12 .......... debug 

    # ejs.es:128                            _errorStream

    0006: [0] 57 ......................... loadThis 
    0007: [1] 7b ce 05 e8 05 ............. getObjName <_errorStream> <[ejs::App,private]> 
    0012: [1] bf ......................... returnValue 
    

FUNCTION:   [App-37]  public const static set function errorStream(stream) : void

     ARG:   [arg-00]   private stream

    0000: [0] 33 02 8e 02 fa 13 .......... debug 

    # ejs.es:135                            _errorStream = stream

    0006: [0] 5b ......................... getLocalSlot0 
    0007: [1] 57 ......................... loadThis 
    0008: [2] b3 ce 05 e8 05 ............. putObjName <_errorStream> <[ejs::App,private]> 
    0013: [0] 33 02 90 02 be 14 .......... debug 

    # ejs.es:136                            if (stderr) {

    0019: [0] 7e 00 ...................... getGlobalSlot <slot: 0> 
    0021: [1] 13 10 ...................... branchFalse8 <addr: 39> 
    0023: [0] 33 02 92 02 f2 14 .......... debug 

    # ejs.es:137                                stderr.close()

    0029: [0] 7e 00 ...................... getGlobalSlot <slot: 0> 
    0031: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0037: [0] 3e 00 ...................... goto8 <addr: 39> 
    0039: [0] 33 02 94 02 bc 15 .......... debug 

    # ejs.es:138                            }

    0045: [0] 33 02 96 02 d8 15 .......... debug 

    # ejs.es:139                            stderr = TextStream(_errorStream)

    0051: [0] 57 ......................... loadThis 
    0052: [1] 7b ce 05 e8 05 ............. getObjName <_errorStream> <[ejs::App,private]> 
    0057: [1] 17 ec 01 02 ................ callGlobalSlot <slot: 118> <argc: 1> 
    0061: [0] 93 ......................... pushResult 
    0062: [1] b7 00 ...................... putGlobalSlot <slot: 0> 
    0064: [0] 54 ......................... loadNull 
    0065: [1] bf ......................... returnValue 
    0066: [0] 33 02 98 02 b4 16 .......... debug 

    # ejs.es:140                        }
    
VARIABLE:   [stream-00]  private var stream

FUNCTION:   [App-38]  public native const static function exit(status) : void

     ARG:   [arg-00]   private status

    
VARIABLE:   [status-00]  private var status

FUNCTION:   [App-39]  public native const static function getenv(name) : void

     ARG:   [arg-00]   private name

    
VARIABLE:   [name-00]  private var name

FUNCTION:   [App-40]  public const static get function inputStream() : void


    0000: [0] 33 02 c0 02 fa 19 .......... debug 

    # ejs.es:160                            _inputStream

    0006: [0] 57 ......................... loadThis 
    0007: [1] 7b fc 06 e8 05 ............. getObjName <_inputStream> <[ejs::App,private]> 
    0012: [1] bf ......................... returnValue 
    

FUNCTION:   [App-40]  public const static set function inputStream(stream) : void

     ARG:   [arg-00]   private stream

    0000: [0] 33 02 ce 02 c2 1b .......... debug 

    # ejs.es:167                            _inputStream = stream

    0006: [0] 5b ......................... getLocalSlot0 
    0007: [1] 57 ......................... loadThis 
    0008: [2] b3 fc 06 e8 05 ............. putObjName <_inputStream> <[ejs::App,private]> 
    0013: [0] 33 02 d0 02 86 1c .......... debug 

    # ejs.es:168                            if (stdin) {

    0019: [0] 7e 02 ...................... getGlobalSlot <slot: 1> 
    0021: [1] 13 10 ...................... branchFalse8 <addr: 39> 
    0023: [0] 33 02 d2 02 b8 1c .......... debug 

    # ejs.es:169                                stdin.close()

    0029: [0] 7e 02 ...................... getGlobalSlot <slot: 1> 
    0031: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0037: [0] 3e 00 ...................... goto8 <addr: 39> 
    0039: [0] 33 02 d4 02 bc 15 .......... debug 

    # ejs.es:170                            }

    0045: [0] 33 02 d6 02 f4 1c .......... debug 

    # ejs.es:171                            stdin = TextStream(_inputStream)

    0051: [0] 57 ......................... loadThis 
    0052: [1] 7b fc 06 e8 05 ............. getObjName <_inputStream> <[ejs::App,private]> 
    0057: [1] 17 ec 01 02 ................ callGlobalSlot <slot: 118> <argc: 1> 
    0061: [0] 93 ......................... pushResult 
    0062: [1] b7 02 ...................... putGlobalSlot <slot: 1> 
    0064: [0] 54 ......................... loadNull 
    0065: [1] bf ......................... returnValue 
    0066: [0] 33 02 d8 02 b4 16 .......... debug 

    # ejs.es:172                        }
    
VARIABLE:   [stream-00]  private var stream
VARIABLE:   [App-41]  public static var logger

FUNCTION:   [App-42]  public const static get function name() : void


    0000: [0] 33 02 8c 03 92 1f .......... debug 

    # ejs.es:198                            Config.Product

    0006: [0] 7e 1c ...................... getGlobalSlot <slot: 14> 
    0008: [1] 7b c8 1f e0 01 ............. getObjName <Product> <public> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [App-43]  public native const static function noexit(exit) : void

     ARG:   [arg-00]   private exit

    
VARIABLE:   [exit-00]  private var exit

FUNCTION:   [App-44]  public const static get function outputStream() : void


    0000: [0] 33 02 aa 03 e0 21 .......... debug 

    # ejs.es:213                            _outputStream

    0006: [0] 57 ......................... loadThis 
    0007: [1] 7b f8 07 e8 05 ............. getObjName <_outputStream> <[ejs::App,private]> 
    0012: [1] bf ......................... returnValue 
    

FUNCTION:   [App-44]  public const static set function outputStream(stream) : void

     ARG:   [arg-00]   private stream

    0000: [0] 33 02 b8 03 b0 23 .......... debug 

    # ejs.es:220                            _outputStream = stream

    0006: [0] 5b ......................... getLocalSlot0 
    0007: [1] 57 ......................... loadThis 
    0008: [2] b3 f8 07 e8 05 ............. putObjName <_outputStream> <[ejs::App,private]> 
    0013: [0] 33 02 ba 03 f6 23 .......... debug 

    # ejs.es:221                            if (stdout) {

    0019: [0] 7e 04 ...................... getGlobalSlot <slot: 2> 
    0021: [1] 13 10 ...................... branchFalse8 <addr: 39> 
    0023: [0] 33 02 bc 03 aa 24 .......... debug 

    # ejs.es:222                                stdout.close()

    0029: [0] 7e 04 ...................... getGlobalSlot <slot: 2> 
    0031: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0037: [0] 3e 00 ...................... goto8 <addr: 39> 
    0039: [0] 33 02 be 03 bc 15 .......... debug 

    # ejs.es:223                            }

    0045: [0] 33 02 c0 03 e8 24 .......... debug 

    # ejs.es:224                            stdout = TextStream(_outputStream)

    0051: [0] 57 ......................... loadThis 
    0052: [1] 7b f8 07 e8 05 ............. getObjName <_outputStream> <[ejs::App,private]> 
    0057: [1] 17 ec 01 02 ................ callGlobalSlot <slot: 118> <argc: 1> 
    0061: [0] 93 ......................... pushResult 
    0062: [1] b7 04 ...................... putGlobalSlot <slot: 2> 
    0064: [0] 54 ......................... loadNull 
    0065: [1] bf ......................... returnValue 
    0066: [0] 33 02 c2 03 b4 16 .......... debug 

    # ejs.es:225                        }
    
VARIABLE:   [stream-00]  private var stream

FUNCTION:   [App-45]  public native const static function putenv(name, value) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private value

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [value-01]  private var value

FUNCTION:   [App-46]  public native const static get function search() : void


    

FUNCTION:   [App-46]  public native const static set function search(paths) : void

     ARG:   [arg-00]   private paths

    
VARIABLE:   [paths-00]  private var paths

FUNCTION:   [App-47]  public native const static function createSearch(searchPath) : void

     ARG:   [arg-00]   private searchPath

    
VARIABLE:   [searchPath-00]  private var searchPath

FUNCTION:   [App-48]  public native const static function serviceEvents(timeout, oneEvent) : void

     ARG:   [arg-00]   private timeout
     ARG:   [arg-01]   private oneEvent

    
VARIABLE:   [timeout-00]  private var timeout
VARIABLE:   [oneEvent-01]  private var oneEvent

FUNCTION:   [App-49]  public native const static function sleep(delay) : void

     ARG:   [arg-00]   private delay

    
VARIABLE:   [delay-00]  private var delay

FUNCTION:   [App-50]  public const static get function title() : void


    0000: [0] 33 02 b0 04 b2 2e .......... debug 

    # ejs.es:280                            Config.Title

    0006: [0] 7e 1c ...................... getGlobalSlot <slot: 14> 
    0008: [1] 7b e4 2e e0 01 ............. getObjName <Title> <public> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [App-51]  public const static get function version() : void


    0000: [0] 33 02 bc 04 e6 2f .......... debug 

    # ejs.es:286                            Config.Version

    0006: [0] 7e 1c ...................... getGlobalSlot <slot: 14> 
    0008: [1] 7b 9c 30 e0 01 ............. getObjName <Version> <public> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [appInit-04]  ejs function appInit() : void

   LOCAL:   [local-00] var dir
   LOCAL:   [local-01] var config
   LOCAL:   [local-02] var log
   LOCAL:   [local-03] var path
   LOCAL:   [local-04] var e
   LOCAL:   [local-05] var stream
   LOCAL:   [local-06] var m

    0000: [0] 33 02 d2 04 8a 34 .......... debug 

    # ejs.es:297                        let dir = App.getenv("HOME")

    0006: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0008: [1] 56 d4 34 ................... loadString <HOME> 
    0011: [2] 1e f0 18 e0 01 02 .......... callObjName <getenv> <public> <argc: 1> 
    0017: [0] 93 ......................... pushResult 
    0018: [1] 94 ......................... putLocalSlot0 
    0019: [0] 33 02 d4 04 de 34 .......... debug 

    # ejs.es:298                        if (dir) {

    0025: [0] 5b ......................... getLocalSlot0 
    0026: [1] 13 6d ...................... branchFalse8 <addr: 137> 
    0028: [0] 33 02 d6 04 a4 35 .......... debug 

    # ejs.es:299                            let path = Path(dir).join(".ejsrc")

    0034: [0] 5b ......................... getLocalSlot0 
    0035: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0039: [0] 93 ......................... pushResult 
    0040: [1] 56 84 36 ................... loadString <.ejsrc> 
    0043: [2] 1e 92 36 e0 01 02 .......... callObjName <join> <public> <argc: 1> 
    0049: [0] 93 ......................... pushResult 
    0050: [1] 97 ......................... putLocalSlot3 
    0051: [0] 33 02 d8 04 9c 36 .......... debug 

    # ejs.es:300                            if (path.exists) {

    0057: [0] 5e ......................... getLocalSlot3 
    0058: [1] 7b da 36 00 ................ getObjName <exists> <> 
    0062: [1] 13 47 ...................... branchFalse8 <addr: 135> 
    0064: [0] 33 02 da 04 e8 36 .......... debug 

    # ejs.es:301                                try {

    0070: [0] 33 02 dc 04 94 37 .......... debug 

    # ejs.es:302                                    App.config = deserialize(path.readString())

    0076: [0] 5e ......................... getLocalSlot3 
    0077: [1] 1e 94 38 00 00 ............. callObjName <readString> <> <argc: 0> 
    0082: [0] 93 ......................... pushResult 
    0083: [1] 17 c6 01 02 ................ callGlobalSlot <slot: 99> <argc: 1> 
    0087: [0] 93 ......................... pushResult 
    0088: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0090: [2] b3 d2 04 e0 01 ............. putObjName <config> <public> 
    0095: [0] 3e 24 ...................... goto8 <addr: 133> 
    0097: [0] 33 02 de 04 aa 38 .......... debug 

    # ejs.es:303                                } catch (e) {

    0103: [0] 92 ......................... pushCatchArg 
    0104: [1] b6 08 02 ................... putBlockSlot <slot: 4> <1> 
    0107: [0] 33 02 e0 04 80 39 .......... debug 

    # ejs.es:304                                    error("Can't parse " + path + ": " + e)

    0113: [0] 56 f8 39 ................... loadString <Can't parse > 
    0116: [1] 7d 06 02 ................... getBlockSlot <slot: 3> <1> 
    0119: [2] 00 ......................... add 
    0120: [1] 56 92 3a ................... loadString <: > 
    0123: [2] 00 ......................... add 
    0124: [1] 7d 08 02 ................... getBlockSlot <slot: 4> <1> 
    0127: [2] 00 ......................... add 
    0128: [1] 17 b6 01 02 ................ callGlobalSlot <slot: 91> <argc: 1> 
    0132: [0] 3c ......................... endException 
    0133: [0] 3e 00 ...................... goto8 <addr: 135> 
    0135: [0] 3e 00 ...................... goto8 <addr: 137> 
    0137: [0] 33 02 e6 04 b4 16 .......... debug 

    # ejs.es:307                        }

    0143: [0] 33 02 e8 04 98 3a .......... debug 

    # ejs.es:308                        let config = App.config || {}

    0149: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0151: [1] 7b d2 04 e0 01 ............. getObjName <config> <public> 
    0156: [1] 39 ......................... dup 
    0157: [2] 14 05 ...................... branchTrue8 <addr: 164> 
    0159: [1] 90 ......................... pop 
    0160: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0164: [1] 95 ......................... putLocalSlot1 
    0165: [0] 33 02 ea 04 e4 3a .......... debug 

    # ejs.es:309                        App.config = config

    0171: [0] 5c ......................... getLocalSlot1 
    0172: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0174: [2] b3 d2 04 e0 01 ............. putObjName <config> <public> 
    0179: [0] 33 02 ee 04 9c 3b .......... debug 

    # ejs.es:311                        blend(config, App.defaultConfig, false)

    0185: [0] 5c ......................... getLocalSlot1 
    0186: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0188: [2] 7b f0 08 14 ................ getObjName <defaultConfig> <internal-ed363076473b51ca685af450cc662b39-0> 
    0192: [2] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0194: [3] 17 9c 01 06 ................ callGlobalSlot <slot: 78> <argc: 3> 
    0198: [0] 33 02 f2 04 fc 3b .......... debug 

    # ejs.es:313                        stdout = TextStream(App.outputStream)

    0204: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0206: [1] 7b 94 22 e0 01 ............. getObjName <outputStream> <public> 
    0211: [1] 17 ec 01 02 ................ callGlobalSlot <slot: 118> <argc: 1> 
    0215: [0] 93 ......................... pushResult 
    0216: [1] b7 04 ...................... putGlobalSlot <slot: 2> 
    0218: [0] 33 02 f4 04 d8 3c .......... debug 

    # ejs.es:314                        stderr = TextStream(App.errorStream)

    0224: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0226: [1] 7b e2 12 e0 01 ............. getObjName <errorStream> <public> 
    0231: [1] 17 ec 01 02 ................ callGlobalSlot <slot: 118> <argc: 1> 
    0235: [0] 93 ......................... pushResult 
    0236: [1] b7 00 ...................... putGlobalSlot <slot: 0> 
    0238: [0] 33 02 f6 04 b2 3d .......... debug 

    # ejs.es:315                        stdin = TextStream(App.inputStream)

    0244: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0246: [1] 7b ac 1a e0 01 ............. getObjName <inputStream> <public> 
    0251: [1] 17 ec 01 02 ................ callGlobalSlot <slot: 118> <argc: 1> 
    0255: [0] 93 ......................... pushResult 
    0256: [1] b7 02 ...................... putGlobalSlot <slot: 1> 
    0258: [0] 33 02 fa 04 8a 3e .......... debug 

    # ejs.es:317                        let log = config.log

    0264: [0] 5c ......................... getLocalSlot1 
    0265: [1] 7b b2 09 00 ................ getObjName <log> <> 
    0269: [1] 96 ......................... putLocalSlot2 
    0270: [0] 33 02 fc 04 c4 3e .......... debug 

    # ejs.es:318                        if (log.enable) {

    0276: [0] 5d ......................... getLocalSlot2 
    0277: [1] 7b f6 09 00 ................ getObjName <enable> <> 
    0281: [1] 07 de 02 f7 f7 ............. branchFalse <addr: 461> 
    0286: [0] 33 02 fe 04 8e 3f .......... debug 

    # ejs.es:319                            let stream

    0292: [0] 33 02 80 05 bc 3f .......... debug 

    # ejs.es:320                            if (log.where == "stdout") {

    0298: [0] 5d ......................... getLocalSlot2 
    0299: [1] 7b c6 0a 00 ................ getObjName <where> <> 
    0303: [1] 56 96 03 ................... loadString <stdout> 
    0306: [2] 25 ......................... compareEq 
    0307: [1] 13 10 ...................... branchFalse8 <addr: 325> 
    0309: [0] 33 02 82 05 8e 40 .......... debug 

    # ejs.es:321                                stream = App.outputStream

    0315: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0317: [1] 7b 94 22 e0 01 ............. getObjName <outputStream> <public> 
    0322: [1] 99 ......................... putLocalSlot5 
    0323: [0] 3e 3a ...................... goto8 <addr: 383> 
    0325: [0] 33 02 84 05 e2 40 .......... debug 

    # ejs.es:322                            } else if (log.where == "stderr") {

    0331: [0] 5d ......................... getLocalSlot2 
    0332: [1] 7b c6 0a 00 ................ getObjName <where> <> 
    0336: [1] 56 d2 01 ................... loadString <stderr> 
    0339: [2] 25 ......................... compareEq 
    0340: [1] 13 10 ...................... branchFalse8 <addr: 358> 
    0342: [0] 33 02 86 05 c2 41 .......... debug 

    # ejs.es:323                                stream = App.errorStream

    0348: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0350: [1] 7b e2 12 e0 01 ............. getObjName <errorStream> <public> 
    0355: [1] 99 ......................... putLocalSlot5 
    0356: [0] 3e 19 ...................... goto8 <addr: 383> 
    0358: [0] 33 02 88 05 94 42 .......... debug 

    # ejs.es:324                            } else {

    0364: [0] 33 02 8a 05 be 42 .......... debug 

    # ejs.es:325                                stream = File(log.where, "w")

    0370: [0] 5d ......................... getLocalSlot2 
    0371: [1] 7b c6 0a 00 ................ getObjName <where> <> 
    0375: [1] 56 9a 43 ................... loadString <w> 
    0378: [2] 17 48 04 ................... callGlobalSlot <slot: 36> <argc: 2> 
    0381: [0] 93 ......................... pushResult 
    0382: [1] 99 ......................... putLocalSlot5 
    0383: [0] 33 02 8c 05 bc 15 .......... debug 

    # ejs.es:326                            }

    0389: [0] 33 02 8e 05 9e 43 .......... debug 

    # ejs.es:327                            App.logger = new Logger(App.name, stream, log.level)

    0395: [0] 7e cc 01 ................... getGlobalSlot <slot: 102> 
    0398: [1] 89 ......................... new 
    0399: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0401: [2] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0406: [2] 60 ......................... getLocalSlot5 
    0407: [3] 5d ......................... getLocalSlot2 
    0408: [4] 7b 86 0b 00 ................ getObjName <level> <> 
    0412: [4] 20 06 ...................... callConstructor <argc: 3> 
    0414: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0416: [2] b3 a0 1e e0 01 ............. putObjName <logger> <public> 
    0421: [0] 33 02 90 05 a0 44 .......... debug 

    # ejs.es:328                            if (log.match) {

    0427: [0] 5d ......................... getLocalSlot2 
    0428: [1] 7b da 44 00 ................ getObjName <match> <> 
    0432: [1] 13 19 ...................... branchFalse8 <addr: 459> 
    0434: [0] 33 02 92 05 e6 44 .......... debug 

    # ejs.es:329                                App.logger.match = log.match

    0440: [0] 5d ......................... getLocalSlot2 
    0441: [1] 7b da 44 00 ................ getObjName <match> <> 
    0445: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0447: [2] 7b a0 1e e0 01 ............. getObjName <logger> <public> 
    0452: [2] b3 da 44 e0 01 ............. putObjName <match> <public> 
    0457: [0] 3e 00 ...................... goto8 <addr: 459> 
    0459: [0] 3e 00 ...................... goto8 <addr: 461> 
    0461: [0] 33 02 a0 05 c0 45 .......... debug 

    # ejs.es:336                        if (config.search) {

    0467: [0] 5c ......................... getLocalSlot1 
    0468: [1] 7b cc 27 00 ................ getObjName <search> <> 
    0472: [1] 13 69 ...................... branchFalse8 <addr: 579> 
    0474: [0] 33 02 a2 05 fa 45 .......... debug 

    # ejs.es:337                            if (config.search is Array) {

    0480: [0] 5c ......................... getLocalSlot1 
    0481: [1] 7b cc 27 00 ................ getObjName <search> <> 
    0485: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0487: [2] 43 ......................... isA 
    0488: [1] 13 1c ...................... branchFalse8 <addr: 518> 
    0490: [0] 33 02 a4 05 ce 46 .......... debug 

    # ejs.es:338                                App.search = config.search + App.search

    0496: [0] 5c ......................... getLocalSlot1 
    0497: [1] 7b cc 27 00 ................ getObjName <search> <> 
    0501: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0503: [2] 7b cc 27 e0 01 ............. getObjName <search> <public> 
    0508: [2] 00 ......................... add 
    0509: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0511: [2] b3 cc 27 e0 01 ............. putObjName <search> <public> 
    0516: [0] 3e 3b ...................... goto8 <addr: 577> 
    0518: [0] 33 02 a6 05 be 47 .......... debug 

    # ejs.es:339                            } else if (config.search is String) {

    0524: [0] 5c ......................... getLocalSlot1 
    0525: [1] 7b cc 27 00 ................ getObjName <search> <> 
    0529: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0532: [2] 43 ......................... isA 
    0533: [1] 13 2a ...................... branchFalse8 <addr: 577> 
    0535: [0] 33 02 a8 05 a2 48 .......... debug 

    # ejs.es:340                                App.search = config.search.split(Path.SearchSeparator) + App.search

    0541: [0] 5c ......................... getLocalSlot1 
    0542: [1] 7b cc 27 00 ................ getObjName <search> <> 
    0546: [1] 7e da 01 ................... getGlobalSlot <slot: 109> 
    0549: [2] 7b ca 49 d8 31 ............. getObjName <SearchSeparator> <> 
    0554: [2] 1e ea 49 00 02 ............. callObjName <split> <> <argc: 1> 
    0559: [0] 93 ......................... pushResult 
    0560: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0562: [2] 7b cc 27 e0 01 ............. getObjName <search> <public> 
    0567: [2] 00 ......................... add 
    0568: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0570: [2] b3 cc 27 e0 01 ............. putObjName <search> <public> 
    0575: [0] 3e 00 ...................... goto8 <addr: 577> 
    0577: [0] 3e 00 ...................... goto8 <addr: 579> 
    0579: [0] 33 02 b6 05 f6 49 .......... debug 

    # ejs.es:347                        if (config.scripts) {

    0585: [0] 5c ......................... getLocalSlot1 
    0586: [1] 7b b2 4a 00 ................ getObjName <scripts> <> 
    0590: [1] 13 28 ...................... branchFalse8 <addr: 632> 
    0592: [0] 33 02 b8 05 c2 4a .......... debug 

    # ejs.es:348                            for each (m in config.scripts) {

    0598: [0] 5c ......................... getLocalSlot1 
    0599: [1] 7b b2 4a 00 ................ getObjName <scripts> <> 
    0603: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0609: [0] 93 ......................... pushResult 
    0610: [1] 39 ......................... dup 
    0611: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0614: [1] 93 ......................... pushResult 
    0615: [2] 9a ......................... putLocalSlot6 
    0616: [1] 33 02 ba 05 b6 4b .......... debug 

    # ejs.es:349                                load(m)

    0622: [1] 61 ......................... getLocalSlot6 
    0623: [2] 17 a8 01 02 ................ callGlobalSlot <slot: 84> <argc: 1> 
    0627: [1] 3e ed ...................... goto8 <addr: 610> 
    0629: [1] 90 ......................... pop 
    0630: [0] 3e 00 ...................... goto8 <addr: 632> 
    0632: [0] 54 ......................... loadNull 
    0633: [1] bf ......................... returnValue 
    0634: [0] 33 02 c0 05 e6 4b .......... debug 

    # ejs.es:352                    }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch         64      97         97          133       
1   iteration    611     614        629          629       

VARIABLE:   [dir-00]  private var dir
VARIABLE:   [config-01]  private var config
VARIABLE:   [log-02]  private var log
VARIABLE:   [path-03]  -hoisted-3 static var path
VARIABLE:   [e-04]  -hoisted-4 static var e
VARIABLE:   [stream-05]  -hoisted-5 static var stream
VARIABLE:   [m-06]  -hoisted-6 static var m

CLASS:      native dynamic class Array extends Object
            #  Class Details: 56 class traits, 0 instance traits, requested slot 5

FUNCTION:   [Array-03]  public native const override function clone(deep) : Array

     ARG:   [arg-00]   private deep

    
VARIABLE:   [deep-00]  private var deep

FUNCTION:   [Array-08]  iterator native const override function get() : void


    

FUNCTION:   [Array-12]  iterator native const override function getValues() : void


    

FUNCTION:   [Array-24]  public native const override function toString() : void


    

FUNCTION:   [Array-26]  -constructor- native const function Array(values: Array) : void

     ARG:   [arg-00]   private values : Array

    
VARIABLE:   [values-00]  private var values : Array

FUNCTION:   [Array-27]  public native const function append(obj: Object) : Array

     ARG:   [arg-00]   private obj : Object

    
VARIABLE:   [obj-00]  private var obj : Object

FUNCTION:   [Array-28]  public native const function clear() : void


    

FUNCTION:   [Array-29]  public native const function compact() : Array


    

FUNCTION:   [Array-30]  public native const function concat(args: Array) : Array

     ARG:   [arg-00]   private args : Array

    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [Array-31]  public const function contains(element: Object) : void

     ARG:   [arg-00]   private element : Object

    0000: [0] 33 02 ba 07 ca 53 .......... debug 

    # ejs.es:477                            if (indexOf(element) >= 0) {

    0006: [0] 5b ......................... getLocalSlot0 
    0007: [1] 1f 9c 54 e0 01 02 .......... callScopedName <indexOf> <public> <argc: 1> 
    0013: [0] 93 ......................... pushResult 
    0014: [1] 44 ......................... load0 
    0015: [2] 28 ......................... compareGe 
    0016: [1] 13 0c ...................... branchFalse8 <addr: 30> 
    0018: [0] 33 02 bc 07 ac 54 .......... debug 

    # ejs.es:478                                return true

    0024: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0027: [1] bf ......................... returnValue 
    0028: [0] 3e 0f ...................... goto8 <addr: 45> 
    0030: [0] 33 02 be 07 94 42 .......... debug 

    # ejs.es:479                            } else {

    0036: [0] 33 02 c0 07 e4 54 .......... debug 

    # ejs.es:480                                return false

    0042: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0044: [1] bf ......................... returnValue 
    0045: [0] 54 ......................... loadNull 
    0046: [1] bf ......................... returnValue 
    0047: [0] 33 02 c4 07 b4 16 .......... debug 

    # ejs.es:482                        }
    
VARIABLE:   [element-00]  private var element : Object

FUNCTION:   [Array-32]  public const function every(match) : void

     ARG:   [arg-00]   private match
   LOCAL:   [local-01] var i

    0000: [0] 33 02 dc 07 a6 56 .......... debug 

    # ejs.es:494                            for (let i: Number in this) {

    0006: [0] 57 ......................... loadThis 
    0007: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0013: [0] 93 ......................... pushResult 
    0014: [1] 39 ......................... dup 
    0015: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0018: [1] 93 ......................... pushResult 
    0019: [2] 95 ......................... putLocalSlot1 
    0020: [1] 33 02 de 07 94 57 .......... debug 

    # ejs.es:495                                if (!match(this[i], i, this)) {

    0026: [1] 57 ......................... loadThis 
    0027: [2] 56 d8 31 ................... loadString <> 
    0030: [3] 5c ......................... getLocalSlot1 
    0031: [4] 7c ......................... getObjNameExpr 
    0032: [2] 5c ......................... getLocalSlot1 
    0033: [3] 57 ......................... loadThis 
    0034: [4] 1a 00 00 06 ................ callBlockSlot <slot: 0> <0> <argc: 3> 
    0038: [1] 93 ......................... pushResult 
    0039: [2] 86 ......................... logicalNot 
    0040: [2] 13 0b ...................... branchFalse8 <addr: 53> 
    0042: [1] 33 02 e0 07 f4 57 .......... debug 

    # ejs.es:496                                    return false

    0048: [1] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0050: [2] bf ......................... returnValue 
    0051: [0] 3e 00 ...................... goto8 <addr: 53> 
    0053: [0] 3e d7 ...................... goto8 <addr: 14> 
    0055: [0] 90 ......................... pop 
    0056: [-1] 33 02 e6 07 b6 58 .......... debug 

    # ejs.es:499                            return true

    0062: [-1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0065: [0] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     15      18         55           55       

VARIABLE:   [match-00]  private var match
VARIABLE:   [i-01]  -hoisted-1 var i

FUNCTION:   [Array-33]  public const function filter(match) : Array

     ARG:   [arg-00]   private match

    0000: [0] 33 02 82 08 d2 59 .......... debug 

    # ejs.es:513                            findAll(match)

    0006: [0] 5b ......................... getLocalSlot0 
    0007: [1] 1f 88 5a e0 01 02 .......... callScopedName <findAll> <public> <argc: 1> 
    0013: [0] 93 ......................... pushResult 
    0014: [1] bf ......................... returnValue 
    
VARIABLE:   [match-00]  private var match

FUNCTION:   [Array-34]  public const function find(match) : Object

     ARG:   [arg-00]   private match
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i

    0000: [0] 33 02 9c 08 96 5b .......... debug 

    # ejs.es:526                            var result: Array = new Array

    0006: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0008: [1] 89 ......................... new 
    0009: [1] 20 00 ...................... callConstructor <argc: 0> 
    0011: [1] 95 ......................... putLocalSlot1 
    0012: [0] 33 02 9e 08 a6 56 .......... debug 

    # ejs.es:527                            for (let i: Number in this) {

    0018: [0] 57 ......................... loadThis 
    0019: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 39 ......................... dup 
    0027: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0030: [1] 93 ......................... pushResult 
    0031: [2] 96 ......................... putLocalSlot2 
    0032: [1] 33 02 a0 08 80 5c .......... debug 

    # ejs.es:528                                if (match(this[i], i, this)) {

    0038: [1] 57 ......................... loadThis 
    0039: [2] 56 d8 31 ................... loadString <> 
    0042: [3] 5d ......................... getLocalSlot2 
    0043: [4] 7c ......................... getObjNameExpr 
    0044: [2] 5d ......................... getLocalSlot2 
    0045: [3] 57 ......................... loadThis 
    0046: [4] 1a 00 00 06 ................ callBlockSlot <slot: 0> <0> <argc: 3> 
    0050: [1] 93 ......................... pushResult 
    0051: [2] 13 0f ...................... branchFalse8 <addr: 68> 
    0053: [1] 33 02 a2 08 de 5c .......... debug 

    # ejs.es:529                                    return this[i]

    0059: [1] 57 ......................... loadThis 
    0060: [2] 56 d8 31 ................... loadString <> 
    0063: [3] 5d ......................... getLocalSlot2 
    0064: [4] 7c ......................... getObjNameExpr 
    0065: [2] bf ......................... returnValue 
    0066: [0] 3e 00 ...................... goto8 <addr: 68> 
    0068: [0] 3e d4 ...................... goto8 <addr: 26> 
    0070: [0] 90 ......................... pop 
    0071: [-1] 33 02 a8 08 a4 5d .......... debug 

    # ejs.es:532                            return result

    0077: [-1] 5c ......................... getLocalSlot1 
    0078: [0] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     27      30         70           70       

VARIABLE:   [match-00]  private var match
VARIABLE:   [result-01]  private var result : Array
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [Array-35]  public const function findAll(match) : Array

     ARG:   [arg-00]   private match
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i

    0000: [0] 33 02 c2 08 96 5b .......... debug 

    # ejs.es:545                            var result: Array = new Array

    0006: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0008: [1] 89 ......................... new 
    0009: [1] 20 00 ...................... callConstructor <argc: 0> 
    0011: [1] 95 ......................... putLocalSlot1 
    0012: [0] 33 02 c4 08 a6 56 .......... debug 

    # ejs.es:546                            for (let i: Number in this) {

    0018: [0] 57 ......................... loadThis 
    0019: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 39 ......................... dup 
    0027: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0030: [1] 93 ......................... pushResult 
    0031: [2] 96 ......................... putLocalSlot2 
    0032: [1] 33 02 c6 08 80 5c .......... debug 

    # ejs.es:547                                if (match(this[i], i, this)) {

    0038: [1] 57 ......................... loadThis 
    0039: [2] 56 d8 31 ................... loadString <> 
    0042: [3] 5d ......................... getLocalSlot2 
    0043: [4] 7c ......................... getObjNameExpr 
    0044: [2] 5d ......................... getLocalSlot2 
    0045: [3] 57 ......................... loadThis 
    0046: [4] 1a 00 00 06 ................ callBlockSlot <slot: 0> <0> <argc: 3> 
    0050: [1] 93 ......................... pushResult 
    0051: [2] 13 15 ...................... branchFalse8 <addr: 74> 
    0053: [1] 33 02 c8 08 c8 5e .......... debug 

    # ejs.es:548                                    result.append(this[i])

    0059: [1] 5c ......................... getLocalSlot1 
    0060: [2] 57 ......................... loadThis 
    0061: [3] 56 d8 31 ................... loadString <> 
    0064: [4] 5d ......................... getLocalSlot2 
    0065: [5] 7c ......................... getObjNameExpr 
    0066: [3] 1e 88 4f e0 01 02 .......... callObjName <append> <public> <argc: 1> 
    0072: [1] 3e 00 ...................... goto8 <addr: 74> 
    0074: [1] 3e ce ...................... goto8 <addr: 26> 
    0076: [1] 90 ......................... pop 
    0077: [0] 33 02 ce 08 a4 5d .......... debug 

    # ejs.es:551                            return result

    0083: [0] 5c ......................... getLocalSlot1 
    0084: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     27      30         76           76       

VARIABLE:   [match-00]  private var match
VARIABLE:   [result-01]  private var result : Array
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [Array-36]  public const function forEach(callback, thisObj: Object) : void

     ARG:   [arg-00]   private callback
     ARG:   [arg-01]   private thisObj : Object
   LOCAL:   [local-02] var i
   LOCAL:   [local-03] var i

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 e6 08 ba 60 .......... debug 

    # ejs.es:563                            if (thisObj) {

    0013: [0] 5c ......................... getLocalSlot1 
    0014: [1] 13 2f ...................... branchFalse8 <addr: 63> 
    0016: [0] 33 02 e8 08 f0 60 .......... debug 

    # ejs.es:564                                for (let i: Number in this) {

    0022: [0] 57 ......................... loadThis 
    0023: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0029: [0] 93 ......................... pushResult 
    0030: [1] 39 ......................... dup 
    0031: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0034: [1] 93 ......................... pushResult 
    0035: [2] 96 ......................... putLocalSlot2 
    0036: [1] 33 02 ea 08 cc 61 .......... debug 

    # ejs.es:565                                    callback.call(thisObj, this[i], i, this)

    0042: [1] 5b ......................... getLocalSlot0 
    0043: [2] 5c ......................... getLocalSlot1 
    0044: [3] 57 ......................... loadThis 
    0045: [4] 56 d8 31 ................... loadString <> 
    0048: [5] 5d ......................... getLocalSlot2 
    0049: [6] 7c ......................... getObjNameExpr 
    0050: [4] 5d ......................... getLocalSlot2 
    0051: [5] 57 ......................... loadThis 
    0052: [6] 1e c6 62 e0 01 08 .......... callObjName <call> <public> <argc: 4> 
    0058: [1] 3e e2 ...................... goto8 <addr: 30> 
    0060: [1] 90 ......................... pop 
    0061: [0] 3e 2f ...................... goto8 <addr: 110> 
    0063: [0] 33 02 ee 08 94 42 .......... debug 

    # ejs.es:567                            } else {

    0069: [0] 33 02 f0 08 f0 60 .......... debug 

    # ejs.es:568                                for (let i: Number in this) {

    0075: [0] 57 ......................... loadThis 
    0076: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0082: [0] 93 ......................... pushResult 
    0083: [1] 39 ......................... dup 
    0084: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0087: [1] 93 ......................... pushResult 
    0088: [2] 97 ......................... putLocalSlot3 
    0089: [1] 33 02 f2 08 d0 62 .......... debug 

    # ejs.es:569                                    callback(this[i], i, this)

    0095: [1] 57 ......................... loadThis 
    0096: [2] 56 d8 31 ................... loadString <> 
    0099: [3] 5e ......................... getLocalSlot3 
    0100: [4] 7c ......................... getObjNameExpr 
    0101: [2] 5e ......................... getLocalSlot3 
    0102: [3] 57 ......................... loadThis 
    0103: [4] 1a 00 00 06 ................ callBlockSlot <slot: 0> <0> <argc: 3> 
    0107: [1] 3e e6 ...................... goto8 <addr: 83> 
    0109: [1] 90 ......................... pop 
    0110: [0] 54 ......................... loadNull 
    0111: [1] bf ......................... returnValue 
    0112: [0] 33 02 f8 08 b4 16 .......... debug 

    # ejs.es:572                        }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     31      34         60           60       
1   iteration     84      87        109          109       

VARIABLE:   [callback-00]  private var callback
VARIABLE:   [thisObj-01]  private var thisObj : Object
VARIABLE:   [i-02]  -hoisted-2 var i
VARIABLE:   [i-03]  -hoisted-3 var i

FUNCTION:   [Array-37]  public native const function indexOf(element: Object, startIndex) : void

     ARG:   [arg-00]   private element : Object
     ARG:   [arg-01]   private startIndex

    
VARIABLE:   [element-00]  private var element : Object
VARIABLE:   [startIndex-01]  private var startIndex

FUNCTION:   [Array-38]  public native const function insert(pos, args: Array) : Array

     ARG:   [arg-00]   private pos
     ARG:   [arg-01]   private args : Array

    
VARIABLE:   [pos-00]  private var pos
VARIABLE:   [args-01]  private var args : Array

FUNCTION:   [Array-39]  public native const function join(sep) : void

     ARG:   [arg-00]   private sep

    
VARIABLE:   [sep-00]  private var sep

FUNCTION:   [Array-40]  public native const function lastIndexOf(element: Object, startIndex) : void

     ARG:   [arg-00]   private element : Object
     ARG:   [arg-01]   private startIndex

    
VARIABLE:   [element-00]  private var element : Object
VARIABLE:   [startIndex-01]  private var startIndex

FUNCTION:   [Array-41]  public native const get function length() : void


    

FUNCTION:   [Array-41]  public native const set function length(value) : void

     ARG:   [arg-00]   private value

    
VARIABLE:   [value-00]  private var value

FUNCTION:   [Array-42]  public const function map(mapper) : Array

     ARG:   [arg-00]   private mapper
   LOCAL:   [local-01] var result : Array

    0000: [0] 33 02 96 0a 8a 6d .......... debug 

    # ejs.es:651                            var result: Array = clone()

    0006: [0] 1f cc 31 e0 01 00 .......... callScopedName <clone> <public> <argc: 0> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 95 ......................... putLocalSlot1 
    0014: [0] 33 02 98 0a da 6d .......... debug 

    # ejs.es:652                            result.transform(mapper)

    0020: [0] 5c ......................... getLocalSlot1 
    0021: [1] 5b ......................... getLocalSlot0 
    0022: [2] 1e a4 6e e0 01 02 .......... callObjName <transform> <public> <argc: 1> 
    0028: [0] 33 02 9a 0a a4 5d .......... debug 

    # ejs.es:653                            return result

    0034: [0] 5c ......................... getLocalSlot1 
    0035: [1] bf ......................... returnValue 
    
VARIABLE:   [mapper-00]  private var mapper
VARIABLE:   [result-01]  private var result : Array

FUNCTION:   [Array-43]  public native const function pop() : Object


    

FUNCTION:   [Array-44]  public native const function push(items: Array) : void

     ARG:   [arg-00]   private items : Array

    
VARIABLE:   [items-00]  private var items : Array

FUNCTION:   [Array-45]  public const function reject(match) : Array

     ARG:   [arg-00]   private match
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i

    0000: [0] 33 02 d0 0a 96 5b .......... debug 

    # ejs.es:680                            var result: Array = new Array

    0006: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0008: [1] 89 ......................... new 
    0009: [1] 20 00 ...................... callConstructor <argc: 0> 
    0011: [1] 95 ......................... putLocalSlot1 
    0012: [0] 33 02 d2 0a a6 56 .......... debug 

    # ejs.es:681                            for (let i: Number in this) {

    0018: [0] 57 ......................... loadThis 
    0019: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 39 ......................... dup 
    0027: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0030: [1] 93 ......................... pushResult 
    0031: [2] 96 ......................... putLocalSlot2 
    0032: [1] 33 02 d4 0a 94 57 .......... debug 

    # ejs.es:682                                if (!match(this[i], i, this)) {

    0038: [1] 57 ......................... loadThis 
    0039: [2] 56 d8 31 ................... loadString <> 
    0042: [3] 5d ......................... getLocalSlot2 
    0043: [4] 7c ......................... getObjNameExpr 
    0044: [2] 5d ......................... getLocalSlot2 
    0045: [3] 57 ......................... loadThis 
    0046: [4] 1a 00 00 06 ................ callBlockSlot <slot: 0> <0> <argc: 3> 
    0050: [1] 93 ......................... pushResult 
    0051: [2] 86 ......................... logicalNot 
    0052: [2] 13 15 ...................... branchFalse8 <addr: 75> 
    0054: [1] 33 02 d6 0a c8 5e .......... debug 

    # ejs.es:683                                    result.append(this[i])

    0060: [1] 5c ......................... getLocalSlot1 
    0061: [2] 57 ......................... loadThis 
    0062: [3] 56 d8 31 ................... loadString <> 
    0065: [4] 5d ......................... getLocalSlot2 
    0066: [5] 7c ......................... getObjNameExpr 
    0067: [3] 1e 88 4f e0 01 02 .......... callObjName <append> <public> <argc: 1> 
    0073: [1] 3e 00 ...................... goto8 <addr: 75> 
    0075: [1] 3e cd ...................... goto8 <addr: 26> 
    0077: [1] 90 ......................... pop 
    0078: [0] 33 02 dc 0a a4 5d .......... debug 

    # ejs.es:686                            return result

    0084: [0] 5c ......................... getLocalSlot1 
    0085: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     27      30         77           77       

VARIABLE:   [match-00]  private var match
VARIABLE:   [result-01]  private var result : Array
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [Array-46]  public const function remove(start, end) : void

     ARG:   [arg-00]   private start
     ARG:   [arg-01]   private end

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 45 ......................... load1 
    0005: [1] 88 ......................... neg 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 f4 0a 8e 72 .......... debug 

    # ejs.es:698                            if (start < 0) {

    0013: [0] 5b ......................... getLocalSlot0 
    0014: [1] 44 ......................... load0 
    0015: [2] 2b ......................... compareLt 
    0016: [1] 13 11 ...................... branchFalse8 <addr: 35> 
    0018: [0] 33 02 f6 0a c8 72 .......... debug 

    # ejs.es:699                                start += length

    0024: [0] 5b ......................... getLocalSlot0 
    0025: [1] 57 ......................... loadThis 
    0026: [2] 7b aa 31 e0 01 ............. getObjName <length> <public> 
    0031: [2] 00 ......................... add 
    0032: [1] 94 ......................... putLocalSlot0 
    0033: [0] 3e 00 ...................... goto8 <addr: 35> 
    0035: [0] 33 02 fa 0a 88 73 .......... debug 

    # ejs.es:701                            if (end < 0) {

    0041: [0] 5c ......................... getLocalSlot1 
    0042: [1] 44 ......................... load0 
    0043: [2] 2b ......................... compareLt 
    0044: [1] 13 11 ...................... branchFalse8 <addr: 63> 
    0046: [0] 33 02 fc 0a be 73 .......... debug 

    # ejs.es:702                                end += length

    0052: [0] 5c ......................... getLocalSlot1 
    0053: [1] 57 ......................... loadThis 
    0054: [2] 7b aa 31 e0 01 ............. getObjName <length> <public> 
    0059: [2] 00 ......................... add 
    0060: [1] 95 ......................... putLocalSlot1 
    0061: [0] 3e 00 ...................... goto8 <addr: 63> 
    0063: [0] 33 02 fe 0a bc 15 .......... debug 

    # ejs.es:703                            }

    0069: [0] 33 02 80 0b fa 73 .......... debug 

    # ejs.es:704                            splice(start, end - start + 1)

    0075: [0] 5b ......................... getLocalSlot0 
    0076: [1] 5c ......................... getLocalSlot1 
    0077: [2] 5b ......................... getLocalSlot0 
    0078: [3] c3 ......................... sub 
    0079: [2] 45 ......................... load1 
    0080: [3] 00 ......................... add 
    0081: [2] 1f d0 74 e0 01 04 .......... callScopedName <splice> <public> <argc: 2> 
    0087: [0] 54 ......................... loadNull 
    0088: [1] bf ......................... returnValue 
    0089: [0] 33 02 82 0b b4 16 .......... debug 

    # ejs.es:705                        }
    
VARIABLE:   [start-00]  private var start
VARIABLE:   [end-01]  private var end

FUNCTION:   [Array-47]  public native const function reverse() : Array


    

FUNCTION:   [Array-48]  public native const function shift() : Object


    

FUNCTION:   [Array-49]  public native const function slice(start, end, step) : Array

     ARG:   [arg-00]   private start
     ARG:   [arg-01]   private end
     ARG:   [arg-02]   private step

    
VARIABLE:   [start-00]  private var start
VARIABLE:   [end-01]  private var end
VARIABLE:   [step-02]  private var step

FUNCTION:   [Array-50]  public const function some(match) : void

     ARG:   [arg-00]   private match
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i

    0000: [0] 33 02 ca 0b 96 5b .......... debug 

    # ejs.es:741                            var result: Array = new Array

    0006: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0008: [1] 89 ......................... new 
    0009: [1] 20 00 ...................... callConstructor <argc: 0> 
    0011: [1] 95 ......................... putLocalSlot1 
    0012: [0] 33 02 cc 0b a6 56 .......... debug 

    # ejs.es:742                            for (let i: Number in this) {

    0018: [0] 57 ......................... loadThis 
    0019: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 39 ......................... dup 
    0027: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0030: [1] 93 ......................... pushResult 
    0031: [2] 96 ......................... putLocalSlot2 
    0032: [1] 33 02 ce 0b 80 5c .......... debug 

    # ejs.es:743                                if (match(this[i], i, this)) {

    0038: [1] 57 ......................... loadThis 
    0039: [2] 56 d8 31 ................... loadString <> 
    0042: [3] 5d ......................... getLocalSlot2 
    0043: [4] 7c ......................... getObjNameExpr 
    0044: [2] 5d ......................... getLocalSlot2 
    0045: [3] 57 ......................... loadThis 
    0046: [4] 1a 00 00 06 ................ callBlockSlot <slot: 0> <0> <argc: 3> 
    0050: [1] 93 ......................... pushResult 
    0051: [2] 13 0c ...................... branchFalse8 <addr: 65> 
    0053: [1] 33 02 d0 0b ee 78 .......... debug 

    # ejs.es:744                                    return true

    0059: [1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0062: [2] bf ......................... returnValue 
    0063: [0] 3e 00 ...................... goto8 <addr: 65> 
    0065: [0] 3e d7 ...................... goto8 <addr: 26> 
    0067: [0] 90 ......................... pop 
    0068: [-1] 33 02 d6 0b ae 79 .......... debug 

    # ejs.es:747                            return false

    0074: [-1] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0076: [0] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     27      30         67           67       

VARIABLE:   [match-00]  private var match
VARIABLE:   [result-01]  private var result : Array
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [Array-51]  public native const function sort(compare, order) : Array

     ARG:   [arg-00]   private compare
     ARG:   [arg-01]   private order

    
VARIABLE:   [compare-00]  private var compare
VARIABLE:   [order-01]  private var order

FUNCTION:   [Array-52]  public native const function splice(start, deleteCount, values: Array) : Array

     ARG:   [arg-00]   private start
     ARG:   [arg-01]   private deleteCount
     ARG:   [arg-02]   private values : Array

    
VARIABLE:   [start-00]  private var start
VARIABLE:   [deleteCount-01]  private var deleteCount
VARIABLE:   [values-02]  private var values : Array

FUNCTION:   [Array-53]  public const function transform(mapper) : void

     ARG:   [arg-00]   private mapper
   LOCAL:   [local-01] var i

    0000: [0] 33 02 c2 0c a6 56 .......... debug 

    # ejs.es:801                            for (let i: Number in this) {

    0006: [0] 57 ......................... loadThis 
    0007: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0013: [0] 93 ......................... pushResult 
    0014: [1] 39 ......................... dup 
    0015: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0018: [1] 93 ......................... pushResult 
    0019: [2] 95 ......................... putLocalSlot1 
    0020: [1] 33 02 c4 0c ce 7e .......... debug 

    # ejs.es:802                                this[i] = mapper(this[i], i, this);

    0026: [1] 57 ......................... loadThis 
    0027: [2] 56 d8 31 ................... loadString <> 
    0030: [3] 5c ......................... getLocalSlot1 
    0031: [4] 7c ......................... getObjNameExpr 
    0032: [2] 5c ......................... getLocalSlot1 
    0033: [3] 57 ......................... loadThis 
    0034: [4] 1a 00 00 06 ................ callBlockSlot <slot: 0> <0> <argc: 3> 
    0038: [1] 93 ......................... pushResult 
    0039: [2] 57 ......................... loadThis 
    0040: [3] 56 d8 31 ................... loadString <> 
    0043: [4] 5c ......................... getLocalSlot1 
    0044: [5] b2 ......................... putObjNameExpr 
    0045: [1] 3e df ...................... goto8 <addr: 14> 
    0047: [1] 90 ......................... pop 
    0048: [0] 54 ......................... loadNull 
    0049: [1] bf ......................... returnValue 
    0050: [0] 33 02 c8 0c b4 16 .......... debug 

    # ejs.es:804                        }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     15      18         47           47       

VARIABLE:   [mapper-00]  private var mapper
VARIABLE:   [i-01]  -hoisted-1 var i

FUNCTION:   [Array-54]  public native const function unique() : Array


    

FUNCTION:   [Array-55]  public const function unshift(items: Array) : Object

     ARG:   [arg-00]   private items : Array

    0000: [0] 33 02 e8 0c ea 80 01 ....... debug 

    # ejs.es:820                            insert(0, items)

    0007: [0] 44 ......................... load0 
    0008: [1] 5b ......................... getLocalSlot0 
    0009: [2] 1f 84 68 e0 01 04 .......... callScopedName <insert> <public> <argc: 2> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [items-00]  private var items : Array

CLASS:      class Stream
            #  Class Details: 7 class traits, 0 instance traits, requested slot 115

FUNCTION:   [Stream-00]  public const function addListener(name, listener) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener

FUNCTION:   [Stream-01]  public const get function async() : void


    

FUNCTION:   [Stream-01]  public const set function async(enable) : void

     ARG:   [arg-00]   private enable

    
VARIABLE:   [enable-00]  private var enable

FUNCTION:   [Stream-02]  public const function close() : void


    

FUNCTION:   [Stream-03]  public const function flush() : void


    

FUNCTION:   [Stream-04]  public const function read(buffer, offset, count) : void

     ARG:   [arg-00]   private buffer
     ARG:   [arg-01]   private offset
     ARG:   [arg-02]   private count

    
VARIABLE:   [buffer-00]  private var buffer
VARIABLE:   [offset-01]  private var offset
VARIABLE:   [count-02]  private var count

FUNCTION:   [Stream-05]  public const function removeListener(name, listener) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener

FUNCTION:   [Stream-06]  public const function write(data: Array) : void

     ARG:   [arg-00]   private data : Array

    
VARIABLE:   [data-00]  private var data : Array

CLASS:      class BinaryStream extends Object
            #  Class Details: 54 class traits, 3 instance traits, requested slot 6

FUNCTION:   [BinaryStream-26]  -constructor- const function BinaryStream(stream: Stream) : void

     ARG:   [arg-00]   private stream : Stream
   LOCAL:   [local-01] var --fun_1604--89941725-- : Function
   LOCAL:   [local-02] var --fun_1630--89941725-- : Function

    0000: [0] 33 02 f2 0e 94 88 01 ....... debug 

    # ejs.es:953                            if (!stream) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 86 ......................... logicalNot 
    0009: [1] 13 13 ...................... branchFalse8 <addr: 30> 
    0011: [0] 33 02 f4 0e ca 88 01 ....... debug 

    # ejs.es:954                                throw new ArgError("Must supply a Stream to connect with")

    0018: [0] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0020: [1] 89 ......................... new 
    0021: [1] 56 e0 89 01 ................ loadString <Must supply a Stream to connect with> 
    0025: [2] 20 02 ...................... callConstructor <argc: 1> 
    0027: [1] c6 ......................... throw 
    0028: [1] 3e 00 ...................... goto8 <addr: 30> 
    0030: [1] 33 02 f6 0e bc 15 .......... debug 

    # ejs.es:955                            }

    0036: [1] 33 02 f8 0e aa 8a 01 ....... debug 

    # ejs.es:956                            nextStream = stream

    0043: [1] 5b ......................... getLocalSlot0 
    0044: [2] 57 ......................... loadThis 
    0045: [3] b3 9e 87 01 aa 85 01 ....... putObjName <nextStream> <[ejs::BinaryStream,private]> 
    0052: [1] 33 02 fa 0e ea 8a 01 ....... debug 

    # ejs.es:957                            inbuf = new ByteArray

    0059: [1] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0061: [2] 89 ......................... new 
    0062: [2] 20 00 ...................... callConstructor <argc: 0> 
    0064: [2] 57 ......................... loadThis 
    0065: [3] b3 9e 85 01 aa 85 01 ....... putObjName <inbuf> <[ejs::BinaryStream,private]> 
    0072: [1] 33 02 fc 0e ae 8b 01 ....... debug 

    # ejs.es:958                            outbuf = new ByteArray

    0079: [1] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0081: [2] 89 ......................... new 
    0082: [2] 20 00 ...................... callConstructor <argc: 0> 
    0084: [2] 57 ......................... loadThis 
    0085: [3] b3 c2 86 01 aa 85 01 ....... putObjName <outbuf> <[ejs::BinaryStream,private]> 
    0092: [1] 33 02 80 0f f4 8b 01 ....... debug 

    # ejs.es:960                            inbuf.addListener("writable", function (event: String, buffer: ByteArray) {

    0099: [1] 35 02 00 ................... defineFunction <slot: 1> <0> 
    0102: [1] 33 02 80 0f f4 8b 01 ....... debug 

    # ejs.es:960                            inbuf.addListener("writable", function (event: String, buffer: ByteArray) {

    0109: [1] 33 02 84 0f f4 8b 01 ....... debug 

    # ejs.es:962                            inbuf.addListener("writable", function (event: String, buffer: ByteArray) {

    0116: [1] 33 02 80 0f f4 8b 01 ....... debug 

    # ejs.es:960                            inbuf.addListener("writable", function (event: String, buffer: ByteArray) {

    0123: [1] 57 ......................... loadThis 
    0124: [2] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0131: [2] 56 e4 8e 01 ................ loadString <writable> 
    0135: [3] 33 02 84 0f fe 8d 01 ....... debug 

    # ejs.es:962                            })

    0142: [3] 5c ......................... getLocalSlot1 
    0143: [4] 1e f6 8e 01 e0 01 04 ....... callObjName <addListener> <public> <argc: 2> 
    0150: [1] 33 02 88 0f 8e 8f 01 ....... debug 

    # ejs.es:964                            outbuf.addListener("readable", function (event: String, buffer: ByteArray) {

    0157: [1] 35 04 00 ................... defineFunction <slot: 2> <0> 
    0160: [1] 33 02 88 0f 8e 8f 01 ....... debug 

    # ejs.es:964                            outbuf.addListener("readable", function (event: String, buffer: ByteArray) {

    0167: [1] 33 02 90 0f 8e 8f 01 ....... debug 

    # ejs.es:968                            outbuf.addListener("readable", function (event: String, buffer: ByteArray) {

    0174: [1] 33 02 88 0f 8e 8f 01 ....... debug 

    # ejs.es:964                            outbuf.addListener("readable", function (event: String, buffer: ByteArray) {

    0181: [1] 57 ......................... loadThis 
    0182: [2] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0189: [2] 56 a6 93 01 ................ loadString <readable> 
    0193: [3] 33 02 90 0f fe 8d 01 ....... debug 

    # ejs.es:968                            })

    0200: [3] 5d ......................... getLocalSlot2 
    0201: [4] 1e f6 8e 01 e0 01 04 ....... callObjName <addListener> <public> <argc: 2> 
    0208: [1] be ......................... return 
    0209: [0] 33 02 92 0f b4 16 .......... debug 

    # ejs.es:969                        }
    
VARIABLE:   [stream-00]  private var stream : Stream

FUNCTION:   [--fun_1604--89941725---01]  private function --fun_1604--89941725--(event, buffer) : void

     ARG:   [arg-00]   private event
     ARG:   [arg-01]   private buffer

    0000: [0] 33 02 82 0f a4 8d 01 ....... debug 

    # ejs.es:961                                nextStream.read(buffer)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 87 01 aa 85 01 ....... getObjName <nextStream> <[ejs::BinaryStream,private]> 
    0015: [1] 5c ......................... getLocalSlot1 
    0016: [2] 1e f4 8d 01 e0 01 02 ....... callObjName <read> <public> <argc: 1> 
    0023: [0] be ......................... return 
    0024: [0] 33 02 84 0f fe 8d 01 ....... debug 

    # ejs.es:962                            })
    
VARIABLE:   [event-00]  private var event
VARIABLE:   [buffer-01]  private var buffer

FUNCTION:   [--fun_1630--89941725---02]  private function --fun_1630--89941725--(event, buffer) : void

     ARG:   [arg-00]   private event
     ARG:   [arg-01]   private buffer

    0000: [0] 33 02 8a 0f c0 90 01 ....... debug 

    # ejs.es:965                                count = nextStream.write(buffer)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 87 01 aa 85 01 ....... getObjName <nextStream> <[ejs::BinaryStream,private]> 
    0015: [1] 5c ......................... getLocalSlot1 
    0016: [2] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] b4 ae 91 01 d8 31 .......... putScopedName <count> <> 
    0030: [0] 33 02 8c 0f ba 91 01 ....... debug 

    # ejs.es:966                                buffer.readPosition += count

    0037: [0] 5c ......................... getLocalSlot1 
    0038: [1] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0044: [1] 79 ae 91 01 d8 31 .......... getScopedName <count> <> 
    0050: [2] 00 ......................... add 
    0051: [1] 5c ......................... getLocalSlot1 
    0052: [2] b3 94 92 01 e0 01 .......... putObjName <readPosition> <public> 
    0058: [0] 33 02 8e 0f ae 92 01 ....... debug 

    # ejs.es:967                                buffer.reset()

    0065: [0] 5c ......................... getLocalSlot1 
    0066: [1] 1e ec 92 01 e0 01 00 ....... callObjName <reset> <public> <argc: 0> 
    0073: [0] be ......................... return 
    0074: [0] 33 02 90 0f fe 8d 01 ....... debug 

    # ejs.es:968                            })
    
VARIABLE:   [event-00]  private var event
VARIABLE:   [buffer-01]  private var buffer

FUNCTION:   [BinaryStream-27]  -initializer- static function BinaryStream-initializer() : void


    0000: [0] 33 02 c0 0e c4 03 .......... debug 

    # ejs.es:928                        use default namespace public

    0006: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0008: [1] 02 ......................... addNamespaceRef 
    0009: [0] 33 02 ca 0e a6 82 01 ....... debug 

    # ejs.es:933                        static const BigEndian: Number = ByteArray.BigEndian

    0016: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0018: [1] 7b a0 83 01 e0 01 .......... getObjName <BigEndian> <public> 
    0024: [1] 57 ......................... loadThis 
    0025: [2] b3 a0 83 01 e0 01 .......... putObjName <BigEndian> <public> 
    0031: [0] 33 02 d4 0e b4 83 01 ....... debug 

    # ejs.es:938                        static const LittleEndian: Number = ByteArray.LittleEndian

    0038: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0040: [1] 7b ba 84 01 e0 01 .......... getObjName <LittleEndian> <public> 
    0046: [1] 57 ......................... loadThis 
    0047: [2] b3 ba 84 01 e0 01 .......... putObjName <LittleEndian> <public> 
    0053: [0] 33 02 e0 0e d4 84 01 ....... debug 

    # ejs.es:944                        private var inbuf: ByteArray

    0060: [0] 33 02 e2 0e f6 85 01 ....... debug 

    # ejs.es:945                        private var outbuf: ByteArray

    0067: [0] 33 02 e4 0e d0 86 01 ....... debug 

    # ejs.es:946                        private var nextStream: Stream

    0074: [0] 33 02 f0 0e b4 87 01 ....... debug 

    # ejs.es:952                        function BinaryStream(stream: Stream) {

    0081: [0] 33 02 9c 0f d2 93 01 ....... debug 

    # ejs.es:974                        native function addListener(name, listener: Function): Void

    0088: [0] 33 02 a6 0f ec 94 01 ....... debug 

    # ejs.es:979                        native function get async(): Boolean

    0095: [0] 33 02 b0 0f d2 95 01 ....... debug 

    # ejs.es:984                        native function set async(enable: Boolean): Void

    0102: [0] 33 02 bc 0f c4 96 01 ....... debug 

    # ejs.es:990                        function get available(): Number

    0109: [0] 33 02 c8 0f e2 97 01 ....... debug 

    # ejs.es:996                        function close(): void

    0116: [0] 33 02 d4 0f de 98 01 ....... debug 

    # ejs.es:1002                       function get encoding(): String {

    0123: [0] 33 02 e4 0f 86 9a 01 ....... debug 

    # ejs.es:1010                       function set encoding(enc: String): Void {

    0130: [0] 33 02 f4 0f f2 9b 01 ....... debug 

    # ejs.es:1018                       function get endian(): Number

    0137: [0] 33 02 82 10 fe 9c 01 ....... debug 

    # ejs.es:1025                       function set endian(value: Number): Void {

    0144: [0] 33 02 98 10 f8 a0 01 ....... debug 

    # ejs.es:1036                       function flush(): Void {

    0151: [0] 33 02 b0 10 d2 a3 01 ....... debug 

    # ejs.es:1048                       function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number

    0158: [0] 33 02 c0 10 ee a5 01 ....... debug 

    # ejs.es:1056                       function readBoolean(): Boolean

    0165: [0] 33 02 d0 10 96 a7 01 ....... debug 

    # ejs.es:1064                       function readByte(): Number

    0172: [0] 33 02 f2 10 aa a8 01 ....... debug 

    # ejs.es:1081                       function readDate(): Date

    0179: [0] 33 02 82 11 c4 a9 01 ....... debug 

    # ejs.es:1089                       function readDouble(): Date

    0186: [0] 33 02 92 11 e0 aa 01 ....... debug 

    # ejs.es:1097                       function readInteger(): Number

    0193: [0] 33 02 a2 11 86 ac 01 ....... debug 

    # ejs.es:1105                       function readLong(): Number

    0200: [0] 33 02 b4 11 e0 ac 01 ....... debug 

    # ejs.es:1114                       function readString(count: Number = -1): String 

    0207: [0] 33 02 c4 11 9a ae 01 ....... debug 

    # ejs.es:1122                       function readXML(): XML {

    0214: [0] 33 02 e8 11 a0 b4 01 ....... debug 

    # ejs.es:1140                       native function removeListener(name, listener: Function): Void

    0221: [0] 33 02 f6 11 cc b5 01 ....... debug 

    # ejs.es:1147                       function room(): Number

    0228: [0] 33 02 92 12 ca b6 01 ....... debug 

    # ejs.es:1161                       function write(...items): Number {

    0235: [0] 33 02 ac 12 b0 b9 01 ....... debug 

    # ejs.es:1174                       function writeByte(data: Number): Void 

    0242: [0] 33 02 bc 12 ee ba 01 ....... debug 

    # ejs.es:1182                       function writeShort(data: Number): Void

    0249: [0] 33 02 cc 12 ac bc 01 ....... debug 

    # ejs.es:1190                       function writeDouble(data: Number): Void

    0256: [0] 33 02 dc 12 f0 bd 01 ....... debug 

    # ejs.es:1198                       function writeInteger(data: Number): Void

    0263: [0] 33 02 ec 12 ba bf 01 ....... debug 

    # ejs.es:1206                       function writeLong(data: Number): Void

    0270: [0] be ......................... return 
    
VARIABLE:   [BinaryStream-28]  public const static var BigEndian
VARIABLE:   [BinaryStream-29]  public const static var LittleEndian

FUNCTION:   [BinaryStream-30]  public native const function addListener(name, listener) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener

FUNCTION:   [BinaryStream-31]  public native const get function async() : void


    

FUNCTION:   [BinaryStream-31]  public native const set function async(enable) : void

     ARG:   [arg-00]   private enable

    
VARIABLE:   [enable-00]  private var enable

FUNCTION:   [BinaryStream-32]  public const get function available() : void


    0000: [0] 33 02 be 0f 96 97 01 ....... debug 

    # ejs.es:991                            inbuf.available

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 7b ce 97 01 e0 01 .......... getObjName <available> <public> 
    0021: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-33]  public const function close() : void


    0000: [0] 33 02 ca 0f a0 98 01 ....... debug 

    # ejs.es:997                            nextStream.close()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 87 01 aa 85 01 ....... getObjName <nextStream> <[ejs::BinaryStream,private]> 
    0015: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0021: [0] 93 ......................... pushResult 
    0022: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-34]  public const get function encoding() : void


    0000: [0] 33 02 d6 0f b2 99 01 ....... debug 

    # ejs.es:1003                           return inbuf.enc

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 7b ec 99 01 d8 31 .......... getObjName <enc> <> 
    0021: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-34]  public const set function encoding(enc) : void

     ARG:   [arg-00]   private enc

    0000: [0] 33 02 e6 0f ec 9a 01 ....... debug 

    # ejs.es:1011                           inbuf.encoding = enc

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0016: [2] b3 f4 99 01 e0 01 .......... putObjName <encoding> <public> 
    0022: [0] 33 02 e8 0f ae 9b 01 ....... debug 

    # ejs.es:1012                           outbuf.encoding = enc

    0029: [0] 5b ......................... getLocalSlot0 
    0030: [1] 57 ......................... loadThis 
    0031: [2] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0038: [2] b3 f4 99 01 e0 01 .......... putObjName <encoding> <public> 
    0044: [0] 54 ......................... loadNull 
    0045: [1] bf ......................... returnValue 
    0046: [0] 33 02 ea 0f b4 16 .......... debug 

    # ejs.es:1013                       }
    
VARIABLE:   [enc-00]  private var enc

FUNCTION:   [BinaryStream-35]  public const get function endian() : void


    0000: [0] 33 02 f6 0f be 9c 01 ....... debug 

    # ejs.es:1019                           inbuf.endian

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 7b f0 9c 01 e0 01 .......... getObjName <endian> <public> 
    0021: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-35]  public const set function endian(value) : void

     ARG:   [arg-00]   private value

    0000: [0] 33 02 84 10 e4 9d 01 ....... debug 

    # ejs.es:1026                           if (value != BigEndian && value != LittleEndian) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] 7b a0 83 01 e0 01 .......... getObjName <BigEndian> <public> 
    0015: [2] 2c ......................... compareNe 
    0016: [1] 39 ......................... dup 
    0017: [2] 13 0a ...................... branchFalse8 <addr: 29> 
    0019: [1] 90 ......................... pop 
    0020: [0] 5b ......................... getLocalSlot0 
    0021: [1] 57 ......................... loadThis 
    0022: [2] 7b ba 84 01 e0 01 .......... getObjName <LittleEndian> <public> 
    0028: [2] 2c ......................... compareNe 
    0029: [1] 13 13 ...................... branchFalse8 <addr: 50> 
    0031: [0] 33 02 86 10 e2 9e 01 ....... debug 

    # ejs.es:1027                               throw new ArgError("Bad endian value")

    0038: [0] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0040: [1] 89 ......................... new 
    0041: [1] 56 d0 9f 01 ................ loadString <Bad endian value> 
    0045: [2] 20 02 ...................... callConstructor <argc: 1> 
    0047: [1] c6 ......................... throw 
    0048: [1] 3e 00 ...................... goto8 <addr: 50> 
    0050: [1] 33 02 88 10 bc 15 .......... debug 

    # ejs.es:1028                           }

    0056: [1] 33 02 8a 10 f2 9f 01 ....... debug 

    # ejs.es:1029                           inbuf.endian = value

    0063: [1] 5b ......................... getLocalSlot0 
    0064: [2] 57 ......................... loadThis 
    0065: [3] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0072: [3] b3 f0 9c 01 e0 01 .......... putObjName <endian> <public> 
    0078: [1] 33 02 8c 10 b4 a0 01 ....... debug 

    # ejs.es:1030                           outbuf.endian = value

    0085: [1] 5b ......................... getLocalSlot0 
    0086: [2] 57 ......................... loadThis 
    0087: [3] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0094: [3] b3 f0 9c 01 e0 01 .......... putObjName <endian> <public> 
    0100: [1] 54 ......................... loadNull 
    0101: [2] bf ......................... returnValue 
    0102: [0] 33 02 8e 10 b4 16 .......... debug 

    # ejs.es:1031                       }
    
VARIABLE:   [value-00]  private var value

FUNCTION:   [BinaryStream-36]  public const function flush() : void


    0000: [0] 33 02 9a 10 ba a1 01 ....... debug 

    # ejs.es:1037                           inbuf.flush()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 1e ee a1 01 e0 01 00 ....... callObjName <flush> <public> <argc: 0> 
    0022: [0] 33 02 9c 10 fa a1 01 ....... debug 

    # ejs.es:1038                           outbuf.flush()

    0029: [0] 57 ......................... loadThis 
    0030: [1] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0037: [1] 1e ee a1 01 e0 01 00 ....... callObjName <flush> <public> <argc: 0> 
    0044: [0] 33 02 9e 10 b0 a2 01 ....... debug 

    # ejs.es:1039                           if (!(nextStream is ByteArray)) {

    0051: [0] 57 ......................... loadThis 
    0052: [1] 7b 9e 87 01 aa 85 01 ....... getObjName <nextStream> <[ejs::BinaryStream,private]> 
    0059: [1] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0061: [2] 43 ......................... isA 
    0062: [1] 86 ......................... logicalNot 
    0063: [1] 13 18 ...................... branchFalse8 <addr: 89> 
    0065: [0] 33 02 a2 10 8c a3 01 ....... debug 

    # ejs.es:1041                               nextStream.flush()

    0072: [0] 57 ......................... loadThis 
    0073: [1] 7b 9e 87 01 aa 85 01 ....... getObjName <nextStream> <[ejs::BinaryStream,private]> 
    0080: [1] 1e ee a1 01 e0 01 00 ....... callObjName <flush> <public> <argc: 0> 
    0087: [0] 3e 00 ...................... goto8 <addr: 89> 
    0089: [0] 54 ......................... loadNull 
    0090: [1] bf ......................... returnValue 
    0091: [0] 33 02 a6 10 b4 16 .......... debug 

    # ejs.es:1043                       }
    

FUNCTION:   [BinaryStream-37]  public const function read(buffer, offset, count) : void

     ARG:   [arg-00]   private buffer
     ARG:   [arg-01]   private offset
     ARG:   [arg-02]   private count

    0000: [0] 41 03 03 05 08 ............. initDefaultArgs8 <3> <5> <7> <10> 
    0005: [0] 44 ......................... load0 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 45 ......................... load1 
    0008: [1] 88 ......................... neg 
    0009: [1] 96 ......................... putLocalSlot2 
    0010: [0] 33 02 b2 10 84 a5 01 ....... debug 

    # ejs.es:1049                           inbuf.read(buffer, offset, count)

    0017: [0] 57 ......................... loadThis 
    0018: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0025: [1] 5b ......................... getLocalSlot0 
    0026: [2] 5c ......................... getLocalSlot1 
    0027: [3] 5d ......................... getLocalSlot2 
    0028: [4] 1e f4 8d 01 e0 01 06 ....... callObjName <read> <public> <argc: 3> 
    0035: [0] 93 ......................... pushResult 
    0036: [1] bf ......................... returnValue 
    
VARIABLE:   [buffer-00]  private var buffer
VARIABLE:   [offset-01]  private var offset
VARIABLE:   [count-02]  private var count

FUNCTION:   [BinaryStream-38]  public const function readBoolean() : void


    0000: [0] 33 02 c2 10 be a6 01 ....... debug 

    # ejs.es:1057                           inbuf.readBoolean()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 1e fe a6 01 e0 01 00 ....... callObjName <readBoolean> <public> <argc: 0> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-39]  public const function readByte() : void


    0000: [0] 33 02 d2 10 de a7 01 ....... debug 

    # ejs.es:1065                           inbuf.readByte()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 1e 98 a8 01 e0 01 00 ....... callObjName <readByte> <public> <argc: 0> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-40]  public const function readDate() : void


    0000: [0] 33 02 f4 10 ee a8 01 ....... debug 

    # ejs.es:1082                           inbuf.readDate()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 1e a8 a9 01 e0 01 00 ....... callObjName <readDate> <public> <argc: 0> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-41]  public const function readDouble() : void


    0000: [0] 33 02 84 11 8c aa 01 ....... debug 

    # ejs.es:1090                           inbuf.readDouble()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 1e ca aa 01 e0 01 00 ....... callObjName <readDouble> <public> <argc: 0> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-42]  public const function readInteger() : void


    0000: [0] 33 02 94 11 ae ab 01 ....... debug 

    # ejs.es:1098                           inbuf.readInteger()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 1e ee ab 01 e0 01 00 ....... callObjName <readInteger> <public> <argc: 0> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-43]  public const function readLong() : void


    0000: [0] 33 02 a4 11 ae ab 01 ....... debug 

    # ejs.es:1106                           inbuf.readInteger()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 1e ee ab 01 e0 01 00 ....... callObjName <readInteger> <public> <argc: 0> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-44]  public const function readString(count) : void

     ARG:   [arg-00]   private count

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 45 ......................... load1 
    0005: [1] 88 ......................... neg 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 b6 11 d2 ad 01 ....... debug 

    # ejs.es:1115                           inbuf.readString(count)

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0022: [1] 5b ......................... getLocalSlot0 
    0023: [2] 1e 94 38 e0 01 02 .......... callObjName <readString> <public> <argc: 1> 
    0029: [0] 93 ......................... pushResult 
    0030: [1] bf ......................... returnValue 
    
VARIABLE:   [count-00]  private var count

FUNCTION:   [BinaryStream-45]  public const function readXML() : void

   LOCAL:   [local-00] var data
   LOCAL:   [local-01] var s

    0000: [0] 33 02 c6 11 e8 ae 01 ....... debug 

    # ejs.es:1123                           var data: String = ""

    0007: [0] 56 d8 31 ................... loadString <> 
    0010: [1] 94 ......................... putLocalSlot0 
    0011: [0] 33 02 c8 11 ac af 01 ....... debug 

    # ejs.es:1124                           while (1) {

    0018: [0] 45 ......................... load1 
    0019: [1] 13 6f ...................... branchFalse8 <addr: 132> 
    0021: [0] 33 02 ca 11 e0 af 01 ....... debug 

    # ejs.es:1125                               var s: String = inbuf.readString()

    0028: [0] 57 ......................... loadThis 
    0029: [1] 7b 9e 85 01 aa 85 01 ....... getObjName <inbuf> <[ejs::BinaryStream,private]> 
    0036: [1] 1e 94 38 e0 01 00 .......... callObjName <readString> <public> <argc: 0> 
    0042: [0] 93 ......................... pushResult 
    0043: [1] 95 ......................... putLocalSlot1 
    0044: [0] 33 02 cc 11 c6 b0 01 ....... debug 

    # ejs.es:1126                               if (s == null && data.length == 0) {

    0051: [0] 5c ......................... getLocalSlot1 
    0052: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0054: [2] 25 ......................... compareEq 
    0055: [1] 39 ......................... dup 
    0056: [2] 13 09 ...................... branchFalse8 <addr: 67> 
    0058: [1] 90 ......................... pop 
    0059: [0] 5b ......................... getLocalSlot0 
    0060: [1] 7b aa 31 e0 01 ............. getObjName <length> <public> 
    0065: [1] 44 ......................... load0 
    0066: [2] 25 ......................... compareEq 
    0067: [1] 13 0c ...................... branchFalse8 <addr: 81> 
    0069: [0] 33 02 ce 11 b0 b1 01 ....... debug 

    # ejs.es:1127                                   return null

    0076: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0078: [1] bf ......................... returnValue 
    0079: [0] 3e 00 ...................... goto8 <addr: 81> 
    0081: [0] 33 02 d2 11 f0 b1 01 ....... debug 

    # ejs.es:1129                               if (s.length == 0) {

    0088: [0] 5c ......................... getLocalSlot1 
    0089: [1] 7b aa 31 e0 01 ............. getObjName <length> <public> 
    0094: [1] 44 ......................... load0 
    0095: [2] 25 ......................... compareEq 
    0096: [1] 13 0e ...................... branchFalse8 <addr: 112> 
    0098: [0] 33 02 d4 11 ba b2 01 ....... debug 

    # ejs.es:1130                                   break

    0105: [0] 3d 2c f7 f7 f7 ............. goto <addr: 132> 
    0110: [0] 3e 00 ...................... goto8 <addr: 112> 
    0112: [0] 33 02 d6 11 ee b2 01 ....... debug 

    # ejs.es:1131                               }

    0119: [0] 33 02 d8 11 92 b3 01 ....... debug 

    # ejs.es:1132                               data += s

    0126: [0] 5b ......................... getLocalSlot0 
    0127: [1] 5c ......................... getLocalSlot1 
    0128: [2] 00 ......................... add 
    0129: [1] 94 ......................... putLocalSlot0 
    0130: [0] 3e 8e ...................... goto8 <addr: 18> 
    0132: [0] 33 02 dc 11 c6 b3 01 ....... debug 

    # ejs.es:1134                           return new XML(data)

    0139: [0] 7e 8c 02 ................... getGlobalSlot <slot: 134> 
    0142: [1] 89 ......................... new 
    0143: [1] 5b ......................... getLocalSlot0 
    0144: [2] 20 02 ...................... callConstructor <argc: 1> 
    0146: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data
VARIABLE:   [s-01]  private var s

FUNCTION:   [BinaryStream-46]  public native const function removeListener(name, listener) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener

FUNCTION:   [BinaryStream-47]  public const function room() : void


    0000: [0] 33 02 f8 11 8c b6 01 ....... debug 

    # ejs.es:1148                           outbuf.room()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 1e c0 b6 01 e0 01 00 ....... callObjName <room> <public> <argc: 0> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [BinaryStream-48]  public const function write(items: Array) : void

     ARG:   [arg-00]   private items : Array
   LOCAL:   [local-01] var count
   LOCAL:   [local-02] var i

    0000: [0] 33 02 94 12 a0 b7 01 ....... debug 

    # ejs.es:1162                           let count: Number = 0

    0007: [0] 44 ......................... load0 
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 02 96 12 e4 b7 01 ....... debug 

    # ejs.es:1163                           for each (i in items) {

    0016: [0] 5b ......................... getLocalSlot0 
    0017: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] 39 ......................... dup 
    0025: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0028: [1] 93 ......................... pushResult 
    0029: [2] 96 ......................... putLocalSlot2 
    0030: [1] 33 02 98 12 ac b8 01 ....... debug 

    # ejs.es:1164                               count += outbuf.write(i)

    0037: [1] 5c ......................... getLocalSlot1 
    0038: [2] 57 ......................... loadThis 
    0039: [3] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0046: [3] 5d ......................... getLocalSlot2 
    0047: [4] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0054: [2] 93 ......................... pushResult 
    0055: [3] 00 ......................... add 
    0056: [2] 95 ......................... putLocalSlot1 
    0057: [1] 3e dd ...................... goto8 <addr: 24> 
    0059: [1] 90 ......................... pop 
    0060: [0] 33 02 9c 12 fe b8 01 ....... debug 

    # ejs.es:1166                           return count

    0067: [0] 5c ......................... getLocalSlot1 
    0068: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     25      28         59           59       

VARIABLE:   [items-00]  private var items : Array
VARIABLE:   [count-01]  private var count
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [BinaryStream-49]  public const function writeByte(data) : void

     ARG:   [arg-00]   private data

    0000: [0] 33 02 ae 12 90 ba 01 ....... debug 

    # ejs.es:1175                           outbuf.writeByte(outbuf)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 57 ......................... loadThis 
    0016: [2] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0023: [2] 1e da ba 01 e0 01 02 ....... callObjName <writeByte> <public> <argc: 1> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data

FUNCTION:   [BinaryStream-50]  public const function writeShort(data) : void

     ARG:   [arg-00]   private data

    0000: [0] 33 02 be 12 ce bb 01 ....... debug 

    # ejs.es:1183                           outbuf.writeShort(data)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 5b ......................... getLocalSlot0 
    0016: [2] 1e 96 bc 01 e0 01 02 ....... callObjName <writeShort> <public> <argc: 1> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data

FUNCTION:   [BinaryStream-51]  public const function writeDouble(data) : void

     ARG:   [arg-00]   private data

    0000: [0] 33 02 ce 12 8e bd 01 ....... debug 

    # ejs.es:1191                           outbuf.writeDouble(data)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 5b ......................... getLocalSlot0 
    0016: [2] 1e d8 bd 01 e0 01 02 ....... callObjName <writeDouble> <public> <argc: 1> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data

FUNCTION:   [BinaryStream-52]  public const function writeInteger(data) : void

     ARG:   [arg-00]   private data

    0000: [0] 33 02 de 12 d4 be 01 ....... debug 

    # ejs.es:1199                           outbuf.writeInteger(data)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 5b ......................... getLocalSlot0 
    0016: [2] 1e a0 bf 01 e0 01 02 ....... callObjName <writeInteger> <public> <argc: 1> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data

FUNCTION:   [BinaryStream-53]  public const function writeLong(data) : void

     ARG:   [arg-00]   private data

    0000: [0] 33 02 ee 12 98 c0 01 ....... debug 

    # ejs.es:1207                           outbuf.writeLong(data)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b c2 86 01 aa 85 01 ....... getObjName <outbuf> <[ejs::BinaryStream,private]> 
    0015: [1] 5b ......................... getLocalSlot0 
    0016: [2] 1e de c0 01 e0 01 02 ....... callObjName <writeLong> <public> <argc: 1> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data
VARIABLE:   [inbuf-00]  [ejs::BinaryStream,private] var inbuf
VARIABLE:   [outbuf-01]  [ejs::BinaryStream,private] var outbuf
VARIABLE:   [nextStream-02]  [ejs::BinaryStream,private] var nextStream : Stream

CLASS:      native final class Block extends Object
            #  Class Details: 26 class traits, 0 instance traits, requested slot 7

CLASS:      native final class Boolean extends Object
            #  Class Details: 27 class traits, 0 instance traits, requested slot 8

FUNCTION:   [Boolean-26]  -constructor- native const function Boolean(value: Boolean) : void

     ARG:   [arg-00]   private value : Boolean

    
VARIABLE:   [value-00]  private var value : Boolean

CLASS:      final class ByteArray extends Object
            #  Class Details: 64 class traits, 0 instance traits, requested slot 9

FUNCTION:   [ByteArray-08]  iterator native const override function get() : void


    

FUNCTION:   [ByteArray-12]  iterator native const override function getValues() : void


    

FUNCTION:   [ByteArray-24]  public native const override function toString() : void


    

FUNCTION:   [ByteArray-26]  -constructor- native const function ByteArray(size, growable: Boolean) : void

     ARG:   [arg-00]   private size
     ARG:   [arg-01]   private growable : Boolean

    
VARIABLE:   [size-00]  private var size
VARIABLE:   [growable-01]  private var growable : Boolean

FUNCTION:   [ByteArray-27]  -initializer- static function ByteArray-initializer() : void


    0000: [0] 33 02 9e 16 c4 03 .......... debug 

    # ejs.es:1423                       use default namespace public

    0006: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0008: [1] 02 ......................... addNamespaceRef 
    0009: [0] 33 02 a8 16 d6 c4 01 ....... debug 

    # ejs.es:1428                       static const LittleEndian: Number   = 0

    0016: [0] 44 ......................... load0 
    0017: [1] 57 ......................... loadThis 
    0018: [2] b3 ba 84 01 e0 01 .......... putObjName <LittleEndian> <public> 
    0024: [0] 33 02 b2 16 b6 c5 01 ....... debug 

    # ejs.es:1433                       static const BigEndian: Number      = 1

    0031: [0] 45 ......................... load1 
    0032: [1] 57 ......................... loadThis 
    0033: [2] b3 a0 83 01 e0 01 .......... putObjName <BigEndian> <public> 
    0039: [0] 33 02 c2 16 96 c6 01 ....... debug 

    # ejs.es:1441                       native function ByteArray(size: Number = -1, growable: Boolean = true)

    0046: [0] 33 02 c8 16 d0 c7 01 ....... debug 

    # ejs.es:1444                       native function addListener(name: Object, listener: Function): Void

    0053: [0] 33 02 d4 16 e8 c8 01 ....... debug 

    # ejs.es:1450                       native function get available(): Number 

    0060: [0] 33 02 da 16 ec 94 01 ....... debug 

    # ejs.es:1453                       native function get async(): Boolean

    0067: [0] 33 02 e0 16 d2 95 01 ....... debug 

    # ejs.es:1456                       native function set async(enable: Boolean): Void

    0074: [0] 33 02 e6 16 ca c9 01 ....... debug 

    # ejs.es:1459                       native function close(): Void

    0081: [0] 33 02 f2 16 96 ca 01 ....... debug 

    # ejs.es:1465                       native function compact(): Void

    0088: [0] 33 02 98 17 e6 ca 01 ....... debug 

    # ejs.es:1484                       native function copyIn(destOffset: Number, src: ByteArray, srcOffset: Number = 0, count: Number = -1): Number

    0095: [0] 33 02 ae 17 92 cd 01 ....... debug 

    # ejs.es:1495                       native function copyOut(srcOffset: Number, dest: ByteArray, destOffset: Number = 0, count: Number = -1): Number

    0102: [0] 33 02 b8 17 9c cf 01 ....... debug 

    # ejs.es:1500                       function get encoding(): String 

    0109: [0] 33 02 c6 17 86 9a 01 ....... debug 

    # ejs.es:1507                       function set encoding(enc: String): Void {

    0116: [0] 33 02 d4 17 9a d1 01 ....... debug 

    # ejs.es:1514                       native function get endian(): Number

    0123: [0] 33 02 e0 17 f4 d1 01 ....... debug 

    # ejs.es:1520                       native function set endian(value: Number): Void

    0130: [0] 33 02 ea 17 e4 d2 01 ....... debug 

    # ejs.es:1525                       native function flush(): Void

    0137: [0] 33 02 80 18 e0 63 .......... debug 

    # ejs.es:1536                       override iterator native function get(): Iterator

    0143: [0] 33 02 8a 18 d4 64 .......... debug 

    # ejs.es:1541                       override iterator native function getValues(): Iterator

    0149: [0] 33 02 96 18 e0 6a .......... debug 

    # ejs.es:1547                       native function get length(): Number

    0155: [0] 33 02 a0 18 b0 d3 01 ....... debug 

    # ejs.es:1552                       function get MD5(): String {

    0162: [0] 33 02 b8 18 b8 d5 01 ....... debug 

    # ejs.es:1564                       native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number

    0169: [0] 33 02 cc 18 f8 d6 01 ....... debug 

    # ejs.es:1574                       native function readBoolean(): Boolean

    0176: [0] 33 02 de 18 d6 d7 01 ....... debug 

    # ejs.es:1583                       native function readByte(): Number

    0183: [0] 33 02 f0 18 ac d8 01 ....... debug 

    # ejs.es:1592                       native function readDate(): Date

    0190: [0] 33 02 84 19 fe d8 01 ....... debug 

    # ejs.es:1602                       native function readDouble(): Date

    0197: [0] 33 02 98 19 d4 d9 01 ....... debug 

    # ejs.es:1612                       native function readInteger(): Number

    0204: [0] 33 02 ac 19 b0 da 01 ....... debug 

    # ejs.es:1622                       native function readLong(): Number

    0211: [0] 33 02 b6 19 86 db 01 ....... debug 

    # ejs.es:1627                       native function get readPosition(): Number

    0218: [0] 33 02 c2 19 ec db 01 ....... debug 

    # ejs.es:1633                       native function set readPosition(position: Number): Void

    0225: [0] 33 02 d8 19 80 dd 01 ....... debug 

    # ejs.es:1644                       native function readShort(): Number

    0232: [0] 33 02 ee 19 ec dd 01 ....... debug 

    # ejs.es:1655                       native function readString(count: Number = -1): String

    0239: [0] 33 02 fc 19 ea de 01 ....... debug 

    # ejs.es:1662                       native function removeListener(name: Object, listener: Function): Void

    0246: [0] 33 02 88 1a 88 e0 01 ....... debug 

    # ejs.es:1668                       native function reset(): Void

    0253: [0] 33 02 92 1a d4 e0 01 ....... debug 

    # ejs.es:1673                       native function get room(): Number 

    0260: [0] 33 02 9e 1a fa 7c .......... debug 

    # ejs.es:1679                       override native function toString(): String 

    0266: [0] 33 02 ba 1a ac e1 01 ....... debug 

    # ejs.es:1693                       native function write(...data): Number

    0273: [0] 33 02 ce 1a 8a e2 01 ....... debug 

    # ejs.es:1703                       native function writeByte(data: Number): Void

    0280: [0] 33 02 e0 1a f6 e2 01 ....... debug 

    # ejs.es:1712                       native function writeShort(data: Number): Void

    0287: [0] 33 02 f2 1a e4 e3 01 ....... debug 

    # ejs.es:1721                       native function writeDouble(data: Number): Void

    0294: [0] 33 02 86 1b d4 e4 01 ....... debug 

    # ejs.es:1731                       native function writeInteger(data: Number): Void

    0301: [0] 33 02 9a 1b c6 e5 01 ....... debug 

    # ejs.es:1741                       native function writeLong(data: Number): Void

    0308: [0] 33 02 a4 1b b2 e6 01 ....... debug 

    # ejs.es:1746                       native function get writePosition(): Number

    0315: [0] 33 02 b0 1b b6 e7 01 ....... debug 

    # ejs.es:1752                       native function set writePosition(position: Number): Void

    0322: [0] 33 02 be 1b ba e8 01 ....... debug 

    # ejs.es:1759                       function get input(): Function { return null; }

    0329: [0] 33 02 ca 1b b6 e9 01 ....... debug 

    # ejs.es:1765                       function set input(callback: Function): Void {

    0336: [0] 33 02 de 1b b8 ec 01 ....... debug 

    # ejs.es:1775                       function get output(): Function { return null; } 

    0343: [0] 33 02 f0 1b ba ed 01 ....... debug 

    # ejs.es:1784                       function set output(callback: Function): Void {

    0350: [0] be ......................... return 
    
VARIABLE:   [ByteArray-28]  public const static var LittleEndian
VARIABLE:   [ByteArray-29]  public const static var BigEndian

FUNCTION:   [ByteArray-30]  public native const function addListener(name: Object, listener) : void

     ARG:   [arg-00]   private name : Object
     ARG:   [arg-01]   private listener

    
VARIABLE:   [name-00]  private var name : Object
VARIABLE:   [listener-01]  private var listener

FUNCTION:   [ByteArray-31]  public native const get function available() : void


    

FUNCTION:   [ByteArray-32]  public native const get function async() : Boolean


    

FUNCTION:   [ByteArray-32]  public native const set function async(enable: Boolean) : void

     ARG:   [arg-00]   private enable : Boolean

    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [ByteArray-33]  public native const function close() : void


    

FUNCTION:   [ByteArray-34]  public native const function compact() : void


    

FUNCTION:   [ByteArray-35]  public native const function copyIn(destOffset, src: ByteArray, srcOffset, count) : void

     ARG:   [arg-00]   private destOffset
     ARG:   [arg-01]   private src : ByteArray
     ARG:   [arg-02]   private srcOffset
     ARG:   [arg-03]   private count

    
VARIABLE:   [destOffset-00]  private var destOffset
VARIABLE:   [src-01]  private var src : ByteArray
VARIABLE:   [srcOffset-02]  private var srcOffset
VARIABLE:   [count-03]  private var count

FUNCTION:   [ByteArray-36]  public native const function copyOut(srcOffset, dest: ByteArray, destOffset, count) : void

     ARG:   [arg-00]   private srcOffset
     ARG:   [arg-01]   private dest : ByteArray
     ARG:   [arg-02]   private destOffset
     ARG:   [arg-03]   private count

    
VARIABLE:   [srcOffset-00]  private var srcOffset
VARIABLE:   [dest-01]  private var dest : ByteArray
VARIABLE:   [destOffset-02]  private var destOffset
VARIABLE:   [count-03]  private var count

FUNCTION:   [ByteArray-37]  public const get function encoding() : void


    0000: [0] 33 02 ba 17 ee cf 01 ....... debug 

    # ejs.es:1501                           "utf-8"

    0007: [0] 56 96 d0 01 ................ loadString <utf-8> 
    0011: [1] bf ......................... returnValue 
    

FUNCTION:   [ByteArray-37]  public const set function encoding(enc) : void

     ARG:   [arg-00]   private enc

    0000: [0] 33 02 c8 17 a2 d0 01 ....... debug 

    # ejs.es:1508                           throw "Not yet implemented"

    0007: [0] 56 f2 d0 01 ................ loadString <Not yet implemented> 
    0011: [1] c6 ......................... throw 
    0012: [1] 54 ......................... loadNull 
    0013: [2] bf ......................... returnValue 
    0014: [0] 33 02 ca 17 b4 16 .......... debug 

    # ejs.es:1509                       }
    
VARIABLE:   [enc-00]  private var enc

FUNCTION:   [ByteArray-38]  public native const get function endian() : void


    

FUNCTION:   [ByteArray-38]  public native const set function endian(value) : void

     ARG:   [arg-00]   private value

    
VARIABLE:   [value-00]  private var value

FUNCTION:   [ByteArray-39]  public native const function flush() : void


    

FUNCTION:   [ByteArray-40]  public native const get function length() : void


    

FUNCTION:   [ByteArray-41]  public const get function MD5() : void

   LOCAL:   [local-00] var buf : ByteArray

    0000: [0] 33 02 a2 18 82 d4 01 ....... debug 

    # ejs.es:1553                           let buf: ByteArray = this.clone()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 1e cc 31 e0 01 00 .......... callObjName <clone> <public> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 94 ......................... putLocalSlot0 
    0016: [0] 33 02 a4 18 de d4 01 ....... debug 

    # ejs.es:1554                           return md5(buf.readString())

    0023: [0] 5b ......................... getLocalSlot0 
    0024: [1] 1e 94 38 e0 01 00 .......... callObjName <readString> <public> <argc: 0> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 17 9a 01 02 ................ callGlobalSlot <slot: 77> <argc: 1> 
    0035: [0] 93 ......................... pushResult 
    0036: [1] bf ......................... returnValue 
    
VARIABLE:   [buf-00]  private var buf : ByteArray

FUNCTION:   [ByteArray-42]  public native const function read(buffer: ByteArray, offset, count) : void

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset
     ARG:   [arg-02]   private count

    
VARIABLE:   [buffer-00]  private var buffer : ByteArray
VARIABLE:   [offset-01]  private var offset
VARIABLE:   [count-02]  private var count

FUNCTION:   [ByteArray-43]  public native const function readBoolean() : Boolean


    

FUNCTION:   [ByteArray-44]  public native const function readByte() : void


    

FUNCTION:   [ByteArray-45]  public native const function readDate() : void


    

FUNCTION:   [ByteArray-46]  public native const function readDouble() : void


    

FUNCTION:   [ByteArray-47]  public native const function readInteger() : void


    

FUNCTION:   [ByteArray-48]  public native const function readLong() : void


    

FUNCTION:   [ByteArray-49]  public native const get function readPosition() : void


    

FUNCTION:   [ByteArray-49]  public native const set function readPosition(position) : void

     ARG:   [arg-00]   private position

    
VARIABLE:   [position-00]  private var position

FUNCTION:   [ByteArray-50]  public native const function readShort() : void


    

FUNCTION:   [ByteArray-51]  public native const function readString(count) : void

     ARG:   [arg-00]   private count

    
VARIABLE:   [count-00]  private var count

FUNCTION:   [ByteArray-52]  public native const function removeListener(name: Object, listener) : void

     ARG:   [arg-00]   private name : Object
     ARG:   [arg-01]   private listener

    
VARIABLE:   [name-00]  private var name : Object
VARIABLE:   [listener-01]  private var listener

FUNCTION:   [ByteArray-53]  public native const function reset() : void


    

FUNCTION:   [ByteArray-54]  public native const get function room() : void


    

FUNCTION:   [ByteArray-55]  public native const function write(data: Array) : void

     ARG:   [arg-00]   private data : Array

    
VARIABLE:   [data-00]  private var data : Array

FUNCTION:   [ByteArray-56]  public native const function writeByte(data) : void

     ARG:   [arg-00]   private data

    
VARIABLE:   [data-00]  private var data

FUNCTION:   [ByteArray-57]  public native const function writeShort(data) : void

     ARG:   [arg-00]   private data

    
VARIABLE:   [data-00]  private var data

FUNCTION:   [ByteArray-58]  public native const function writeDouble(data) : void

     ARG:   [arg-00]   private data

    
VARIABLE:   [data-00]  private var data

FUNCTION:   [ByteArray-59]  public native const function writeInteger(data) : void

     ARG:   [arg-00]   private data

    
VARIABLE:   [data-00]  private var data

FUNCTION:   [ByteArray-60]  public native const function writeLong(data) : void

     ARG:   [arg-00]   private data

    
VARIABLE:   [data-00]  private var data

FUNCTION:   [ByteArray-61]  public native const get function writePosition() : void


    

FUNCTION:   [ByteArray-61]  public native const set function writePosition(position) : void

     ARG:   [arg-00]   private position

    
VARIABLE:   [position-00]  private var position

FUNCTION:   [ByteArray-62]  public const get function input() : void


    0000: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0002: [1] bf ......................... returnValue 
    

FUNCTION:   [ByteArray-62]  public const set function input(callback) : void

     ARG:   [arg-00]   private callback
   LOCAL:   [local-01] var --fun_2614--89941712-- : Function

    0000: [0] 33 02 cc 1b a4 ea 01 ....... debug 

    # ejs.es:1766                           addListener("writable", function(event: String, ba: ByteArray): Void {

    0007: [0] 35 02 00 ................... defineFunction <slot: 1> <0> 
    0010: [0] 33 02 ca 1b b6 e9 01 ....... debug 

    # ejs.es:1765                       function set input(callback: Function): Void {

    0017: [0] 33 02 d0 1b a4 ea 01 ....... debug 

    # ejs.es:1768                           addListener("writable", function(event: String, ba: ByteArray): Void {

    0024: [0] 33 02 cc 1b a4 ea 01 ....... debug 

    # ejs.es:1766                           addListener("writable", function(event: String, ba: ByteArray): Void {

    0031: [0] 56 e4 8e 01 ................ loadString <writable> 
    0035: [1] 33 02 d0 1b fe 8d 01 ....... debug 

    # ejs.es:1768                           })

    0042: [1] 5c ......................... getLocalSlot1 
    0043: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0050: [0] 54 ......................... loadNull 
    0051: [1] bf ......................... returnValue 
    0052: [0] 33 02 d2 1b b4 16 .......... debug 

    # ejs.es:1769                       }
    
VARIABLE:   [callback-00]  private var callback

FUNCTION:   [--fun_2614--89941712---01]  private function --fun_2614--89941712--(event, ba: ByteArray) : void

     ARG:   [arg-00]   private event
     ARG:   [arg-01]   private ba : ByteArray

    0000: [0] 33 02 ce 1b ca eb 01 ....... debug 

    # ejs.es:1767                               callback(ba)

    0007: [0] 5c ......................... getLocalSlot1 
    0008: [1] 1a 00 02 02 ................ callBlockSlot <slot: 0> <1> <argc: 1> 
    0012: [0] 54 ......................... loadNull 
    0013: [1] bf ......................... returnValue 
    0014: [0] 33 02 d0 1b fe 8d 01 ....... debug 

    # ejs.es:1768                           })
    
VARIABLE:   [event-00]  private var event
VARIABLE:   [ba-01]  private var ba : ByteArray

FUNCTION:   [ByteArray-63]  public const get function output() : void


    0000: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0002: [1] bf ......................... returnValue 
    

FUNCTION:   [ByteArray-63]  public const set function output(callback) : void

     ARG:   [arg-00]   private callback
   LOCAL:   [local-01] var --fun_2657--89941712-- : Function

    0000: [0] 33 02 f2 1b aa ee 01 ....... debug 

    # ejs.es:1785                           addListener("readable", function(event: String, ba: ByteArray): Void {

    0007: [0] 35 02 00 ................... defineFunction <slot: 1> <0> 
    0010: [0] 33 02 f0 1b ba ed 01 ....... debug 

    # ejs.es:1784                       function set output(callback: Function): Void {

    0017: [0] 33 02 f6 1b aa ee 01 ....... debug 

    # ejs.es:1787                           addListener("readable", function(event: String, ba: ByteArray): Void {

    0024: [0] 33 02 f2 1b aa ee 01 ....... debug 

    # ejs.es:1785                           addListener("readable", function(event: String, ba: ByteArray): Void {

    0031: [0] 56 a6 93 01 ................ loadString <readable> 
    0035: [1] 33 02 f6 1b fe 8d 01 ....... debug 

    # ejs.es:1787                           })

    0042: [1] 5c ......................... getLocalSlot1 
    0043: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0050: [0] 54 ......................... loadNull 
    0051: [1] bf ......................... returnValue 
    0052: [0] 33 02 f8 1b b4 16 .......... debug 

    # ejs.es:1788                       }
    
VARIABLE:   [callback-00]  private var callback

FUNCTION:   [--fun_2657--89941712---01]  private function --fun_2657--89941712--(event, ba: ByteArray) : void

     ARG:   [arg-00]   private event
     ARG:   [arg-01]   private ba : ByteArray

    0000: [0] 33 02 f4 1b ca eb 01 ....... debug 

    # ejs.es:1786                               callback(ba)

    0007: [0] 5c ......................... getLocalSlot1 
    0008: [1] 1a 00 02 02 ................ callBlockSlot <slot: 0> <1> <argc: 1> 
    0012: [0] 54 ......................... loadNull 
    0013: [1] bf ......................... returnValue 
    0014: [0] 33 02 f6 1b fe 8d 01 ....... debug 

    # ejs.es:1787                           })
    
VARIABLE:   [event-00]  private var event
VARIABLE:   [ba-01]  private var ba : ByteArray

CLASS:      class Cmd extends Object
            #  Class Details: 30 class traits, 0 instance traits, requested slot 10

FUNCTION:   [Cmd-26]  public const static function sh(cmdline, data) : void

     ARG:   [arg-00]   private cmdline
     ARG:   [arg-01]   private data

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 8c 1d fe f1 01 ....... debug 

    # ejs.es:1862                           return run(("/bin/sh -c \"" + cmdline.replace(/\\/g, "\\\\") + "\"").trim('\n'), data)

    0014: [0] 56 c4 f3 01 ................ loadString </bin/sh -c "> 
    0018: [1] 5b ......................... getLocalSlot0 
    0019: [2] 55 de f3 01 ................ loadRegexp </\\/g> 
    0023: [3] 56 ea f3 01 ................ loadString <\\> 
    0027: [4] 1e f0 f3 01 e0 01 04 ....... callObjName <replace> <public> <argc: 2> 
    0034: [1] 93 ......................... pushResult 
    0035: [2] 00 ......................... add 
    0036: [1] 56 80 f4 01 ................ loadString <"> 
    0040: [2] 00 ......................... add 
    0041: [1] 56 84 f4 01 ................ loadString <
> 
    0045: [2] 1e 88 f4 01 00 02 .......... callObjName <trim> <> <argc: 1> 
    0051: [0] 93 ......................... pushResult 
    0052: [1] 5c ......................... getLocalSlot1 
    0053: [2] 1f 92 f4 01 e0 01 04 ....... callScopedName <run> <public> <argc: 2> 
    0060: [0] 93 ......................... pushResult 
    0061: [1] bf ......................... returnValue 
    
VARIABLE:   [cmdline-00]  private var cmdline
VARIABLE:   [data-01]  private var data

FUNCTION:   [Cmd-27]  public const static function run(cmdline, data) : void

     ARG:   [arg-00]   private cmdline
     ARG:   [arg-01]   private data

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 a4 1d c6 f5 01 ....... debug 

    # ejs.es:1874                           System.run(cmdline)

    0014: [0] 7e ea 01 ................... getGlobalSlot <slot: 117> 
    0017: [1] 5b ......................... getLocalSlot0 
    0018: [2] 1e 92 f4 01 e0 01 02 ....... callObjName <run> <public> <argc: 1> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] bf ......................... returnValue 
    
VARIABLE:   [cmdline-00]  private var cmdline
VARIABLE:   [data-01]  private var data

FUNCTION:   [Cmd-28]  public const static function daemon(cmdline) : void

     ARG:   [arg-00]   private cmdline

    0000: [0] 33 02 b4 1d f8 f6 01 ....... debug 

    # ejs.es:1882                           System.daemon(cmdline)

    0007: [0] 7e ea 01 ................... getGlobalSlot <slot: 117> 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 1e be f7 01 e0 01 02 ....... callObjName <daemon> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    
VARIABLE:   [cmdline-00]  private var cmdline

FUNCTION:   [Cmd-29]  public const static function runx(cmdline) : void

     ARG:   [arg-00]   private cmdline

    0000: [0] 33 02 c4 1d b8 f8 01 ....... debug 

    # ejs.es:1890                           System.runx(cmdline)

    0007: [0] 7e ea 01 ................... getGlobalSlot <slot: 117> 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 1e fa f8 01 e0 01 02 ....... callObjName <runx> <public> <argc: 1> 
    0018: [0] 54 ......................... loadNull 
    0019: [1] bf ......................... returnValue 
    0020: [0] 33 02 c6 1d b4 16 .......... debug 

    # ejs.es:1891                       }
    
VARIABLE:   [cmdline-00]  private var cmdline

CLASS:      class CmdArgs extends Object
            #  Class Details: 29 class traits, 4 instance traits, requested slot 11

FUNCTION:   [CmdArgs-26]  -constructor- const function CmdArgs(template: Object, argv: Array) : void

     ARG:   [arg-00]   private template : Object
     ARG:   [arg-01]   private argv : Array
   LOCAL:   [local-02] var arg
   LOCAL:   [local-03] var key
   LOCAL:   [local-04] var parts

    0000: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0002: [1] 89 ......................... new 
    0003: [1] 57 ......................... loadThis 
    0004: [2] b3 b8 0d e0 01 ............. putObjName <args> <public> 
    0009: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0013: [1] 57 ......................... loadThis 
    0014: [2] b3 e8 fa 01 e0 01 .......... putObjName <options> <public> 
    0020: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0024: [1] 57 ......................... loadThis 
    0025: [2] b3 c8 fb 01 d6 fb 01 ....... putObjName <ranges> <[ejs::CmdArgs,private]> 
    0032: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0036: [1] 57 ......................... loadThis 
    0037: [2] b3 d6 fc 01 d6 fb 01 ....... putObjName <aliases> <[ejs::CmdArgs,private]> 
    0044: [0] 41 02 02 11 ................ initDefaultArgs8 <2> <4> <19> 
    0048: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0050: [1] 7b b8 0d e0 01 ............. getObjName <args> <public> 
    0055: [1] 45 ......................... load1 
    0056: [2] 1e f4 77 00 02 ............. callObjName <slice> <> <argc: 1> 
    0061: [0] 93 ......................... pushResult 
    0062: [1] 95 ......................... putLocalSlot1 
    0063: [0] 33 02 e0 20 e4 9e 02 ....... debug 

    # ejs.es:2096                           parseTemplate(template)

    0070: [0] 5b ......................... getLocalSlot0 
    0071: [1] 1f d6 86 02 d6 fb 01 02 .... callScopedName <parseTemplate> <[ejs::CmdArgs,private]> <argc: 1> 
    0079: [0] 33 02 e2 20 ac 9f 02 ....... debug 

    # ejs.es:2097                           for (i = 0; i < argv.length; i++) {

    0086: [0] 44 ......................... load0 
    0087: [1] b4 fa 56 d8 31 ............. putScopedName <i> <> 
    0092: [0] 79 fa 56 d8 31 ............. getScopedName <i> <> 
    0097: [1] 5c ......................... getLocalSlot1 
    0098: [2] 7b aa 31 6c ................ getObjName <length> <ejs> 
    0102: [2] 2b ......................... compareLt 
    0103: [1] 07 f6 06 f7 f7 ............. branchFalse <addr: 551> 
    0108: [0] 33 02 e4 20 94 a0 02 ....... debug 

    # ejs.es:2098                               let arg = argv[i]

    0115: [0] 5c ......................... getLocalSlot1 
    0116: [1] 56 d8 31 ................... loadString <> 
    0119: [2] 79 fa 56 d8 31 ............. getScopedName <i> <> 
    0124: [3] 7c ......................... getObjNameExpr 
    0125: [1] 96 ......................... putLocalSlot2 
    0126: [0] 33 02 e6 20 d8 a0 02 ....... debug 

    # ejs.es:2099                               if (arg.startsWith("-")) {

    0133: [0] 5d ......................... getLocalSlot2 
    0134: [1] 56 ae a1 02 ................ loadString <-> 
    0138: [2] 1e b2 a1 02 00 02 .......... callObjName <startsWith> <> <argc: 1> 
    0144: [0] 93 ......................... pushResult 
    0145: [1] 07 b8 05 f7 f7 ............. branchFalse <addr: 498> 
    0150: [0] 33 02 e8 20 c8 a1 02 ....... debug 

    # ejs.es:2100                                   let key = arg.slice(arg.startsWith("--") ? 2 : 1)

    0157: [0] 5d ......................... getLocalSlot2 
    0158: [1] 5d ......................... getLocalSlot2 
    0159: [2] 56 d4 a2 02 ................ loadString <--> 
    0163: [3] 1e b2 a1 02 00 02 .......... callObjName <startsWith> <> <argc: 1> 
    0169: [1] 93 ......................... pushResult 
    0170: [2] 13 03 ...................... branchFalse8 <addr: 175> 
    0172: [1] 46 ......................... load2 
    0173: [2] 3e 01 ...................... goto8 <addr: 176> 
    0175: [2] 45 ......................... load1 
    0176: [3] 1e f4 77 00 02 ............. callObjName <slice> <> <argc: 1> 
    0181: [1] 93 ......................... pushResult 
    0182: [2] 97 ......................... putLocalSlot3 
    0183: [1] 33 02 ea 20 da a2 02 ....... debug 

    # ejs.es:2101                                   if (aliases[key]) {

    0190: [1] 57 ......................... loadThis 
    0191: [2] 7b d6 fc 01 d6 fb 01 ....... getObjName <aliases> <[ejs::CmdArgs,private]> 
    0198: [2] 56 d8 31 ................... loadString <> 
    0201: [3] 5e ......................... getLocalSlot3 
    0202: [4] 7c ......................... getObjNameExpr 
    0203: [2] 13 17 ...................... branchFalse8 <addr: 228> 
    0205: [1] 33 02 ec 20 aa a3 02 ....... debug 

    # ejs.es:2102                                       key = aliases[key]

    0212: [1] 57 ......................... loadThis 
    0213: [2] 7b d6 fc 01 d6 fb 01 ....... getObjName <aliases> <[ejs::CmdArgs,private]> 
    0220: [2] 56 d8 31 ................... loadString <> 
    0223: [3] 5e ......................... getLocalSlot3 
    0224: [4] 7c ......................... getObjNameExpr 
    0225: [2] 97 ......................... putLocalSlot3 
    0226: [1] 3e 00 ...................... goto8 <addr: 228> 
    0228: [1] 33 02 f0 20 80 a4 02 ....... debug 

    # ejs.es:2104                                   if (key.contains('=')) {

    0235: [1] 5e ......................... getLocalSlot3 
    0236: [2] 56 da a4 02 ................ loadString <=> 
    0240: [3] 1e 9e 55 00 02 ............. callObjName <contains> <> <argc: 1> 
    0245: [1] 93 ......................... pushResult 
    0246: [2] 13 48 ...................... branchFalse8 <addr: 320> 
    0248: [1] 33 02 f2 20 ea a4 02 ....... debug 

    # ejs.es:2105                                       let parts = key.split('=')

    0255: [1] 5e ......................... getLocalSlot3 
    0256: [2] 56 da a4 02 ................ loadString <=> 
    0260: [3] 1e ea 49 00 02 ............. callObjName <split> <> <argc: 1> 
    0265: [1] 93 ......................... pushResult 
    0266: [2] 98 ......................... putLocalSlot4 
    0267: [1] 33 02 f4 20 d0 a5 02 ....... debug 

    # ejs.es:2106                                       key = parts[0]

    0274: [1] 5f ......................... getLocalSlot4 
    0275: [2] 56 d8 31 ................... loadString <> 
    0278: [3] 44 ......................... load0 
    0279: [4] 7c ......................... getObjNameExpr 
    0280: [2] 97 ......................... putLocalSlot3 
    0281: [1] 33 02 f6 20 9e a6 02 ....... debug 

    # ejs.es:2107                                       options[key] = parts[1]

    0288: [1] 5f ......................... getLocalSlot4 
    0289: [2] 56 d8 31 ................... loadString <> 
    0292: [3] 45 ......................... load1 
    0293: [4] 7c ......................... getObjNameExpr 
    0294: [2] 57 ......................... loadThis 
    0295: [3] 7b e8 fa 01 e0 01 .......... getObjName <options> <public> 
    0301: [3] 56 d8 31 ................... loadString <> 
    0304: [4] 5e ......................... getLocalSlot3 
    0305: [5] b2 ......................... putObjNameExpr 
    0306: [1] 33 02 f8 20 fe a6 02 ....... debug 

    # ejs.es:2108                                       continue

    0313: [1] 3d 9e 03 f7 f7 ............. goto <addr: 525> 
    0318: [1] 3e 00 ...................... goto8 <addr: 320> 
    0320: [1] 33 02 fc 20 c0 a7 02 ....... debug 

    # ejs.es:2110                                   if (ranges[key] === undefined) {

    0327: [1] 57 ......................... loadThis 
    0328: [2] 7b c8 fb 01 d6 fb 01 ....... getObjName <ranges> <[ejs::CmdArgs,private]> 
    0335: [2] 56 d8 31 ................... loadString <> 
    0338: [3] 5e ......................... getLocalSlot3 
    0339: [4] 7c ......................... getObjNameExpr 
    0340: [2] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0343: [3] 26 ......................... compareStrictlyEq 
    0344: [2] 13 10 ...................... branchFalse8 <addr: 362> 
    0346: [1] 33 02 fe 20 aa a8 02 ....... debug 

    # ejs.es:2111                                       throw "Undefined option " + key

    0353: [1] 56 9a a9 02 ................ loadString <Undefined option > 
    0357: [2] 5e ......................... getLocalSlot3 
    0358: [3] 00 ......................... add 
    0359: [2] c6 ......................... throw 
    0360: [2] 3e 00 ...................... goto8 <addr: 362> 
    0362: [2] 33 02 82 21 be a9 02 ....... debug 

    # ejs.es:2113                                   if (!ranges[key]) {

    0369: [2] 57 ......................... loadThis 
    0370: [3] 7b c8 fb 01 d6 fb 01 ....... getObjName <ranges> <[ejs::CmdArgs,private]> 
    0377: [3] 56 d8 31 ................... loadString <> 
    0380: [4] 5e ......................... getLocalSlot3 
    0381: [5] 7c ......................... getObjNameExpr 
    0382: [3] 86 ......................... logicalNot 
    0383: [3] 13 18 ...................... branchFalse8 <addr: 409> 
    0385: [2] 33 02 86 21 8e aa 02 ....... debug 

    # ejs.es:2115                                       options[key] = true

    0392: [2] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0395: [3] 57 ......................... loadThis 
    0396: [4] 7b e8 fa 01 e0 01 .......... getObjName <options> <public> 
    0402: [4] 56 d8 31 ................... loadString <> 
    0405: [5] 5e ......................... getLocalSlot3 
    0406: [6] b2 ......................... putObjNameExpr 
    0407: [2] 3e 57 ...................... goto8 <addr: 496> 
    0409: [2] 33 02 88 21 90 90 02 ....... debug 

    # ejs.es:2116                                   } else {

    0416: [2] 33 02 8a 21 e6 aa 02 ....... debug 

    # ejs.es:2117                                       if (++i >= argv.length) {

    0423: [2] 79 fa 56 d8 31 ............. getScopedName <i> <> 
    0428: [3] 3f 01 ...................... inc <1> 
    0430: [3] 39 ......................... dup 
    0431: [4] b4 fa 56 d8 31 ............. putScopedName <i> <> 
    0436: [3] 5c ......................... getLocalSlot1 
    0437: [4] 7b aa 31 6c ................ getObjName <length> <ejs> 
    0441: [4] 28 ......................... compareGe 
    0442: [3] 13 10 ...................... branchFalse8 <addr: 460> 
    0444: [2] 33 02 8c 21 ca ab 02 ....... debug 

    # ejs.es:2118                                           throw "Missing option for " + key

    0451: [2] 56 c6 ac 02 ................ loadString <Missing option for > 
    0455: [3] 5e ......................... getLocalSlot3 
    0456: [4] 00 ......................... add 
    0457: [3] c6 ......................... throw 
    0458: [3] 3e 00 ...................... goto8 <addr: 460> 
    0460: [3] 33 02 8e 21 ee ac 02 ....... debug 

    # ejs.es:2119                                       }

    0467: [3] 33 02 90 21 a2 ad 02 ....... debug 

    # ejs.es:2120                                       options[key] = argv[i]

    0474: [3] 5c ......................... getLocalSlot1 
    0475: [4] 56 d8 31 ................... loadString <> 
    0478: [5] 79 fa 56 d8 31 ............. getScopedName <i> <> 
    0483: [6] 7c ......................... getObjNameExpr 
    0484: [4] 57 ......................... loadThis 
    0485: [5] 7b e8 fa 01 e0 01 .......... getObjName <options> <public> 
    0491: [5] 56 d8 31 ................... loadString <> 
    0494: [6] 5e ......................... getLocalSlot3 
    0495: [7] b2 ......................... putObjNameExpr 
    0496: [3] 3e 1b ...................... goto8 <addr: 525> 
    0498: [3] 33 02 94 21 f4 84 02 ....... debug 

    # ejs.es:2122                               } else {

    0505: [3] 33 02 96 21 80 ae 02 ....... debug 

    # ejs.es:2123                                   args.append(arg)

    0512: [3] 57 ......................... loadThis 
    0513: [4] 7b b8 0d e0 01 ............. getObjName <args> <public> 
    0518: [4] 5d ......................... getLocalSlot2 
    0519: [5] 1e 88 4f e0 01 02 .......... callObjName <append> <public> <argc: 1> 
    0525: [3] 33 02 e2 20 ac 9f 02 ....... debug 

    # ejs.es:2097                           for (i = 0; i < argv.length; i++) {

    0532: [3] 79 fa 56 d8 31 ............. getScopedName <i> <> 
    0537: [4] 39 ......................... dup 
    0538: [5] 3f 01 ...................... inc <1> 
    0540: [5] b4 fa 56 d8 31 ............. putScopedName <i> <> 
    0545: [4] 90 ......................... pop 
    0546: [3] 3d 97 07 f7 f7 ............. goto <addr: 92> 
    0551: [3] 33 02 9a 21 bc 15 .......... debug 

    # ejs.es:2125                           }

    0557: [3] 33 02 9c 21 ca ae 02 ....... debug 

    # ejs.es:2126                           validate()

    0564: [3] 1f b6 9d 02 d6 fb 01 00 .... callScopedName <validate> <[ejs::CmdArgs,private]> <argc: 0> 
    0572: [3] be ......................... return 
    0573: [0] 33 02 9e 21 b4 16 .......... debug 

    # ejs.es:2127                       }
    
VARIABLE:   [template-00]  private var template : Object
VARIABLE:   [argv-01]  private var argv : Array
VARIABLE:   [arg-02]  -hoisted-2 var arg
VARIABLE:   [key-03]  -hoisted-3 var key
VARIABLE:   [parts-04]  -hoisted-4 var parts

FUNCTION:   [CmdArgs-27]  [ejs::CmdArgs,private] const function parseTemplate(template: Object) : void

     ARG:   [arg-00]   private template : Object
   LOCAL:   [local-01] var item
   LOCAL:   [local-02] var key
   LOCAL:   [local-03] var range
   LOCAL:   [local-04] var defaultValue
   LOCAL:   [local-05] var k

    0000: [0] 33 02 a8 1f e8 fd 01 ....... debug 

    # ejs.es:2004                           for each (item in template) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 39 ......................... dup 
    0016: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0019: [1] 93 ......................... pushResult 
    0020: [2] 95 ......................... putLocalSlot1 
    0021: [1] 33 02 aa 1f ce fe 01 ....... debug 

    # ejs.es:2005                               let key = item[0]

    0028: [1] 5c ......................... getLocalSlot1 
    0029: [2] 56 d8 31 ................... loadString <> 
    0032: [3] 44 ......................... load0 
    0033: [4] 7c ......................... getObjNameExpr 
    0034: [2] 96 ......................... putLocalSlot2 
    0035: [1] 33 02 ac 1f 92 ff 01 ....... debug 

    # ejs.es:2006                               let range = item[1] || null

    0042: [1] 5c ......................... getLocalSlot1 
    0043: [2] 56 d8 31 ................... loadString <> 
    0046: [3] 45 ......................... load1 
    0047: [4] 7c ......................... getObjNameExpr 
    0048: [2] 39 ......................... dup 
    0049: [3] 14 03 ...................... branchTrue8 <addr: 54> 
    0051: [2] 90 ......................... pop 
    0052: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0054: [2] 97 ......................... putLocalSlot3 
    0055: [1] 33 02 ae 1f f6 ff 01 ....... debug 

    # ejs.es:2007                               let defaultValue = item[2]

    0062: [1] 5c ......................... getLocalSlot1 
    0063: [2] 56 d8 31 ................... loadString <> 
    0066: [3] 46 ......................... load2 
    0067: [4] 7c ......................... getObjNameExpr 
    0068: [2] 98 ......................... putLocalSlot4 
    0069: [1] 33 02 b0 1f e6 80 02 ....... debug 

    # ejs.es:2008                               if (key is Array) {

    0076: [1] 5d ......................... getLocalSlot2 
    0077: [2] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0079: [3] 43 ......................... isA 
    0080: [2] 13 70 ...................... branchFalse8 <addr: 194> 
    0082: [1] 33 02 b2 1f ae 81 02 ....... debug 

    # ejs.es:2009                                   for each (k in key) {

    0089: [1] 5d ......................... getLocalSlot2 
    0090: [2] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0096: [1] 93 ......................... pushResult 
    0097: [2] 39 ......................... dup 
    0098: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0101: [2] 93 ......................... pushResult 
    0102: [3] 99 ......................... putLocalSlot5 
    0103: [2] 33 02 b4 1f 86 82 02 ....... debug 

    # ejs.es:2010                                       ranges[k] = range

    0110: [2] 5e ......................... getLocalSlot3 
    0111: [3] 57 ......................... loadThis 
    0112: [4] 7b c8 fb 01 d6 fb 01 ....... getObjName <ranges> <[ejs::CmdArgs,private]> 
    0119: [4] 56 d8 31 ................... loadString <> 
    0122: [5] 60 ......................... getLocalSlot5 
    0123: [6] b2 ......................... putObjNameExpr 
    0124: [2] 33 02 b6 1f da 82 02 ....... debug 

    # ejs.es:2011                                       options[k] = defaultValue

    0131: [2] 5f ......................... getLocalSlot4 
    0132: [3] 57 ......................... loadThis 
    0133: [4] 7b e8 fa 01 e0 01 .......... getObjName <options> <public> 
    0139: [4] 56 d8 31 ................... loadString <> 
    0142: [5] 60 ......................... getLocalSlot5 
    0143: [6] b2 ......................... putObjNameExpr 
    0144: [2] 33 02 b8 1f be 83 02 ....... debug 

    # ejs.es:2012                                       if (k != key[0]) {

    0151: [2] 60 ......................... getLocalSlot5 
    0152: [3] 5d ......................... getLocalSlot2 
    0153: [4] 56 d8 31 ................... loadString <> 
    0156: [5] 44 ......................... load0 
    0157: [6] 7c ......................... getObjNameExpr 
    0158: [4] 2c ......................... compareNe 
    0159: [3] 13 1c ...................... branchFalse8 <addr: 189> 
    0161: [2] 33 02 ba 1f 94 84 02 ....... debug 

    # ejs.es:2013                                           aliases[k] = key[0]

    0168: [2] 5d ......................... getLocalSlot2 
    0169: [3] 56 d8 31 ................... loadString <> 
    0172: [4] 44 ......................... load0 
    0173: [5] 7c ......................... getObjNameExpr 
    0174: [3] 57 ......................... loadThis 
    0175: [4] 7b d6 fc 01 d6 fb 01 ....... getObjName <aliases> <[ejs::CmdArgs,private]> 
    0182: [4] 56 d8 31 ................... loadString <> 
    0185: [5] 60 ......................... getLocalSlot5 
    0186: [6] b2 ......................... putObjNameExpr 
    0187: [2] 3e 00 ...................... goto8 <addr: 189> 
    0189: [2] 3e a2 ...................... goto8 <addr: 97> 
    0191: [2] 90 ......................... pop 
    0192: [1] 3e 30 ...................... goto8 <addr: 242> 
    0194: [1] 33 02 c0 1f f4 84 02 ....... debug 

    # ejs.es:2016                               } else {

    0201: [1] 33 02 c2 1f a6 85 02 ....... debug 

    # ejs.es:2017                                   ranges[key] = range

    0208: [1] 5e ......................... getLocalSlot3 
    0209: [2] 57 ......................... loadThis 
    0210: [3] 7b c8 fb 01 d6 fb 01 ....... getObjName <ranges> <[ejs::CmdArgs,private]> 
    0217: [3] 56 d8 31 ................... loadString <> 
    0220: [4] 5d ......................... getLocalSlot2 
    0221: [5] b2 ......................... putObjNameExpr 
    0222: [1] 33 02 c4 1f f6 85 02 ....... debug 

    # ejs.es:2018                                   options[key] = defaultValue

    0229: [1] 5f ......................... getLocalSlot4 
    0230: [2] 57 ......................... loadThis 
    0231: [3] 7b e8 fa 01 e0 01 .......... getObjName <options> <public> 
    0237: [3] 56 d8 31 ................... loadString <> 
    0240: [4] 5d ......................... getLocalSlot2 
    0241: [5] b2 ......................... putObjNameExpr 
    0242: [1] 3d d1 03 f7 f7 ............. goto <addr: 15> 
    0247: [1] 90 ......................... pop 
    0248: [0] 54 ......................... loadNull 
    0249: [1] bf ......................... returnValue 
    0250: [0] 33 02 ca 1f b4 16 .......... debug 

    # ejs.es:2021                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     98     101        191          191       
1   iteration     16      19        247          247       

VARIABLE:   [template-00]  private var template : Object
VARIABLE:   [item-01]  -hoisted-1 var item
VARIABLE:   [key-02]  -hoisted-1 var key
VARIABLE:   [range-03]  -hoisted-1 var range
VARIABLE:   [defaultValue-04]  -hoisted-1 var defaultValue
VARIABLE:   [k-05]  -hoisted-5 var k

FUNCTION:   [CmdArgs-28]  [ejs::CmdArgs,private] const function validate() : void

   LOCAL:   [local-00] var key
   LOCAL:   [local-01] var range
   LOCAL:   [local-02] var value
   LOCAL:   [local-03] var ok
   LOCAL:   [local-04] var v

    0000: [0] 33 02 d6 1f dc 87 02 ....... debug 

    # ejs.es:2027                           for (key in options) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b e8 fa 01 e0 01 .......... getObjName <options> <public> 
    0014: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] 39 ......................... dup 
    0022: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0025: [1] 93 ......................... pushResult 
    0026: [2] 94 ......................... putLocalSlot0 
    0027: [1] 33 02 d8 1f b8 88 02 ....... debug 

    # ejs.es:2028                               let range = ranges[key]

    0034: [1] 57 ......................... loadThis 
    0035: [2] 7b c8 fb 01 d6 fb 01 ....... getObjName <ranges> <[ejs::CmdArgs,private]> 
    0042: [2] 56 d8 31 ................... loadString <> 
    0045: [3] 5b ......................... getLocalSlot0 
    0046: [4] 7c ......................... getObjNameExpr 
    0047: [2] 95 ......................... putLocalSlot1 
    0048: [1] 33 02 da 1f 88 89 02 ....... debug 

    # ejs.es:2029                               let value = options[key]

    0055: [1] 57 ......................... loadThis 
    0056: [2] 7b e8 fa 01 e0 01 .......... getObjName <options> <public> 
    0062: [2] 56 d8 31 ................... loadString <> 
    0065: [3] 5b ......................... getLocalSlot0 
    0066: [4] 7c ......................... getObjNameExpr 
    0067: [2] 96 ......................... putLocalSlot2 
    0068: [1] 33 02 dc 1f da 89 02 ....... debug 

    # ejs.es:2030                               if (!range) {

    0075: [1] 5c ......................... getLocalSlot1 
    0076: [2] 86 ......................... logicalNot 
    0077: [2] 13 0e ...................... branchFalse8 <addr: 93> 
    0079: [1] 33 02 de 1f 96 8a 02 ....... debug 

    # ejs.es:2031                                   continue

    0086: [1] 3d 8d 01 f7 f7 ............. goto <addr: 21> 
    0091: [1] 3e 00 ...................... goto8 <addr: 93> 
    0093: [1] 33 02 e2 1f d0 8a 02 ....... debug 

    # ejs.es:2033                               if (range === Number) {

    0100: [1] 5c ......................... getLocalSlot1 
    0101: [2] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0104: [3] 26 ......................... compareStrictlyEq 
    0105: [2] 13 34 ...................... branchFalse8 <addr: 159> 
    0107: [1] 33 02 e4 1f a0 8b 02 ....... debug 

    # ejs.es:2034                                   if (! value.match(/^\d+$/)) {

    0114: [1] 5d ......................... getLocalSlot2 
    0115: [2] 55 84 8c 02 ................ loadRegexp </^\d+$/> 
    0119: [3] 1e da 44 00 02 ............. callObjName <match> <> <argc: 1> 
    0124: [1] 93 ......................... pushResult 
    0125: [2] 86 ......................... logicalNot 
    0126: [2] 13 1a ...................... branchFalse8 <addr: 154> 
    0128: [1] 33 02 e6 1f 94 8c 02 ....... debug 

    # ejs.es:2035                                      throw new ArgError("Option \"" + key + "\" must be a number")

    0135: [1] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0137: [2] 89 ......................... new 
    0138: [2] 56 be 8d 02 ................ loadString <Option "> 
    0142: [3] 5b ......................... getLocalSlot0 
    0143: [4] 00 ......................... add 
    0144: [3] 56 d0 8d 02 ................ loadString <" must be a number> 
    0148: [4] 00 ......................... add 
    0149: [3] 20 02 ...................... callConstructor <argc: 1> 
    0151: [2] c6 ......................... throw 
    0152: [2] 3e 00 ...................... goto8 <addr: 154> 
    0154: [2] 3d 94 06 f7 f7 ............. goto <addr: 553> 
    0159: [2] 33 02 ea 1f f6 8d 02 ....... debug 

    # ejs.es:2037                               } else if (range === Boolean) {

    0166: [2] 5c ......................... getLocalSlot1 
    0167: [3] 7e 10 ...................... getGlobalSlot <slot: 8> 
    0169: [4] 26 ......................... compareStrictlyEq 
    0170: [3] 13 6d ...................... branchFalse8 <addr: 281> 
    0172: [2] 33 02 ec 1f d6 8e 02 ....... debug 

    # ejs.es:2038                                   if (value is Boolean) {

    0179: [2] 5d ......................... getLocalSlot2 
    0180: [3] 7e 10 ...................... getGlobalSlot <slot: 8> 
    0182: [4] 43 ......................... isA 
    0183: [3] 13 11 ...................... branchFalse8 <addr: 202> 
    0185: [2] 33 02 ee 1f ae 8f 02 ....... debug 

    # ejs.es:2039                                       value = value.toString()

    0192: [2] 5d ......................... getLocalSlot2 
    0193: [3] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0198: [2] 93 ......................... pushResult 
    0199: [3] 96 ......................... putLocalSlot2 
    0200: [2] 3e 17 ...................... goto8 <addr: 225> 
    0202: [2] 33 02 f0 1f 90 90 02 ....... debug 

    # ejs.es:2040                                   } else {

    0209: [2] 33 02 f2 1f ca 90 02 ....... debug 

    # ejs.es:2041                                       value = value.toLower()

    0216: [2] 5d ......................... getLocalSlot2 
    0217: [3] 1e aa 91 02 00 00 .......... callObjName <toLower> <> <argc: 0> 
    0223: [2] 93 ......................... pushResult 
    0224: [3] 96 ......................... putLocalSlot2 
    0225: [2] 33 02 f6 1f ba 91 02 ....... debug 

    # ejs.es:2043                                   if (value != "true" && value != "false") {

    0232: [2] 5d ......................... getLocalSlot2 
    0233: [3] 56 b8 92 02 ................ loadString <true> 
    0237: [4] 2c ......................... compareNe 
    0238: [3] 39 ......................... dup 
    0239: [4] 13 07 ...................... branchFalse8 <addr: 248> 
    0241: [3] 90 ......................... pop 
    0242: [2] 5d ......................... getLocalSlot2 
    0243: [3] 56 c2 92 02 ................ loadString <false> 
    0247: [4] 2c ......................... compareNe 
    0248: [3] 13 1a ...................... branchFalse8 <addr: 276> 
    0250: [2] 33 02 f8 1f ce 92 02 ....... debug 

    # ejs.es:2044                                      throw new ArgError("Option \"" + key + "\" must be true or false")

    0257: [2] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0259: [3] 89 ......................... new 
    0260: [3] 56 be 8d 02 ................ loadString <Option "> 
    0264: [4] 5b ......................... getLocalSlot0 
    0265: [5] 00 ......................... add 
    0266: [4] 56 82 94 02 ................ loadString <" must be true or false> 
    0270: [5] 00 ......................... add 
    0271: [4] 20 02 ...................... callConstructor <argc: 1> 
    0273: [3] c6 ......................... throw 
    0274: [3] 3e 00 ...................... goto8 <addr: 276> 
    0276: [3] 3d a0 04 f7 f7 ............. goto <addr: 553> 
    0281: [3] 33 02 fc 1f b2 94 02 ....... debug 

    # ejs.es:2046                               } else if (range === String) {

    0288: [3] 5c ......................... getLocalSlot1 
    0289: [4] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0292: [5] 26 ......................... compareStrictlyEq 
    0293: [4] 13 05 ...................... branchFalse8 <addr: 300> 
    0295: [3] 3d fa 03 f7 f7 ............. goto <addr: 553> 
    0300: [3] 33 02 80 20 90 95 02 ....... debug 

    # ejs.es:2048                               } else if (range is RegExp) {

    0307: [3] 5c ......................... getLocalSlot1 
    0308: [4] 7e e2 01 ................... getGlobalSlot <slot: 113> 
    0311: [5] 43 ......................... isA 
    0312: [4] 13 38 ...................... branchFalse8 <addr: 370> 
    0314: [3] 33 02 82 20 ec 95 02 ....... debug 

    # ejs.es:2049                                   if (!value.match(range)) {

    0321: [3] 5d ......................... getLocalSlot2 
    0322: [4] 5c ......................... getLocalSlot1 
    0323: [5] 1e da 44 00 02 ............. callObjName <match> <> <argc: 1> 
    0328: [3] 93 ......................... pushResult 
    0329: [4] 86 ......................... logicalNot 
    0330: [4] 13 21 ...................... branchFalse8 <addr: 365> 
    0332: [3] 33 02 84 20 ca 96 02 ....... debug 

    # ejs.es:2050                                       throw new ArgError("Option \"" + key + "\" has bad value: \"" + value + "\"")

    0339: [3] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0341: [4] 89 ......................... new 
    0342: [4] 56 be 8d 02 ................ loadString <Option "> 
    0346: [5] 5b ......................... getLocalSlot0 
    0347: [6] 00 ......................... add 
    0348: [5] 56 96 98 02 ................ loadString <" has bad value: "> 
    0352: [6] 00 ......................... add 
    0353: [5] 5d ......................... getLocalSlot2 
    0354: [6] 00 ......................... add 
    0355: [5] 56 80 f4 01 ................ loadString <"> 
    0359: [6] 00 ......................... add 
    0360: [5] 20 02 ...................... callConstructor <argc: 1> 
    0362: [4] c6 ......................... throw 
    0363: [4] 3e 00 ...................... goto8 <addr: 365> 
    0365: [4] 3d ee 02 f7 f7 ............. goto <addr: 553> 
    0370: [4] 33 02 88 20 bc 98 02 ....... debug 

    # ejs.es:2052                               } else if (range is Array) {

    0377: [4] 5c ......................... getLocalSlot1 
    0378: [5] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0380: [6] 43 ......................... isA 
    0381: [5] 13 76 ...................... branchFalse8 <addr: 501> 
    0383: [4] 33 02 8a 20 9c 99 02 ....... debug 

    # ejs.es:2053                                   let ok = false

    0390: [4] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0392: [5] 97 ......................... putLocalSlot3 
    0393: [4] 33 02 8c 20 e2 99 02 ....... debug 

    # ejs.es:2054                                   for each (v in range) {

    0400: [4] 5c ......................... getLocalSlot1 
    0401: [5] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0407: [4] 93 ......................... pushResult 
    0408: [5] 39 ......................... dup 
    0409: [6] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0412: [5] 93 ......................... pushResult 
    0413: [6] 98 ......................... putLocalSlot4 
    0414: [5] 33 02 8e 20 be 9a 02 ....... debug 

    # ejs.es:2055                                       if (value == v) {

    0421: [5] 5d ......................... getLocalSlot2 
    0422: [6] 5f ......................... getLocalSlot4 
    0423: [7] 25 ......................... compareEq 
    0424: [6] 13 1a ...................... branchFalse8 <addr: 452> 
    0426: [5] 33 02 90 20 92 9b 02 ....... debug 

    # ejs.es:2056                                           ok = true

    0433: [5] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0436: [6] 97 ......................... putLocalSlot3 
    0437: [5] 33 02 92 20 de 9b 02 ....... debug 

    # ejs.es:2057                                           break

    0444: [5] 90 ......................... pop 
    0445: [4] 3d 0a f7 f7 f7 ............. goto <addr: 455> 
    0450: [4] 3e 00 ...................... goto8 <addr: 452> 
    0452: [4] 3e d2 ...................... goto8 <addr: 408> 
    0454: [4] 90 ......................... pop 
    0455: [3] 33 02 98 20 a2 9c 02 ....... debug 

    # ejs.es:2060                                   if (! ok) {

    0462: [3] 5e ......................... getLocalSlot3 
    0463: [4] 86 ......................... logicalNot 
    0464: [4] 13 21 ...................... branchFalse8 <addr: 499> 
    0466: [3] 33 02 9a 20 ca 96 02 ....... debug 

    # ejs.es:2061                                       throw new ArgError("Option \"" + key + "\" has bad value: \"" + value + "\"")

    0473: [3] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0475: [4] 89 ......................... new 
    0476: [4] 56 be 8d 02 ................ loadString <Option "> 
    0480: [5] 5b ......................... getLocalSlot0 
    0481: [6] 00 ......................... add 
    0482: [5] 56 96 98 02 ................ loadString <" has bad value: "> 
    0486: [6] 00 ......................... add 
    0487: [5] 5d ......................... getLocalSlot2 
    0488: [6] 00 ......................... add 
    0489: [5] 56 80 f4 01 ................ loadString <"> 
    0493: [6] 00 ......................... add 
    0494: [5] 20 02 ...................... callConstructor <argc: 1> 
    0496: [4] c6 ......................... throw 
    0497: [4] 3e 00 ...................... goto8 <addr: 499> 
    0499: [4] 3e 34 ...................... goto8 <addr: 553> 
    0501: [4] 33 02 9e 20 f4 84 02 ....... debug 

    # ejs.es:2063                               } else {

    0508: [4] 33 02 a0 20 e2 9c 02 ....... debug 

    # ejs.es:2064                                   if (value != range) {

    0515: [4] 5d ......................... getLocalSlot2 
    0516: [5] 5c ......................... getLocalSlot1 
    0517: [6] 2c ......................... compareNe 
    0518: [5] 13 21 ...................... branchFalse8 <addr: 553> 
    0520: [4] 33 02 a2 20 ca 96 02 ....... debug 

    # ejs.es:2065                                       throw new ArgError("Option \"" + key + "\" has bad value: \"" + value + "\"")

    0527: [4] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0529: [5] 89 ......................... new 
    0530: [5] 56 be 8d 02 ................ loadString <Option "> 
    0534: [6] 5b ......................... getLocalSlot0 
    0535: [7] 00 ......................... add 
    0536: [6] 56 96 98 02 ................ loadString <" has bad value: "> 
    0540: [7] 00 ......................... add 
    0541: [6] 5d ......................... getLocalSlot2 
    0542: [7] 00 ......................... add 
    0543: [6] 56 80 f4 01 ................ loadString <"> 
    0547: [7] 00 ......................... add 
    0548: [6] 20 02 ...................... callConstructor <argc: 1> 
    0550: [5] c6 ......................... throw 
    0551: [5] 3e 00 ...................... goto8 <addr: 553> 
    0553: [5] 3d b3 08 f7 f7 ............. goto <addr: 21> 
    0558: [5] 90 ......................... pop 
    0559: [4] 54 ......................... loadNull 
    0560: [5] bf ......................... returnValue 
    0561: [0] 33 02 aa 20 b4 16 .......... debug 

    # ejs.es:2069                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    409     412        454          454       
1   iteration     22      25        558          558       

VARIABLE:   [key-00]  -hoisted-0 var key
VARIABLE:   [range-01]  -hoisted-0 var range
VARIABLE:   [value-02]  -hoisted-0 var value
VARIABLE:   [ok-03]  -hoisted-3 var ok
VARIABLE:   [v-04]  -hoisted-4 var v
VARIABLE:   [args-00]  public var args : Array
VARIABLE:   [options-01]  public var options : Object
VARIABLE:   [ranges-02]  [ejs::CmdArgs,private] var ranges : Object
VARIABLE:   [aliases-03]  [ejs::CmdArgs,private] var aliases : Object

FUNCTION:   [gc-12]  public function gc() : void


    0000: [0] 33 02 9a 22 a0 b0 02 ....... debug 

    # ejs.es:2189                       GC.run 

    0007: [0] 7e 54 ...................... getGlobalSlot <slot: 42> 
    0009: [1] 7b 92 f4 01 e0 01 .......... getObjName <run> <public> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [readFile-13]  public function readFile(path, encoding) : void

     ARG:   [arg-00]   private path
     ARG:   [arg-01]   private encoding

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 a2 22 d2 b1 02 ....... debug 

    # ejs.es:2193                       Path(path).readString()

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] 1e 94 38 e0 01 00 .......... callObjName <readString> <public> <argc: 0> 
    0026: [0] 93 ......................... pushResult 
    0027: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path
VARIABLE:   [encoding-01]  private var encoding

CLASS:      class Config extends Object
            #  Class Details: 35 class traits, 0 instance traits, requested slot 14
VARIABLE:   [Config-26]  public const static var Debug : Boolean
VARIABLE:   [Config-27]  public const static var CPU
VARIABLE:   [Config-28]  public const static var OS
VARIABLE:   [Config-29]  public const static var Product
VARIABLE:   [Config-30]  public const static var Title
VARIABLE:   [Config-31]  public const static var Version
VARIABLE:   [Config-32]  public const static var LibDir
VARIABLE:   [Config-33]  public const static var BinDir
VARIABLE:   [Config-34]  public const static var ModDir

CLASS:      final class Date extends Object
            #  Class Details: 87 class traits, 0 instance traits, requested slot 15

FUNCTION:   [Date-22]  public native const override function toJSON() : void


    

FUNCTION:   [Date-23]  public const override function toLocaleString() : void


    0000: [0] 33 02 9a 2e 9e 82 03 ....... debug 

    # ejs.es:2957                           format("%a, %d %b %Y %T GMT%z (%Z)")

    0007: [0] 56 80 83 03 ................ loadString <%a, %d %b %Y %T GMT%z (%Z)> 
    0011: [1] 1f e0 c0 02 e0 01 02 ....... callScopedName <format> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-24]  public native const override function toString() : void


    

FUNCTION:   [Date-25]  public const override function valueOf() : void


    0000: [0] 33 02 88 2f ce cd 02 ....... debug 

    # ejs.es:3012                           time

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b f0 cd 02 e0 01 .......... getObjName <time> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-26]  -constructor- native const function Date(args: Array) : void

     ARG:   [arg-00]   private args : Array

    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [Date-27]  public native const get function day() : void


    

FUNCTION:   [Date-27]  public native const set function day(day) : void

     ARG:   [arg-00]   private day

    
VARIABLE:   [day-00]  private var day

FUNCTION:   [Date-28]  public native const get function dayOfYear() : void


    

FUNCTION:   [Date-28]  public native const set function dayOfYear(day) : void

     ARG:   [arg-00]   private day

    
VARIABLE:   [day-00]  private var day

FUNCTION:   [Date-29]  public native const get function date() : void


    

FUNCTION:   [Date-29]  public native const set function date(date) : void

     ARG:   [arg-00]   private date

    
VARIABLE:   [date-00]  private var date

FUNCTION:   [Date-30]  public native const get function elapsed() : void


    

FUNCTION:   [Date-31]  public native const function format(layout) : void

     ARG:   [arg-00]   private layout

    
VARIABLE:   [layout-00]  private var layout

FUNCTION:   [Date-32]  public native const function formatUTC(layout) : void

     ARG:   [arg-00]   private layout

    
VARIABLE:   [layout-00]  private var layout

FUNCTION:   [Date-33]  public native const get function fullYear() : void


    

FUNCTION:   [Date-33]  public native const set function fullYear(year) : void

     ARG:   [arg-00]   private year

    
VARIABLE:   [year-00]  private var year

FUNCTION:   [Date-34]  public const function getDate() : void


    0000: [0] 33 02 86 28 bc c4 02 ....... debug 

    # ejs.es:2563                           date

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 90 be 02 e0 01 .......... getObjName <date> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-35]  public const function getDay() : void


    0000: [0] 33 02 94 28 b4 c5 02 ....... debug 

    # ejs.es:2570                           day

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b e2 ba 02 e0 01 .......... getObjName <day> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-36]  public const function getFullYear() : void


    0000: [0] 33 02 a2 28 b2 c6 02 ....... debug 

    # ejs.es:2577                           fullYear

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b e6 c2 02 e0 01 .......... getObjName <fullYear> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-37]  public const function getHours() : void


    0000: [0] 33 02 b0 28 be c7 02 ....... debug 

    # ejs.es:2584                           hours

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b e2 c7 02 e0 01 .......... getObjName <hours> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-38]  public const function getMilliseconds() : void


    0000: [0] 33 02 be 28 d8 c8 02 ....... debug 

    # ejs.es:2591                           milliseconds

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8a c9 02 e0 01 .......... getObjName <milliseconds> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-39]  public const function getMinutes() : void


    0000: [0] 33 02 cc 28 92 ca 02 ....... debug 

    # ejs.es:2598                           minutes

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b ba ca 02 e0 01 .......... getObjName <minutes> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-40]  public const function getMonth() : void


    0000: [0] 33 02 da 28 aa cb 02 ....... debug 

    # ejs.es:2605                           month

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b ce cb 02 e0 01 .......... getObjName <month> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-41]  public const function getSeconds() : void


    0000: [0] 33 02 e8 28 ba cc 02 ....... debug 

    # ejs.es:2612                           seconds

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b e2 cc 02 e0 01 .......... getObjName <seconds> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-42]  public const function getTime() : void


    0000: [0] 33 02 f6 28 ce cd 02 ....... debug 

    # ejs.es:2619                           time

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b f0 cd 02 e0 01 .......... getObjName <time> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-43]  public native const function getTimezoneOffset() : void


    

FUNCTION:   [Date-44]  public native const function getUTCDate() : void


    

FUNCTION:   [Date-45]  public native const function getUTCDay() : void


    

FUNCTION:   [Date-46]  public native const function getUTCFullYear() : void


    

FUNCTION:   [Date-47]  public native const function getUTCHours() : void


    

FUNCTION:   [Date-48]  public native const function getUTCMilliseconds() : void


    

FUNCTION:   [Date-49]  public native const function getUTCMinutes() : void


    

FUNCTION:   [Date-50]  public native const function getUTCMonth() : void


    

FUNCTION:   [Date-51]  public native const function getUTCSeconds() : void


    

FUNCTION:   [Date-52]  public native const get function hours() : void


    

FUNCTION:   [Date-52]  public native const set function hours(hour) : void

     ARG:   [arg-00]   private hour

    
VARIABLE:   [hour-00]  private var hour

FUNCTION:   [Date-53]  public native const get function milliseconds() : void


    

FUNCTION:   [Date-53]  public native const set function milliseconds(ms) : void

     ARG:   [arg-00]   private ms

    
VARIABLE:   [ms-00]  private var ms

FUNCTION:   [Date-54]  public native const get function minutes() : void


    

FUNCTION:   [Date-54]  public native const set function minutes(min) : void

     ARG:   [arg-00]   private min

    
VARIABLE:   [min-00]  private var min

FUNCTION:   [Date-55]  public native const get function month() : void


    

FUNCTION:   [Date-55]  public native const set function month(month) : void

     ARG:   [arg-00]   private month

    
VARIABLE:   [month-00]  private var month

FUNCTION:   [Date-56]  public const function nanoAge() : void


    0000: [0] 33 02 dc 2a 88 de 02 ....... debug 

    # ejs.es:2734                           elapsed * 1000

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b e0 bf 02 e0 01 .......... getObjName <elapsed> <public> 
    0014: [1] 51 d0 0f ................... loadInt <1000> 
    0017: [2] 87 ......................... mul 
    0018: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-57]  public native const function nextDay(inc) : Date

     ARG:   [arg-00]   private inc

    
VARIABLE:   [inc-00]  private var inc

FUNCTION:   [Date-58]  public native const static function now() : void


    

FUNCTION:   [Date-59]  public native const static function parseDate(dateString, defaultDate: Date) : Date

     ARG:   [arg-00]   private dateString
     ARG:   [arg-01]   private defaultDate : Date

    
VARIABLE:   [dateString-00]  private var dateString
VARIABLE:   [defaultDate-01]  private var defaultDate : Date

FUNCTION:   [Date-60]  public native const static function parseUTCDate(dateString, defaultDate: Date) : Date

     ARG:   [arg-00]   private dateString
     ARG:   [arg-01]   private defaultDate : Date

    
VARIABLE:   [dateString-00]  private var dateString
VARIABLE:   [defaultDate-01]  private var defaultDate : Date

FUNCTION:   [Date-61]  public native const static function parse(dateString) : void

     ARG:   [arg-00]   private dateString

    
VARIABLE:   [dateString-00]  private var dateString

FUNCTION:   [Date-62]  public native const get function seconds() : void


    

FUNCTION:   [Date-62]  public native const set function seconds(sec) : void

     ARG:   [arg-00]   private sec

    
VARIABLE:   [sec-00]  private var sec

FUNCTION:   [Date-63]  public const function setDate(d) : void

     ARG:   [arg-00]   private d

    0000: [0] 33 02 da 2b c6 e7 02 ....... debug 

    # ejs.es:2797                           date = d

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 57 ......................... loadThis 
    0010: [3] b3 90 be 02 e0 01 .......... putObjName <date> <public> 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [d-00]  private var d

FUNCTION:   [Date-64]  public const function setFullYear(y) : void

     ARG:   [arg-00]   private y

    0000: [0] 33 02 e8 2b e4 e8 02 ....... debug 

    # ejs.es:2804                           year = y

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] b3 ea c3 02 e0 01 .......... putObjName <year> <public> 
    0015: [0] 54 ......................... loadNull 
    0016: [1] bf ......................... returnValue 
    0017: [0] 33 02 ea 2b b4 16 .......... debug 

    # ejs.es:2805                       }
    
VARIABLE:   [y-00]  private var y

FUNCTION:   [Date-65]  public const function setHours(h) : void

     ARG:   [arg-00]   private h

    0000: [0] 33 02 f8 2b 80 ea 02 ....... debug 

    # ejs.es:2812                           hours = h

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 57 ......................... loadThis 
    0010: [3] b3 e2 c7 02 e0 01 .......... putObjName <hours> <public> 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [h-00]  private var h

FUNCTION:   [Date-66]  public const function setMilliseconds(ms) : void

     ARG:   [arg-00]   private ms

    0000: [0] 33 02 86 2c a8 eb 02 ....... debug 

    # ejs.es:2819                           milliseconds = ms

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 57 ......................... loadThis 
    0010: [3] b3 8a c9 02 e0 01 .......... putObjName <milliseconds> <public> 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [ms-00]  private var ms

FUNCTION:   [Date-67]  public const function setMinutes(min) : void

     ARG:   [arg-00]   private min

    0000: [0] 33 02 94 2c e2 ec 02 ....... debug 

    # ejs.es:2826                           minutes = min

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 57 ......................... loadThis 
    0010: [3] b3 ba ca 02 e0 01 .......... putObjName <minutes> <public> 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [min-00]  private var min

FUNCTION:   [Date-68]  public const function setMonth(mon) : void

     ARG:   [arg-00]   private mon

    0000: [0] 33 02 a2 2c 86 ee 02 ....... debug 

    # ejs.es:2833                           month = mon

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 57 ......................... loadThis 
    0010: [3] b3 ce cb 02 e0 01 .......... putObjName <month> <public> 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [mon-00]  private var mon

FUNCTION:   [Date-69]  public const function setSeconds(sec, msec) : void

     ARG:   [arg-00]   private sec
     ARG:   [arg-01]   private msec

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 b2 2c de ef 02 ....... debug 

    # ejs.es:2841                           seconds = sec

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 57 ......................... loadThis 
    0016: [2] b3 e2 cc 02 e0 01 .......... putObjName <seconds> <public> 
    0022: [0] 33 02 b4 2c 92 f0 02 ....... debug 

    # ejs.es:2842                           if (msec != null) {

    0029: [0] 5c ......................... getLocalSlot1 
    0030: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0032: [2] 2c ......................... compareNe 
    0033: [1] 13 11 ...................... branchFalse8 <addr: 52> 
    0035: [0] 33 02 b6 2c d2 f0 02 ....... debug 

    # ejs.es:2843                               milliseconds = msec

    0042: [0] 5c ......................... getLocalSlot1 
    0043: [1] 57 ......................... loadThis 
    0044: [2] b3 8a c9 02 e0 01 .......... putObjName <milliseconds> <public> 
    0050: [0] 3e 00 ...................... goto8 <addr: 52> 
    0052: [0] 54 ......................... loadNull 
    0053: [1] bf ......................... returnValue 
    0054: [0] 33 02 ba 2c b4 16 .......... debug 

    # ejs.es:2845                       }
    
VARIABLE:   [sec-00]  private var sec
VARIABLE:   [msec-01]  private var msec

FUNCTION:   [Date-70]  public const function setTime(value) : void

     ARG:   [arg-00]   private value

    0000: [0] 33 02 c8 2c 96 f2 02 ....... debug 

    # ejs.es:2852                           time = value

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 57 ......................... loadThis 
    0010: [3] b3 f0 cd 02 e0 01 .......... putObjName <time> <public> 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [value-00]  private var value

FUNCTION:   [Date-71]  public native const function setUTCDate(d) : void

     ARG:   [arg-00]   private d

    
VARIABLE:   [d-00]  private var d

FUNCTION:   [Date-72]  public native const function setUTCFullYear(y) : void

     ARG:   [arg-00]   private y

    
VARIABLE:   [y-00]  private var y

FUNCTION:   [Date-73]  public native const function setUTCHours(h) : void

     ARG:   [arg-00]   private h

    
VARIABLE:   [h-00]  private var h

FUNCTION:   [Date-74]  public native const function setUTCMilliseconds(ms) : void

     ARG:   [arg-00]   private ms

    
VARIABLE:   [ms-00]  private var ms

FUNCTION:   [Date-75]  public native const function setUTCMinutes(min) : void

     ARG:   [arg-00]   private min

    
VARIABLE:   [min-00]  private var min

FUNCTION:   [Date-76]  public native const function setUTCMonth(mon) : void

     ARG:   [arg-00]   private mon

    
VARIABLE:   [mon-00]  private var mon

FUNCTION:   [Date-77]  public native const function setUTCSeconds(sec, msec) : void

     ARG:   [arg-00]   private sec
     ARG:   [arg-01]   private msec

    
VARIABLE:   [sec-00]  private var sec
VARIABLE:   [msec-01]  private var msec

FUNCTION:   [Date-78]  public native const get function time() : void


    

FUNCTION:   [Date-78]  public native const set function time(value) : void

     ARG:   [arg-00]   private value

    
VARIABLE:   [value-00]  private var value

FUNCTION:   [Date-79]  public const function toDateString() : void


    0000: [0] 33 02 cc 2d ec fc 02 ....... debug 

    # ejs.es:2918                           format("%a %b %d %Y")

    0007: [0] 56 b0 fd 02 ................ loadString <%a %b %d %Y> 
    0011: [1] 1f e0 c0 02 e0 01 02 ....... callScopedName <format> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-80]  public native const function toISOString() : void


    

FUNCTION:   [Date-81]  public const function toLocaleDateString() : void


    0000: [0] 33 02 82 2e 9a 80 03 ....... debug 

    # ejs.es:2945                           format("%a, %d %b %Y GMT%z")

    0007: [0] 56 ec 80 03 ................ loadString <%a, %d %b %Y GMT%z> 
    0011: [1] 1f e0 c0 02 e0 01 02 ....... callScopedName <format> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-82]  public const function toLocaleTimeString() : void


    0000: [0] 33 02 b0 2e 94 84 03 ....... debug 

    # ejs.es:2968                           format("%X")

    0007: [0] 56 c6 84 03 ................ loadString <%X> 
    0011: [1] 1f e0 c0 02 e0 01 02 ....... callScopedName <format> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-83]  public const function toTimeString() : void


    0000: [0] 33 02 ce 2e c4 85 03 ....... debug 

    # ejs.es:2983                           format("%X GMT%z (%Z)")

    0007: [0] 56 8c 86 03 ................ loadString <%X GMT%z (%Z)> 
    0011: [1] 1f e0 c0 02 e0 01 02 ....... callScopedName <format> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-84]  public const function toUTCString() : void


    0000: [0] 33 02 de 2e 92 87 03 ....... debug 

    # ejs.es:2991                           formatUTC("%a, %d %b %Y %T GMT")

    0007: [0] 56 ec 87 03 ................ loadString <%a, %d %b %Y %T GMT> 
    0011: [1] 1f f2 c1 02 e0 01 02 ....... callScopedName <formatUTC> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Date-85]  public native const static function UTC(year, month, day, hours, minutes, seconds, milliseconds) : Date

     ARG:   [arg-00]   private year
     ARG:   [arg-01]   private month
     ARG:   [arg-02]   private day
     ARG:   [arg-03]   private hours
     ARG:   [arg-04]   private minutes
     ARG:   [arg-05]   private seconds
     ARG:   [arg-06]   private milliseconds

    
VARIABLE:   [year-00]  private var year
VARIABLE:   [month-01]  private var month
VARIABLE:   [day-02]  private var day
VARIABLE:   [hours-03]  private var hours
VARIABLE:   [minutes-04]  private var minutes
VARIABLE:   [seconds-05]  private var seconds
VARIABLE:   [milliseconds-06]  private var milliseconds

FUNCTION:   [Date-86]  public native const get function year() : void


    

FUNCTION:   [Date-86]  public native const set function year(year) : void

     ARG:   [arg-00]   private year

    
VARIABLE:   [year-00]  private var year

CLASS:      class Emitter extends Object
            #  Class Details: 35 class traits, 1 instance traits, requested slot 16

FUNCTION:   [Emitter-26]  -constructor- const function Emitter() : void


    0000: [0] 33 02 ea 31 b4 8e 03 ....... debug 

    # ejs.es:3189                           endpoints = new Object

    0007: [0] 7e d8 01 ................... getGlobalSlot <slot: 108> 
    0010: [1] 89 ......................... new 
    0011: [1] 39 ......................... dup 
    0012: [2] 57 ......................... loadThis 
    0013: [3] b3 bc 8d 03 d0 8d 03 ....... putObjName <endpoints> <[ejs::Emitter,private]> 
    0020: [1] bf ......................... returnValue 
    

FUNCTION:   [Emitter-27]  [ejs::Emitter,private] const function addOneListener(name, callback) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private callback
   LOCAL:   [local-02] var listeners : Array
   LOCAL:   [local-03] var e

    0000: [0] 33 02 f0 31 c2 90 03 ....... debug 

    # ejs.es:3192                           let listeners : Array? = endpoints[name]

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b bc 8d 03 d0 8d 03 ....... getObjName <endpoints> <[ejs::Emitter,private]> 
    0015: [1] 56 d8 31 ................... loadString <> 
    0018: [2] 5b ......................... getLocalSlot0 
    0019: [3] 7c ......................... getObjNameExpr 
    0020: [1] 96 ......................... putLocalSlot2 
    0021: [0] 33 02 f2 31 ac 91 03 ....... debug 

    # ejs.es:3193                           if (listeners) {

    0028: [0] 5d ......................... getLocalSlot2 
    0029: [1] 13 41 ...................... branchFalse8 <addr: 96> 
    0031: [0] 33 02 f4 31 e6 91 03 ....... debug 

    # ejs.es:3194                               for each (var e: Endpoint in listeners) {

    0038: [0] 5d ......................... getLocalSlot2 
    0039: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0045: [0] 93 ......................... pushResult 
    0046: [1] 39 ......................... dup 
    0047: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0050: [1] 93 ......................... pushResult 
    0051: [2] 97 ......................... putLocalSlot3 
    0052: [1] 33 02 f6 31 da 92 03 ....... debug 

    # ejs.es:3195                                   if (e.callback == callback && e.name == name) {

    0059: [1] 5e ......................... getLocalSlot3 
    0060: [2] 7b be 63 e0 01 ............. getObjName <callback> <public> 
    0065: [2] 5c ......................... getLocalSlot1 
    0066: [3] 25 ......................... compareEq 
    0067: [2] 39 ......................... dup 
    0068: [3] 13 09 ...................... branchFalse8 <addr: 79> 
    0070: [2] 90 ......................... pop 
    0071: [1] 5e ......................... getLocalSlot3 
    0072: [2] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0077: [2] 5b ......................... getLocalSlot0 
    0078: [3] 25 ......................... compareEq 
    0079: [2] 13 0a ...................... branchFalse8 <addr: 91> 
    0081: [1] 33 02 f8 31 e2 93 03 ....... debug 

    # ejs.es:3196                                       return

    0088: [1] be ......................... return 
    0089: [0] 3e 00 ...................... goto8 <addr: 91> 
    0091: [0] 3e d1 ...................... goto8 <addr: 46> 
    0093: [0] 90 ......................... pop 
    0094: [-1] 3e 21 ...................... goto8 <addr: 129> 
    0096: [-1] 33 02 fe 31 94 42 .......... debug 

    # ejs.es:3199                           } else {

    0102: [-1] 33 02 80 32 a0 94 03 ....... debug 

    # ejs.es:3200                               listeners = endpoints[name] = new Array

    0109: [-1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0111: [0] 89 ......................... new 
    0112: [0] 20 00 ...................... callConstructor <argc: 0> 
    0114: [0] 39 ......................... dup 
    0115: [1] 57 ......................... loadThis 
    0116: [2] 7b bc 8d 03 d0 8d 03 ....... getObjName <endpoints> <[ejs::Emitter,private]> 
    0123: [2] 56 d8 31 ................... loadString <> 
    0126: [3] 5b ......................... getLocalSlot0 
    0127: [4] b2 ......................... putObjNameExpr 
    0128: [0] 96 ......................... putLocalSlot2 
    0129: [-1] 33 02 84 32 90 95 03 ....... debug 

    # ejs.es:3202                           if (callback) {

    0136: [-1] 5c ......................... getLocalSlot1 
    0137: [0] 13 2b ...................... branchFalse8 <addr: 182> 
    0139: [-1] 33 02 88 32 c8 95 03 ....... debug 

    # ejs.es:3204                               listeners.append(new Endpoint(callback, name))

    0146: [-1] 5d ......................... getLocalSlot2 
    0147: [0] 7e 22 ...................... getGlobalSlot <slot: 17> 
    0149: [1] 89 ......................... new 
    0150: [1] 5c ......................... getLocalSlot1 
    0151: [2] 5b ......................... getLocalSlot0 
    0152: [3] 20 04 ...................... callConstructor <argc: 2> 
    0154: [1] 1e 88 4f e0 01 02 .......... callObjName <append> <public> <argc: 1> 
    0160: [-1] 33 02 8a 32 c6 96 03 ....... debug 

    # ejs.es:3205                               emit("addListener", name, callback)

    0167: [-1] 56 f6 8e 01 ................ loadString <addListener> 
    0171: [0] 5b ......................... getLocalSlot0 
    0172: [1] 5c ......................... getLocalSlot1 
    0173: [2] 1f ae 97 03 e0 01 06 ....... callScopedName <emit> <public> <argc: 3> 
    0180: [-1] 3e 00 ...................... goto8 <addr: 182> 
    0182: [-1] 54 ......................... loadNull 
    0183: [0] bf ......................... returnValue 
    0184: [0] 33 02 8e 32 b4 16 .......... debug 

    # ejs.es:3207                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     47      50         93           93       

VARIABLE:   [name-00]  private var name
VARIABLE:   [callback-01]  private var callback
VARIABLE:   [listeners-02]  private var listeners : Array
VARIABLE:   [e-03]  private var e

FUNCTION:   [Emitter-28]  public const function addListener(name: Object, callback) : void

     ARG:   [arg-00]   private name : Object
     ARG:   [arg-01]   private callback
   LOCAL:   [local-02] var n

    0000: [0] 33 02 a0 32 f6 98 03 ....... debug 

    # ejs.es:3216                           if (name is String) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0011: [2] 43 ......................... isA 
    0012: [1] 13 13 ...................... branchFalse8 <addr: 33> 
    0014: [0] 33 02 a2 32 ba 99 03 ....... debug 

    # ejs.es:3217                               addOneListener(name, callback)

    0021: [0] 5b ......................... getLocalSlot0 
    0022: [1] 5c ......................... getLocalSlot1 
    0023: [2] 1f b8 97 03 d0 8d 03 04 .... callScopedName <addOneListener> <[ejs::Emitter,private]> <argc: 2> 
    0031: [0] 3e 4f ...................... goto8 <addr: 112> 
    0033: [0] 33 02 a4 32 98 9a 03 ....... debug 

    # ejs.es:3218                           } else if (name is Array) {

    0040: [0] 5b ......................... getLocalSlot0 
    0041: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0043: [2] 43 ......................... isA 
    0044: [1] 13 2b ...................... branchFalse8 <addr: 89> 
    0046: [0] 33 02 a6 32 e8 9a 03 ....... debug 

    # ejs.es:3219                               for each (n in name) {

    0053: [0] 5b ......................... getLocalSlot0 
    0054: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0060: [0] 93 ......................... pushResult 
    0061: [1] 39 ......................... dup 
    0062: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0065: [1] 93 ......................... pushResult 
    0066: [2] 96 ......................... putLocalSlot2 
    0067: [1] 33 02 a8 32 ba 9b 03 ....... debug 

    # ejs.es:3220                                   addOneListener(n, callback)

    0074: [1] 5d ......................... getLocalSlot2 
    0075: [2] 5c ......................... getLocalSlot1 
    0076: [3] 1f b8 97 03 d0 8d 03 04 .... callScopedName <addOneListener> <[ejs::Emitter,private]> <argc: 2> 
    0084: [1] 3e e7 ...................... goto8 <addr: 61> 
    0086: [1] 90 ......................... pop 
    0087: [0] 3e 17 ...................... goto8 <addr: 112> 
    0089: [0] 33 02 ac 32 94 42 .......... debug 

    # ejs.es:3222                           } else {

    0095: [0] 33 02 ae 32 9a 9c 03 ....... debug 

    # ejs.es:3223                               throw new Error("Bad name type for addListener")

    0102: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0104: [1] 89 ......................... new 
    0105: [1] 56 9c 9d 03 ................ loadString <Bad name type for addListener> 
    0109: [2] 20 02 ...................... callConstructor <argc: 1> 
    0111: [1] c6 ......................... throw 
    0112: [1] 54 ......................... loadNull 
    0113: [2] bf ......................... returnValue 
    0114: [0] 33 02 b2 32 b4 16 .......... debug 

    # ejs.es:3225                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     62      65         86           86       

VARIABLE:   [name-00]  private var name : Object
VARIABLE:   [callback-01]  private var callback
VARIABLE:   [n-02]  -hoisted-2 var n

FUNCTION:   [Emitter-29]  public const function clearListeners(name: Object) : void

     ARG:   [arg-00]   private name : Object
   LOCAL:   [local-01] var n

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 c2 32 d4 9e 03 ....... debug 

    # ejs.es:3233                           if (name == null) {

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0017: [2] 25 ......................... compareEq 
    0018: [1] 13 15 ...................... branchFalse8 <addr: 41> 
    0020: [0] 33 02 c4 32 94 9f 03 ....... debug 

    # ejs.es:3234                               endpoints = new Object

    0027: [0] 7e d8 01 ................... getGlobalSlot <slot: 108> 
    0030: [1] 89 ......................... new 
    0031: [1] 57 ......................... loadThis 
    0032: [2] b3 bc 8d 03 d0 8d 03 ....... putObjName <endpoints> <[ejs::Emitter,private]> 
    0039: [0] 3e 6f ...................... goto8 <addr: 152> 
    0041: [0] 33 02 c6 32 98 9a 03 ....... debug 

    # ejs.es:3235                           } else if (name is Array) {

    0048: [0] 5b ......................... getLocalSlot0 
    0049: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0051: [2] 43 ......................... isA 
    0052: [1] 13 3b ...................... branchFalse8 <addr: 113> 
    0054: [0] 33 02 c8 32 e8 9a 03 ....... debug 

    # ejs.es:3236                               for each (n in name) {

    0061: [0] 5b ......................... getLocalSlot0 
    0062: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0068: [0] 93 ......................... pushResult 
    0069: [1] 39 ......................... dup 
    0070: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0073: [1] 93 ......................... pushResult 
    0074: [2] 95 ......................... putLocalSlot1 
    0075: [1] 33 02 ca 32 e2 9f 03 ....... debug 

    # ejs.es:3237                                   listeners = endpoints[n] = new Array

    0082: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0084: [2] 89 ......................... new 
    0085: [2] 20 00 ...................... callConstructor <argc: 0> 
    0087: [2] 39 ......................... dup 
    0088: [3] 57 ......................... loadThis 
    0089: [4] 7b bc 8d 03 d0 8d 03 ....... getObjName <endpoints> <[ejs::Emitter,private]> 
    0096: [4] 56 d8 31 ................... loadString <> 
    0099: [5] 5c ......................... getLocalSlot1 
    0100: [6] b2 ......................... putObjNameExpr 
    0101: [2] 57 ......................... loadThis 
    0102: [3] b3 ae 90 03 e0 01 .......... putObjName <listeners> <public> 
    0108: [1] 3e d7 ...................... goto8 <addr: 69> 
    0110: [1] 90 ......................... pop 
    0111: [0] 3e 27 ...................... goto8 <addr: 152> 
    0113: [0] 33 02 ce 32 94 42 .......... debug 

    # ejs.es:3239                           } else {

    0119: [0] 33 02 d0 32 a0 94 03 ....... debug 

    # ejs.es:3240                               listeners = endpoints[name] = new Array

    0126: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0128: [1] 89 ......................... new 
    0129: [1] 20 00 ...................... callConstructor <argc: 0> 
    0131: [1] 39 ......................... dup 
    0132: [2] 57 ......................... loadThis 
    0133: [3] 7b bc 8d 03 d0 8d 03 ....... getObjName <endpoints> <[ejs::Emitter,private]> 
    0140: [3] 56 d8 31 ................... loadString <> 
    0143: [4] 5b ......................... getLocalSlot0 
    0144: [5] b2 ......................... putObjNameExpr 
    0145: [1] 57 ......................... loadThis 
    0146: [2] b3 ae 90 03 e0 01 .......... putObjName <listeners> <public> 
    0152: [0] 54 ......................... loadNull 
    0153: [1] bf ......................... returnValue 
    0154: [0] 33 02 d4 32 b4 16 .......... debug 

    # ejs.es:3242                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     70      73        110          110       

VARIABLE:   [name-00]  private var name : Object
VARIABLE:   [n-01]  -hoisted-1 var n

FUNCTION:   [Emitter-30]  public const function hasListeners() : Boolean


    0000: [0] 33 02 e2 32 c6 a1 03 ....... debug 

    # ejs.es:3249                           endpoints.length > 0

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b bc 8d 03 d0 8d 03 ....... getObjName <endpoints> <[ejs::Emitter,private]> 
    0015: [1] 7b aa 31 6c ................ getObjName <length> <ejs> 
    0019: [1] 44 ......................... load0 
    0020: [2] 29 ......................... compareGt 
    0021: [1] bf ......................... returnValue 
    

FUNCTION:   [Emitter-31]  public const function listeners(name) : Array

     ARG:   [arg-00]   private name

    0000: [0] 33 02 f2 32 82 a3 03 ....... debug 

    # ejs.es:3257                           endpoints[name].clone(true)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b bc 8d 03 d0 8d 03 ....... getObjName <endpoints> <[ejs::Emitter,private]> 
    0015: [1] 56 d8 31 ................... loadString <> 
    0018: [2] 5b ......................... getLocalSlot0 
    0019: [3] 7c ......................... getObjNameExpr 
    0020: [1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0023: [2] 1e cc 31 e0 01 02 .......... callObjName <clone> <public> <argc: 1> 
    0029: [0] 93 ......................... pushResult 
    0030: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name

FUNCTION:   [Emitter-32]  public const function emit(name, args: Array) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private args : Array
   LOCAL:   [local-02] var listeners : Array
   LOCAL:   [local-03] var e
   LOCAL:   [local-04] var e

    0000: [0] 33 02 82 33 bc a4 03 ....... debug 

    # ejs.es:3265                           let listeners: Array? = endpoints[name]

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b bc 8d 03 d0 8d 03 ....... getObjName <endpoints> <[ejs::Emitter,private]> 
    0015: [1] 56 d8 31 ................... loadString <> 
    0018: [2] 5b ......................... getLocalSlot0 
    0019: [3] 7c ......................... getObjNameExpr 
    0020: [1] 96 ......................... putLocalSlot2 
    0021: [0] 33 02 84 33 ac 91 03 ....... debug 

    # ejs.es:3266                           if (listeners) {

    0028: [0] 5d ......................... getLocalSlot2 
    0029: [1] 07 8a 04 f7 f7 ............. branchFalse <addr: 295> 
    0034: [0] 33 02 86 33 e6 91 03 ....... debug 

    # ejs.es:3267                               for each (var e: Endpoint in listeners) {

    0041: [0] 5d ......................... getLocalSlot2 
    0042: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0048: [0] 93 ......................... pushResult 
    0049: [1] 39 ......................... dup 
    0050: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0053: [1] 93 ......................... pushResult 
    0054: [2] 97 ......................... putLocalSlot3 
    0055: [1] 33 02 88 33 a4 a5 03 ....... debug 

    # ejs.es:3268                                   if (name == e.name) {

    0062: [1] 5b ......................... getLocalSlot0 
    0063: [2] 5e ......................... getLocalSlot3 
    0064: [3] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0069: [3] 25 ......................... compareEq 
    0070: [2] 07 a8 03 f7 f7 ............. branchFalse <addr: 287> 
    0075: [1] 33 02 8a 33 f8 a5 03 ....... debug 

    # ejs.es:3269                                       if (!e.active) {

    0082: [1] 5e ......................... getLocalSlot3 
    0083: [2] 7b ca a6 03 e0 01 .......... getObjName <active> <public> 
    0089: [2] 86 ......................... logicalNot 
    0090: [2] 07 cc 02 f7 f7 ............. branchFalse <addr: 261> 
    0095: [1] 33 02 8c 33 d8 a6 03 ....... debug 

    # ejs.es:3270                                           e.active = true

    0102: [1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0105: [2] 5e ......................... getLocalSlot3 
    0106: [3] b3 ca a6 03 e0 01 .......... putObjName <active> <public> 
    0112: [1] 33 02 8e 33 b0 a7 03 ....... debug 

    # ejs.es:3271                                           do {

    0119: [1] 33 02 90 33 f2 a7 03 ....... debug 

    # ejs.es:3272                                               e.again = false

    0126: [1] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0128: [2] 5e ......................... getLocalSlot3 
    0129: [3] b3 d2 a8 03 e0 01 .......... putObjName <again> <public> 
    0135: [1] 33 02 92 33 de a8 03 ....... debug 

    # ejs.es:3273                                               try {

    0142: [1] 33 02 94 33 aa a9 03 ....... debug 

    # ejs.es:3274                                                   e.callback.apply(null, [name] + args)

    0149: [1] 5e ......................... getLocalSlot3 
    0150: [2] 7b be 63 e0 01 ............. getObjName <callback> <public> 
    0155: [2] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0157: [3] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0159: [4] 89 ......................... new 
    0160: [4] 39 ......................... dup 
    0161: [5] 5b ......................... getLocalSlot0 
    0162: [6] c5 ......................... swap 
    0163: [6] 56 d8 31 ................... loadString <> 
    0166: [7] 44 ......................... load0 
    0167: [8] b2 ......................... putObjNameExpr 
    0168: [4] 5c ......................... getLocalSlot1 
    0169: [5] 00 ......................... add 
    0170: [4] 1e be aa 03 00 04 .......... callObjName <apply> <> <argc: 2> 
    0176: [1] 3e 31 ...................... goto8 <addr: 227> 
    0178: [1] 33 02 96 33 ca aa 03 ....... debug 

    # ejs.es:3275                                               } catch (e) {

    0185: [1] 92 ......................... pushCatchArg 
    0186: [2] b6 08 02 ................... putBlockSlot <slot: 4> <1> 
    0189: [1] 33 02 98 33 a6 ab 03 ....... debug 

    # ejs.es:3276                                                   App.errorStream.write("Exception in event on listener: " + name  + "\n" + e)

    0196: [1] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0198: [2] 7b e2 12 e0 01 ............. getObjName <errorStream> <public> 
    0203: [2] 56 88 ad 03 ................ loadString <Exception in event on listener: > 
    0207: [3] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0210: [4] 00 ......................... add 
    0211: [3] 56 84 f4 01 ................ loadString <
> 
    0215: [4] 00 ......................... add 
    0216: [3] 7d 08 02 ................... getBlockSlot <slot: 4> <1> 
    0219: [4] 00 ......................... add 
    0220: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0226: [1] 3c ......................... endException 
    0227: [1] 33 02 9c 33 ca ad 03 ....... debug 

    # ejs.es:3278                                           } while (e.again)

    0234: [1] 5e ......................... getLocalSlot3 
    0235: [2] 7b d2 a8 03 e0 01 .......... getObjName <again> <public> 
    0241: [2] 14 84 ...................... branchTrue8 <addr: 119> 
    0243: [1] 33 02 9e 33 a6 ae 03 ....... debug 

    # ejs.es:3279                                           e.active = false

    0250: [1] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0252: [2] 5e ......................... getLocalSlot3 
    0253: [3] b3 ca a6 03 e0 01 .......... putObjName <active> <public> 
    0259: [1] 3e 18 ...................... goto8 <addr: 285> 
    0261: [1] 33 02 a0 33 80 af 03 ....... debug 

    # ejs.es:3280                                       } else {

    0268: [1] 33 02 a2 33 c2 af 03 ....... debug 

    # ejs.es:3281                                           e.again = true

    0275: [1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0278: [2] 5e ......................... getLocalSlot3 
    0279: [3] b3 d2 a8 03 e0 01 .......... putObjName <again> <public> 
    0285: [1] 3e 00 ...................... goto8 <addr: 287> 
    0287: [1] 3d e7 03 f7 f7 ............. goto <addr: 49> 
    0292: [1] 90 ......................... pop 
    0293: [0] 3e 00 ...................... goto8 <addr: 295> 
    0295: [0] 54 ......................... loadNull 
    0296: [1] bf ......................... returnValue 
    0297: [0] 33 02 ac 33 b4 16 .......... debug 

    # ejs.es:3286                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch        135     178        178          227       
1   iteration     50      53        292          292       

VARIABLE:   [name-00]  private var name
VARIABLE:   [args-01]  private var args : Array
VARIABLE:   [listeners-02]  private var listeners : Array
VARIABLE:   [e-03]  private var e
VARIABLE:   [e-04]  -hoisted-4 var e

FUNCTION:   [Emitter-33]  [ejs::Emitter,private] const function removeOneListener(name, callback) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private callback
   LOCAL:   [local-02] var listeners : Array
   LOCAL:   [local-03] var e
   LOCAL:   [local-04] var i

    0000: [0] 33 02 b2 33 c2 b1 03 ....... debug 

    # ejs.es:3289                           var listeners: Array? = endpoints[name]

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b bc 8d 03 d0 8d 03 ....... getObjName <endpoints> <[ejs::Emitter,private]> 
    0015: [1] 56 d8 31 ................... loadString <> 
    0018: [2] 5b ......................... getLocalSlot0 
    0019: [3] 7c ......................... getObjNameExpr 
    0020: [1] 96 ......................... putLocalSlot2 
    0021: [0] 33 02 b4 33 aa b2 03 ....... debug 

    # ejs.es:3290                           for (let i in listeners) {

    0028: [0] 5d ......................... getLocalSlot2 
    0029: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0035: [0] 93 ......................... pushResult 
    0036: [1] 39 ......................... dup 
    0037: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0040: [1] 93 ......................... pushResult 
    0041: [2] 98 ......................... putLocalSlot4 
    0042: [1] 33 02 b6 33 f8 b2 03 ....... debug 

    # ejs.es:3291                               var e: Endpoint = listeners[i]

    0049: [1] 5d ......................... getLocalSlot2 
    0050: [2] 56 d8 31 ................... loadString <> 
    0053: [3] 5f ......................... getLocalSlot4 
    0054: [4] 7c ......................... getObjNameExpr 
    0055: [2] 97 ......................... putLocalSlot3 
    0056: [1] 33 02 b8 33 d6 b3 03 ....... debug 

    # ejs.es:3292                               if (e.callback == callback && e.name == name) {

    0063: [1] 5e ......................... getLocalSlot3 
    0064: [2] 7b be 63 e0 01 ............. getObjName <callback> <public> 
    0069: [2] 5c ......................... getLocalSlot1 
    0070: [3] 25 ......................... compareEq 
    0071: [2] 39 ......................... dup 
    0072: [3] 13 09 ...................... branchFalse8 <addr: 83> 
    0074: [2] 90 ......................... pop 
    0075: [1] 5e ......................... getLocalSlot3 
    0076: [2] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0081: [2] 5b ......................... getLocalSlot0 
    0082: [3] 25 ......................... compareEq 
    0083: [2] 13 26 ...................... branchFalse8 <addr: 123> 
    0085: [1] 33 02 ba 33 d6 b4 03 ....... debug 

    # ejs.es:3293                                   emit("removeListener", name, callback)

    0092: [1] 56 ae b5 01 ................ loadString <removeListener> 
    0096: [2] 5b ......................... getLocalSlot0 
    0097: [3] 5c ......................... getLocalSlot1 
    0098: [4] 1f ae 97 03 e0 01 06 ....... callScopedName <emit> <public> <argc: 3> 
    0105: [1] 33 02 bc 33 cc b5 03 ....... debug 

    # ejs.es:3294                                   listeners.splice(i, 1)

    0112: [1] 5d ......................... getLocalSlot2 
    0113: [2] 5f ......................... getLocalSlot4 
    0114: [3] 45 ......................... load1 
    0115: [4] 1e d0 74 e0 01 04 .......... callObjName <splice> <public> <argc: 2> 
    0121: [1] 3e 00 ...................... goto8 <addr: 123> 
    0123: [1] 3e a7 ...................... goto8 <addr: 36> 
    0125: [1] 90 ......................... pop 
    0126: [0] 54 ......................... loadNull 
    0127: [1] bf ......................... returnValue 
    0128: [0] 33 02 c2 33 b4 16 .......... debug 

    # ejs.es:3297                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     37      40        125          125       

VARIABLE:   [name-00]  private var name
VARIABLE:   [callback-01]  private var callback
VARIABLE:   [listeners-02]  private var listeners : Array
VARIABLE:   [e-03]  private var e
VARIABLE:   [i-04]  -hoisted-4 var i

FUNCTION:   [Emitter-34]  public const function removeListener(name: Object, callback) : void

     ARG:   [arg-00]   private name : Object
     ARG:   [arg-01]   private callback
   LOCAL:   [local-02] var n

    0000: [0] 33 02 d2 33 f6 98 03 ....... debug 

    # ejs.es:3305                           if (name is String) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0011: [2] 43 ......................... isA 
    0012: [1] 13 13 ...................... branchFalse8 <addr: 33> 
    0014: [0] 33 02 d4 33 da b7 03 ....... debug 

    # ejs.es:3306                               removeOneListener(name, callback)

    0021: [0] 5b ......................... getLocalSlot0 
    0022: [1] 5c ......................... getLocalSlot1 
    0023: [2] 1f a2 b6 03 d0 8d 03 04 .... callScopedName <removeOneListener> <[ejs::Emitter,private]> <argc: 2> 
    0031: [0] 3e 4f ...................... goto8 <addr: 112> 
    0033: [0] 33 02 d6 33 98 9a 03 ....... debug 

    # ejs.es:3307                           } else if (name is Array) {

    0040: [0] 5b ......................... getLocalSlot0 
    0041: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0043: [2] 43 ......................... isA 
    0044: [1] 13 2b ...................... branchFalse8 <addr: 89> 
    0046: [0] 33 02 d8 33 e8 9a 03 ....... debug 

    # ejs.es:3308                               for each (n in name) {

    0053: [0] 5b ......................... getLocalSlot0 
    0054: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0060: [0] 93 ......................... pushResult 
    0061: [1] 39 ......................... dup 
    0062: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0065: [1] 93 ......................... pushResult 
    0066: [2] 96 ......................... putLocalSlot2 
    0067: [1] 33 02 da 33 be b8 03 ....... debug 

    # ejs.es:3309                                   removeOneListener(n, callback)

    0074: [1] 5d ......................... getLocalSlot2 
    0075: [2] 5c ......................... getLocalSlot1 
    0076: [3] 1f a2 b6 03 d0 8d 03 04 .... callScopedName <removeOneListener> <[ejs::Emitter,private]> <argc: 2> 
    0084: [1] 3e e7 ...................... goto8 <addr: 61> 
    0086: [1] 90 ......................... pop 
    0087: [0] 3e 17 ...................... goto8 <addr: 112> 
    0089: [0] 33 02 de 33 94 42 .......... debug 

    # ejs.es:3311                           } else {

    0095: [0] 33 02 e0 33 a4 b9 03 ....... debug 

    # ejs.es:3312                               throw new Error("Bad name type for removeListener")

    0102: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0104: [1] 89 ......................... new 
    0105: [1] 56 ac ba 03 ................ loadString <Bad name type for removeListener> 
    0109: [2] 20 02 ...................... callConstructor <argc: 1> 
    0111: [1] c6 ......................... throw 
    0112: [1] 54 ......................... loadNull 
    0113: [2] bf ......................... returnValue 
    0114: [0] 33 02 e4 33 b4 16 .......... debug 

    # ejs.es:3314                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     62      65         86           86       

VARIABLE:   [name-00]  private var name : Object
VARIABLE:   [callback-01]  private var callback
VARIABLE:   [n-02]  -hoisted-2 var n
VARIABLE:   [endpoints-00]  [ejs::Emitter,private] var endpoints : Object

CLASS:      class Endpoint extends Object
            #  Class Details: 27 class traits, 4 instance traits, requested slot 17

FUNCTION:   [Endpoint-26]  -constructor- const function Endpoint(callback, name) : void

     ARG:   [arg-00]   private callback
     ARG:   [arg-01]   private name

    0000: [0] 33 02 fa 33 bc be 03 ....... debug 

    # ejs.es:3325                           this.callback = callback

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] b3 be 63 e0 01 ............. putObjName <callback> <public> 
    0014: [0] 33 02 fc 33 86 bf 03 ....... debug 

    # ejs.es:3326                           this.name = name

    0021: [0] 5c ......................... getLocalSlot1 
    0022: [1] 57 ......................... loadThis 
    0023: [2] b3 fe 18 e0 01 ............. putObjName <name> <public> 
    0028: [0] be ......................... return 
    0029: [0] 33 02 fe 33 b4 16 .......... debug 

    # ejs.es:3327                       }
    
VARIABLE:   [callback-00]  private var callback
VARIABLE:   [name-01]  private var name
VARIABLE:   [callback-00]  public var callback
VARIABLE:   [name-01]  public var name
VARIABLE:   [active-02]  public var active : Boolean
VARIABLE:   [again-03]  public var again : Boolean

CLASS:      native dynamic class Error extends Object
            #  Class Details: 28 class traits, 2 instance traits, requested slot 22

FUNCTION:   [Error-26]  -constructor- native const function Error(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

FUNCTION:   [Error-27]  public native const get function code() : void


    

FUNCTION:   [Error-27]  public native const set function code(value) : void

     ARG:   [arg-00]   private value

    
VARIABLE:   [value-00]  private var value
VARIABLE:   [message-00]  public native var message
VARIABLE:   [stack-01]  public native var stack

CLASS:      native dynamic class ArgError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 18

FUNCTION:   [ArgError-28]  -constructor- native const function ArgError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class ArithmeticError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 19

FUNCTION:   [ArithmeticError-28]  -constructor- native const function ArithmeticError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class AssertError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 20

FUNCTION:   [AssertError-28]  -constructor- native const function AssertError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class InstructionError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 21

FUNCTION:   [InstructionError-28]  -constructor- native const function InstructionError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class IOError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 23

FUNCTION:   [IOError-28]  -constructor- native const function IOError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class InternalError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 24

FUNCTION:   [InternalError-28]  -constructor- native const function InternalError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class MemoryError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 25

FUNCTION:   [MemoryError-28]  -constructor- native const function MemoryError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class OutOfBoundsError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 26

FUNCTION:   [OutOfBoundsError-28]  -constructor- native const function OutOfBoundsError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class ReferenceError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 27

FUNCTION:   [ReferenceError-28]  -constructor- native const function ReferenceError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class ResourceError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 28

FUNCTION:   [ResourceError-28]  -constructor- native const function ResourceError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class SecurityError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 29

FUNCTION:   [SecurityError-28]  -constructor- native const function SecurityError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class StateError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 30

FUNCTION:   [StateError-28]  -constructor- native const function StateError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class SyntaxError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 31

FUNCTION:   [SyntaxError-28]  -constructor- native const function SyntaxError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class TypeError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 32

FUNCTION:   [TypeError-28]  -constructor- native const function TypeError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      native dynamic class URIError extends Error
            #  Class Details: 29 class traits, 2 instance traits, requested slot 33

FUNCTION:   [URIError-28]  -constructor- native const function URIError(message) : void

     ARG:   [arg-00]   private message

    
VARIABLE:   [message-00]  private var message

CLASS:      class Event extends Object
            #  Class Details: 27 class traits, 2 instance traits, requested slot 34

FUNCTION:   [Event-24]  public const override function toString() : void


    0000: [0] 33 02 94 3a b0 e6 03 ....... debug 

    # ejs.es:3722                           "[Event: " +  typeOf(this) + "]"

    0007: [0] 56 8a e7 03 ................ loadString <[Event: > 
    0011: [1] 57 ......................... loadThis 
    0012: [2] 17 e0 01 02 ................ callGlobalSlot <slot: 112> <argc: 1> 
    0016: [1] 93 ......................... pushResult 
    0017: [2] 00 ......................... add 
    0018: [1] 56 9c e7 03 ................ loadString <]> 
    0022: [2] 00 ......................... add 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [Event-26]  -constructor- const function Event(data: Object) : void

     ARG:   [arg-00]   private data : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 8a 3a c4 e4 03 ....... debug 

    # ejs.es:3717                           this.timestamp = new Date

    0014: [0] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0016: [1] 89 ......................... new 
    0017: [1] 20 00 ...................... callConstructor <argc: 0> 
    0019: [1] 57 ......................... loadThis 
    0020: [2] b3 d2 e3 03 e0 01 .......... putObjName <timestamp> <public> 
    0026: [0] 33 02 8c 3a 90 e5 03 ....... debug 

    # ejs.es:3718                           this.data = data

    0033: [0] 5b ......................... getLocalSlot0 
    0034: [1] 57 ......................... loadThis 
    0035: [2] b3 de ae 01 e0 01 .......... putObjName <data> <public> 
    0041: [0] be ......................... return 
    0042: [0] 33 02 8e 3a b4 16 .......... debug 

    # ejs.es:3719                       }
    
VARIABLE:   [data-00]  private var data : Object
VARIABLE:   [data-00]  public var data : Object
VARIABLE:   [timestamp-01]  public var timestamp : Date

CLASS:      class ErrorEvent extends Event
            #  Class Details: 28 class traits, 6 instance traits, requested slot 35

FUNCTION:   [ErrorEvent-27]  -constructor- function ErrorEvent() : void


    0000: [0] 21 00 ...................... callNextConstructor <argc: 0> 
    0002: [0] be ......................... return 
    
VARIABLE:   [data-00]  public var data
VARIABLE:   [timestamp-01]  public var timestamp
VARIABLE:   [message-02]  public var message
VARIABLE:   [filename-03]  public var filename
VARIABLE:   [lineno-04]  public var lineno
VARIABLE:   [stack-05]  public var stack

CLASS:      final class File extends Object
            #  Class Details: 47 class traits, 0 instance traits, requested slot 36

FUNCTION:   [File-08]  iterator native const override function get() : void


    

FUNCTION:   [File-12]  iterator native const override function getValues() : void


    

FUNCTION:   [File-26]  -constructor- native const function File(path: Object, options: Object) : void

     ARG:   [arg-00]   private path : Object
     ARG:   [arg-01]   private options : Object

    
VARIABLE:   [path-00]  private var path : Object
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [File-27]  public native const function addListener(name, listener) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener

FUNCTION:   [File-28]  public native const get function async() : Boolean


    

FUNCTION:   [File-28]  public native const set function async(enable: Boolean) : void

     ARG:   [arg-00]   private enable : Boolean

    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [File-29]  public native const get function canRead() : Boolean


    

FUNCTION:   [File-30]  public native const get function canWrite() : Boolean


    

FUNCTION:   [File-31]  public native const function close() : void


    

FUNCTION:   [File-32]  public const get function encoding() : void


    0000: [0] 33 02 9a 3c ac ee 03 ....... debug 

    # ejs.es:3853                           return "utf-8"

    0007: [0] 56 96 d0 01 ................ loadString <utf-8> 
    0011: [1] bf ......................... returnValue 
    

FUNCTION:   [File-32]  public const set function encoding(enc) : void

     ARG:   [arg-00]   private enc

    0000: [0] 33 02 aa 3c a2 d0 01 ....... debug 

    # ejs.es:3861                           throw "Not yet implemented"

    0007: [0] 56 f2 d0 01 ................ loadString <Not yet implemented> 
    0011: [1] c6 ......................... throw 
    0012: [1] 54 ......................... loadNull 
    0013: [2] bf ......................... returnValue 
    0014: [0] 33 02 ac 3c b4 16 .......... debug 

    # ejs.es:3862                       }
    
VARIABLE:   [enc-00]  private var enc

FUNCTION:   [File-33]  public const function flush() : void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

FUNCTION:   [File-34]  public native const get function isOpen() : Boolean


    

FUNCTION:   [File-35]  public native const function open(options: Object) : File

     ARG:   [arg-00]   private options : Object

    
VARIABLE:   [options-00]  private var options : Object

FUNCTION:   [File-36]  public native const get function options() : Object


    

FUNCTION:   [File-37]  public native const get function path() : void


    

FUNCTION:   [File-38]  public native const get function position() : void


    

FUNCTION:   [File-38]  public native const set function position(loc) : void

     ARG:   [arg-00]   private loc

    
VARIABLE:   [loc-00]  private var loc

FUNCTION:   [File-39]  public native const function read(buffer: ByteArray, offset, count) : void

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset
     ARG:   [arg-02]   private count

    
VARIABLE:   [buffer-00]  private var buffer : ByteArray
VARIABLE:   [offset-01]  private var offset
VARIABLE:   [count-02]  private var count

FUNCTION:   [File-40]  public native const function readBytes(count) : ByteArray

     ARG:   [arg-00]   private count

    
VARIABLE:   [count-00]  private var count

FUNCTION:   [File-41]  public native const function readString(count) : void

     ARG:   [arg-00]   private count

    
VARIABLE:   [count-00]  private var count

FUNCTION:   [File-42]  public const function remove() : void


    0000: [0] 33 02 ee 3d f2 f5 03 ....... debug 

    # ejs.es:3959                           if (isOpen) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 82 f0 03 e0 01 .......... getObjName <isOpen> <public> 
    0014: [1] 13 13 ...................... branchFalse8 <addr: 35> 
    0016: [0] 33 02 f0 3d a6 f6 03 ....... debug 

    # ejs.es:3960                               throw new IOError("File is open")

    0023: [0] 7e 2e ...................... getGlobalSlot <slot: 23> 
    0025: [1] 89 ......................... new 
    0026: [1] 56 8a f7 03 ................ loadString <File is open> 
    0030: [2] 20 02 ...................... callConstructor <argc: 1> 
    0032: [1] c6 ......................... throw 
    0033: [1] 3e 00 ...................... goto8 <addr: 35> 
    0035: [1] 33 02 f2 3d bc 15 .......... debug 

    # ejs.es:3961                           }

    0041: [1] 33 02 f4 3d a4 f7 03 ....... debug 

    # ejs.es:3962                           Path(path).remove()

    0048: [1] 57 ......................... loadThis 
    0049: [2] 7b 84 35 e0 01 ............. getObjName <path> <public> 
    0054: [2] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0058: [1] 93 ......................... pushResult 
    0059: [2] 1e de 74 e0 01 00 .......... callObjName <remove> <public> <argc: 0> 
    0065: [1] 54 ......................... loadNull 
    0066: [2] bf ......................... returnValue 
    0067: [0] 33 02 f6 3d b4 16 .......... debug 

    # ejs.es:3963                       }
    

FUNCTION:   [File-43]  public native const function removeListener(name, listener) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener

FUNCTION:   [File-44]  public native const get function size() : void


    

FUNCTION:   [File-45]  public native const function truncate(value) : void

     ARG:   [arg-00]   private value

    
VARIABLE:   [value-00]  private var value

FUNCTION:   [File-46]  public native const function write(items: Array) : void

     ARG:   [arg-00]   private items : Array

    
VARIABLE:   [items-00]  private var items : Array

CLASS:      class FileSystem extends Object
            #  Class Details: 31 class traits, 0 instance traits, requested slot 37

FUNCTION:   [FileSystem-26]  -constructor- native const function FileSystem(path: Object) : void

     ARG:   [arg-00]   private path : Object

    
VARIABLE:   [path-00]  private var path : Object

FUNCTION:   [FileSystem-27]  public native const get function hasDrives() : Boolean


    

FUNCTION:   [FileSystem-28]  public native const get function newline() : void


    

FUNCTION:   [FileSystem-28]  public native const set function newline(terminator) : void

     ARG:   [arg-00]   private terminator

    
VARIABLE:   [terminator-00]  private var terminator

FUNCTION:   [FileSystem-29]  public native const get function root() : void


    

FUNCTION:   [FileSystem-30]  public native const get function separators() : void


    

FUNCTION:   [FileSystem-30]  public native const set function separators(sep) : void

     ARG:   [arg-00]   private sep

    
VARIABLE:   [sep-00]  private var sep

CLASS:      native class Function extends Object
            #  Class Details: 31 class traits, 0 instance traits, requested slot 39

FUNCTION:   [Function-26]  public native const function apply(thisObject: Object, args: Array) : Object

     ARG:   [arg-00]   private thisObject : Object
     ARG:   [arg-01]   private args : Array

    
VARIABLE:   [thisObject-00]  private var thisObject : Object
VARIABLE:   [args-01]  private var args : Array

FUNCTION:   [Function-27]  public native const function call(thisObject: Object, args: Array) : Object

     ARG:   [arg-00]   private thisObject : Object
     ARG:   [arg-01]   private args : Array

    
VARIABLE:   [thisObject-00]  private var thisObject : Object
VARIABLE:   [args-01]  private var args : Array

FUNCTION:   [Function-28]  public native const get function boundThis() : Object


    

FUNCTION:   [Function-29]  public native const function bind(thisObj: Object, overwrite: Boolean) : void

     ARG:   [arg-00]   private thisObj : Object
     ARG:   [arg-01]   private overwrite : Boolean

    
VARIABLE:   [thisObj-00]  private var thisObj : Object
VARIABLE:   [overwrite-01]  private var overwrite : Boolean

FUNCTION:   [Function-30]  public native const function setScope(scope: Object) : void

     ARG:   [arg-00]   private scope : Object

    
VARIABLE:   [scope-00]  private var scope : Object

CLASS:      native final class Frame extends Function
            #  Class Details: 31 class traits, 0 instance traits, requested slot 38

FUNCTION:   [makeGetter-40]  ejs native function makeGetter(fn: Function) : Function

     ARG:   [arg-00]   private fn : Function

    
VARIABLE:   [fn-00]  private var fn : Function

FUNCTION:   [clearBoundThis-41]  ejs native function clearBoundThis(fn: Function) : Function

     ARG:   [arg-00]   private fn : Function

    
VARIABLE:   [fn-00]  private var fn : Function

CLASS:      class GC extends Object
            #  Class Details: 29 class traits, 0 instance traits, requested slot 42

FUNCTION:   [GC-26]  public native const static get function enabled() : Boolean


    

FUNCTION:   [GC-26]  public native const static set function enabled(on: Boolean) : void

     ARG:   [arg-00]   private on : Boolean

    
VARIABLE:   [on-00]  private var on : Boolean

FUNCTION:   [GC-27]  public native const static get function workQuota() : void


    

FUNCTION:   [GC-27]  public native const static set function workQuota(quota) : void

     ARG:   [arg-00]   private quota

    
VARIABLE:   [quota-00]  private var quota

FUNCTION:   [GC-28]  public native const static function run(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    
VARIABLE:   [deep-00]  private var deep : Boolean
VARIABLE:   [EJSCRIPT-43]  public var EJSCRIPT : Boolean
VARIABLE:   [ECMA-44]  public var ECMA : Boolean
VARIABLE:   [ejs-45]  public var ejs
VARIABLE:   [public-46]  public var public
VARIABLE:   [internal-47]  public var internal
VARIABLE:   [iterator-48]  public var iterator
VARIABLE:   [CONFIG-49]  public var CONFIG
VARIABLE:   [TODO-50]  ejs const var TODO : Boolean
VARIABLE:   [FUTURE-51]  ejs const var FUTURE : Boolean
VARIABLE:   [ASC-52]  ejs const var ASC : Boolean
VARIABLE:   [DOC_ONLY-53]  ejs const var DOC_ONLY : Boolean
VARIABLE:   [DEPRECATED-54]  ejs const var DEPRECATED : Boolean
VARIABLE:   [boolean-55]  ejs native const var boolean
VARIABLE:   [double-56]  ejs native const var double
VARIABLE:   [num-57]  ejs native const var num
VARIABLE:   [string-58]  ejs native const var string
VARIABLE:   [false-59]  ejs native const var false : Boolean
VARIABLE:   [global-60]  ejs native var global : Object
VARIABLE:   [null-61]  ejs native const var null
VARIABLE:   [Infinity-62]  ejs native const var Infinity
VARIABLE:   [NegativeInfinity-63]  ejs native const var NegativeInfinity
VARIABLE:   [NaN-64]  ejs native const var NaN
VARIABLE:   [true-65]  ejs native const var true : Boolean
VARIABLE:   [undefined-66]  ejs native const var undefined
VARIABLE:   [void-67]  ejs native const var void

FUNCTION:   [assert-68]  ejs native function assert(condition: Boolean) : Boolean

     ARG:   [arg-00]   private condition : Boolean

    
VARIABLE:   [condition-00]  private var condition : Boolean

FUNCTION:   [breakpoint-69]  ejs native function breakpoint() : void


    

FUNCTION:   [cloneBase-70]  ejs native function cloneBase(klass) : void

     ARG:   [arg-00]   private klass

    
VARIABLE:   [klass-00]  private var klass

FUNCTION:   [decodeURI-71]  ejs native function decodeURI(str) : void

     ARG:   [arg-00]   private str

    
VARIABLE:   [str-00]  private var str

FUNCTION:   [dump-72]  ejs function dump(args: Array) : void

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var e : Object

    0000: [0] 33 02 a0 48 fc a4 04 ....... debug 

    # ejs.es:4624                       for each (var e: Object in args) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 39 ......................... dup 
    0016: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0019: [1] 93 ......................... pushResult 
    0020: [2] 95 ......................... putLocalSlot1 
    0021: [1] 33 02 a2 48 d2 a5 04 ....... debug 

    # ejs.es:4625                           print(serialize(e, {pretty: true}))

    0028: [1] 5c ......................... getLocalSlot1 
    0029: [2] 56 00 ...................... loadString <> 
    0031: [3] 56 b2 a6 04 ................ loadString <pretty> 
    0035: [4] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0038: [5] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0043: [3] 17 c8 01 04 ................ callGlobalSlot <slot: 100> <argc: 2> 
    0047: [1] 93 ......................... pushResult 
    0048: [2] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0052: [1] 3e d9 ...................... goto8 <addr: 15> 
    0054: [1] 90 ......................... pop 
    0055: [0] 54 ......................... loadNull 
    0056: [1] bf ......................... returnValue 
    0057: [0] 33 02 a6 48 e6 4b .......... debug 

    # ejs.es:4627                   }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     16      19         54           54       

VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [e-01]  private var e : Object

FUNCTION:   [dumpAll-73]  ejs function dumpAll(args: Array) : void

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var e : Object

    0000: [0] 33 02 ae 48 fc a4 04 ....... debug 

    # ejs.es:4631                       for each (var e: Object in args) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 39 ......................... dup 
    0016: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0019: [1] 93 ......................... pushResult 
    0020: [2] 95 ......................... putLocalSlot1 
    0021: [1] 33 02 b0 48 96 a7 04 ....... debug 

    # ejs.es:4632                           print(serialize(e, {pretty: true, hidden: true, baseClasses: true}))

    0028: [1] 5c ......................... getLocalSlot1 
    0029: [2] 56 00 ...................... loadString <> 
    0031: [3] 56 b2 a6 04 ................ loadString <pretty> 
    0035: [4] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0038: [5] 56 00 ...................... loadString <> 
    0040: [6] 56 b8 a8 04 ................ loadString <hidden> 
    0044: [7] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0047: [8] 56 00 ...................... loadString <> 
    0049: [9] 56 c6 a8 04 ................ loadString <baseClasses> 
    0053: [10] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0056: [11] 8a e4 06 06 00 00 00 ....... newObject <type: 0x1b2,  ejs::Object> <argc: 3> <att: 3 3 3 >
    0063: [3] 17 c8 01 04 ................ callGlobalSlot <slot: 100> <argc: 2> 
    0067: [1] 93 ......................... pushResult 
    0068: [2] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0072: [1] 3e c5 ...................... goto8 <addr: 15> 
    0074: [1] 90 ......................... pop 
    0075: [0] 54 ......................... loadNull 
    0076: [1] bf ......................... returnValue 
    0077: [0] 33 02 b4 48 e6 4b .......... debug 

    # ejs.es:4634                   }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     16      19         74           74       

VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [e-01]  private var e : Object

FUNCTION:   [dumpDef-74]  ejs function dumpDef(args: Array) : void

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var o : Object
   LOCAL:   [local-02] var key : Object

    0000: [0] 33 02 bc 48 ba a9 04 ....... debug 

    # ejs.es:4638                       for each (var o: Object in args) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 39 ......................... dup 
    0016: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0019: [1] 93 ......................... pushResult 
    0020: [2] 95 ......................... putLocalSlot1 
    0021: [1] 33 02 be 48 94 aa 04 ....... debug 

    # ejs.es:4639                           for each (var key: Object in Object.getOwnPropertyNames(o)) {

    0028: [1] 7e d8 01 ................... getGlobalSlot <slot: 108> 
    0031: [2] 5c ......................... getLocalSlot1 
    0032: [3] 1e a8 ab 04 e0 01 02 ....... callObjName <getOwnPropertyNames> <public> <argc: 1> 
    0039: [1] 93 ......................... pushResult 
    0040: [2] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0046: [1] 93 ......................... pushResult 
    0047: [2] 39 ......................... dup 
    0048: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0051: [2] 93 ......................... pushResult 
    0052: [3] 96 ......................... putLocalSlot2 
    0053: [2] 33 02 c0 48 d0 ab 04 ....... debug 

    # ejs.es:4640                               print(key + ": " + serialize(Object.getOwnPropertyDescriptor(o, key), {pretty: true, depth: 1}))

    0060: [2] 5d ......................... getLocalSlot2 
    0061: [3] 56 92 3a ................... loadString <: > 
    0064: [4] 00 ......................... add 
    0065: [3] 7e d8 01 ................... getGlobalSlot <slot: 108> 
    0068: [4] 5c ......................... getLocalSlot1 
    0069: [5] 5d ......................... getLocalSlot2 
    0070: [6] 1e b2 ad 04 e0 01 04 ....... callObjName <getOwnPropertyDescriptor> <public> <argc: 2> 
    0077: [3] 93 ......................... pushResult 
    0078: [4] 56 00 ...................... loadString <> 
    0080: [5] 56 b2 a6 04 ................ loadString <pretty> 
    0084: [6] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0087: [7] 56 00 ...................... loadString <> 
    0089: [8] 56 e4 ad 04 ................ loadString <depth> 
    0093: [9] 45 ......................... load1 
    0094: [10] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0100: [5] 17 c8 01 04 ................ callGlobalSlot <slot: 100> <argc: 2> 
    0104: [3] 93 ......................... pushResult 
    0105: [4] 00 ......................... add 
    0106: [3] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0110: [2] 3e bf ...................... goto8 <addr: 47> 
    0112: [2] 90 ......................... pop 
    0113: [1] 3e 9c ...................... goto8 <addr: 15> 
    0115: [1] 90 ......................... pop 
    0116: [0] 54 ......................... loadNull 
    0117: [1] bf ......................... returnValue 
    0118: [0] 33 02 c6 48 e6 4b .......... debug 

    # ejs.es:4643                   }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     48      51        112          112       
1   iteration     16      19        115          115       

VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [o-01]  private var o : Object
VARIABLE:   [key-02]  private var key : Object

FUNCTION:   [encodeURI-75]  ejs native function encodeURI(str) : void

     ARG:   [arg-00]   private str

    
VARIABLE:   [str-00]  private var str

FUNCTION:   [escape-76]  ejs native function escape(str) : void

     ARG:   [arg-00]   private str

    
VARIABLE:   [str-00]  private var str

FUNCTION:   [md5-77]  ejs native function md5(str) : void

     ARG:   [arg-00]   private str

    
VARIABLE:   [str-00]  private var str

FUNCTION:   [blend-78]  ejs native function blend(dest: Object, src: Object, overwrite: Boolean) : Object

     ARG:   [arg-00]   private dest : Object
     ARG:   [arg-01]   private src : Object
     ARG:   [arg-02]   private overwrite : Boolean

    
VARIABLE:   [dest-00]  private var dest : Object
VARIABLE:   [src-01]  private var src : Object
VARIABLE:   [overwrite-02]  private var overwrite : Boolean

FUNCTION:   [eval-79]  ejs native function eval(script, cache) : Object

     ARG:   [arg-00]   private script
     ARG:   [arg-01]   private cache

    
VARIABLE:   [script-00]  private var script
VARIABLE:   [cache-01]  private var cache

FUNCTION:   [formatStack-80]  ejs native function formatStack() : void


    

FUNCTION:   [hashcode-81]  ejs native function hashcode(o: Object) : void

     ARG:   [arg-00]   private o : Object

    
VARIABLE:   [o-00]  private var o : Object

FUNCTION:   [isNaN-82]  ejs function isNaN(arg) : Boolean

     ARG:   [arg-00]   private arg

    0000: [0] 33 02 d0 49 de b5 04 ....... debug 

    # ejs.es:4712                       arg.isNaN

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7b 82 b6 04 e0 01 .......... getObjName <isNaN> <public> 
    0014: [1] bf ......................... returnValue 
    
VARIABLE:   [arg-00]  private var arg

FUNCTION:   [isFinite-83]  ejs function isFinite(arg) : Boolean

     ARG:   [arg-00]   private arg

    0000: [0] 33 02 e0 49 e6 b6 04 ....... debug 

    # ejs.es:4720                       arg.isFinite

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7b 90 b7 04 e0 01 .......... getObjName <isFinite> <public> 
    0014: [1] bf ......................... returnValue 
    
VARIABLE:   [arg-00]  private var arg

FUNCTION:   [load-84]  ejs native function load(file, cache) : Object

     ARG:   [arg-00]   private file
     ARG:   [arg-01]   private cache

    
VARIABLE:   [file-00]  private var file
VARIABLE:   [cache-01]  private var cache

FUNCTION:   [print-85]  ejs native function print(args: Array) : void

     ARG:   [arg-00]   private args : Array

    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [parse-86]  ejs native function parse(str, preferredType) : Object

     ARG:   [arg-00]   private str
     ARG:   [arg-01]   private preferredType

    
VARIABLE:   [str-00]  private var str
VARIABLE:   [preferredType-01]  private var preferredType

FUNCTION:   [parseFloat-87]  ejs function parseFloat(str) : void

     ARG:   [arg-00]   private str

    0000: [0] 33 02 a6 4a ae bb 04 ....... debug 

    # ejs.es:4755                       parse(str, Number)

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0011: [2] 17 ac 01 04 ................ callGlobalSlot <slot: 86> <argc: 2> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [str-00]  private var str

FUNCTION:   [parseInt-88]  ejs native function parseInt(str, radix) : void

     ARG:   [arg-00]   private str
     ARG:   [arg-01]   private radix

    
VARIABLE:   [str-00]  private var str
VARIABLE:   [radix-01]  private var radix

FUNCTION:   [printHash-89]  ejs function printHash(name, o: Object) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private o : Object

    0000: [0] 33 02 dc 4a 90 be 04 ....... debug 

    # ejs.es:4782                       print("%20s %X" % [name, hashcode(o)])

    0007: [0] 56 ee be 04 ................ loadString <%20s %X> 
    0011: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0013: [2] 89 ......................... new 
    0014: [2] 39 ......................... dup 
    0015: [3] 5b ......................... getLocalSlot0 
    0016: [4] c5 ......................... swap 
    0017: [4] 56 d8 31 ................... loadString <> 
    0020: [5] 44 ......................... load0 
    0021: [6] b2 ......................... putObjNameExpr 
    0022: [2] 39 ......................... dup 
    0023: [3] 5c ......................... getLocalSlot1 
    0024: [4] 17 a2 01 02 ................ callGlobalSlot <slot: 81> <argc: 1> 
    0028: [3] 93 ......................... pushResult 
    0029: [4] c5 ......................... swap 
    0030: [4] 56 d8 31 ................... loadString <> 
    0033: [5] 45 ......................... load1 
    0034: [6] b2 ......................... putObjNameExpr 
    0035: [2] bd ......................... rem 
    0036: [1] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name
VARIABLE:   [o-01]  private var o : Object

FUNCTION:   [instanceOf-90]  ejs function instanceOf(obj: Object, target: Object) : Boolean

     ARG:   [arg-00]   private obj : Object
     ARG:   [arg-01]   private target : Object

    0000: [0] 33 02 e4 4a 8e c0 04 ....... debug 

    # ejs.es:4786                       obj is target

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 5c ......................... getLocalSlot1 
    0009: [2] 43 ......................... isA 
    0010: [1] bf ......................... returnValue 
    
VARIABLE:   [obj-00]  private var obj : Object
VARIABLE:   [target-01]  private var target : Object

FUNCTION:   [error-91]  ejs native function error(args: Array) : void

     ARG:   [arg-00]   private args : Array

    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [input-92]  ejs native function input() : void


    

FUNCTION:   [output-93]  ejs native function output(args: Array) : void

     ARG:   [arg-00]   private args : Array

    
VARIABLE:   [args-00]  private var args : Array

CLASS:      dynamic class Http extends Object
            #  Class Details: 118 class traits, 1 instance traits, requested slot 94

FUNCTION:   [Http-26]  -constructor- native const function Http(uri) : void

     ARG:   [arg-00]   private uri

    
VARIABLE:   [uri-00]  private var uri

FUNCTION:   [Http-27]  -initializer- static function Http-initializer() : void


    0000: [0] 33 02 a0 4c c4 03 .......... debug 

    # ejs.es:4880                       use default namespace public

    0006: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0008: [1] 02 ......................... addNamespaceRef 
    0009: [0] 33 02 a4 4c cc c3 04 ....... debug 

    # ejs.es:4882                       /** HTTP status code */     static const Continue           : Number    = 100

    0016: [0] 51 c8 01 ................... loadInt <100> 
    0019: [1] 57 ......................... loadThis 
    0020: [2] b3 f8 c4 04 e0 01 .......... putObjName <Continue> <public> 
    0026: [0] 33 02 a6 4c 8a c5 04 ....... debug 

    # ejs.es:4883                       /** HTTP status code */     static const Ok                 : Number    = 200

    0033: [0] 51 90 03 ................... loadInt <200> 
    0036: [1] 57 ......................... loadThis 
    0037: [2] b3 b6 c6 04 e0 01 .......... putObjName <Ok> <public> 
    0043: [0] 33 02 a8 4c bc c6 04 ....... debug 

    # ejs.es:4884                       /** HTTP status code */     static const Created            : Number    = 201

    0050: [0] 51 92 03 ................... loadInt <201> 
    0053: [1] 57 ......................... loadThis 
    0054: [2] b3 e8 c7 04 e0 01 .......... putObjName <Created> <public> 
    0060: [0] 33 02 aa 4c f8 c7 04 ....... debug 

    # ejs.es:4885                       /** HTTP status code */     static const Accepted           : Number    = 202

    0067: [0] 51 94 03 ................... loadInt <202> 
    0070: [1] 57 ......................... loadThis 
    0071: [2] b3 a4 c9 04 e0 01 .......... putObjName <Accepted> <public> 
    0077: [0] 33 02 ac 4c b6 c9 04 ....... debug 

    # ejs.es:4886                       /** HTTP status code */     static const NotAuthoritative   : Number    = 203

    0084: [0] 51 96 03 ................... loadInt <203> 
    0087: [1] 57 ......................... loadThis 
    0088: [2] b3 e2 ca 04 e0 01 .......... putObjName <NotAuthoritative> <public> 
    0094: [0] 33 02 ae 4c 84 cb 04 ....... debug 

    # ejs.es:4887                       /** HTTP status code */     static const NoContent          : Number    = 204

    0101: [0] 51 98 03 ................... loadInt <204> 
    0104: [1] 57 ......................... loadThis 
    0105: [2] b3 b0 cc 04 e0 01 .......... putObjName <NoContent> <public> 
    0111: [0] 33 02 b0 4c c4 cc 04 ....... debug 

    # ejs.es:4888                       /** HTTP status code */     static const Reset              : Number    = 205

    0118: [0] 51 9a 03 ................... loadInt <205> 
    0121: [1] 57 ......................... loadThis 
    0122: [2] b3 f0 cd 04 e0 01 .......... putObjName <Reset> <public> 
    0128: [0] 33 02 b2 4c fc cd 04 ....... debug 

    # ejs.es:4889                       /** HTTP status code */     static const Partial            : Number    = 206

    0135: [0] 51 9c 03 ................... loadInt <206> 
    0138: [1] 57 ......................... loadThis 
    0139: [2] b3 a8 cf 04 e0 01 .......... putObjName <Partial> <public> 
    0145: [0] 33 02 b4 4c b8 cf 04 ....... debug 

    # ejs.es:4890                       /** HTTP status code */     static const MultipleChoice     : Number    = 300

    0152: [0] 51 d8 04 ................... loadInt <300> 
    0155: [1] 57 ......................... loadThis 
    0156: [2] b3 e4 d0 04 e0 01 .......... putObjName <MultipleChoice> <public> 
    0162: [0] 33 02 b6 4c 82 d1 04 ....... debug 

    # ejs.es:4891                       /** HTTP status code */     static const MovedPermanently   : Number    = 301

    0169: [0] 51 da 04 ................... loadInt <301> 
    0172: [1] 57 ......................... loadThis 
    0173: [2] b3 ae d2 04 e0 01 .......... putObjName <MovedPermanently> <public> 
    0179: [0] 33 02 b8 4c d0 d2 04 ....... debug 

    # ejs.es:4892                       /** HTTP status code */     static const MovedTemporarily   : Number    = 302

    0186: [0] 51 dc 04 ................... loadInt <302> 
    0189: [1] 57 ......................... loadThis 
    0190: [2] b3 fc d3 04 e0 01 .......... putObjName <MovedTemporarily> <public> 
    0196: [0] 33 02 ba 4c 9e d4 04 ....... debug 

    # ejs.es:4893                       /** HTTP status code */     static const SeeOther           : Number    = 303

    0203: [0] 51 de 04 ................... loadInt <303> 
    0206: [1] 57 ......................... loadThis 
    0207: [2] b3 ca d5 04 e0 01 .......... putObjName <SeeOther> <public> 
    0213: [0] 33 02 bc 4c dc d5 04 ....... debug 

    # ejs.es:4894                       /** HTTP status code */     static const NotModified        : Number    = 304

    0220: [0] 51 e0 04 ................... loadInt <304> 
    0223: [1] 57 ......................... loadThis 
    0224: [2] b3 88 d7 04 e0 01 .......... putObjName <NotModified> <public> 
    0230: [0] 33 02 be 4c a0 d7 04 ....... debug 

    # ejs.es:4895                       /** HTTP status code */     static const UseProxy           : Number    = 305

    0237: [0] 51 e2 04 ................... loadInt <305> 
    0240: [1] 57 ......................... loadThis 
    0241: [2] b3 cc d8 04 e0 01 .......... putObjName <UseProxy> <public> 
    0247: [0] 33 02 c0 4c de d8 04 ....... debug 

    # ejs.es:4896                       /** HTTP status code */     static const BadRequest         : Number    = 400

    0254: [0] 51 a0 06 ................... loadInt <400> 
    0257: [1] 57 ......................... loadThis 
    0258: [2] b3 8a da 04 e0 01 .......... putObjName <BadRequest> <public> 
    0264: [0] 33 02 c2 4c a0 da 04 ....... debug 

    # ejs.es:4897                       /** HTTP status code */     static const Unauthorized       : Number    = 401

    0271: [0] 51 a2 06 ................... loadInt <401> 
    0274: [1] 57 ......................... loadThis 
    0275: [2] b3 cc db 04 e0 01 .......... putObjName <Unauthorized> <public> 
    0281: [0] 33 02 c4 4c e6 db 04 ....... debug 

    # ejs.es:4898                       /** HTTP status code */     static const PaymentRequired    : Number    = 402

    0288: [0] 51 a4 06 ................... loadInt <402> 
    0291: [1] 57 ......................... loadThis 
    0292: [2] b3 92 dd 04 e0 01 .......... putObjName <PaymentRequired> <public> 
    0298: [0] 33 02 c6 4c b2 dd 04 ....... debug 

    # ejs.es:4899                       /** HTTP status code */     static const Forbidden          : Number    = 403

    0305: [0] 51 a6 06 ................... loadInt <403> 
    0308: [1] 57 ......................... loadThis 
    0309: [2] b3 de de 04 e0 01 .......... putObjName <Forbidden> <public> 
    0315: [0] 33 02 c8 4c f2 de 04 ....... debug 

    # ejs.es:4900                       /** HTTP status code */     static const NotFound           : Number    = 404

    0322: [0] 51 a8 06 ................... loadInt <404> 
    0325: [1] 57 ......................... loadThis 
    0326: [2] b3 9e e0 04 e0 01 .......... putObjName <NotFound> <public> 
    0332: [0] 33 02 ca 4c b0 e0 04 ....... debug 

    # ejs.es:4901                       /** HTTP status code */     static const BadMethod          : Number    = 405

    0339: [0] 51 aa 06 ................... loadInt <405> 
    0342: [1] 57 ......................... loadThis 
    0343: [2] b3 dc e1 04 e0 01 .......... putObjName <BadMethod> <public> 
    0349: [0] 33 02 cc 4c f0 e1 04 ....... debug 

    # ejs.es:4902                       /** HTTP status code */     static const NotAccepted        : Number    = 406

    0356: [0] 51 ac 06 ................... loadInt <406> 
    0359: [1] 57 ......................... loadThis 
    0360: [2] b3 9c e3 04 e0 01 .......... putObjName <NotAccepted> <public> 
    0366: [0] 33 02 ce 4c b4 e3 04 ....... debug 

    # ejs.es:4903                       /** HTTP status code */     static const ProxyAuth          : Number    = 407

    0373: [0] 51 ae 06 ................... loadInt <407> 
    0376: [1] 57 ......................... loadThis 
    0377: [2] b3 e0 e4 04 e0 01 .......... putObjName <ProxyAuth> <public> 
    0383: [0] 33 02 d0 4c f4 e4 04 ....... debug 

    # ejs.es:4904                       /** HTTP status code */     static const ClientTimeout      : Number    = 408

    0390: [0] 51 b0 06 ................... loadInt <408> 
    0393: [1] 57 ......................... loadThis 
    0394: [2] b3 a0 e6 04 e0 01 .......... putObjName <ClientTimeout> <public> 
    0400: [0] 33 02 d2 4c bc e6 04 ....... debug 

    # ejs.es:4905                       /** HTTP status code */     static const Conflict           : Number    = 409

    0407: [0] 51 b2 06 ................... loadInt <409> 
    0410: [1] 57 ......................... loadThis 
    0411: [2] b3 e8 e7 04 e0 01 .......... putObjName <Conflict> <public> 
    0417: [0] 33 02 d4 4c fa e7 04 ....... debug 

    # ejs.es:4906                       /** HTTP status code */     static const Gone               : Number    = 410

    0424: [0] 51 b4 06 ................... loadInt <410> 
    0427: [1] 57 ......................... loadThis 
    0428: [2] b3 a6 e9 04 e0 01 .......... putObjName <Gone> <public> 
    0434: [0] 33 02 d6 4c b0 e9 04 ....... debug 

    # ejs.es:4907                       /** HTTP status code */     static const LengthRequired     : Number    = 411

    0441: [0] 51 b6 06 ................... loadInt <411> 
    0444: [1] 57 ......................... loadThis 
    0445: [2] b3 dc ea 04 e0 01 .......... putObjName <LengthRequired> <public> 
    0451: [0] 33 02 d8 4c fa ea 04 ....... debug 

    # ejs.es:4908                       /** HTTP status code */     static const PrecondFailed      : Number    = 412

    0458: [0] 51 b8 06 ................... loadInt <412> 
    0461: [1] 57 ......................... loadThis 
    0462: [2] b3 a6 ec 04 e0 01 .......... putObjName <PrecondFailed> <public> 
    0468: [0] 33 02 da 4c c2 ec 04 ....... debug 

    # ejs.es:4909                       /** HTTP status code */     static const EntityTooLarge     : Number    = 413

    0475: [0] 51 ba 06 ................... loadInt <413> 
    0478: [1] 57 ......................... loadThis 
    0479: [2] b3 ee ed 04 e0 01 .......... putObjName <EntityTooLarge> <public> 
    0485: [0] 33 02 dc 4c 8c ee 04 ....... debug 

    # ejs.es:4910                       /** HTTP status code */     static const ReqTooLong         : Number    = 414

    0492: [0] 51 bc 06 ................... loadInt <414> 
    0495: [1] 57 ......................... loadThis 
    0496: [2] b3 b8 ef 04 e0 01 .......... putObjName <ReqTooLong> <public> 
    0502: [0] 33 02 de 4c ce ef 04 ....... debug 

    # ejs.es:4911                       /** HTTP status code */     static const UnsupportedType    : Number    = 415

    0509: [0] 51 be 06 ................... loadInt <415> 
    0512: [1] 57 ......................... loadThis 
    0513: [2] b3 fa f0 04 e0 01 .......... putObjName <UnsupportedType> <public> 
    0519: [0] 33 02 e0 4c 9a f1 04 ....... debug 

    # ejs.es:4912                       /** HTTP status code */     static const ServerError        : Number    = 500

    0526: [0] 51 e8 07 ................... loadInt <500> 
    0529: [1] 57 ......................... loadThis 
    0530: [2] b3 c6 f2 04 e0 01 .......... putObjName <ServerError> <public> 
    0536: [0] 33 02 e2 4c de f2 04 ....... debug 

    # ejs.es:4913                       /** HTTP status code */     static const NotImplemented     : Number    = 501

    0543: [0] 51 ea 07 ................... loadInt <501> 
    0546: [1] 57 ......................... loadThis 
    0547: [2] b3 8a f4 04 e0 01 .......... putObjName <NotImplemented> <public> 
    0553: [0] 33 02 e4 4c a8 f4 04 ....... debug 

    # ejs.es:4914                       /** HTTP status code */     static const BadGateway         : Number    = 502

    0560: [0] 51 ec 07 ................... loadInt <502> 
    0563: [1] 57 ......................... loadThis 
    0564: [2] b3 d4 f5 04 e0 01 .......... putObjName <BadGateway> <public> 
    0570: [0] 33 02 e6 4c ea f5 04 ....... debug 

    # ejs.es:4915                       /** HTTP status code */     static const Unavailable        : Number    = 503

    0577: [0] 51 ee 07 ................... loadInt <503> 
    0580: [1] 57 ......................... loadThis 
    0581: [2] b3 96 f7 04 e0 01 .......... putObjName <Unavailable> <public> 
    0587: [0] 33 02 e8 4c ae f7 04 ....... debug 

    # ejs.es:4916                       /** HTTP status code */     static const GatewayTimeout     : Number    = 504

    0594: [0] 51 f0 07 ................... loadInt <504> 
    0597: [1] 57 ......................... loadThis 
    0598: [2] b3 da f8 04 e0 01 .......... putObjName <GatewayTimeout> <public> 
    0604: [0] 33 02 ea 4c f8 f8 04 ....... debug 

    # ejs.es:4917                       /** HTTP status code */     static const Version            : Number    = 505

    0611: [0] 51 f2 07 ................... loadInt <505> 
    0614: [1] 57 ......................... loadThis 
    0615: [2] b3 9c 30 e0 01 ............. putObjName <Version> <public> 
    0620: [0] 33 02 f0 4c a4 fa 04 ....... debug 

    # ejs.es:4920                       private var _response: String

    0627: [0] 33 02 fe 4c ac fb 04 ....... debug 

    # ejs.es:4927                       native function Http(uri: Uri? = null)

    0634: [0] 33 02 96 4d d2 93 01 ....... debug 

    # ejs.es:4939                       native function addListener(name, listener: Function): Void

    0641: [0] 33 02 a0 4d ec 94 01 ....... debug 

    # ejs.es:4944                       native function get async(): Boolean

    0648: [0] 33 02 aa 4d d2 95 01 ....... debug 

    # ejs.es:4949                       native function set async(enable: Boolean): Void

    0655: [0] 33 02 bc 4d a4 fc 04 ....... debug 

    # ejs.es:4958                       native function get chunkSize(): Boolean

    0662: [0] 33 02 d0 4d 9a fd 04 ....... debug 

    # ejs.es:4968                       native function set chunkSize(value: Boolean): Void

    0669: [0] 33 02 e0 4d 92 fe 04 ....... debug 

    # ejs.es:4976                       native function close(): Void 

    0676: [0] 33 02 80 4e e0 fe 04 ....... debug 

    # ejs.es:4992                       native function connect(uri: Uri? = null, ...data): Void

    0683: [0] 33 02 8e 4e f2 ff 04 ....... debug 

    # ejs.es:4999                       native function get certificate(): Path

    0690: [0] 33 02 9c 4e ea 80 05 ....... debug 

    # ejs.es:5006                       native function set certificate(certFile: Path): Void

    0697: [0] 33 02 a6 4e f8 81 05 ....... debug 

    # ejs.es:5011                       native function get contentLength(): Number

    0704: [0] 33 02 b0 4e fc 82 05 ....... debug 

    # ejs.es:5016                       native function get contentType(): String

    0711: [0] 33 02 ba 4e f8 83 05 ....... debug 

    # ejs.es:5021                       native function get date(): Date

    0718: [0] 33 02 ce 4e ca 84 05 ....... debug 

    # ejs.es:5031                       native function del(uri: Uri? = null, ...data): Void

    0725: [0] 33 02 da 4e cc 85 05 ....... debug 

    # ejs.es:5037                       function get encoding(): String

    0732: [0] 33 02 ea 4e 86 9a 01 ....... debug 

    # ejs.es:5045                       function set encoding(enc: String): Void {

    0739: [0] 33 02 f8 4e 9c 86 05 ....... debug 

    # ejs.es:5052                       native function get expires(): Date

    0746: [0] 33 02 88 4f 84 87 05 ....... debug 

    # ejs.es:5060                       native function finalize(): Void 

    0753: [0] 33 02 94 4f e2 ee 03 ....... debug 

    # ejs.es:5066                       function flush(): Void {}

    0760: [0] 33 02 a0 4f ea 87 05 ....... debug 

    # ejs.es:5072                       native function get followRedirects(): Boolean

    0767: [0] 33 02 ac 4f f8 88 05 ....... debug 

    # ejs.es:5078                       native function set followRedirects(flag: Boolean): Void

    0774: [0] 33 02 c0 4f 84 8a 05 ....... debug 

    # ejs.es:5088                       native function form(uri: Uri, postData: Object): Void

    0781: [0] 33 02 da 4f 9e 8b 05 ....... debug 

    # ejs.es:5101                       native function get(uri: Uri? = null, ...data): Void

    0788: [0] 33 02 e6 4f 98 8c 05 ....... debug 

    # ejs.es:5107                       native function getRequestHeaders(): Object

    0795: [0] 33 02 f6 4f a4 8d 05 ....... debug 

    # ejs.es:5115                       native function head(uri: Uri? = null): Void

    0802: [0] 33 02 82 50 98 8e 05 ....... debug 

    # ejs.es:5121                       native function header(key: String): String

    0809: [0] 33 02 90 50 8e 8f 05 ....... debug 

    # ejs.es:5128                       native function get headers(): Object

    0816: [0] 33 02 9c 50 fa 8f 05 ....... debug 

    # ejs.es:5134                       native function get isSecure(): Boolean

    0823: [0] 33 02 aa 50 ec 90 05 ....... debug 

    # ejs.es:5141                       native function get key(): Path

    0830: [0] 33 02 ba 50 bc 91 05 ....... debug 

    # ejs.es:5149                       native function set key(keyFile: Path): Void

    0837: [0] 33 02 c6 50 b6 92 05 ....... debug 

    # ejs.es:5155                       native function get lastModified(): Date

    0844: [0] 33 02 d0 50 b2 93 05 ....... debug 

    # ejs.es:5160                       native function get method(): String

    0851: [0] 33 02 de 50 9a 94 05 ....... debug 

    # ejs.es:5167                       native function set method(name: String)

    0858: [0] 33 02 ee 50 fc 94 05 ....... debug 

    # ejs.es:5175                       native function options(uri: Uri? = null): Void

    0865: [0] 33 02 8a 51 ec 95 05 ....... debug 

    # ejs.es:5189                       native function post(uri: Uri, ...data): Void

    0872: [0] 33 02 a6 51 e2 96 05 ....... debug 

    # ejs.es:5203                       native function put(uri: Uri, ...data): Void

    0879: [0] 33 02 b0 51 b8 d5 01 ....... debug 

    # ejs.es:5208                       native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number

    0886: [0] 33 02 c0 51 ec dd 01 ....... debug 

    # ejs.es:5216                       native function readString(count: Number = -1): String

    0893: [0] 33 02 d0 51 d4 97 05 ....... debug 

    # ejs.es:5224                       function readLines(count: Number = -1): Array {

    0900: [0] 33 02 e6 51 94 9a 05 ....... debug 

    # ejs.es:5235                       function readXml(): XML

    0907: [0] 33 02 f6 51 a0 b4 01 ....... debug 

    # ejs.es:5243                       native function removeListener(name, listener: Function): Void

    0914: [0] 33 02 86 52 aa 9b 05 ....... debug 

    # ejs.es:5251                       native function get response(): String

    0921: [0] 33 02 96 52 88 9c 05 ....... debug 

    # ejs.es:5259                       native function get retries(): Number

    0928: [0] 33 02 a6 52 f4 9c 05 ....... debug 

    # ejs.es:5267                       native function set retries(count: Number): Void

    0935: [0] 33 02 b0 52 e6 9d 05 ....... debug 

    # ejs.es:5272                       native function setCredentials(username: String, password: String): Void

    0942: [0] 33 02 c6 52 ca 9f 05 ....... debug 

    # ejs.es:5283                       native function setHeader(key: String, value: String, overwrite: Boolean = true): Void

    0949: [0] 33 02 d8 52 9c a1 05 ....... debug 

    # ejs.es:5292                       native function setHeaders(headers: Object, overwrite: Boolean = true): Void

    0956: [0] 33 02 e2 52 dc a2 05 ....... debug 

    # ejs.es:5297                       native function get status(): Number

    0963: [0] 33 02 ee 52 b6 a3 05 ....... debug 

    # ejs.es:5303                       native function get statusMessage(): String

    0970: [0] 33 02 f8 52 ba a4 05 ....... debug 

    # ejs.es:5308                       function get success(): Boolean

    0977: [0] 33 02 86 53 ee a5 05 ....... debug 

    # ejs.es:5315                       native function get timeout(): Number

    0984: [0] 33 02 92 53 ca a6 05 ....... debug 

    # ejs.es:5321                       native function set timeout(timeout: Number): Void

    0991: [0] 33 02 a2 53 c0 a7 05 ....... debug 

    # ejs.es:5329                       native function trace(uri: Uri? = null): Void

    0998: [0] 33 02 bc 53 b8 a8 05 ....... debug 

    # ejs.es:5342                       function upload(uri: String, files: Object, fields: Object? = null): Void {

    1005: [0] 33 02 8c 54 d6 c3 05 ....... debug 

    # ejs.es:5382                       native function get uri(): Uri

    1012: [0] 33 02 9c 54 a4 c4 05 ....... debug 

    # ejs.es:5390                       native function set uri(newUri: Uri): Void

    1019: [0] 33 02 aa 54 98 c5 05 ....... debug 

    # ejs.es:5397                       native function wait(timeout: Number = -1): Boolean

    1026: [0] 33 02 c4 54 90 c6 05 ....... debug 

    # ejs.es:5410                       native function write(...data): Void

    1033: [0] 33 02 ce 54 ea c6 05 ....... debug 

    # ejs.es:5415                       function addHeader(key: String, value: String, overwrite: Boolean = true): Void

    1040: [0] 33 02 d8 54 88 c9 05 ....... debug 

    # ejs.es:5420                       function get bodyLength(): Void

    1047: [0] 33 02 e2 54 a2 ca 05 ....... debug 

    # ejs.es:5425                       function set bodyLength(value: Number): Void {

    1054: [0] 33 02 ee 54 8c cc 05 ....... debug 

    # ejs.es:5431                       function get code(): Number

    1061: [0] 33 02 f8 54 fa cc 05 ....... debug 

    # ejs.es:5436                       function get codeString(): String

    1068: [0] 33 02 8a 55 e8 c8 01 ....... debug 

    # ejs.es:5445                       native function get available(): Number 

    1075: [0] 33 02 9a 55 98 ce 05 ....... debug 

    # ejs.es:5453                       function get contentEncoding(): String

    1082: [0] 33 02 a4 55 86 d0 05 ....... debug 

    # ejs.es:5458                       static function mimeType(ext: String): String

    1089: [0] be ......................... return 
    
VARIABLE:   [Http-28]  public const static var Continue
VARIABLE:   [Http-29]  public const static var Ok
VARIABLE:   [Http-30]  public const static var Created
VARIABLE:   [Http-31]  public const static var Accepted
VARIABLE:   [Http-32]  public const static var NotAuthoritative
VARIABLE:   [Http-33]  public const static var NoContent
VARIABLE:   [Http-34]  public const static var Reset
VARIABLE:   [Http-35]  public const static var Partial
VARIABLE:   [Http-36]  public const static var MultipleChoice
VARIABLE:   [Http-37]  public const static var MovedPermanently
VARIABLE:   [Http-38]  public const static var MovedTemporarily
VARIABLE:   [Http-39]  public const static var SeeOther
VARIABLE:   [Http-40]  public const static var NotModified
VARIABLE:   [Http-41]  public const static var UseProxy
VARIABLE:   [Http-42]  public const static var BadRequest
VARIABLE:   [Http-43]  public const static var Unauthorized
VARIABLE:   [Http-44]  public const static var PaymentRequired
VARIABLE:   [Http-45]  public const static var Forbidden
VARIABLE:   [Http-46]  public const static var NotFound
VARIABLE:   [Http-47]  public const static var BadMethod
VARIABLE:   [Http-48]  public const static var NotAccepted
VARIABLE:   [Http-49]  public const static var ProxyAuth
VARIABLE:   [Http-50]  public const static var ClientTimeout
VARIABLE:   [Http-51]  public const static var Conflict
VARIABLE:   [Http-52]  public const static var Gone
VARIABLE:   [Http-53]  public const static var LengthRequired
VARIABLE:   [Http-54]  public const static var PrecondFailed
VARIABLE:   [Http-55]  public const static var EntityTooLarge
VARIABLE:   [Http-56]  public const static var ReqTooLong
VARIABLE:   [Http-57]  public const static var UnsupportedType
VARIABLE:   [Http-58]  public const static var ServerError
VARIABLE:   [Http-59]  public const static var NotImplemented
VARIABLE:   [Http-60]  public const static var BadGateway
VARIABLE:   [Http-61]  public const static var Unavailable
VARIABLE:   [Http-62]  public const static var GatewayTimeout
VARIABLE:   [Http-63]  public const static var Version

FUNCTION:   [Http-64]  public native const function addListener(name, listener: Function) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Http-65]  public native const get function async() : Boolean


    

FUNCTION:   [Http-65]  public native const set function async(enable: Boolean) : void

     ARG:   [arg-00]   private enable : Boolean

    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [Http-66]  public native const get function chunkSize() : Boolean


    

FUNCTION:   [Http-66]  public native const set function chunkSize(value: Boolean) : void

     ARG:   [arg-00]   private value : Boolean

    
VARIABLE:   [value-00]  private var value : Boolean

FUNCTION:   [Http-67]  public native const function close() : void


    

FUNCTION:   [Http-68]  public native const function connect(uri, data: Array) : void

     ARG:   [arg-00]   private uri
     ARG:   [arg-01]   private data : Array

    
VARIABLE:   [uri-00]  private var uri
VARIABLE:   [data-01]  private var data : Array

FUNCTION:   [Http-69]  public native const get function certificate() : void


    

FUNCTION:   [Http-69]  public native const set function certificate(certFile) : void

     ARG:   [arg-00]   private certFile

    
VARIABLE:   [certFile-00]  private var certFile

FUNCTION:   [Http-70]  public native const get function contentLength() : void


    

FUNCTION:   [Http-71]  public native const get function contentType() : void


    

FUNCTION:   [Http-72]  public native const get function date() : Date


    

FUNCTION:   [Http-73]  public native const function del(uri, data: Array) : void

     ARG:   [arg-00]   private uri
     ARG:   [arg-01]   private data : Array

    
VARIABLE:   [uri-00]  private var uri
VARIABLE:   [data-01]  private var data : Array

FUNCTION:   [Http-74]  public const get function encoding() : void


    0000: [0] 33 02 dc 4e ee cf 01 ....... debug 

    # ejs.es:5038                           "utf-8"

    0007: [0] 56 96 d0 01 ................ loadString <utf-8> 
    0011: [1] bf ......................... returnValue 
    

FUNCTION:   [Http-74]  public const set function encoding(enc) : void

     ARG:   [arg-00]   private enc

    0000: [0] 33 02 ec 4e a2 d0 01 ....... debug 

    # ejs.es:5046                           throw "Not yet implemented"

    0007: [0] 56 f2 d0 01 ................ loadString <Not yet implemented> 
    0011: [1] c6 ......................... throw 
    0012: [1] 54 ......................... loadNull 
    0013: [2] bf ......................... returnValue 
    0014: [0] 33 02 ee 4e b4 16 .......... debug 

    # ejs.es:5047                       }
    
VARIABLE:   [enc-00]  private var enc

FUNCTION:   [Http-75]  public native const get function expires() : Date


    

FUNCTION:   [Http-76]  public native const function finalize() : void


    

FUNCTION:   [Http-77]  public const function flush() : void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

FUNCTION:   [Http-78]  public native const get function followRedirects() : Boolean


    

FUNCTION:   [Http-78]  public native const set function followRedirects(flag: Boolean) : void

     ARG:   [arg-00]   private flag : Boolean

    
VARIABLE:   [flag-00]  private var flag : Boolean

FUNCTION:   [Http-79]  public native const function form(uri, postData: Object) : void

     ARG:   [arg-00]   private uri
     ARG:   [arg-01]   private postData : Object

    
VARIABLE:   [uri-00]  private var uri
VARIABLE:   [postData-01]  private var postData : Object

FUNCTION:   [Http-80]  public native const function get(uri, data: Array) : void

     ARG:   [arg-00]   private uri
     ARG:   [arg-01]   private data : Array

    
VARIABLE:   [uri-00]  private var uri
VARIABLE:   [data-01]  private var data : Array

FUNCTION:   [Http-81]  public native const function getRequestHeaders() : Object


    

FUNCTION:   [Http-82]  public native const function head(uri) : void

     ARG:   [arg-00]   private uri

    
VARIABLE:   [uri-00]  private var uri

FUNCTION:   [Http-83]  public native const function header(key) : void

     ARG:   [arg-00]   private key

    
VARIABLE:   [key-00]  private var key

FUNCTION:   [Http-84]  public native const get function headers() : Object


    

FUNCTION:   [Http-85]  public native const get function isSecure() : Boolean


    

FUNCTION:   [Http-86]  public native const get function key() : void


    

FUNCTION:   [Http-86]  public native const set function key(keyFile) : void

     ARG:   [arg-00]   private keyFile

    
VARIABLE:   [keyFile-00]  private var keyFile

FUNCTION:   [Http-87]  public native const get function lastModified() : Date


    

FUNCTION:   [Http-88]  public native const get function method() : void


    

FUNCTION:   [Http-88]  public native const set function method(name) : void

     ARG:   [arg-00]   private name

    
VARIABLE:   [name-00]  private var name

FUNCTION:   [Http-89]  public native const function options(uri) : void

     ARG:   [arg-00]   private uri

    
VARIABLE:   [uri-00]  private var uri

FUNCTION:   [Http-90]  public native const function post(uri, data: Array) : void

     ARG:   [arg-00]   private uri
     ARG:   [arg-01]   private data : Array

    
VARIABLE:   [uri-00]  private var uri
VARIABLE:   [data-01]  private var data : Array

FUNCTION:   [Http-91]  public native const function put(uri, data: Array) : void

     ARG:   [arg-00]   private uri
     ARG:   [arg-01]   private data : Array

    
VARIABLE:   [uri-00]  private var uri
VARIABLE:   [data-01]  private var data : Array

FUNCTION:   [Http-92]  public native const function read(buffer: ByteArray, offset, count) : void

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset
     ARG:   [arg-02]   private count

    
VARIABLE:   [buffer-00]  private var buffer : ByteArray
VARIABLE:   [offset-01]  private var offset
VARIABLE:   [count-02]  private var count

FUNCTION:   [Http-93]  public native const function readString(count) : void

     ARG:   [arg-00]   private count

    
VARIABLE:   [count-00]  private var count

FUNCTION:   [Http-94]  public const function readLines(count) : Array

     ARG:   [arg-00]   private count
   LOCAL:   [local-01] var stream

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 45 ......................... load1 
    0005: [1] 88 ......................... neg 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 d2 51 c4 98 05 ....... debug 

    # ejs.es:5225                           let stream: TextStream = TextStream(this)

    0014: [0] 57 ......................... loadThis 
    0015: [1] 17 ec 01 02 ................ callGlobalSlot <slot: 118> <argc: 1> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] 95 ......................... putLocalSlot1 
    0021: [0] 33 02 d4 51 b0 99 05 ....... debug 

    # ejs.es:5226                           result = stream.readLines()

    0028: [0] 5c ......................... getLocalSlot1 
    0029: [1] 1e 80 9a 05 e0 01 00 ....... callObjName <readLines> <public> <argc: 0> 
    0036: [0] 93 ......................... pushResult 
    0037: [1] b4 88 5b d8 31 ............. putScopedName <result> <> 
    0042: [0] 33 02 d6 51 a4 5d .......... debug 

    # ejs.es:5227                           return result

    0048: [0] 79 88 5b d8 31 ............. getScopedName <result> <> 
    0053: [1] bf ......................... returnValue 
    
VARIABLE:   [count-00]  private var count
VARIABLE:   [stream-01]  private var stream

FUNCTION:   [Http-95]  public const function readXml() : void


    0000: [0] 33 02 e8 51 d4 9a 05 ....... debug 

    # ejs.es:5236                           XML(response)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 88 9b 05 e0 01 .......... getObjName <response> <public> 
    0014: [1] 17 8c 02 02 ................ callGlobalSlot <slot: 134> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Http-96]  public native const function removeListener(name, listener: Function) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Http-97]  public native const get function response() : void


    

FUNCTION:   [Http-98]  public native const get function retries() : void


    

FUNCTION:   [Http-98]  public native const set function retries(count) : void

     ARG:   [arg-00]   private count

    
VARIABLE:   [count-00]  private var count

FUNCTION:   [Http-99]  public native const function setCredentials(username, password) : void

     ARG:   [arg-00]   private username
     ARG:   [arg-01]   private password

    
VARIABLE:   [username-00]  private var username
VARIABLE:   [password-01]  private var password

FUNCTION:   [Http-100]  public native const function setHeader(key, value, overwrite: Boolean) : void

     ARG:   [arg-00]   private key
     ARG:   [arg-01]   private value
     ARG:   [arg-02]   private overwrite : Boolean

    
VARIABLE:   [key-00]  private var key
VARIABLE:   [value-01]  private var value
VARIABLE:   [overwrite-02]  private var overwrite : Boolean

FUNCTION:   [Http-101]  public native const function setHeaders(headers: Object, overwrite: Boolean) : void

     ARG:   [arg-00]   private headers : Object
     ARG:   [arg-01]   private overwrite : Boolean

    
VARIABLE:   [headers-00]  private var headers : Object
VARIABLE:   [overwrite-01]  private var overwrite : Boolean

FUNCTION:   [Http-102]  public native const get function status() : void


    

FUNCTION:   [Http-103]  public native const get function statusMessage() : void


    

FUNCTION:   [Http-104]  public const get function success() : Boolean


    0000: [0] 33 02 fa 52 8a a5 05 ....... debug 

    # ejs.es:5309                           200 <= status && status < 300

    0007: [0] 51 90 03 ................... loadInt <200> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] 7b dc 17 e0 01 ............. getObjName <status> <public> 
    0016: [2] 2a ......................... compareLe 
    0017: [1] 39 ......................... dup 
    0018: [2] 13 0b ...................... branchFalse8 <addr: 31> 
    0020: [1] 90 ......................... pop 
    0021: [0] 57 ......................... loadThis 
    0022: [1] 7b dc 17 e0 01 ............. getObjName <status> <public> 
    0027: [1] 51 d8 04 ................... loadInt <300> 
    0030: [2] 2b ......................... compareLt 
    0031: [1] bf ......................... returnValue 
    

FUNCTION:   [Http-105]  public native const get function timeout() : void


    

FUNCTION:   [Http-105]  public native const set function timeout(timeout) : void

     ARG:   [arg-00]   private timeout

    
VARIABLE:   [timeout-00]  private var timeout

FUNCTION:   [Http-106]  public native const function trace(uri) : void

     ARG:   [arg-00]   private uri

    
VARIABLE:   [uri-00]  private var uri

FUNCTION:   [Http-107]  public const function upload(uri, files: Object, fields: Object) : void

     ARG:   [arg-00]   private uri
     ARG:   [arg-01]   private files : Object
     ARG:   [arg-02]   private fields : Object
   LOCAL:   [local-03] var boundary
   LOCAL:   [local-04] var buf
   LOCAL:   [local-05] var http
   LOCAL:   [local-06] var --fun_6988--89941657-- : Function
   LOCAL:   [local-07] var key
   LOCAL:   [local-08] var key

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 96 ......................... putLocalSlot2 
    0007: [0] 33 02 be 53 f2 a9 05 ....... debug 

    # ejs.es:5343                           let boundary = "<<Upload Boundary>>"

    0014: [0] 56 d4 aa 05 ................ loadString <<<Upload Boundary>>> 
    0018: [1] 97 ......................... putLocalSlot3 
    0019: [0] 33 02 c0 53 fc aa 05 ....... debug 

    # ejs.es:5344                           let buf = new ByteArray(4096)

    0026: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0028: [1] 89 ......................... new 
    0029: [1] 51 80 40 ................... loadInt <4096> 
    0032: [2] 20 02 ...................... callConstructor <argc: 1> 
    0034: [1] 98 ......................... putLocalSlot4 
    0035: [0] 33 02 c2 53 d0 ab 05 ....... debug 

    # ejs.es:5345                           let http = this

    0042: [0] 57 ......................... loadThis 
    0043: [1] 99 ......................... putLocalSlot5 
    0044: [0] 33 02 c4 53 92 ac 05 ....... debug 

    # ejs.es:5346                           buf.addListener("readable", function (event, buf) {

    0051: [0] 35 0c 00 ................... defineFunction <slot: 6> <0> 
    0054: [0] 33 02 c4 53 92 ac 05 ....... debug 

    # ejs.es:5346                           buf.addListener("readable", function (event, buf) {

    0061: [0] 33 02 ca 53 92 ac 05 ....... debug 

    # ejs.es:5349                           buf.addListener("readable", function (event, buf) {

    0068: [0] 33 02 c4 53 92 ac 05 ....... debug 

    # ejs.es:5346                           buf.addListener("readable", function (event, buf) {

    0075: [0] 5f ......................... getLocalSlot4 
    0076: [1] 56 a6 93 01 ................ loadString <readable> 
    0080: [2] 33 02 ca 53 fe 8d 01 ....... debug 

    # ejs.es:5349                           })

    0087: [2] 61 ......................... getLocalSlot6 
    0088: [3] 1e f6 8e 01 00 04 .......... callObjName <addListener> <> <argc: 2> 
    0094: [0] 33 02 cc 53 b8 ae 05 ....... debug 

    # ejs.es:5350                           setHeader("Content-Type", "multipart/form-data; boundary=" + boundary)

    0101: [0] 56 de af 05 ................ loadString <Content-Type> 
    0105: [1] 56 f8 af 05 ................ loadString <multipart/form-data; boundary=> 
    0109: [2] 5e ......................... getLocalSlot3 
    0110: [3] 00 ......................... add 
    0111: [2] 1f 88 a1 05 e0 01 04 ....... callScopedName <setHeader> <public> <argc: 2> 
    0118: [0] 33 02 ce 53 b6 b0 05 ....... debug 

    # ejs.es:5351                           post(uri)

    0125: [0] 5b ......................... getLocalSlot0 
    0126: [1] 1f d8 96 05 e0 01 02 ....... callScopedName <post> <public> <argc: 1> 
    0133: [0] 33 02 d0 53 e2 b0 05 ....... debug 

    # ejs.es:5352                           if (fields) {

    0140: [0] 5d ......................... getLocalSlot2 
    0141: [1] 07 9a 02 f7 f7 ............. branchFalse <addr: 287> 
    0146: [0] 33 02 d2 53 96 b1 05 ....... debug 

    # ejs.es:5353                               for (key in fields) {

    0153: [0] 5d ......................... getLocalSlot2 
    0154: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0160: [0] 93 ......................... pushResult 
    0161: [1] 39 ......................... dup 
    0162: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0165: [1] 93 ......................... pushResult 
    0166: [2] 9b ......................... putLocalSlot7 
    0167: [1] 33 02 d4 53 f8 b1 05 ....... debug 

    # ejs.es:5354                                   buf.write('--' + boundary + "\r\n")

    0174: [1] 5f ......................... getLocalSlot4 
    0175: [2] 56 d4 a2 02 ................ loadString <--> 
    0179: [3] 5e ......................... getLocalSlot3 
    0180: [4] 00 ......................... add 
    0181: [3] 56 e8 b2 05 ................ loadString <
> 
    0185: [4] 00 ......................... add 
    0186: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0192: [1] 33 02 d6 53 ee b2 05 ....... debug 

    # ejs.es:5355                                   buf.write('Content-Disposition: form-data; name=' + Uri.encode(key) + "\r\n")

    0199: [1] 5f ......................... getLocalSlot4 
    0200: [2] 56 b2 b4 05 ................ loadString <Content-Disposition: form-data; name=> 
    0204: [3] 7e f8 01 ................... getGlobalSlot <slot: 124> 
    0207: [4] 62 ......................... getLocalSlot7 
    0208: [5] 1e fe b4 05 e0 01 02 ....... callObjName <encode> <public> <argc: 1> 
    0215: [3] 93 ......................... pushResult 
    0216: [4] 00 ......................... add 
    0217: [3] 56 e8 b2 05 ................ loadString <
> 
    0221: [4] 00 ......................... add 
    0222: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0228: [1] 33 02 d8 53 8c b5 05 ....... debug 

    # ejs.es:5356                                   buf.write('Content-Type: application/x-www-form-urlencoded\r\n\r\n')

    0235: [1] 5f ......................... getLocalSlot4 
    0236: [2] 56 be b6 05 ................ loadString <Content-Type: application/x-www-form-urlencoded

> 
    0240: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0246: [1] 33 02 da 53 a6 b7 05 ....... debug 

    # ejs.es:5357                                   buf.write(Uri.encode(fields[key]) + "\r\n")

    0253: [1] 5f ......................... getLocalSlot4 
    0254: [2] 7e f8 01 ................... getGlobalSlot <slot: 124> 
    0257: [3] 5d ......................... getLocalSlot2 
    0258: [4] 56 d8 31 ................... loadString <> 
    0261: [5] 62 ......................... getLocalSlot7 
    0262: [6] 7c ......................... getObjNameExpr 
    0263: [4] 1e fe b4 05 e0 01 02 ....... callObjName <encode> <public> <argc: 1> 
    0270: [2] 93 ......................... pushResult 
    0271: [3] 56 e8 b2 05 ................ loadString <
> 
    0275: [4] 00 ......................... add 
    0276: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0282: [1] 3e 85 ...................... goto8 <addr: 161> 
    0284: [1] 90 ......................... pop 
    0285: [0] 3e 00 ...................... goto8 <addr: 287> 
    0287: [0] 33 02 e0 53 a6 b8 05 ....... debug 

    # ejs.es:5360                           for (key in files) {

    0294: [0] 5c ......................... getLocalSlot1 
    0295: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0301: [0] 93 ......................... pushResult 
    0302: [1] 39 ......................... dup 
    0303: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0306: [1] 93 ......................... pushResult 
    0307: [2] 9c ......................... putLocalSlot8 
    0308: [1] 33 02 e2 53 fe b8 05 ....... debug 

    # ejs.es:5361                               file = files[key]

    0315: [1] 5c ......................... getLocalSlot1 
    0316: [2] 56 d8 31 ................... loadString <> 
    0319: [3] 63 ......................... getLocalSlot8 
    0320: [4] 7c ......................... getObjNameExpr 
    0321: [2] b4 b8 b8 04 d8 31 .......... putScopedName <file> <> 
    0327: [1] 33 02 e4 53 c2 b9 05 ....... debug 

    # ejs.es:5362                               buf.write('--' + boundary + "\r\n")

    0334: [1] 5f ......................... getLocalSlot4 
    0335: [2] 56 d4 a2 02 ................ loadString <--> 
    0339: [3] 5e ......................... getLocalSlot3 
    0340: [4] 00 ......................... add 
    0341: [3] 56 e8 b2 05 ................ loadString <
> 
    0345: [4] 00 ......................... add 
    0346: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0352: [1] 33 02 e6 53 aa ba 05 ....... debug 

    # ejs.es:5363                               buf.write('Content-Disposition: form-data; name=' + key + '; filename=' + Path(file).basename + "\r\n")

    0359: [1] 5f ......................... getLocalSlot4 
    0360: [2] 56 b2 b4 05 ................ loadString <Content-Disposition: form-data; name=> 
    0364: [3] 63 ......................... getLocalSlot8 
    0365: [4] 00 ......................... add 
    0366: [3] 56 9a bc 05 ................ loadString <; filename=> 
    0370: [4] 00 ......................... add 
    0371: [3] 79 b8 b8 04 d8 31 .......... getScopedName <file> <> 
    0377: [4] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0381: [3] 93 ......................... pushResult 
    0382: [4] 7b b2 bc 05 e0 01 .......... getObjName <basename> <public> 
    0388: [4] 00 ......................... add 
    0389: [3] 56 e8 b2 05 ................ loadString <
> 
    0393: [4] 00 ......................... add 
    0394: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0400: [1] 33 02 e8 53 c4 bc 05 ....... debug 

    # ejs.es:5364                               buf.write('Content-Type: ' + Uri(file).mimeType + "\r\n\r\n")

    0407: [1] 5f ......................... getLocalSlot4 
    0408: [2] 56 e0 bd 05 ................ loadString <Content-Type: > 
    0412: [3] 79 b8 b8 04 d8 31 .......... getScopedName <file> <> 
    0418: [4] 17 f8 01 02 ................ callGlobalSlot <slot: 124> <argc: 1> 
    0422: [3] 93 ......................... pushResult 
    0423: [4] 7b fe bd 05 e0 01 .......... getObjName <mimeType> <public> 
    0429: [4] 00 ......................... add 
    0430: [3] 56 90 be 05 ................ loadString <

> 
    0434: [4] 00 ......................... add 
    0435: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0441: [1] 33 02 ec 53 9a be 05 ....... debug 

    # ejs.es:5366                               f = File(file).open()

    0448: [1] 79 b8 b8 04 d8 31 .......... getScopedName <file> <> 
    0454: [2] 17 48 02 ................... callGlobalSlot <slot: 36> <argc: 1> 
    0457: [1] 93 ......................... pushResult 
    0458: [2] 1e 88 f1 03 e0 01 00 ....... callObjName <open> <public> <argc: 0> 
    0465: [1] 93 ......................... pushResult 
    0466: [2] b4 e6 be 05 d8 31 .......... putScopedName <f> <> 
    0472: [1] 33 02 ee 53 ea be 05 ....... debug 

    # ejs.es:5367                               data = new ByteArray

    0479: [1] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0481: [2] 89 ......................... new 
    0482: [2] 20 00 ...................... callConstructor <argc: 0> 
    0484: [2] b4 de ae 01 d8 31 .......... putScopedName <data> <> 
    0490: [1] 33 02 f0 53 b4 bf 05 ....... debug 

    # ejs.es:5368                               while (f.read(data)) {

    0497: [1] 79 e6 be 05 d8 31 .......... getScopedName <f> <> 
    0503: [2] 79 de ae 01 d8 31 .......... getScopedName <data> <> 
    0509: [3] 1e f4 8d 01 00 02 .......... callObjName <read> <> <argc: 1> 
    0515: [1] 93 ......................... pushResult 
    0516: [2] 13 16 ...................... branchFalse8 <addr: 540> 
    0518: [1] 33 02 f2 53 82 c0 05 ....... debug 

    # ejs.es:5369                                   buf.write(data)

    0525: [1] 5f ......................... getLocalSlot4 
    0526: [2] 79 de ae 01 d8 31 .......... getScopedName <data> <> 
    0532: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0538: [1] 3e d5 ...................... goto8 <addr: 497> 
    0540: [1] 33 02 f4 53 ee b2 01 ....... debug 

    # ejs.es:5370                               }

    0547: [1] 33 02 f6 53 ca c0 05 ....... debug 

    # ejs.es:5371                               f.close()

    0554: [1] 79 e6 be 05 d8 31 .......... getScopedName <f> <> 
    0560: [2] 1e b0 15 00 00 ............. callObjName <close> <> <argc: 0> 
    0565: [1] 33 02 f8 53 fe c0 05 ....... debug 

    # ejs.es:5372                               buf.write("\r\n")

    0572: [1] 5f ......................... getLocalSlot4 
    0573: [2] 56 e8 b2 05 ................ loadString <
> 
    0577: [3] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0583: [1] 3d bd 04 f7 f7 ............. goto <addr: 302> 
    0588: [1] 90 ......................... pop 
    0589: [0] 33 02 fa 53 bc 15 .......... debug 

    # ejs.es:5373                           }

    0595: [0] 33 02 fc 53 c2 c1 05 ....... debug 

    # ejs.es:5374                           buf.write('--' + boundary + "--\r\n\r\n")

    0602: [0] 5f ......................... getLocalSlot4 
    0603: [1] 56 d4 a2 02 ................ loadString <--> 
    0607: [2] 5e ......................... getLocalSlot3 
    0608: [3] 00 ......................... add 
    0609: [2] 56 ae c2 05 ................ loadString <--

> 
    0613: [3] 00 ......................... add 
    0614: [2] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0620: [0] 33 02 fe 53 bc c2 05 ....... debug 

    # ejs.es:5375                           http.finalize()

    0627: [0] 60 ......................... getLocalSlot5 
    0628: [1] 1e d8 87 05 00 00 .......... callObjName <finalize> <> <argc: 0> 
    0634: [0] 33 02 80 54 f4 c2 05 ....... debug 

    # ejs.es:5376                           http.wait()

    0641: [0] 60 ......................... getLocalSlot5 
    0642: [1] 1e a4 c3 05 00 00 .......... callObjName <wait> <> <argc: 0> 
    0648: [0] 54 ......................... loadNull 
    0649: [1] bf ......................... returnValue 
    0650: [0] 33 02 82 54 b4 16 .......... debug 

    # ejs.es:5377                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    162     165        284          284       
1   iteration    303     306        588          588       

VARIABLE:   [uri-00]  private var uri
VARIABLE:   [files-01]  private var files : Object
VARIABLE:   [fields-02]  private var fields : Object
VARIABLE:   [boundary-03]  private var boundary
VARIABLE:   [buf-04]  private var buf
VARIABLE:   [http-05]  private var http

FUNCTION:   [--fun_6988--89941657---06]  private function --fun_6988--89941657--(event, buf) : void

     ARG:   [arg-00]   private event
     ARG:   [arg-01]   private buf

    0000: [0] 33 02 c6 53 92 ad 05 ....... debug 

    # ejs.es:5347                               http.write(buf)

    0007: [0] 7d 0a 02 ................... getBlockSlot <slot: 5> <1> 
    0010: [1] 5c ......................... getLocalSlot1 
    0011: [2] 1e a2 91 01 00 02 .......... callObjName <write> <> <argc: 1> 
    0017: [0] 33 02 c8 53 d2 ad 05 ....... debug 

    # ejs.es:5348                               buf.flush()

    0024: [0] 5c ......................... getLocalSlot1 
    0025: [1] 1e ee a1 01 00 00 .......... callObjName <flush> <> <argc: 0> 
    0031: [0] be ......................... return 
    0032: [0] 33 02 ca 53 fe 8d 01 ....... debug 

    # ejs.es:5349                           })
    
VARIABLE:   [event-00]  private var event
VARIABLE:   [buf-01]  private var buf
VARIABLE:   [key-07]  -hoisted-7 var key
VARIABLE:   [key-08]  -hoisted-8 var key

FUNCTION:   [Http-108]  public native const get function uri() : void


    

FUNCTION:   [Http-108]  public native const set function uri(newUri) : void

     ARG:   [arg-00]   private newUri

    
VARIABLE:   [newUri-00]  private var newUri

FUNCTION:   [Http-109]  public native const function wait(timeout) : Boolean

     ARG:   [arg-00]   private timeout

    
VARIABLE:   [timeout-00]  private var timeout

FUNCTION:   [Http-110]  public native const function write(data: Array) : void

     ARG:   [arg-00]   private data : Array

    
VARIABLE:   [data-00]  private var data : Array

FUNCTION:   [Http-111]  public const function addHeader(key, value, overwrite: Boolean) : void

     ARG:   [arg-00]   private key
     ARG:   [arg-01]   private value
     ARG:   [arg-02]   private overwrite : Boolean

    0000: [0] 41 02 02 06 ................ initDefaultArgs8 <2> <4> <8> 
    0004: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0007: [1] 96 ......................... putLocalSlot2 
    0008: [0] 33 02 d0 54 9a c8 05 ....... debug 

    # ejs.es:5416                           setHeader(key, value, overwrite)

    0015: [0] 5b ......................... getLocalSlot0 
    0016: [1] 5c ......................... getLocalSlot1 
    0017: [2] 5d ......................... getLocalSlot2 
    0018: [3] 1f 88 a1 05 e0 01 06 ....... callScopedName <setHeader> <public> <argc: 3> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] bf ......................... returnValue 
    
VARIABLE:   [key-00]  private var key
VARIABLE:   [value-01]  private var value
VARIABLE:   [overwrite-02]  private var overwrite : Boolean

FUNCTION:   [Http-112]  public const get function bodyLength() : void


    0000: [0] 33 02 da 54 d8 c9 05 ....... debug 

    # ejs.es:5421                           contentLength

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b e0 82 05 e0 01 .......... getObjName <contentLength> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Http-112]  public const set function bodyLength(value) : void

     ARG:   [arg-00]   private value

    0000: [0] 33 02 e4 54 90 cb 05 ....... debug 

    # ejs.es:5426                           setHeader("content-length", value)

    0007: [0] 56 ee cb 05 ................ loadString <content-length> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1f 88 a1 05 e0 01 04 ....... callScopedName <setHeader> <public> <argc: 2> 
    0019: [0] 54 ......................... loadNull 
    0020: [1] bf ......................... returnValue 
    0021: [0] 33 02 e6 54 b4 16 .......... debug 

    # ejs.es:5427                       }
    
VARIABLE:   [value-00]  private var value

FUNCTION:   [Http-113]  public const get function code() : void


    0000: [0] 33 02 f0 54 d4 cc 05 ....... debug 

    # ejs.es:5432                           status

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b dc 17 e0 01 ............. getObjName <status> <public> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [Http-114]  public const get function codeString() : void


    0000: [0] 33 02 fa 54 ce cd 05 ....... debug 

    # ejs.es:5437                           statusMessage

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e a4 05 e0 01 .......... getObjName <statusMessage> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [Http-115]  public native const get function available() : void


    

FUNCTION:   [Http-116]  public const get function contentEncoding() : void


    0000: [0] 33 02 9c 55 f6 ce 05 ....... debug 

    # ejs.es:5454                           header("content-encoding")

    0007: [0] 56 c4 cf 05 ................ loadString <content-encoding> 
    0011: [1] 1f 80 8f 05 e0 01 02 ....... callScopedName <header> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Http-117]  public const static function mimeType(ext) : void

     ARG:   [arg-00]   private ext

    0000: [0] 33 02 a6 55 f2 d0 05 ....... debug 

    # ejs.es:5459                           Uri(ext)..mimeType

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 f8 01 02 ................ callGlobalSlot <slot: 124> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 7b b0 d1 05 d8 31 .......... getObjName <.mimeType> <> 
    0019: [1] bf ......................... returnValue 
    
VARIABLE:   [ext-00]  private var ext
VARIABLE:   [_response-00]  [ejs::Http,private] var _response

CLASS:      native final class Iterator extends Object
            #  Class Details: 27 class traits, 0 instance traits, requested slot 96

FUNCTION:   [Iterator-26]  public native const function next() : Object


    

CLASS:      native final class StopIteration extends Object
            #  Class Details: 26 class traits, 0 instance traits, requested slot 97

CLASS:      final class JSON extends Object
            #  Class Details: 28 class traits, 0 instance traits, requested slot 98

FUNCTION:   [JSON-26]  public const static function parse(data, filter: Function) : Object

     ARG:   [arg-00]   private data
     ARG:   [arg-01]   private filter : Function

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 8a 58 da d6 05 ....... debug 

    # ejs.es:5637                           deserialize(data, { filter: filter })

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 56 00 ...................... loadString <> 
    0017: [2] 56 98 5a ................... loadString <filter> 
    0020: [3] 5c ......................... getLocalSlot1 
    0021: [4] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0026: [2] 17 c6 01 04 ................ callGlobalSlot <slot: 99> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data
VARIABLE:   [filter-01]  private var filter : Function

FUNCTION:   [JSON-27]  public const static function stringify(obj: Object, replacer: Object, indent: Object) : void

     ARG:   [arg-00]   private obj : Object
     ARG:   [arg-01]   private replacer : Object
     ARG:   [arg-02]   private indent : Object

    0000: [0] 41 03 03 06 09 ............. initDefaultArgs8 <3> <5> <8> <11> 
    0005: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0007: [1] 95 ......................... putLocalSlot1 
    0008: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0010: [1] 96 ......................... putLocalSlot2 
    0011: [0] 33 02 a8 58 90 d9 05 ....... debug 

    # ejs.es:5652                           serialize(obj, {replacer: replacer, indent: indent})

    0018: [0] 5b ......................... getLocalSlot0 
    0019: [1] 56 00 ...................... loadString <> 
    0021: [2] 56 92 da 05 ................ loadString <replacer> 
    0025: [3] 5c ......................... getLocalSlot1 
    0026: [4] 56 00 ...................... loadString <> 
    0028: [5] 56 a4 da 05 ................ loadString <indent> 
    0032: [6] 5d ......................... getLocalSlot2 
    0033: [7] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0039: [2] 17 c8 01 04 ................ callGlobalSlot <slot: 100> <argc: 2> 
    0043: [0] 93 ......................... pushResult 
    0044: [1] bf ......................... returnValue 
    
VARIABLE:   [obj-00]  private var obj : Object
VARIABLE:   [replacer-01]  private var replacer : Object
VARIABLE:   [indent-02]  private var indent : Object

FUNCTION:   [deserialize-99]  ejs native function deserialize(str) : Object

     ARG:   [arg-00]   private str

    
VARIABLE:   [str-00]  private var str

FUNCTION:   [serialize-100]  ejs native function serialize(obj: Object, options: Object) : void

     ARG:   [arg-00]   private obj : Object
     ARG:   [arg-01]   private options : Object

    
VARIABLE:   [obj-00]  private var obj : Object
VARIABLE:   [options-01]  private var options : Object

CLASS:      class Locale extends Object
            #  Class Details: 29 class traits, 0 instance traits, requested slot 101

FUNCTION:   [Locale-26]  -constructor- const function Locale(language, country, variant) : void

     ARG:   [arg-00]   private language
     ARG:   [arg-01]   private country
     ARG:   [arg-02]   private variant

    0000: [0] be ......................... return 
    
VARIABLE:   [language-00]  private var language
VARIABLE:   [country-01]  private var country
VARIABLE:   [variant-02]  private var variant

FUNCTION:   [Locale-27]  -initializer- static function Locale-initializer() : void


    0000: [0] 33 02 f8 59 c4 03 .......... debug 

    # ejs.es:5756                       use default namespace public

    0006: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0008: [1] 02 ......................... addNamespaceRef 
    0009: [0] 33 02 fc 59 c2 dd 05 ....... debug 

    # ejs.es:5758                       static const textEncoding = "utf-8"

    0016: [0] 56 96 d0 01 ................ loadString <utf-8> 
    0020: [1] 57 ......................... loadThis 
    0021: [2] b3 9a de 05 e0 01 .......... putObjName <textEncoding> <public> 
    0027: [0] 33 02 8c 5a b4 de 05 ....... debug 

    # ejs.es:5766                       function Locale(language: String, country: String, variant: String) {}

    0034: [0] be ......................... return 
    
VARIABLE:   [Locale-28]  public const static var textEncoding

CLASS:      class Logger extends Object
            #  Class Details: 53 class traits, 6 instance traits, requested slot 102

FUNCTION:   [Logger-26]  -constructor- const function Logger(name, output, level) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private output
     ARG:   [arg-02]   private level

    0000: [0] 44 ......................... load0 
    0001: [1] 57 ......................... loadThis 
    0002: [2] b3 e8 e6 05 ee e5 05 ....... putObjName <_level> <[ejs::Logger,private]> 
    0009: [0] 41 03 03 06 08 ............. initDefaultArgs8 <3> <5> <8> <10> 
    0014: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0016: [1] 95 ......................... putLocalSlot1 
    0017: [0] 44 ......................... load0 
    0018: [1] 96 ......................... putLocalSlot2 
    0019: [0] 33 02 9e 5c 82 eb 05 ....... debug 

    # ejs.es:5903                           _name = name

    0026: [0] 5b ......................... getLocalSlot0 
    0027: [1] 57 ......................... loadThis 
    0028: [2] b3 a4 e8 05 ee e5 05 ....... putObjName <_name> <[ejs::Logger,private]> 
    0035: [0] 33 02 a0 5c b4 eb 05 ....... debug 

    # ejs.es:5904                           if (output && output is Logger) {

    0042: [0] 5c ......................... getLocalSlot1 
    0043: [1] 39 ......................... dup 
    0044: [2] 13 06 ...................... branchFalse8 <addr: 52> 
    0046: [1] 90 ......................... pop 
    0047: [0] 5c ......................... getLocalSlot1 
    0048: [1] 7e cc 01 ................... getGlobalSlot <slot: 102> 
    0051: [2] 43 ......................... isA 
    0052: [1] 13 29 ...................... branchFalse8 <addr: 95> 
    0054: [0] 33 02 a2 5c 90 ec 05 ....... debug 

    # ejs.es:5905                               _level = output.level

    0061: [0] 5c ......................... getLocalSlot1 
    0062: [1] 7b 86 0b 00 ................ getObjName <level> <> 
    0066: [1] 57 ......................... loadThis 
    0067: [2] b3 e8 e6 05 ee e5 05 ....... putObjName <_level> <[ejs::Logger,private]> 
    0074: [0] 33 02 a4 5c dc ec 05 ....... debug 

    # ejs.es:5906                               _parent = output

    0081: [0] 5c ......................... getLocalSlot1 
    0082: [1] 57 ......................... loadThis 
    0083: [2] b3 dc e9 05 ee e5 05 ....... putObjName <_parent> <[ejs::Logger,private]> 
    0090: [0] 3d 96 02 f7 f7 ............. goto <addr: 234> 
    0095: [0] 33 02 a6 5c 94 42 .......... debug 

    # ejs.es:5907                           } else {

    0101: [0] 33 02 a8 5c 9e ed 05 ....... debug 

    # ejs.es:5908                               if (output == "stdout") {

    0108: [0] 5c ......................... getLocalSlot1 
    0109: [1] 56 96 03 ................... loadString <stdout> 
    0112: [2] 25 ......................... compareEq 
    0113: [1] 13 18 ...................... branchFalse8 <addr: 139> 
    0115: [0] 33 02 aa 5c f2 ed 05 ....... debug 

    # ejs.es:5909                                   _outstream = App.outputStream

    0122: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0124: [1] 7b 94 22 e0 01 ............. getObjName <outputStream> <public> 
    0129: [1] 57 ......................... loadThis 
    0130: [2] b3 fe e8 05 ee e5 05 ....... putObjName <_outstream> <[ejs::Logger,private]> 
    0137: [0] 3e 48 ...................... goto8 <addr: 211> 
    0139: [0] 33 02 ac 5c d6 ee 05 ....... debug 

    # ejs.es:5910                               } else if (output == "stderr") {

    0146: [0] 5c ......................... getLocalSlot1 
    0147: [1] 56 d2 01 ................... loadString <stderr> 
    0150: [2] 25 ......................... compareEq 
    0151: [1] 13 18 ...................... branchFalse8 <addr: 177> 
    0153: [0] 33 02 ae 5c b8 ef 05 ....... debug 

    # ejs.es:5911                                   _outstream = App.errorStream

    0160: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0162: [1] 7b e2 12 e0 01 ............. getObjName <errorStream> <public> 
    0167: [1] 57 ......................... loadThis 
    0168: [2] b3 fe e8 05 ee e5 05 ....... putObjName <_outstream> <[ejs::Logger,private]> 
    0175: [0] 3e 22 ...................... goto8 <addr: 211> 
    0177: [0] 33 02 b0 5c f4 84 02 ....... debug 

    # ejs.es:5912                               } else {

    0184: [0] 33 02 b2 5c 9a f0 05 ....... debug 

    # ejs.es:5913                                   _outstream = output || App.errorStream

    0191: [0] 5c ......................... getLocalSlot1 
    0192: [1] 39 ......................... dup 
    0193: [2] 14 08 ...................... branchTrue8 <addr: 203> 
    0195: [1] 90 ......................... pop 
    0196: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0198: [1] 7b e2 12 e0 01 ............. getObjName <errorStream> <public> 
    0203: [1] 57 ......................... loadThis 
    0204: [2] b3 fe e8 05 ee e5 05 ....... putObjName <_outstream> <[ejs::Logger,private]> 
    0211: [0] 33 02 b4 5c ee b2 01 ....... debug 

    # ejs.es:5914                               }

    0218: [0] 33 02 b6 5c 90 f1 05 ....... debug 

    # ejs.es:5915                               _level = level

    0225: [0] 5d ......................... getLocalSlot2 
    0226: [1] 57 ......................... loadThis 
    0227: [2] b3 e8 e6 05 ee e5 05 ....... putObjName <_level> <[ejs::Logger,private]> 
    0234: [0] be ......................... return 
    0235: [0] 33 02 ba 5c b4 16 .......... debug 

    # ejs.es:5917                       }
    
VARIABLE:   [name-00]  private var name
VARIABLE:   [output-01]  private var output
VARIABLE:   [level-02]  private var level

FUNCTION:   [Logger-27]  -initializer- static function Logger-initializer() : void


    0000: [0] 33 02 b0 5b c4 03 .......... debug 

    # ejs.es:5848                       use default namespace public

    0006: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0008: [1] 02 ......................... addNamespaceRef 
    0009: [0] 33 02 ba 5b a0 e1 05 ....... debug 

    # ejs.es:5853                       static const Off: Number = -1 

    0016: [0] 45 ......................... load1 
    0017: [1] 88 ......................... neg 
    0018: [1] 57 ......................... loadThis 
    0019: [2] b3 ee e1 05 e0 01 .......... putObjName <Off> <public> 
    0025: [0] 33 02 c4 5b f6 e1 05 ....... debug 

    # ejs.es:5858                       static const Error: Number = 0

    0032: [0] 44 ......................... load0 
    0033: [1] 57 ......................... loadThis 
    0034: [2] b3 d8 c1 03 e0 01 .......... putObjName <Error> <public> 
    0040: [0] 33 02 ce 5b c4 e2 05 ....... debug 

    # ejs.es:5863                       static const Warn: Number = 1

    0047: [0] 45 ......................... load1 
    0048: [1] 57 ......................... loadThis 
    0049: [2] b3 90 e3 05 e0 01 .......... putObjName <Warn> <public> 
    0055: [0] 33 02 d8 5b 9a e3 05 ....... debug 

    # ejs.es:5868                       static const Info: Number = 2

    0062: [0] 46 ......................... load2 
    0063: [1] 57 ......................... loadThis 
    0064: [2] b3 e6 e3 05 e0 01 .......... putObjName <Info> <public> 
    0070: [0] 33 02 e2 5b f0 e3 05 ....... debug 

    # ejs.es:5873                       static const Config: Number = 3

    0077: [0] 47 ......................... load3 
    0078: [1] 57 ......................... loadThis 
    0079: [2] b3 e8 b8 02 e0 01 .......... putObjName <Config> <public> 
    0085: [0] 33 02 ec 5b c0 e4 05 ....... debug 

    # ejs.es:5878                       static const All: Number = 9

    0092: [0] 4d ......................... load9 
    0093: [1] 57 ......................... loadThis 
    0094: [2] b3 8a e5 05 e0 01 .......... putObjName <All> <public> 
    0100: [0] 33 02 f0 5b 92 e5 05 ....... debug 

    # ejs.es:5880                       private var _filter: Function

    0107: [0] 33 02 f2 5b 9a e6 05 ....... debug 

    # ejs.es:5881                       private var _level: Number = 0

    0114: [0] 33 02 f4 5b f6 e6 05 ....... debug 

    # ejs.es:5882                       private var _pattern: RegExp

    0121: [0] 33 02 f6 5b e0 e7 05 ....... debug 

    # ejs.es:5883                       private var _name: String

    0128: [0] 33 02 f8 5b b0 e8 05 ....... debug 

    # ejs.es:5884                       private var _outstream: Stream

    0135: [0] 33 02 fa 5b 94 e9 05 ....... debug 

    # ejs.es:5885                       private var _parent: Logger

    0142: [0] 33 02 9c 5c ec e9 05 ....... debug 

    # ejs.es:5902                       function Logger(name: String, output = null, level: Number? = 0) {

    0149: [0] 33 02 c4 5c ce f1 05 ....... debug 

    # ejs.es:5922                       function addListener(name, listener: Function): Void {

    0156: [0] 33 02 d4 5c e8 f3 05 ....... debug 

    # ejs.es:5930                       function get async(): Boolean

    0163: [0] 33 02 e6 5c d8 f4 05 ....... debug 

    # ejs.es:5939                       function set async(enable: Boolean): Void {

    0170: [0] 33 02 f8 5c 88 f7 05 ....... debug 

    # ejs.es:5948                       function close(): Void {

    0177: [0] 33 02 86 5d 86 f8 05 ....... debug 

    # ejs.es:5955                       function get filter(): Function

    0184: [0] 33 02 9a 5d fe f8 05 ....... debug 

    # ejs.es:5965                       function set filter(fn: Function): void {

    0191: [0] 33 02 a8 5d e2 ee 03 ....... debug 

    # ejs.es:5972                       function flush(): Void {}

    0198: [0] 33 02 b2 5d 94 fa 05 ....... debug 

    # ejs.es:5977                       function get level(): Number

    0205: [0] 33 02 c0 5d 84 fb 05 ....... debug 

    # ejs.es:5984                       function set level(level: Number): void {

    0212: [0] 33 02 ce 5d 9e fc 05 ....... debug 

    # ejs.es:5991                       function get match(): RegExp

    0219: [0] 33 02 dc 5d 92 fd 05 ....... debug 

    # ejs.es:5998                       function set match(pattern: RegExp): void {

    0226: [0] 33 02 ea 5d c8 fe 05 ....... debug 

    # ejs.es:6005                       function get name(): String

    0233: [0] 33 02 f8 5d b4 ff 05 ....... debug 

    # ejs.es:6012                       function set name(name: String): void {

    0240: [0] 33 02 86 5e 94 80 06 ....... debug 

    # ejs.es:6019                       function get outstream(): Stream

    0247: [0] 33 02 94 5e a8 81 06 ....... debug 

    # ejs.es:6026                       function set outstream(stream: Stream): void {

    0254: [0] 33 02 a2 5e dc 82 06 ....... debug 

    # ejs.es:6033                       function get parent(): Logger

    0261: [0] 33 02 b0 5e de 83 06 ....... debug 

    # ejs.es:6040                       function set parent(parent: Logger): void {

    0268: [0] 33 02 c6 5e 80 85 06 ....... debug 

    # ejs.es:6051                       function debug(level: Number, ...msgs): void 

    0275: [0] 33 02 d4 5e 80 87 06 ....... debug 

    # ejs.es:6058                       function config(...msgs): void

    0282: [0] 33 02 e2 5e d6 88 06 ....... debug 

    # ejs.es:6065                       function error(...msgs): void

    0289: [0] 33 02 f0 5e b2 8a 06 ....... debug 

    # ejs.es:6072                       function info(...msgs): void

    0296: [0] 33 02 fc 5e 90 8c 06 ....... debug 

    # ejs.es:6078                       function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number  {

    0303: [0] 33 02 8c 5f ec 8e 06 ....... debug 

    # ejs.es:6086                       function removeListener(name, listener: Function): Void {

    0310: [0] 33 02 9c 5f f0 8f 06 ....... debug 

    # ejs.es:6094                       function write(...data): Number

    0317: [0] 33 02 aa 5f ee 90 06 ....... debug 

    # ejs.es:6101                       function warn(...msgs): void

    0324: [0] 33 02 c4 5f cc 92 06 ....... debug 

    # ejs.es:6114                       private function emit(log: Logger, level: Number, name: String, kind: String, msg: String): Void {

    0331: [0] be ......................... return 
    
VARIABLE:   [Logger-28]  public const static var Off
VARIABLE:   [Logger-29]  public const static var Error
VARIABLE:   [Logger-30]  public const static var Warn
VARIABLE:   [Logger-31]  public const static var Info
VARIABLE:   [Logger-32]  public const static var Config
VARIABLE:   [Logger-33]  public const static var All

FUNCTION:   [Logger-34]  public const function addListener(name, listener: Function) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    0000: [0] 33 02 c6 5c cc f2 05 ....... debug 

    # ejs.es:5923                           throw "addListener is not supported"

    0007: [0] 56 ae f3 05 ................ loadString <addListener is not supported> 
    0011: [1] c6 ......................... throw 
    0012: [1] 54 ......................... loadNull 
    0013: [2] bf ......................... returnValue 
    0014: [0] 33 02 c8 5c b4 16 .......... debug 

    # ejs.es:5924                       }
    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Logger-35]  public const get function async() : Boolean


    0000: [0] 33 02 d6 5c b4 f4 05 ....... debug 

    # ejs.es:5931                           false

    0007: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0009: [1] bf ......................... returnValue 
    

FUNCTION:   [Logger-35]  public const set function async(enable: Boolean) : void

     ARG:   [arg-00]   private enable : Boolean

    0000: [0] 33 02 e8 5c c0 f5 05 ....... debug 

    # ejs.es:5940                           if (enable) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 13 0e ...................... branchFalse8 <addr: 24> 
    0010: [0] 33 02 ea 5c f4 f5 05 ....... debug 

    # ejs.es:5941                               throw "Async mode not supported"

    0017: [0] 56 d6 f6 05 ................ loadString <Async mode not supported> 
    0021: [1] c6 ......................... throw 
    0022: [1] 3e 00 ...................... goto8 <addr: 24> 
    0024: [1] 54 ......................... loadNull 
    0025: [2] bf ......................... returnValue 
    0026: [0] 33 02 ee 5c b4 16 .......... debug 

    # ejs.es:5943                       }
    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [Logger-36]  public const function close() : void


    0000: [0] 33 02 fa 5c ca f7 05 ....... debug 

    # ejs.es:5949                           _outstream = null

    0007: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 fe e8 05 ee e5 05 ....... putObjName <_outstream> <[ejs::Logger,private]> 
    0017: [0] 54 ......................... loadNull 
    0018: [1] bf ......................... returnValue 
    0019: [0] 33 02 fc 5c b4 16 .......... debug 

    # ejs.es:5950                       }
    

FUNCTION:   [Logger-37]  public const get function filter() : Function


    0000: [0] 33 02 88 5d d6 f8 05 ....... debug 

    # ejs.es:5956                           _filter

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b de e5 05 ee e5 05 ....... getObjName <_filter> <[ejs::Logger,private]> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [Logger-37]  public const set function filter(fn: Function) : void

     ARG:   [arg-00]   private fn : Function

    0000: [0] 33 02 9c 5d e2 f9 05 ....... debug 

    # ejs.es:5966                           _filter = fn

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] b3 de e5 05 ee e5 05 ....... putObjName <_filter> <[ejs::Logger,private]> 
    0016: [0] 54 ......................... loadNull 
    0017: [1] bf ......................... returnValue 
    0018: [0] 33 02 9e 5d b4 16 .......... debug 

    # ejs.es:5967                       }
    
VARIABLE:   [fn-00]  private var fn : Function

FUNCTION:   [Logger-38]  public const function flush() : void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

FUNCTION:   [Logger-39]  public const get function level() : void


    0000: [0] 33 02 b4 5d de fa 05 ....... debug 

    # ejs.es:5978                           _level

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b e8 e6 05 ee e5 05 ....... getObjName <_level> <[ejs::Logger,private]> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [Logger-39]  public const set function level(level) : void

     ARG:   [arg-00]   private level

    0000: [0] 33 02 c2 5d e8 fb 05 ....... debug 

    # ejs.es:5985                           _level = level

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] b3 e8 e6 05 ee e5 05 ....... putObjName <_level> <[ejs::Logger,private]> 
    0016: [0] 54 ......................... loadNull 
    0017: [1] bf ......................... returnValue 
    0018: [0] 33 02 c4 5d b4 16 .......... debug 

    # ejs.es:5986                       }
    
VARIABLE:   [level-00]  private var level

FUNCTION:   [Logger-40]  public const get function match() : void


    0000: [0] 33 02 d0 5d e8 fc 05 ....... debug 

    # ejs.es:5992                           _pattern

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b c0 e7 05 ee e5 05 ....... getObjName <_pattern> <[ejs::Logger,private]> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [Logger-40]  public const set function match(pattern) : void

     ARG:   [arg-00]   private pattern

    0000: [0] 33 02 de 5d fa fd 05 ....... debug 

    # ejs.es:5999                           _pattern = pattern

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] b3 c0 e7 05 ee e5 05 ....... putObjName <_pattern> <[ejs::Logger,private]> 
    0016: [0] 54 ......................... loadNull 
    0017: [1] bf ......................... returnValue 
    0018: [0] 33 02 e0 5d b4 16 .......... debug 

    # ejs.es:6000                       }
    
VARIABLE:   [pattern-00]  private var pattern

FUNCTION:   [Logger-41]  public const get function name() : void


    0000: [0] 33 02 ec 5d 90 ff 05 ....... debug 

    # ejs.es:6006                           _name

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b a4 e8 05 ee e5 05 ....... getObjName <_name> <[ejs::Logger,private]> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [Logger-41]  public const set function name(name) : void

     ARG:   [arg-00]   private name

    0000: [0] 33 02 fa 5d 82 eb 05 ....... debug 

    # ejs.es:6013                           _name = name

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] b3 a4 e8 05 ee e5 05 ....... putObjName <_name> <[ejs::Logger,private]> 
    0016: [0] 54 ......................... loadNull 
    0017: [1] bf ......................... returnValue 
    0018: [0] 33 02 fc 5d b4 16 .......... debug 

    # ejs.es:6014                       }
    
VARIABLE:   [name-00]  private var name

FUNCTION:   [Logger-42]  public const get function outstream() : Stream


    0000: [0] 33 02 88 5e e6 80 06 ....... debug 

    # ejs.es:6020                           _outstream

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b fe e8 05 ee e5 05 ....... getObjName <_outstream> <[ejs::Logger,private]> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [Logger-42]  public const set function outstream(stream: Stream) : void

     ARG:   [arg-00]   private stream : Stream

    0000: [0] 33 02 96 5e 96 82 06 ....... debug 

    # ejs.es:6027                           _outstream = outstream

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 94 81 06 e0 01 .......... getObjName <outstream> <public> 
    0014: [1] 57 ......................... loadThis 
    0015: [2] b3 fe e8 05 ee e5 05 ....... putObjName <_outstream> <[ejs::Logger,private]> 
    0022: [0] 54 ......................... loadNull 
    0023: [1] bf ......................... returnValue 
    0024: [0] 33 02 98 5e b4 16 .......... debug 

    # ejs.es:6028                       }
    
VARIABLE:   [stream-00]  private var stream : Stream

FUNCTION:   [Logger-43]  public const get function parent() : Logger


    0000: [0] 33 02 a4 5e a8 83 06 ....... debug 

    # ejs.es:6034                           _parent

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b dc e9 05 ee e5 05 ....... getObjName <_parent> <[ejs::Logger,private]> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [Logger-43]  public const set function parent(parent: Logger) : void

     ARG:   [arg-00]   private parent : Logger

    0000: [0] 33 02 b2 5e c6 84 06 ....... debug 

    # ejs.es:6041                           _parent = parent

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] b3 dc e9 05 ee e5 05 ....... putObjName <_parent> <[ejs::Logger,private]> 
    0016: [0] 54 ......................... loadNull 
    0017: [1] bf ......................... returnValue 
    0018: [0] 33 02 b4 5e b4 16 .......... debug 

    # ejs.es:6042                       }
    
VARIABLE:   [parent-00]  private var parent : Logger

FUNCTION:   [Logger-44]  public const function debug(level, msgs: Array) : void

     ARG:   [arg-00]   private level
     ARG:   [arg-01]   private msgs : Array

    0000: [0] 33 02 c8 5e ec 85 06 ....... debug 

    # ejs.es:6052                           emit(this, level, "", "", msgs.join(" ") + "\n")

    0007: [0] 57 ......................... loadThis 
    0008: [1] 5b ......................... getLocalSlot0 
    0009: [2] 56 d8 31 ................... loadString <> 
    0012: [3] 56 d8 31 ................... loadString <> 
    0015: [4] 5c ......................... getLocalSlot1 
    0016: [5] 56 e6 86 06 ................ loadString < > 
    0020: [6] 1e 92 36 e0 01 02 .......... callObjName <join> <public> <argc: 1> 
    0026: [4] 93 ......................... pushResult 
    0027: [5] 56 84 f4 01 ................ loadString <
> 
    0031: [6] 00 ......................... add 
    0032: [5] 1f ae 97 03 ee e5 05 0a .... callScopedName <emit> <[ejs::Logger,private]> <argc: 5> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] bf ......................... returnValue 
    
VARIABLE:   [level-00]  private var level
VARIABLE:   [msgs-01]  private var msgs : Array

FUNCTION:   [Logger-45]  public const function config(msgs: Array) : void

     ARG:   [arg-00]   private msgs : Array

    0000: [0] 33 02 d6 5e ce 87 06 ....... debug 

    # ejs.es:6059                           emit(this, Config, "", "CONFIG", msgs.join(" ") + "\n")

    0007: [0] 57 ......................... loadThis 
    0008: [1] 57 ......................... loadThis 
    0009: [2] 7b e8 b8 02 e0 01 .......... getObjName <Config> <public> 
    0015: [2] 56 d8 31 ................... loadString <> 
    0018: [3] 56 f6 94 04 ................ loadString <CONFIG> 
    0022: [4] 5b ......................... getLocalSlot0 
    0023: [5] 56 e6 86 06 ................ loadString < > 
    0027: [6] 1e 92 36 e0 01 02 .......... callObjName <join> <public> <argc: 1> 
    0033: [4] 93 ......................... pushResult 
    0034: [5] 56 84 f4 01 ................ loadString <
> 
    0038: [6] 00 ......................... add 
    0039: [5] 1f ae 97 03 ee e5 05 0a .... callScopedName <emit> <[ejs::Logger,private]> <argc: 5> 
    0047: [0] 93 ......................... pushResult 
    0048: [1] bf ......................... returnValue 
    
VARIABLE:   [msgs-00]  private var msgs : Array

FUNCTION:   [Logger-46]  public const function error(msgs: Array) : void

     ARG:   [arg-00]   private msgs : Array

    0000: [0] 33 02 e4 5e a2 89 06 ....... debug 

    # ejs.es:6066                           emit(this, Error, "", "ERROR", msgs.join(" ") + "\n")

    0007: [0] 57 ......................... loadThis 
    0008: [1] 57 ......................... loadThis 
    0009: [2] 7b d8 c1 03 e0 01 .......... getObjName <Error> <public> 
    0015: [2] 56 d8 31 ................... loadString <> 
    0018: [3] 56 a6 8a 06 ................ loadString <ERROR> 
    0022: [4] 5b ......................... getLocalSlot0 
    0023: [5] 56 e6 86 06 ................ loadString < > 
    0027: [6] 1e 92 36 e0 01 02 .......... callObjName <join> <public> <argc: 1> 
    0033: [4] 93 ......................... pushResult 
    0034: [5] 56 84 f4 01 ................ loadString <
> 
    0038: [6] 00 ......................... add 
    0039: [5] 1f ae 97 03 ee e5 05 0a .... callScopedName <emit> <[ejs::Logger,private]> <argc: 5> 
    0047: [0] 93 ......................... pushResult 
    0048: [1] bf ......................... returnValue 
    
VARIABLE:   [msgs-00]  private var msgs : Array

FUNCTION:   [Logger-47]  public const function info(msgs: Array) : void

     ARG:   [arg-00]   private msgs : Array

    0000: [0] 33 02 f2 5e fc 8a 06 ....... debug 

    # ejs.es:6073                           emit(this, Info, "", "INFO", msgs.join(" ") + "\n")

    0007: [0] 57 ......................... loadThis 
    0008: [1] 57 ......................... loadThis 
    0009: [2] 7b e6 e3 05 e0 01 .......... getObjName <Info> <public> 
    0015: [2] 56 d8 31 ................... loadString <> 
    0018: [3] 56 fc 8b 06 ................ loadString <INFO> 
    0022: [4] 5b ......................... getLocalSlot0 
    0023: [5] 56 e6 86 06 ................ loadString < > 
    0027: [6] 1e 92 36 e0 01 02 .......... callObjName <join> <public> <argc: 1> 
    0033: [4] 93 ......................... pushResult 
    0034: [5] 56 84 f4 01 ................ loadString <
> 
    0038: [6] 00 ......................... add 
    0039: [5] 1f ae 97 03 ee e5 05 0a .... callScopedName <emit> <[ejs::Logger,private]> <argc: 5> 
    0047: [0] 93 ......................... pushResult 
    0048: [1] bf ......................... returnValue 
    
VARIABLE:   [msgs-00]  private var msgs : Array

FUNCTION:   [Logger-48]  public const function read(buffer: ByteArray, offset, count) : void

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset
     ARG:   [arg-02]   private count

    0000: [0] 41 03 03 05 08 ............. initDefaultArgs8 <3> <5> <7> <10> 
    0005: [0] 44 ......................... load0 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 45 ......................... load1 
    0008: [1] 88 ......................... neg 
    0009: [1] 96 ......................... putLocalSlot2 
    0010: [0] 33 02 fe 5e c8 8d 06 ....... debug 

    # ejs.es:6079                           throw "Read not supported"

    0017: [0] 56 96 8e 06 ................ loadString <Read not supported> 
    0021: [1] c6 ......................... throw 
    0022: [1] 33 02 80 5f bc 8e 06 ....... debug 

    # ejs.es:6080                           return null

    0029: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0031: [2] bf ......................... returnValue 
    
VARIABLE:   [buffer-00]  private var buffer : ByteArray
VARIABLE:   [offset-01]  private var offset
VARIABLE:   [count-02]  private var count

FUNCTION:   [Logger-49]  public const function removeListener(name, listener: Function) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    0000: [0] 33 02 8e 5f cc f2 05 ....... debug 

    # ejs.es:6087                           throw "addListener is not supported"

    0007: [0] 56 ae f3 05 ................ loadString <addListener is not supported> 
    0011: [1] c6 ......................... throw 
    0012: [1] 54 ......................... loadNull 
    0013: [2] bf ......................... returnValue 
    0014: [0] 33 02 90 5f b4 16 .......... debug 

    # ejs.es:6088                       }
    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Logger-50]  public const function write(data: Array) : void

     ARG:   [arg-00]   private data : Array

    0000: [0] 33 02 9e 5f c0 90 06 ....... debug 

    # ejs.es:6095                           info(data)

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 1f 86 8c 06 e0 01 02 ....... callScopedName <info> <public> <argc: 1> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data : Array

FUNCTION:   [Logger-51]  public const function warn(msgs: Array) : void

     ARG:   [arg-00]   private msgs : Array

    0000: [0] 33 02 ac 5f b8 91 06 ....... debug 

    # ejs.es:6102                           emit(this, Warn, "", "WARN", msgs.join(" ") + "\n")

    0007: [0] 57 ......................... loadThis 
    0008: [1] 57 ......................... loadThis 
    0009: [2] 7b 90 e3 05 e0 01 .......... getObjName <Warn> <public> 
    0015: [2] 56 d8 31 ................... loadString <> 
    0018: [3] 56 b8 92 06 ................ loadString <WARN> 
    0022: [4] 5b ......................... getLocalSlot0 
    0023: [5] 56 e6 86 06 ................ loadString < > 
    0027: [6] 1e 92 36 e0 01 02 .......... callObjName <join> <public> <argc: 1> 
    0033: [4] 93 ......................... pushResult 
    0034: [5] 56 84 f4 01 ................ loadString <
> 
    0038: [6] 00 ......................... add 
    0039: [5] 1f ae 97 03 ee e5 05 0a .... callScopedName <emit> <[ejs::Logger,private]> <argc: 5> 
    0047: [0] 93 ......................... pushResult 
    0048: [1] bf ......................... returnValue 
    
VARIABLE:   [msgs-00]  private var msgs : Array

FUNCTION:   [Logger-52]  [ejs::Logger,private] const function emit(log: Logger, level, name, kind, msg) : void

     ARG:   [arg-00]   private log : Logger
     ARG:   [arg-01]   private level
     ARG:   [arg-02]   private name
     ARG:   [arg-03]   private kind
     ARG:   [arg-04]   private msg

    0000: [0] 33 02 c6 5f a2 94 06 ....... debug 

    # ejs.es:6115                           if (level > _level || !_outstream)

    0007: [0] 5c ......................... getLocalSlot1 
    0008: [1] 57 ......................... loadThis 
    0009: [2] 7b e8 e6 05 ee e5 05 ....... getObjName <_level> <[ejs::Logger,private]> 
    0016: [2] 29 ......................... compareGt 
    0017: [1] 39 ......................... dup 
    0018: [2] 14 0a ...................... branchTrue8 <addr: 30> 
    0020: [1] 90 ......................... pop 
    0021: [0] 57 ......................... loadThis 
    0022: [1] 7b fe e8 05 ee e5 05 ....... getObjName <_outstream> <[ejs::Logger,private]> 
    0029: [1] 86 ......................... logicalNot 
    0030: [1] 13 0a ...................... branchFalse8 <addr: 42> 
    0032: [0] 33 02 c8 5f 80 95 06 ....... debug 

    # ejs.es:6116                               return

    0039: [0] be ......................... return 
    0040: [0] 3e 00 ...................... goto8 <addr: 42> 
    0042: [0] 33 02 ca 5f ae 95 06 ....... debug 

    # ejs.es:6117                           if (name)

    0049: [0] 5d ......................... getLocalSlot2 
    0050: [1] 13 19 ...................... branchFalse8 <addr: 77> 
    0052: [0] 33 02 cc 5f da 95 06 ....... debug 

    # ejs.es:6118                               name = _name + "." + name

    0059: [0] 57 ......................... loadThis 
    0060: [1] 7b a4 e8 05 ee e5 05 ....... getObjName <_name> <[ejs::Logger,private]> 
    0067: [1] 56 ae 96 06 ................ loadString <.> 
    0071: [2] 00 ......................... add 
    0072: [1] 5d ......................... getLocalSlot2 
    0073: [2] 00 ......................... add 
    0074: [1] 96 ......................... putLocalSlot2 
    0075: [0] 3e 10 ...................... goto8 <addr: 93> 
    0077: [0] 33 02 ce 5f b2 96 06 ....... debug 

    # ejs.es:6119                           else name = _name

    0084: [0] 57 ......................... loadThis 
    0085: [1] 7b a4 e8 05 ee e5 05 ....... getObjName <_name> <[ejs::Logger,private]> 
    0092: [1] 96 ......................... putLocalSlot2 
    0093: [0] 33 02 d0 5f ee 96 06 ....... debug 

    # ejs.es:6120                           if (_pattern && !name.match(_pattern))

    0100: [0] 57 ......................... loadThis 
    0101: [1] 7b c0 e7 05 ee e5 05 ....... getObjName <_pattern> <[ejs::Logger,private]> 
    0108: [1] 39 ......................... dup 
    0109: [2] 13 12 ...................... branchFalse8 <addr: 129> 
    0111: [1] 90 ......................... pop 
    0112: [0] 5d ......................... getLocalSlot2 
    0113: [1] 57 ......................... loadThis 
    0114: [2] 7b c0 e7 05 ee e5 05 ....... getObjName <_pattern> <[ejs::Logger,private]> 
    0121: [2] 1e da 44 e0 01 02 .......... callObjName <match> <public> <argc: 1> 
    0127: [0] 93 ......................... pushResult 
    0128: [1] 86 ......................... logicalNot 
    0129: [1] 13 0a ...................... branchFalse8 <addr: 141> 
    0131: [0] 33 02 d2 5f 80 95 06 ....... debug 

    # ejs.es:6121                               return

    0138: [0] be ......................... return 
    0139: [0] 3e 00 ...................... goto8 <addr: 141> 
    0141: [0] 33 02 d4 5f d4 97 06 ....... debug 

    # ejs.es:6122                           if (_filter && !filter.call(this, log, level, msg))

    0148: [0] 57 ......................... loadThis 
    0149: [1] 7b de e5 05 ee e5 05 ....... getObjName <_filter> <[ejs::Logger,private]> 
    0156: [1] 39 ......................... dup 
    0157: [2] 13 12 ...................... branchFalse8 <addr: 177> 
    0159: [1] 90 ......................... pop 
    0160: [0] 57 ......................... loadThis 
    0161: [1] 7b 98 5a e0 01 ............. getObjName <filter> <public> 
    0166: [1] 57 ......................... loadThis 
    0167: [2] 5b ......................... getLocalSlot0 
    0168: [3] 5c ......................... getLocalSlot1 
    0169: [4] 5f ......................... getLocalSlot4 
    0170: [5] 1e c6 62 00 08 ............. callObjName <call> <> <argc: 4> 
    0175: [0] 93 ......................... pushResult 
    0176: [1] 86 ......................... logicalNot 
    0177: [1] 13 0a ...................... branchFalse8 <addr: 189> 
    0179: [0] 33 02 d6 5f 80 95 06 ....... debug 

    # ejs.es:6123                               return

    0186: [0] be ......................... return 
    0187: [0] 3e 00 ...................... goto8 <addr: 189> 
    0189: [0] 33 02 d8 5f d4 98 06 ....... debug 

    # ejs.es:6124                           if (_parent) {

    0196: [0] 57 ......................... loadThis 
    0197: [1] 7b dc e9 05 ee e5 05 ....... getObjName <_parent> <[ejs::Logger,private]> 
    0204: [1] 13 1e ...................... branchFalse8 <addr: 236> 
    0206: [0] 33 02 da 5f 8a 99 06 ....... debug 

    # ejs.es:6125                               _parent.emit(log, level, name, kind, msg)

    0213: [0] 57 ......................... loadThis 
    0214: [1] 7b dc e9 05 ee e5 05 ....... getObjName <_parent> <[ejs::Logger,private]> 
    0221: [1] 5b ......................... getLocalSlot0 
    0222: [2] 5c ......................... getLocalSlot1 
    0223: [3] 5d ......................... getLocalSlot2 
    0224: [4] 5e ......................... getLocalSlot3 
    0225: [5] 5f ......................... getLocalSlot4 
    0226: [6] 1e ae 97 03 ee e5 05 0a .... callObjName <emit> <[ejs::Logger,private]> <argc: 5> 
    0234: [0] 3e 52 ...................... goto8 <addr: 318> 
    0236: [0] 33 02 dc 5f 94 42 .......... debug 

    # ejs.es:6126                           } else {

    0242: [0] 33 02 de 5f fe 99 06 ....... debug 

    # ejs.es:6127                               if (kind)

    0249: [0] 5e ......................... getLocalSlot3 
    0250: [1] 13 25 ...................... branchFalse8 <addr: 289> 
    0252: [0] 33 02 e0 5f b2 9a 06 ....... debug 

    # ejs.es:6128                                   _outstream.write(name + ": " + kind + ": " + msg)

    0259: [0] 57 ......................... loadThis 
    0260: [1] 7b fe e8 05 ee e5 05 ....... getObjName <_outstream> <[ejs::Logger,private]> 
    0267: [1] 5d ......................... getLocalSlot2 
    0268: [2] 56 92 3a ................... loadString <: > 
    0271: [3] 00 ......................... add 
    0272: [2] 5e ......................... getLocalSlot3 
    0273: [3] 00 ......................... add 
    0274: [2] 56 92 3a ................... loadString <: > 
    0277: [3] 00 ......................... add 
    0278: [2] 5f ......................... getLocalSlot4 
    0279: [3] 00 ......................... add 
    0280: [2] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0287: [0] 3e 1d ...................... goto8 <addr: 318> 
    0289: [0] 33 02 e2 5f be 9b 06 ....... debug 

    # ejs.es:6129                               else _outstream.write(name + ": " + msg)

    0296: [0] 57 ......................... loadThis 
    0297: [1] 7b fe e8 05 ee e5 05 ....... getObjName <_outstream> <[ejs::Logger,private]> 
    0304: [1] 5d ......................... getLocalSlot2 
    0305: [2] 56 92 3a ................... loadString <: > 
    0308: [3] 00 ......................... add 
    0309: [2] 5f ......................... getLocalSlot4 
    0310: [3] 00 ......................... add 
    0311: [2] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0318: [0] 54 ......................... loadNull 
    0319: [1] bf ......................... returnValue 
    0320: [0] 33 02 e6 5f b4 16 .......... debug 

    # ejs.es:6131                       }
    
VARIABLE:   [log-00]  private var log : Logger
VARIABLE:   [level-01]  private var level
VARIABLE:   [name-02]  private var name
VARIABLE:   [kind-03]  private var kind
VARIABLE:   [msg-04]  private var msg
VARIABLE:   [_filter-00]  [ejs::Logger,private] var _filter : Function
VARIABLE:   [_level-01]  [ejs::Logger,private] var _level
VARIABLE:   [_pattern-02]  [ejs::Logger,private] var _pattern
VARIABLE:   [_name-03]  [ejs::Logger,private] var _name
VARIABLE:   [_outstream-04]  [ejs::Logger,private] var _outstream : Stream
VARIABLE:   [_parent-05]  [ejs::Logger,private] var _parent : Logger

CLASS:      class Math extends Object
            #  Class Details: 54 class traits, 0 instance traits, requested slot 103

FUNCTION:   [Math-26]  -initializer- static function Math-initializer() : void


    0000: [0] 33 02 aa 60 c4 03 .......... debug 

    # ejs.es:6165                       use default namespace public

    0006: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0008: [1] 02 ......................... addNamespaceRef 
    0009: [0] 33 02 b4 60 c6 9d 06 ....... debug 

    # ejs.es:6170                       static const E: Number = 2.7182818284590452354

    0016: [0] 4e 69 57 14 8b 0a bf 05 40 . loadDouble <2.718282> 
    0025: [1] 57 ......................... loadThis 
    0026: [2] b3 b4 9e 06 e0 01 .......... putObjName <E> <public> 
    0032: [0] 33 02 be 60 b8 9e 06 ....... debug 

    # ejs.es:6175                       static const LN2: Number = 0.6931471805599453

    0039: [0] 4e ef 39 fa fe 42 2e e6 3f . loadDouble <0.693147> 
    0048: [1] 57 ......................... loadThis 
    0049: [2] b3 a4 9f 06 e0 01 .......... putObjName <LN2> <public> 
    0055: [0] 33 02 c8 60 ac 9f 06 ....... debug 

    # ejs.es:6180                       static const LN10: Number = 2.302585092994046

    0062: [0] 4e 16 55 b5 bb b1 6b 02 40 . loadDouble <2.302585> 
    0071: [1] 57 ......................... loadThis 
    0072: [2] b3 98 a0 06 e0 01 .......... putObjName <LN10> <public> 
    0078: [0] 33 02 d2 60 a2 a0 06 ....... debug 

    # ejs.es:6185                       static const LOG2E: Number = 1.4426950408889634

    0085: [0] 4e fe 82 2b 65 47 15 f7 3f . loadDouble <1.442695> 
    0094: [1] 57 ......................... loadThis 
    0095: [2] b3 92 a1 06 e0 01 .......... putObjName <LOG2E> <public> 
    0101: [0] 33 02 dc 60 9e a1 06 ....... debug 

    # ejs.es:6190                       static const LOG10E: Number = 0.4342944819032518

    0108: [0] 4e 0e e5 26 15 7b cb db 3f . loadDouble <0.434294> 
    0117: [1] 57 ......................... loadThis 
    0118: [2] b3 90 a2 06 e0 01 .......... putObjName <LOG10E> <public> 
    0124: [0] 33 02 e6 60 9e a2 06 ....... debug 

    # ejs.es:6195                       static const PI: Number = 3.1415926535897932

    0131: [0] 4e 18 2d 44 54 fb 21 09 40 . loadDouble <3.141593> 
    0140: [1] 57 ......................... loadThis 
    0141: [2] b3 88 a3 06 e0 01 .......... putObjName <PI> <public> 
    0147: [0] 33 02 f0 60 8e a3 06 ....... debug 

    # ejs.es:6200                       static const SQRT1_2: Number = 0.7071067811865476

    0154: [0] 4e cd 3b 7f 66 9e a0 e6 3f . loadDouble <0.707107> 
    0163: [1] 57 ......................... loadThis 
    0164: [2] b3 82 a4 06 e0 01 .......... putObjName <SQRT1_2> <public> 
    0170: [0] 33 02 fa 60 92 a4 06 ....... debug 

    # ejs.es:6205                       static const SQRT2: Number = 1.4142135623730951

    0177: [0] 4e cd 3b 7f 66 9e a0 f6 3f . loadDouble <1.414214> 
    0186: [1] 57 ......................... loadThis 
    0187: [2] b3 82 a5 06 e0 01 .......... putObjName <SQRT2> <public> 
    0193: [0] 33 02 88 61 8e a5 06 ....... debug 

    # ejs.es:6212                       native static function abs(value: Number): Number 

    0200: [0] 33 02 96 61 8c a6 06 ....... debug 

    # ejs.es:6219                       native static function acos(angle: Number): Number 

    0207: [0] 33 02 a4 61 9a a7 06 ....... debug 

    # ejs.es:6226                       native static function asin(oper: Number): Number 

    0214: [0] 33 02 b2 61 a4 a8 06 ....... debug 

    # ejs.es:6233                       native static function atan(oper: Number): Number 

    0221: [0] 33 02 c2 61 a4 a9 06 ....... debug 

    # ejs.es:6241                       native static function atan2(y: Number, x: Number): Number 

    0228: [0] 33 02 ce 61 bc aa 06 ....... debug 

    # ejs.es:6247                       native static function ceil(oper: Number): Number

    0235: [0] 33 02 dc 61 ba ab 06 ....... debug 

    # ejs.es:6254                       native static function cos(angle: Number): Number 

    0242: [0] 33 02 e6 61 b8 ac 06 ....... debug 

    # ejs.es:6259                       native static function exp(power: Number): Number 

    0249: [0] 33 02 f4 61 c2 ad 06 ....... debug 

    # ejs.es:6266                       native static function floor(oper: Number): Number

    0256: [0] 33 02 86 62 c4 ae 06 ....... debug 

    # ejs.es:6275                       native static function log10(oper: Number): Number 

    0263: [0] 33 02 94 62 c8 af 06 ....... debug 

    # ejs.es:6282                       native static function log(oper: Number): Number 

    0270: [0] 33 02 a4 62 bc b0 06 ....... debug 

    # ejs.es:6290                       native static function max(x: Number, y: Number): Number

    0277: [0] 33 02 b4 62 c6 b1 06 ....... debug 

    # ejs.es:6298                       native static function min(x: Number, y: Number): Number

    0284: [0] 33 02 c4 62 c8 b2 06 ....... debug 

    # ejs.es:6306                       native static function pow(num: Number, pow: Number): Number

    0291: [0] 33 02 d0 62 da b3 06 ....... debug 

    # ejs.es:6312                       native static function random(): Number 

    0298: [0] 33 02 de 62 ca b4 06 ....... debug 

    # ejs.es:6319                       native static function round(num: Number): Number

    0305: [0] 33 02 ec 62 ca b5 06 ....... debug 

    # ejs.es:6326                       native static function sin(angle: Number): Number 

    0312: [0] 33 02 fa 62 c8 b6 06 ....... debug 

    # ejs.es:6333                       native static function sqrt(oper: Number): Number 

    0319: [0] 33 02 88 63 c8 b7 06 ....... debug 

    # ejs.es:6340                       native static function tan(angle: Number): Number 

    0326: [0] be ......................... return 
    
VARIABLE:   [Math-27]  public const static var E
VARIABLE:   [Math-28]  public const static var LN2
VARIABLE:   [Math-29]  public const static var LN10
VARIABLE:   [Math-30]  public const static var LOG2E
VARIABLE:   [Math-31]  public const static var LOG10E
VARIABLE:   [Math-32]  public const static var PI
VARIABLE:   [Math-33]  public const static var SQRT1_2
VARIABLE:   [Math-34]  public const static var SQRT2

FUNCTION:   [Math-35]  public native const static function abs(value) : void

     ARG:   [arg-00]   private value

    
VARIABLE:   [value-00]  private var value

FUNCTION:   [Math-36]  public native const static function acos(angle) : void

     ARG:   [arg-00]   private angle

    
VARIABLE:   [angle-00]  private var angle

FUNCTION:   [Math-37]  public native const static function asin(oper) : void

     ARG:   [arg-00]   private oper

    
VARIABLE:   [oper-00]  private var oper

FUNCTION:   [Math-38]  public native const static function atan(oper) : void

     ARG:   [arg-00]   private oper

    
VARIABLE:   [oper-00]  private var oper

FUNCTION:   [Math-39]  public native const static function atan2(y, x) : void

     ARG:   [arg-00]   private y
     ARG:   [arg-01]   private x

    
VARIABLE:   [y-00]  private var y
VARIABLE:   [x-01]  private var x

FUNCTION:   [Math-40]  public native const static function ceil(oper) : void

     ARG:   [arg-00]   private oper

    
VARIABLE:   [oper-00]  private var oper

FUNCTION:   [Math-41]  public native const static function cos(angle) : void

     ARG:   [arg-00]   private angle

    
VARIABLE:   [angle-00]  private var angle

FUNCTION:   [Math-42]  public native const static function exp(power) : void

     ARG:   [arg-00]   private power

    
VARIABLE:   [power-00]  private var power

FUNCTION:   [Math-43]  public native const static function floor(oper) : void

     ARG:   [arg-00]   private oper

    
VARIABLE:   [oper-00]  private var oper

FUNCTION:   [Math-44]  public native const static function log10(oper) : void

     ARG:   [arg-00]   private oper

    
VARIABLE:   [oper-00]  private var oper

FUNCTION:   [Math-45]  public native const static function log(oper) : void

     ARG:   [arg-00]   private oper

    
VARIABLE:   [oper-00]  private var oper

FUNCTION:   [Math-46]  public native const static function max(x, y) : void

     ARG:   [arg-00]   private x
     ARG:   [arg-01]   private y

    
VARIABLE:   [x-00]  private var x
VARIABLE:   [y-01]  private var y

FUNCTION:   [Math-47]  public native const static function min(x, y) : void

     ARG:   [arg-00]   private x
     ARG:   [arg-01]   private y

    
VARIABLE:   [x-00]  private var x
VARIABLE:   [y-01]  private var y

FUNCTION:   [Math-48]  public native const static function pow(num, pow) : void

     ARG:   [arg-00]   private num
     ARG:   [arg-01]   private pow

    
VARIABLE:   [num-00]  private var num
VARIABLE:   [pow-01]  private var pow

FUNCTION:   [Math-49]  public native const static function random() : void


    

FUNCTION:   [Math-50]  public native const static function round(num) : void

     ARG:   [arg-00]   private num

    
VARIABLE:   [num-00]  private var num

FUNCTION:   [Math-51]  public native const static function sin(angle) : void

     ARG:   [arg-00]   private angle

    
VARIABLE:   [angle-00]  private var angle

FUNCTION:   [Math-52]  public native const static function sqrt(oper) : void

     ARG:   [arg-00]   private oper

    
VARIABLE:   [oper-00]  private var oper

FUNCTION:   [Math-53]  public native const static function tan(angle) : void

     ARG:   [arg-00]   private angle

    
VARIABLE:   [angle-00]  private var angle

CLASS:      class Memory extends Object
            #  Class Details: 35 class traits, 0 instance traits, requested slot 104

FUNCTION:   [Memory-26]  public native const static get function allocated() : void


    

FUNCTION:   [Memory-27]  public native const static get function callback() : void


    

FUNCTION:   [Memory-27]  public native const static set function callback(fn: Function) : void

     ARG:   [arg-00]   private fn : Function

    
VARIABLE:   [fn-00]  private var fn : Function

FUNCTION:   [Memory-28]  public native const static get function maximum() : void


    

FUNCTION:   [Memory-28]  public native const static set function maximum(value) : void

     ARG:   [arg-00]   private value

    
VARIABLE:   [value-00]  private var value

FUNCTION:   [Memory-29]  public native const static get function peak() : void


    

FUNCTION:   [Memory-30]  public native const static get function redline() : void


    

FUNCTION:   [Memory-30]  public native const static set function redline(value) : void

     ARG:   [arg-00]   private value

    
VARIABLE:   [value-00]  private var value

FUNCTION:   [Memory-31]  public native const static get function resident() : void


    

FUNCTION:   [Memory-32]  public native const static get function stack() : void


    

FUNCTION:   [Memory-33]  public native const static get function system() : void


    

FUNCTION:   [Memory-34]  public native const static function stats() : void


    

CLASS:      native final class Namespace extends Object
            #  Class Details: 26 class traits, 0 instance traits, requested slot 105

CLASS:      native final class Null extends Object
            #  Class Details: 26 class traits, 0 instance traits, requested slot 106

FUNCTION:   [Null-08]  iterator native const override function get() : Iterator


    

FUNCTION:   [Null-12]  iterator native const override function getValues() : Iterator


    

CLASS:      native final class Number extends Object
            #  Class Details: 49 class traits, 0 instance traits, requested slot 107

FUNCTION:   [Number-08]  iterator native const override function get() : Iterator


    

FUNCTION:   [Number-12]  iterator native const override function getValues() : Iterator


    

FUNCTION:   [Number-24]  public native const override function toString(radix: Number) : void

     ARG:   [arg-00]   private radix : Number

    
VARIABLE:   [radix-00]  private var radix : Number

FUNCTION:   [Number-26]  -constructor- native const function Number(value: Object) : void

     ARG:   [arg-00]   private value : Object

    
VARIABLE:   [value-00]  private var value : Object

FUNCTION:   [Number-27]  -initializer- static function Number-initializer() : void


    0000: [0] 33 02 ba 69 c4 03 .......... debug 

    # ejs.es:6749                       use default namespace public

    0006: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0008: [1] 02 ......................... addNamespaceRef 
    0009: [0] 33 02 c8 69 8a c7 06 ....... debug 

    # ejs.es:6756                       native function Number(value: Object? = null)

    0016: [0] 33 02 d4 69 f6 c7 06 ....... debug 

    # ejs.es:6762                       static var /* const */ MAX_VALUE: Number = MaxValue

    0023: [0] 57 ......................... loadThis 
    0024: [1] 7b 82 c9 06 e0 01 .......... getObjName <MaxValue> <public> 
    0030: [1] 57 ......................... loadThis 
    0031: [2] b3 ee c8 06 e0 01 .......... putObjName <MAX_VALUE> <public> 
    0037: [0] 33 02 e0 69 94 c9 06 ....... debug 

    # ejs.es:6768                       static var /* const */ MIN_VALUE: Number = MinValue

    0044: [0] 57 ......................... loadThis 
    0045: [1] 7b a0 ca 06 e0 01 .......... getObjName <MinValue> <public> 
    0051: [1] 57 ......................... loadThis 
    0052: [2] b3 8c ca 06 e0 01 .......... putObjName <MIN_VALUE> <public> 
    0058: [0] 33 02 ea 69 b2 ca 06 ....... debug 

    # ejs.es:6773                       static var /* const */ NaN : Number = NaN

    0065: [0] 57 ......................... loadThis 
    0066: [1] 7b de 9e 04 e0 01 .......... getObjName <NaN> <public> 
    0072: [1] 57 ......................... loadThis 
    0073: [2] b3 de 9e 04 e0 01 .......... putObjName <NaN> <public> 
    0079: [0] 33 02 f6 69 96 cb 06 ....... debug 

    # ejs.es:6779                       static var /* const */ NEGATIVE_INFINITY: Number = NegativeInfinity

    0086: [0] 7e 7e ...................... getGlobalSlot <slot: 63> 
    0088: [1] 57 ......................... loadThis 
    0089: [2] b3 ae cc 06 e0 01 .......... putObjName <NEGATIVE_INFINITY> <public> 
    0095: [0] 33 02 82 6a d2 cc 06 ....... debug 

    # ejs.es:6785                       static var /* const */ POSITIVE_INFINITY: Number = Infinity

    0102: [0] 7e 7c ...................... getGlobalSlot <slot: 62> 
    0104: [1] 57 ......................... loadThis 
    0105: [2] b3 da cd 06 e0 01 .......... putObjName <POSITIVE_INFINITY> <public> 
    0111: [0] 33 02 90 6a fe cd 06 ....... debug 

    # ejs.es:6792                       native static const MaxValue: Number

    0118: [0] 33 02 9e 6a d8 ce 06 ....... debug 

    # ejs.es:6799                       native static const MinValue: Number

    0125: [0] 33 02 aa 6a b2 cf 06 ....... debug 

    # ejs.es:6805                       function get abs(): Number

    0132: [0] 33 02 b8 6a ae d0 06 ....... debug 

    # ejs.es:6812                       function get ceil(): Number 

    0139: [0] 33 02 c6 6a b0 d1 06 ....... debug 

    # ejs.es:6819                       function get floor(): Number

    0146: [0] 33 02 d4 6a b4 d2 06 ....... debug 

    # ejs.es:6826                       native function get isFinite(): Boolean

    0153: [0] 33 02 e0 6a 94 d3 06 ....... debug 

    # ejs.es:6832                       native function get isNaN(): Boolean

    0160: [0] 33 02 ec 6a ee d3 06 ....... debug 

    # ejs.es:6838                       function get round(): Number

    0167: [0] 33 02 fe 6a f2 d4 06 ....... debug 

    # ejs.es:6847                       native function toExponential(fractionDigits: Number = 0): String

    0174: [0] 33 02 8c 6b c0 d6 06 ....... debug 

    # ejs.es:6854                       native function toFixed(fractionDigits: Number = 0): String

    0181: [0] 33 02 9a 6b d8 d7 06 ....... debug 

    # ejs.es:6861                       native function toPrecision(numDigits: Number = MAX_VALUE): String

    0188: [0] 33 02 a8 6b 9a d9 06 ....... debug 

    # ejs.es:6868                       function get byte(): Number

    0195: [0] 33 02 bc 6b ae da 06 ....... debug 

    # ejs.es:6878                       native function integral(size: Number = 32): Number

    0202: [0] 33 02 d0 6b e0 63 .......... debug 

    # ejs.es:6888                       override iterator native function get(): Iterator

    0208: [0] 33 02 e4 6b d4 64 .......... debug 

    # ejs.es:6898                       override iterator native function getValues(): Iterator

    0214: [0] 33 02 f4 6b a6 db 06 ....... debug 

    # ejs.es:6906                       function max(...other): Number {

    0221: [0] 33 02 96 6c ce de 06 ....... debug 

    # ejs.es:6923                       function min(...other): Number {

    0228: [0] 33 02 b8 6c e4 df 06 ....... debug 

    # ejs.es:6940                       function power(nth: Number): Number

    0235: [0] 33 02 ca 6c 84 e1 06 ....... debug 

    # ejs.es:6949                       override native function toString(radix: Number = 10): String

    0242: [0] be ......................... return 
    
VARIABLE:   [Number-28]  public static var MAX_VALUE : Number
VARIABLE:   [Number-29]  public static var MIN_VALUE : Number
VARIABLE:   [Number-30]  public static var NaN : Number
VARIABLE:   [Number-31]  public static var NEGATIVE_INFINITY : Number
VARIABLE:   [Number-32]  public static var POSITIVE_INFINITY : Number
VARIABLE:   [Number-33]  public native const static var MaxValue : Number
VARIABLE:   [Number-34]  public native const static var MinValue : Number

FUNCTION:   [Number-35]  public const get function abs() : Number


    0000: [0] 33 02 ac 6a f8 cf 06 ....... debug 

    # ejs.es:6806                           Math.abs(this)

    0007: [0] 7e ce 01 ................... getGlobalSlot <slot: 103> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] 1e 84 a6 06 e0 01 02 ....... callObjName <abs> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Number-36]  public const get function ceil() : Number


    0000: [0] 33 02 ba 6a f8 d0 06 ....... debug 

    # ejs.es:6813                           Math.ceil(this)

    0007: [0] 7e ce 01 ................... getGlobalSlot <slot: 103> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] 1e b0 ab 06 e0 01 02 ....... callObjName <ceil> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Number-37]  public const get function floor() : Number


    0000: [0] 33 02 c8 6a fa d1 06 ....... debug 

    # ejs.es:6820                           Math.floor(this)

    0007: [0] 7e ce 01 ................... getGlobalSlot <slot: 103> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] 1e b8 ae 06 e0 01 02 ....... callObjName <floor> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Number-38]  public native const get function isFinite() : Boolean


    

FUNCTION:   [Number-39]  public native const get function isNaN() : Boolean


    

FUNCTION:   [Number-40]  public const get function round() : Number


    0000: [0] 33 02 ee 6a b8 d4 06 ....... debug 

    # ejs.es:6839                           Math.round(this)

    0007: [0] 7e ce 01 ................... getGlobalSlot <slot: 103> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] 1e be b5 06 e0 01 02 ....... callObjName <round> <public> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    

FUNCTION:   [Number-41]  public native const function toExponential(fractionDigits: Number) : void

     ARG:   [arg-00]   private fractionDigits : Number

    
VARIABLE:   [fractionDigits-00]  private var fractionDigits : Number

FUNCTION:   [Number-42]  public native const function toFixed(fractionDigits: Number) : void

     ARG:   [arg-00]   private fractionDigits : Number

    
VARIABLE:   [fractionDigits-00]  private var fractionDigits : Number

FUNCTION:   [Number-43]  public native const function toPrecision(numDigits: Number) : void

     ARG:   [arg-00]   private numDigits : Number

    
VARIABLE:   [numDigits-00]  private var numDigits : Number

FUNCTION:   [Number-44]  public const get function byte() : Number


    0000: [0] 33 02 aa 6b e2 d9 06 ....... debug 

    # ejs.es:6869                           integral(8)

    0007: [0] 4c ......................... load8 
    0008: [1] 1f 92 da 06 e0 01 02 ....... callScopedName <integral> <public> <argc: 1> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [Number-45]  public native const function integral(size: Number) : Number

     ARG:   [arg-00]   private size : Number

    
VARIABLE:   [size-00]  private var size : Number

FUNCTION:   [Number-46]  public const function max(other: Array) : Number

     ARG:   [arg-00]   private other : Array
   LOCAL:   [local-01] var result
   LOCAL:   [local-02] var n

    0000: [0] 33 02 f6 6b f8 db 06 ....... debug 

    # ejs.es:6907                           let result = this

    0007: [0] 57 ......................... loadThis 
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 02 f8 6b b4 dc 06 ....... debug 

    # ejs.es:6908                           for each (n in other) {

    0016: [0] 5b ......................... getLocalSlot0 
    0017: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] 39 ......................... dup 
    0025: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0028: [1] 93 ......................... pushResult 
    0029: [2] 96 ......................... putLocalSlot2 
    0030: [1] 33 02 fa 6b fc dc 06 ....... debug 

    # ejs.es:6909                               n = n cast Number

    0037: [1] 5d ......................... getLocalSlot2 
    0038: [2] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0041: [3] 22 ......................... cast 
    0042: [2] 96 ......................... putLocalSlot2 
    0043: [1] 33 02 fc 6b c0 dd 06 ....... debug 

    # ejs.es:6910                               if (n > result) {

    0050: [1] 5d ......................... getLocalSlot2 
    0051: [2] 5c ......................... getLocalSlot1 
    0052: [3] 29 ......................... compareGt 
    0053: [2] 13 0b ...................... branchFalse8 <addr: 66> 
    0055: [1] 33 02 fe 6b 84 de 06 ....... debug 

    # ejs.es:6911                                   result = n

    0062: [1] 5d ......................... getLocalSlot2 
    0063: [2] 95 ......................... putLocalSlot1 
    0064: [1] 3e 00 ...................... goto8 <addr: 66> 
    0066: [1] 3e d4 ...................... goto8 <addr: 24> 
    0068: [1] 90 ......................... pop 
    0069: [0] 33 02 84 6c a4 5d .......... debug 

    # ejs.es:6914                           return result

    0075: [0] 5c ......................... getLocalSlot1 
    0076: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     25      28         68           68       StopIteration

VARIABLE:   [other-00]  private var other : Array
VARIABLE:   [result-01]  private var result
VARIABLE:   [n-02]  -hoisted-2 var n

FUNCTION:   [Number-47]  public const function min(other: Array) : Number

     ARG:   [arg-00]   private other : Array
   LOCAL:   [local-01] var result
   LOCAL:   [local-02] var n

    0000: [0] 33 02 98 6c f8 db 06 ....... debug 

    # ejs.es:6924                           let result = this

    0007: [0] 57 ......................... loadThis 
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 02 9a 6c b4 dc 06 ....... debug 

    # ejs.es:6925                           for each (n in other) {

    0016: [0] 5b ......................... getLocalSlot0 
    0017: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] 39 ......................... dup 
    0025: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0028: [1] 93 ......................... pushResult 
    0029: [2] 96 ......................... putLocalSlot2 
    0030: [1] 33 02 9c 6c fc dc 06 ....... debug 

    # ejs.es:6926                               n = n cast Number

    0037: [1] 5d ......................... getLocalSlot2 
    0038: [2] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0041: [3] 22 ......................... cast 
    0042: [2] 96 ......................... putLocalSlot2 
    0043: [1] 33 02 9e 6c a0 df 06 ....... debug 

    # ejs.es:6927                               if (n < result) {

    0050: [1] 5d ......................... getLocalSlot2 
    0051: [2] 5c ......................... getLocalSlot1 
    0052: [3] 2b ......................... compareLt 
    0053: [2] 13 0b ...................... branchFalse8 <addr: 66> 
    0055: [1] 33 02 a0 6c 84 de 06 ....... debug 

    # ejs.es:6928                                   result = n

    0062: [1] 5d ......................... getLocalSlot2 
    0063: [2] 95 ......................... putLocalSlot1 
    0064: [1] 3e 00 ...................... goto8 <addr: 66> 
    0066: [1] 3e d4 ...................... goto8 <addr: 24> 
    0068: [1] 90 ......................... pop 
    0069: [0] 33 02 a6 6c a4 5d .......... debug 

    # ejs.es:6931                           return result

    0075: [0] 5c ......................... getLocalSlot1 
    0076: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     25      28         68           68       StopIteration

VARIABLE:   [other-00]  private var other : Array
VARIABLE:   [result-01]  private var result
VARIABLE:   [n-02]  -hoisted-2 var n

FUNCTION:   [Number-48]  public const function power(nth: Number) : Number

     ARG:   [arg-00]   private nth : Number

    0000: [0] 33 02 ba 6c bc e0 06 ....... debug 

    # ejs.es:6941                           Math.pow(this, nth)

    0007: [0] 7e ce 01 ................... getGlobalSlot <slot: 103> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] 5b ......................... getLocalSlot0 
    0012: [3] 1e d2 b3 06 e0 01 04 ....... callObjName <pow> <public> <argc: 2> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [nth-00]  private var nth : Number

CLASS:      final class Path extends Object
            #  Class Details: 85 class traits, 0 instance traits, requested slot 109

FUNCTION:   [Path-08]  iterator native const override function get() : Iterator


    

FUNCTION:   [Path-12]  iterator native const override function getValues() : Iterator


    

FUNCTION:   [Path-22]  public native const override function toJSON() : void


    

FUNCTION:   [Path-24]  public native const override function toString() : void


    

FUNCTION:   [Path-26]  -constructor- native const function Path(path) : void

     ARG:   [arg-00]   private path

    
VARIABLE:   [path-00]  private var path

FUNCTION:   [Path-27]  public native const get function absolute() : Path


    

FUNCTION:   [Path-28]  public native const get function accessed() : Date


    

FUNCTION:   [Path-29]  public native const get function basename() : Path


    

FUNCTION:   [Path-30]  public native const get function components() : Array


    

FUNCTION:   [Path-31]  public const function contains(pattern) : Boolean

     ARG:   [arg-00]   private pattern

    0000: [0] 33 02 9c 73 f2 87 07 ....... debug 

    # ejs.es:7374                           name.contains(pattern)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e 9e 55 00 02 ............. callObjName <contains> <> <argc: 1> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [pattern-00]  private var pattern

FUNCTION:   [Path-32]  public native const function copy(target: Object, options: Object) : void

     ARG:   [arg-00]   private target : Object
     ARG:   [arg-01]   private options : Object

    
VARIABLE:   [target-00]  private var target : Object
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Path-33]  public native const get function created() : Date


    

FUNCTION:   [Path-34]  public native const get function dirname() : Path


    

FUNCTION:   [Path-35]  public const function endsWith(suffix) : Boolean

     ARG:   [arg-00]   private suffix

    0000: [0] 33 02 d4 73 92 8c 07 ....... debug 

    # ejs.es:7402                           name.endsWith(suffix)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e d6 8c 07 00 02 .......... callObjName <endsWith> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [suffix-00]  private var suffix

FUNCTION:   [Path-36]  public native const get function exists() : Boolean


    

FUNCTION:   [Path-37]  public native const get function extension() : void


    

FUNCTION:   [Path-38]  public const function find(glob, recurse: Boolean) : Array

     ARG:   [arg-00]   private glob
     ARG:   [arg-01]   private recurse : Boolean
   LOCAL:   [local-02] var recursiveFind : Function

    0000: [0] 41 03 03 08 0c ............. initDefaultArgs8 <3> <5> <10> <14> 
    0005: [0] 56 e2 8f 07 ................ loadString <*> 
    0009: [1] 94 ......................... putLocalSlot0 
    0010: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0013: [1] 95 ......................... putLocalSlot1 
    0014: [0] 33 02 fa 73 e6 8f 07 ....... debug 

    # ejs.es:7421                           function recursiveFind(path: Path, pattern: RegExp, recurse: Boolean): Array {

    0021: [0] 35 04 00 ................... defineFunction <slot: 2> <0> 
    0024: [0] 33 02 a2 74 bc 15 .......... debug 

    # ejs.es:7441                           }

    0030: [0] 33 02 a4 74 8c 9b 07 ....... debug 

    # ejs.es:7442                           pattern = RegExp("^" + glob.replace(/\./g, "\\.").replace(/\*/g, ".*") + "$")

    0037: [0] 56 c0 9c 07 ................ loadString <^> 
    0041: [1] 5b ......................... getLocalSlot0 
    0042: [2] 55 c4 9c 07 ................ loadRegexp </\./g> 
    0046: [3] 56 d0 9c 07 ................ loadString <\.> 
    0050: [4] 1e f0 f3 01 e0 01 04 ....... callObjName <replace> <public> <argc: 2> 
    0057: [1] 93 ......................... pushResult 
    0058: [2] 55 d6 9c 07 ................ loadRegexp </\*/g> 
    0062: [3] 56 e2 9c 07 ................ loadString <.*> 
    0066: [4] 1e f0 f3 01 00 04 .......... callObjName <replace> <> <argc: 2> 
    0072: [1] 93 ......................... pushResult 
    0073: [2] 00 ......................... add 
    0074: [1] 56 e8 9c 07 ................ loadString <$> 
    0078: [2] 00 ......................... add 
    0079: [1] 17 e2 01 02 ................ callGlobalSlot <slot: 113> <argc: 1> 
    0083: [0] 93 ......................... pushResult 
    0084: [1] b4 b8 fe 05 d8 31 .......... putScopedName <pattern> <> 
    0090: [0] 33 02 a6 74 ec 9c 07 ....... debug 

    # ejs.es:7443                           return recursiveFind(this, pattern, recurse)

    0097: [0] 57 ......................... loadThis 
    0098: [1] 79 b8 fe 05 d8 31 .......... getScopedName <pattern> <> 
    0104: [2] 5c ......................... getLocalSlot1 
    0105: [3] 1a 04 00 06 ................ callBlockSlot <slot: 2> <0> <argc: 3> 
    0109: [0] 93 ......................... pushResult 
    0110: [1] bf ......................... returnValue 
    
VARIABLE:   [glob-00]  private var glob
VARIABLE:   [recurse-01]  private var recurse : Boolean

FUNCTION:   [recursiveFind-02]  private function recursiveFind(path: Path, pattern, recurse: Boolean) : Array

     ARG:   [arg-00]   private path : Path
     ARG:   [arg-01]   private pattern
     ARG:   [arg-02]   private recurse : Boolean
   LOCAL:   [local-03] var result : Array
   LOCAL:   [local-04] var f
   LOCAL:   [local-05] var got : Array
   LOCAL:   [local-06] var i

    0000: [0] 33 02 fc 73 9c 91 07 ....... debug 

    # ejs.es:7422                               let result: Array = []

    0007: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0009: [1] 89 ......................... new 
    0010: [1] 97 ......................... putLocalSlot3 
    0011: [0] 33 02 fe 73 ea 91 07 ....... debug 

    # ejs.es:7423                               if (path.isDir) {

    0018: [0] 5b ......................... getLocalSlot0 
    0019: [1] 7b ae 92 07 e0 01 .......... getObjName <isDir> <public> 
    0025: [1] 07 be 02 f7 f7 ............. branchFalse <addr: 189> 
    0030: [0] 33 02 80 74 ba 92 07 ....... debug 

    # ejs.es:7424                                   for each (f in path.files(true)) {

    0037: [0] 5b ......................... getLocalSlot0 
    0038: [1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0041: [2] 1e bc c3 05 e0 01 02 ....... callObjName <files> <public> <argc: 1> 
    0048: [0] 93 ......................... pushResult 
    0049: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0055: [0] 93 ......................... pushResult 
    0056: [1] 39 ......................... dup 
    0057: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0060: [1] 93 ......................... pushResult 
    0061: [2] 98 ......................... putLocalSlot4 
    0062: [1] 33 02 82 74 a8 93 07 ....... debug 

    # ejs.es:7425                                       if (recurse) {

    0069: [1] 5d ......................... getLocalSlot2 
    0070: [2] 13 39 ...................... branchFalse8 <addr: 129> 
    0072: [1] 33 02 84 74 fe 93 07 ....... debug 

    # ejs.es:7426                                           let got: Array = recursiveFind(f, pattern, recurse)

    0079: [1] 5f ......................... getLocalSlot4 
    0080: [2] 5c ......................... getLocalSlot1 
    0081: [3] 5d ......................... getLocalSlot2 
    0082: [4] 1a 04 02 06 ................ callBlockSlot <slot: 2> <1> <argc: 3> 
    0086: [1] 93 ......................... pushResult 
    0087: [2] 99 ......................... putLocalSlot5 
    0088: [1] 33 02 86 74 9e 95 07 ....... debug 

    # ejs.es:7427                                           for each (i in got) {

    0095: [1] 60 ......................... getLocalSlot5 
    0096: [2] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0102: [1] 93 ......................... pushResult 
    0103: [2] 39 ......................... dup 
    0104: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0107: [2] 93 ......................... pushResult 
    0108: [3] 9a ......................... putLocalSlot6 
    0109: [2] 33 02 88 74 82 96 07 ....... debug 

    # ejs.es:7428                                               result.append(i)

    0116: [2] 5e ......................... getLocalSlot3 
    0117: [3] 61 ......................... getLocalSlot6 
    0118: [4] 1e 88 4f e0 01 02 .......... callObjName <append> <public> <argc: 1> 
    0124: [2] 3e e9 ...................... goto8 <addr: 103> 
    0126: [2] 90 ......................... pop 
    0127: [1] 3e 34 ...................... goto8 <addr: 181> 
    0129: [1] 33 02 8c 74 80 af 03 ....... debug 

    # ejs.es:7430                                       } else {

    0136: [1] 33 02 8e 74 e4 96 07 ....... debug 

    # ejs.es:7431                                           if (f.basename.toString().match(pattern)) {

    0143: [1] 5f ......................... getLocalSlot4 
    0144: [2] 7b b2 bc 05 00 ............. getObjName <basename> <> 
    0149: [2] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0154: [1] 93 ......................... pushResult 
    0155: [2] 5c ......................... getLocalSlot1 
    0156: [3] 1e da 44 00 02 ............. callObjName <match> <> <argc: 1> 
    0161: [1] 93 ......................... pushResult 
    0162: [2] 13 11 ...................... branchFalse8 <addr: 181> 
    0164: [1] 33 02 90 74 f4 97 07 ....... debug 

    # ejs.es:7432                                               result.append(f)

    0171: [1] 5e ......................... getLocalSlot3 
    0172: [2] 5f ......................... getLocalSlot4 
    0173: [3] 1e 88 4f e0 01 02 .......... callObjName <append> <public> <argc: 1> 
    0179: [1] 3e 00 ...................... goto8 <addr: 181> 
    0181: [1] 3d 85 02 f7 f7 ............. goto <addr: 56> 
    0186: [1] 90 ......................... pop 
    0187: [0] 3e 00 ...................... goto8 <addr: 189> 
    0189: [0] 33 02 9a 74 d6 98 07 ....... debug 

    # ejs.es:7437                               if (path.basename.toString().match(pattern)) {

    0196: [0] 5b ......................... getLocalSlot0 
    0197: [1] 7b b2 bc 05 e0 01 .......... getObjName <basename> <public> 
    0203: [1] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0208: [0] 93 ......................... pushResult 
    0209: [1] 5c ......................... getLocalSlot1 
    0210: [2] 1e da 44 00 02 ............. callObjName <match> <> <argc: 1> 
    0215: [0] 93 ......................... pushResult 
    0216: [1] 13 11 ...................... branchFalse8 <addr: 235> 
    0218: [0] 33 02 9c 74 d4 99 07 ....... debug 

    # ejs.es:7438                                   result.append(path)

    0225: [0] 5e ......................... getLocalSlot3 
    0226: [1] 5b ......................... getLocalSlot0 
    0227: [2] 1e 88 4f e0 01 02 .......... callObjName <append> <public> <argc: 1> 
    0233: [0] 3e 00 ...................... goto8 <addr: 235> 
    0235: [0] 33 02 a0 74 a4 9a 07 ....... debug 

    # ejs.es:7440                               return result

    0242: [0] 5e ......................... getLocalSlot3 
    0243: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    104     107        126          126       StopIteration
1   iteration     57      60        186          186       StopIteration

VARIABLE:   [path-00]  private var path : Path
VARIABLE:   [pattern-01]  private var pattern
VARIABLE:   [recurse-02]  private var recurse : Boolean
VARIABLE:   [result-03]  private var result : Array
VARIABLE:   [f-04]  -hoisted-4 var f
VARIABLE:   [got-05]  -hoisted-5 var got : Array
VARIABLE:   [i-06]  -hoisted-6 var i

FUNCTION:   [Path-39]  public native const function files(enumDirs: Boolean) : Array

     ARG:   [arg-00]   private enumDirs : Boolean

    
VARIABLE:   [enumDirs-00]  private var enumDirs : Boolean

FUNCTION:   [Path-40]  public native const get function hasDrive() : Boolean


    

FUNCTION:   [Path-41]  public native const get function isAbsolute() : Boolean


    

FUNCTION:   [Path-42]  public native const get function isDir() : Boolean


    

FUNCTION:   [Path-43]  public native const get function isLink() : Boolean


    

FUNCTION:   [Path-44]  public native const get function isRegular() : Boolean


    

FUNCTION:   [Path-45]  public native const get function isRelative() : Boolean


    

FUNCTION:   [Path-46]  public native const function join(other: Array) : Path

     ARG:   [arg-00]   private other : Array

    
VARIABLE:   [other-00]  private var other : Array

FUNCTION:   [Path-47]  public native const function joinExt(ext) : Path

     ARG:   [arg-00]   private ext

    
VARIABLE:   [ext-00]  private var ext

FUNCTION:   [Path-48]  public native const get function length() : Number


    

FUNCTION:   [Path-49]  public native const get function linkTarget() : Path


    

FUNCTION:   [Path-50]  public native const function makeDir(options: Object) : void

     ARG:   [arg-00]   private options : Object

    
VARIABLE:   [options-00]  private var options : Object

FUNCTION:   [Path-51]  public native const function makeLink(target: Path, hard: Boolean) : void

     ARG:   [arg-00]   private target : Path
     ARG:   [arg-01]   private hard : Boolean

    
VARIABLE:   [target-00]  private var target : Path
VARIABLE:   [hard-01]  private var hard : Boolean

FUNCTION:   [Path-52]  public native const function makeTemp() : Path


    

FUNCTION:   [Path-53]  public native const function map(separator) : Path

     ARG:   [arg-00]   private separator

    
VARIABLE:   [separator-00]  private var separator

FUNCTION:   [Path-54]  public native const function mimeType() : void


    

FUNCTION:   [Path-55]  public native const get function modified() : Date


    

FUNCTION:   [Path-56]  public native const get function name() : void


    

FUNCTION:   [Path-57]  public native const get function natural() : Path


    

FUNCTION:   [Path-58]  public native const get function normalize() : Path


    

FUNCTION:   [Path-59]  public const function open(options: Object) : File

     ARG:   [arg-00]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 80 77 c2 b0 07 ....... debug 

    # ejs.es:7616                           new File(this, options)

    0014: [0] 7e 48 ...................... getGlobalSlot <slot: 36> 
    0016: [1] 89 ......................... new 
    0017: [1] 57 ......................... loadThis 
    0018: [2] 5b ......................... getLocalSlot0 
    0019: [3] 20 04 ...................... callConstructor <argc: 2> 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [options-00]  private var options : Object

FUNCTION:   [Path-60]  public const function openTextStream(options: Object) : void

     ARG:   [arg-00]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 9e 77 94 b2 07 ....... debug 

    # ejs.es:7631                           new TextStream(open(options))

    0014: [0] 7e ec 01 ................... getGlobalSlot <slot: 118> 
    0017: [1] 89 ......................... new 
    0018: [1] 5b ......................... getLocalSlot0 
    0019: [2] 1f 88 f1 03 e0 01 02 ....... callScopedName <open> <public> <argc: 1> 
    0026: [1] 93 ......................... pushResult 
    0027: [2] 20 02 ...................... callConstructor <argc: 1> 
    0029: [1] bf ......................... returnValue 
    
VARIABLE:   [options-00]  private var options : Object

FUNCTION:   [Path-61]  public const function openBinaryStream(options: Object) : BinaryStream

     ARG:   [arg-00]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 ba 77 98 b4 07 ....... debug 

    # ejs.es:7645                           new BinaryStream(open(options))

    0014: [0] 7e 0c ...................... getGlobalSlot <slot: 6> 
    0016: [1] 89 ......................... new 
    0017: [1] 5b ......................... getLocalSlot0 
    0018: [2] 1f 88 f1 03 e0 01 02 ....... callScopedName <open> <public> <argc: 1> 
    0025: [1] 93 ......................... pushResult 
    0026: [2] 20 02 ...................... callConstructor <argc: 1> 
    0028: [1] bf ......................... returnValue 
    
VARIABLE:   [options-00]  private var options : Object

FUNCTION:   [Path-62]  public native const get function parent() : Path


    

FUNCTION:   [Path-63]  public native const get function perms() : Number


    

FUNCTION:   [Path-63]  public native const set function perms(perms: Number) : void

     ARG:   [arg-00]   private perms : Number

    
VARIABLE:   [perms-00]  private var perms : Number

FUNCTION:   [Path-64]  public native const get function portable() : Path


    

FUNCTION:   [Path-65]  public const function readBytes() : ByteArray

   LOCAL:   [local-00] var file : File

    0000: [0] 33 02 fe 77 fc b8 07 ....... debug 

    # ejs.es:7679                           let file: File = File(this).open()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 17 48 02 ................... callGlobalSlot <slot: 36> <argc: 1> 
    0011: [0] 93 ......................... pushResult 
    0012: [1] 1e 88 f1 03 e0 01 00 ....... callObjName <open> <public> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] 94 ......................... putLocalSlot0 
    0021: [0] 33 02 80 78 da b9 07 ....... debug 

    # ejs.es:7680                           result = file.readBytes()

    0028: [0] 5b ......................... getLocalSlot0 
    0029: [1] 1e 9a f5 03 e0 01 00 ....... callObjName <readBytes> <public> <argc: 0> 
    0036: [0] 93 ......................... pushResult 
    0037: [1] b4 88 5b d8 31 ............. putScopedName <result> <> 
    0042: [0] 33 02 82 78 a6 ba 07 ....... debug 

    # ejs.es:7681                           file.close()

    0049: [0] 5b ......................... getLocalSlot0 
    0050: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0056: [0] 33 02 84 78 a4 5d .......... debug 

    # ejs.es:7682                           return result

    0062: [0] 79 88 5b d8 31 ............. getScopedName <result> <> 
    0067: [1] bf ......................... returnValue 
    
VARIABLE:   [file-00]  private var file : File

FUNCTION:   [Path-66]  public const function readLines() : Array

   LOCAL:   [local-00] var stream

    0000: [0] 33 02 9c 78 a4 bb 07 ....... debug 

    # ejs.es:7694                           let stream: TextStream = TextStream(open(this))

    0007: [0] 57 ......................... loadThis 
    0008: [1] 1f 88 f1 03 e0 01 02 ....... callScopedName <open> <public> <argc: 1> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 17 ec 01 02 ................ callGlobalSlot <slot: 118> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] 94 ......................... putLocalSlot0 
    0022: [0] 33 02 9e 78 b0 99 05 ....... debug 

    # ejs.es:7695                           result = stream.readLines()

    0029: [0] 5b ......................... getLocalSlot0 
    0030: [1] 1e 80 9a 05 e0 01 00 ....... callObjName <readLines> <public> <argc: 0> 
    0037: [0] 93 ......................... pushResult 
    0038: [1] b4 88 5b d8 31 ............. putScopedName <result> <> 
    0043: [0] 33 02 a0 78 9c bc 07 ....... debug 

    # ejs.es:7696                           stream.close()

    0050: [0] 5b ......................... getLocalSlot0 
    0051: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0057: [0] 33 02 a2 78 a4 5d .......... debug 

    # ejs.es:7697                           return result

    0063: [0] 79 88 5b d8 31 ............. getScopedName <result> <> 
    0068: [1] bf ......................... returnValue 
    
VARIABLE:   [stream-00]  private var stream

FUNCTION:   [Path-67]  public const function readString() : void

   LOCAL:   [local-00] var file : File

    0000: [0] 33 02 b8 78 a2 bd 07 ....... debug 

    # ejs.es:7708                           let file: File = open(this)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 1f 88 f1 03 e0 01 02 ....... callScopedName <open> <public> <argc: 1> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 94 ......................... putLocalSlot0 
    0017: [0] 33 02 ba 78 f2 bd 07 ....... debug 

    # ejs.es:7709                           result = file.readString()

    0024: [0] 5b ......................... getLocalSlot0 
    0025: [1] 1e 94 38 e0 01 00 .......... callObjName <readString> <public> <argc: 0> 
    0031: [0] 93 ......................... pushResult 
    0032: [1] b4 88 5b d8 31 ............. putScopedName <result> <> 
    0037: [0] 33 02 bc 78 a6 ba 07 ....... debug 

    # ejs.es:7710                           file.close()

    0044: [0] 5b ......................... getLocalSlot0 
    0045: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0051: [0] 33 02 be 78 a4 5d .......... debug 

    # ejs.es:7711                           return result

    0057: [0] 79 88 5b d8 31 ............. getScopedName <result> <> 
    0062: [1] bf ......................... returnValue 
    
VARIABLE:   [file-00]  private var file : File

FUNCTION:   [Path-68]  public const function readXML() : void

   LOCAL:   [local-00] var file : File
   LOCAL:   [local-01] var data

    0000: [0] 33 02 d0 78 a2 bd 07 ....... debug 

    # ejs.es:7720                           let file: File = open(this)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 1f 88 f1 03 e0 01 02 ....... callScopedName <open> <public> <argc: 1> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 94 ......................... putLocalSlot0 
    0017: [0] 33 02 d2 78 c0 be 07 ....... debug 

    # ejs.es:7721                           let data = file.readString()

    0024: [0] 5b ......................... getLocalSlot0 
    0025: [1] 1e 94 38 e0 01 00 .......... callObjName <readString> <public> <argc: 0> 
    0031: [0] 93 ......................... pushResult 
    0032: [1] 95 ......................... putLocalSlot1 
    0033: [0] 33 02 d4 78 a6 ba 07 ....... debug 

    # ejs.es:7722                           file.close()

    0040: [0] 5b ......................... getLocalSlot0 
    0041: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0047: [0] 33 02 d6 78 92 bf 07 ....... debug 

    # ejs.es:7723                           if (data == null) {

    0054: [0] 5c ......................... getLocalSlot1 
    0055: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0057: [2] 25 ......................... compareEq 
    0058: [1] 13 0c ...................... branchFalse8 <addr: 72> 
    0060: [0] 33 02 d8 78 d2 bf 07 ....... debug 

    # ejs.es:7724                               return null

    0067: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0069: [1] bf ......................... returnValue 
    0070: [0] 3e 00 ...................... goto8 <addr: 72> 
    0072: [0] 33 02 dc 78 c6 b3 01 ....... debug 

    # ejs.es:7726                           return new XML(data)

    0079: [0] 7e 8c 02 ................... getGlobalSlot <slot: 134> 
    0082: [1] 89 ......................... new 
    0083: [1] 5c ......................... getLocalSlot1 
    0084: [2] 20 02 ...................... callConstructor <argc: 1> 
    0086: [1] bf ......................... returnValue 
    
VARIABLE:   [file-00]  private var file : File
VARIABLE:   [data-01]  private var data

FUNCTION:   [Path-69]  public native const get function relative() : Path


    

FUNCTION:   [Path-70]  public native const function remove() : void


    

FUNCTION:   [Path-71]  public const function removeAll() : void

   LOCAL:   [local-00] var f

    0000: [0] 33 02 88 79 90 c2 07 ....... debug 

    # ejs.es:7748                           for each (f in find('*')) {

    0007: [0] 56 e2 8f 07 ................ loadString <*> 
    0011: [1] 1f d8 5d e0 01 02 .......... callScopedName <find> <public> <argc: 1> 
    0017: [0] 93 ......................... pushResult 
    0018: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0024: [0] 93 ......................... pushResult 
    0025: [1] 39 ......................... dup 
    0026: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0029: [1] 93 ......................... pushResult 
    0030: [2] 94 ......................... putLocalSlot0 
    0031: [1] 33 02 8a 79 e0 c2 07 ....... debug 

    # ejs.es:7749                               f.remove()

    0038: [1] 5b ......................... getLocalSlot0 
    0039: [2] 1e de 74 00 00 ............. callObjName <remove> <> <argc: 0> 
    0044: [1] 3e eb ...................... goto8 <addr: 25> 
    0046: [1] 90 ......................... pop 
    0047: [0] 33 02 8c 79 bc 15 .......... debug 

    # ejs.es:7750                           }

    0053: [0] 33 02 8e 79 96 c3 07 ....... debug 

    # ejs.es:7751                           remove()

    0060: [0] 1f de 74 e0 01 00 .......... callScopedName <remove> <public> <argc: 0> 
    0066: [0] 54 ......................... loadNull 
    0067: [1] bf ......................... returnValue 
    0068: [0] 33 02 90 79 b4 16 .......... debug 

    # ejs.es:7752                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     26      29         46           46       StopIteration

VARIABLE:   [f-00]  -hoisted-0 var f

FUNCTION:   [Path-72]  public native const function rename(target: Object) : void

     ARG:   [arg-00]   private target : Object

    
VARIABLE:   [target-00]  private var target : Object

FUNCTION:   [Path-73]  public const function replaceExt(ext) : Path

     ARG:   [arg-00]   private ext

    0000: [0] 33 02 ac 79 aa c5 07 ....... debug 

    # ejs.es:7766                           this.trimExt().joinExt(ext)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 1e fa c5 07 e0 01 00 ....... callObjName <trimExt> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 5b ......................... getLocalSlot0 
    0017: [2] 1e de a5 07 00 02 .......... callObjName <joinExt> <> <argc: 1> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [ext-00]  private var ext

FUNCTION:   [Path-74]  public native const function resolve(otherPaths: Array) : Path

     ARG:   [arg-00]   private otherPaths : Array

    
VARIABLE:   [otherPaths-00]  private var otherPaths : Array

FUNCTION:   [Path-75]  public native const function same(other: Object) : Boolean

     ARG:   [arg-00]   private other : Object

    
VARIABLE:   [other-00]  private var other : Object

FUNCTION:   [Path-76]  public native const get function separator() : void


    

FUNCTION:   [Path-77]  public native const get function size() : Number


    

FUNCTION:   [Path-78]  public const function startsWith(prefix) : Boolean

     ARG:   [arg-00]   private prefix

    0000: [0] 33 02 fc 79 ee c9 07 ....... debug 

    # ejs.es:7806                           this.toString().startsWith(prefix)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 1e aa 33 e0 01 00 .......... callObjName <toString> <public> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 5b ......................... getLocalSlot0 
    0016: [2] 1e b2 a1 02 00 02 .......... callObjName <startsWith> <> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    
VARIABLE:   [prefix-00]  private var prefix

FUNCTION:   [Path-79]  public const function toLower() : Path


    0000: [0] 33 02 96 7a 9c cb 07 ....... debug 

    # ejs.es:7819                           new Path(name.toString().toLower())

    0007: [0] 7e da 01 ................... getGlobalSlot <slot: 109> 
    0010: [1] 89 ......................... new 
    0011: [1] 57 ......................... loadThis 
    0012: [2] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0017: [2] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0022: [1] 93 ......................... pushResult 
    0023: [2] 1e aa 91 02 00 00 .......... callObjName <toLower> <> <argc: 0> 
    0029: [1] 93 ......................... pushResult 
    0030: [2] 20 02 ...................... callConstructor <argc: 1> 
    0032: [1] bf ......................... returnValue 
    

FUNCTION:   [Path-80]  public const function trimEnd(pat) : Path

     ARG:   [arg-00]   private pat

    0000: [0] 33 02 b4 7a c0 cd 07 ....... debug 

    # ejs.es:7834                           if (name.endsWith(pat)) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e d6 8c 07 00 02 .......... callObjName <endsWith> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] 13 50 ...................... branchFalse8 <addr: 103> 
    0023: [0] 33 02 b6 7a 8c ce 07 ....... debug 

    # ejs.es:7835                               loc = name.lastIndexOf(pat)

    0030: [0] 57 ......................... loadThis 
    0031: [1] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0036: [1] 5b ......................... getLocalSlot0 
    0037: [2] 1e c8 6a 00 02 ............. callObjName <lastIndexOf> <> <argc: 1> 
    0042: [0] 93 ......................... pushResult 
    0043: [1] b4 90 f4 03 d8 31 .......... putScopedName <loc> <> 
    0049: [0] 33 02 b8 7a e4 ce 07 ....... debug 

    # ejs.es:7836                               if (loc >= 0) {

    0056: [0] 79 90 f4 03 d8 31 .......... getScopedName <loc> <> 
    0062: [1] 44 ......................... load0 
    0063: [2] 28 ......................... compareGe 
    0064: [1] 13 23 ...................... branchFalse8 <addr: 101> 
    0066: [0] 33 02 ba 7a a4 cf 07 ....... debug 

    # ejs.es:7837                                   return new Path(name.slice(0, loc))

    0073: [0] 7e da 01 ................... getGlobalSlot <slot: 109> 
    0076: [1] 89 ......................... new 
    0077: [1] 57 ......................... loadThis 
    0078: [2] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0083: [2] 44 ......................... load0 
    0084: [3] 79 90 f4 03 d8 31 .......... getScopedName <loc> <> 
    0090: [4] 1e f4 77 00 04 ............. callObjName <slice> <> <argc: 2> 
    0095: [1] 93 ......................... pushResult 
    0096: [2] 20 02 ...................... callConstructor <argc: 1> 
    0098: [1] bf ......................... returnValue 
    0099: [0] 3e 00 ...................... goto8 <addr: 101> 
    0101: [0] 3e 00 ...................... goto8 <addr: 103> 
    0103: [0] 33 02 c0 7a 94 d0 07 ....... debug 

    # ejs.es:7840                           return this

    0110: [0] 57 ......................... loadThis 
    0111: [1] bf ......................... returnValue 
    
VARIABLE:   [pat-00]  private var pat

FUNCTION:   [Path-81]  public native const function trimExt() : Path


    

FUNCTION:   [Path-82]  public const function trimStart(pat) : Path

     ARG:   [arg-00]   private pat

    0000: [0] 33 02 e0 7a 8c d2 07 ....... debug 

    # ejs.es:7856                           if (name.startsWith(pat)) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e b2 a1 02 00 02 .......... callObjName <startsWith> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] 13 22 ...................... branchFalse8 <addr: 57> 
    0023: [0] 33 02 e2 7a dc d2 07 ....... debug 

    # ejs.es:7857                               return new Path(name.slice(pat.length))

    0030: [0] 7e da 01 ................... getGlobalSlot <slot: 109> 
    0033: [1] 89 ......................... new 
    0034: [1] 57 ......................... loadThis 
    0035: [2] 7b fe 18 e0 01 ............. getObjName <name> <public> 
    0040: [2] 5b ......................... getLocalSlot0 
    0041: [3] 7b aa 31 e0 01 ............. getObjName <length> <public> 
    0046: [3] 1e f4 77 00 02 ............. callObjName <slice> <> <argc: 1> 
    0051: [1] 93 ......................... pushResult 
    0052: [2] 20 02 ...................... callConstructor <argc: 1> 
    0054: [1] bf ......................... returnValue 
    0055: [0] 3e 00 ...................... goto8 <addr: 57> 
    0057: [0] 33 02 e6 7a 94 d0 07 ....... debug 

    # ejs.es:7859                           return this

    0064: [0] 57 ......................... loadThis 
    0065: [1] bf ......................... returnValue 
    
VARIABLE:   [pat-00]  private var pat

FUNCTION:   [Path-83]  public native const function truncate(size: Number) : void

     ARG:   [arg-00]   private size : Number

    
VARIABLE:   [size-00]  private var size : Number

FUNCTION:   [Path-84]  public const function write(args: Array) : void

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var file : File
   LOCAL:   [local-02] var item
   LOCAL:   [local-03] var es

    0000: [0] 33 02 8a 7b 9a d5 07 ....... debug 

    # ejs.es:7877                           var file: File = new File(this, { mode: "w", permissions: 0644 })

    0007: [0] 7e 48 ...................... getGlobalSlot <slot: 36> 
    0009: [1] 89 ......................... new 
    0010: [1] 57 ......................... loadThis 
    0011: [2] 56 00 ...................... loadString <> 
    0013: [3] 56 b6 d6 07 ................ loadString <mode> 
    0017: [4] 56 9a 43 ................... loadString <w> 
    0020: [5] 56 00 ...................... loadString <> 
    0022: [6] 56 c0 d6 07 ................ loadString <permissions> 
    0026: [7] 51 c8 06 ................... loadInt <420> 
    0029: [8] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0035: [3] 20 04 ...................... callConstructor <argc: 2> 
    0037: [1] 95 ......................... putLocalSlot1 
    0038: [0] 33 02 8c 7b d8 d6 07 ....... debug 

    # ejs.es:7878                           try {

    0045: [0] 33 02 8e 7b fc d6 07 ....... debug 

    # ejs.es:7879                               for each (item in args) {

    0052: [0] 5b ......................... getLocalSlot0 
    0053: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0059: [0] 93 ......................... pushResult 
    0060: [1] 39 ......................... dup 
    0061: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0064: [1] 93 ......................... pushResult 
    0065: [2] 96 ......................... putLocalSlot2 
    0066: [1] 33 02 90 7b d0 d7 07 ....... debug 

    # ejs.es:7880                                   if (item is String) {

    0073: [1] 5d ......................... getLocalSlot2 
    0074: [2] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0077: [3] 43 ......................... isA 
    0078: [2] 13 12 ...................... branchFalse8 <addr: 98> 
    0080: [1] 33 02 92 7b a4 d8 07 ....... debug 

    # ejs.es:7881                                       file.write(item)

    0087: [1] 5c ......................... getLocalSlot1 
    0088: [2] 5d ......................... getLocalSlot2 
    0089: [3] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0096: [1] 3e 1c ...................... goto8 <addr: 126> 
    0098: [1] 33 02 94 7b 90 90 02 ....... debug 

    # ejs.es:7882                                   } else {

    0105: [1] 33 02 96 7b f6 d8 07 ....... debug 

    # ejs.es:7883                                       file.write(serialize(item))

    0112: [1] 5c ......................... getLocalSlot1 
    0113: [2] 5d ......................... getLocalSlot2 
    0114: [3] 17 c8 01 02 ................ callGlobalSlot <slot: 100> <argc: 1> 
    0118: [2] 93 ......................... pushResult 
    0119: [3] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0126: [1] 3e bc ...................... goto8 <addr: 60> 
    0128: [1] 90 ......................... pop 
    0129: [0] ca ......................... finally 
    0130: [0] 3e 1c ...................... goto8 <addr: 160> 
    0132: [0] 33 02 9e 7b de d9 07 ....... debug 

    # ejs.es:7887                           catch (es) {

    0139: [0] 92 ......................... pushCatchArg 
    0140: [1] b6 06 02 ................... putBlockSlot <slot: 3> <1> 
    0143: [0] 33 02 a0 7b 96 da 07 ....... debug 

    # ejs.es:7888                               throw new IOError("Can't write to file")

    0150: [0] 7e 2e ...................... getGlobalSlot <slot: 23> 
    0152: [1] 89 ......................... new 
    0153: [1] 56 88 db 07 ................ loadString <Can't write to file> 
    0157: [2] 20 02 ...................... callConstructor <argc: 1> 
    0159: [1] c6 ......................... throw 
    0160: [1] 33 02 a4 7b b0 db 07 ....... debug 

    # ejs.es:7890                           finally {

    0167: [1] 33 02 a6 7b dc db 07 ....... debug 

    # ejs.es:7891                               file.close()

    0174: [1] 7d 02 02 ................... getBlockSlot <slot: 1> <1> 
    0177: [2] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0183: [1] 3c ......................... endException 
    0184: [1] 54 ......................... loadNull 
    0185: [2] bf ......................... returnValue 
    0186: [0] 33 02 aa 7b b4 16 .......... debug 

    # ejs.es:7893                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     61      64        128          128       StopIteration
1   catch         38     132        132          160       
2   finally       38     132        160          184       

VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [file-01]  private var file : File
VARIABLE:   [item-02]  -hoisted-2 var item
VARIABLE:   [es-03]  -hoisted-3 var es

CLASS:      dynamic class Promise extends Emitter
            #  Class Details: 47 class traits, 3 instance traits, requested slot 110

FUNCTION:   [Promise-35]  -constructor- function Promise() : void


    0000: [0] 21 00 ...................... callNextConstructor <argc: 0> 
    0002: [0] be ......................... return 
    

FUNCTION:   [Promise-36]  internal-ed363076473b51ca685af450cc662b39-0 const function addCallback(listener: Function) : Promise

     ARG:   [arg-00]   private listener : Function

    0000: [0] 33 02 b8 7c de df 07 ....... debug 

    # ejs.es:7964                           addListener("success", listener)

    0007: [0] 56 de a5 05 ................ loadString <success> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0019: [0] 33 02 ba 7c 94 d0 07 ....... debug 

    # ejs.es:7965                           return this

    0026: [0] 57 ......................... loadThis 
    0027: [1] bf ......................... returnValue 
    
VARIABLE:   [listener-00]  private var listener : Function

FUNCTION:   [Promise-37]  internal-ed363076473b51ca685af450cc662b39-0 const function addCancelback(listener: Function) : Promise

     ARG:   [arg-00]   private listener : Function

    0000: [0] 33 02 cc 7c dc e1 07 ....... debug 

    # ejs.es:7974                           addListener("cancel", listener)

    0007: [0] 56 b4 e2 07 ................ loadString <cancel> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0019: [0] 33 02 ce 7c 94 d0 07 ....... debug 

    # ejs.es:7975                           return this

    0026: [0] 57 ......................... loadThis 
    0027: [1] bf ......................... returnValue 
    
VARIABLE:   [listener-00]  private var listener : Function

FUNCTION:   [Promise-38]  internal-ed363076473b51ca685af450cc662b39-0 const function addErrback(listener: Function) : Promise

     ARG:   [arg-00]   private listener : Function

    0000: [0] 33 02 e0 7c d4 e3 07 ....... debug 

    # ejs.es:7984                           addListener("error", listener)

    0007: [0] 56 b0 c1 04 ................ loadString <error> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0019: [0] 33 02 e2 7c 94 d0 07 ....... debug 

    # ejs.es:7985                           return this

    0026: [0] 57 ......................... loadThis 
    0027: [1] bf ......................... returnValue 
    
VARIABLE:   [listener-00]  private var listener : Function

FUNCTION:   [Promise-39]  internal-ed363076473b51ca685af450cc662b39-0 const function emitSuccess(args: Array) : void

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var e

    0000: [0] 33 02 f4 7c 9c e5 07 ....... debug 

    # ejs.es:7994                           if (fired) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b da de 07 da dd 07 ....... getObjName <fired> <[ejs::Promise,private]> 
    0015: [1] 13 0a ...................... branchFalse8 <addr: 27> 
    0017: [0] 33 02 f6 7c 80 95 06 ....... debug 

    # ejs.es:7995                               return

    0024: [0] be ......................... return 
    0025: [0] 3e 00 ...................... goto8 <addr: 27> 
    0027: [0] 33 02 f8 7c bc 15 .......... debug 

    # ejs.es:7996                           }

    0033: [0] 33 02 fa 7c ce e5 07 ....... debug 

    # ejs.es:7997                           fired = true

    0040: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0043: [1] 57 ......................... loadThis 
    0044: [2] b3 da de 07 da dd 07 ....... putObjName <fired> <[ejs::Promise,private]> 
    0051: [0] 33 02 fc 7c d8 d6 07 ....... debug 

    # ejs.es:7998                           try {

    0058: [0] 33 02 fe 7c 80 e6 07 ....... debug 

    # ejs.es:7999                               issue("success", args)

    0065: [0] 56 de a5 05 ................ loadString <success> 
    0069: [1] 5b ......................... getLocalSlot0 
    0070: [2] 1f ce e6 07 da dd 07 04 .... callScopedName <issue> <[ejs::Promise,private]> <argc: 2> 
    0078: [0] 3e 31 ...................... goto8 <addr: 129> 
    0080: [0] 33 02 80 7d da e6 07 ....... debug 

    # ejs.es:8000                           } catch (e) {

    0087: [0] 92 ......................... pushCatchArg 
    0088: [1] b6 02 02 ................... putBlockSlot <slot: 1> <1> 
    0091: [0] 33 02 82 7d 8e e7 07 ....... debug 

    # ejs.es:8001                               p("CATCH", e)

    0098: [0] 56 ca e7 07 ................ loadString <CATCH> 
    0102: [1] 7d 02 02 ................... getBlockSlot <slot: 1> <1> 
    0105: [2] 1f 88 ec 06 d8 31 04 ....... callScopedName <p> <> <argc: 2> 
    0112: [0] 33 02 84 7d d6 e7 07 ....... debug 

    # ejs.es:8002                               emitError(e)

    0119: [0] 7d 02 02 ................... getBlockSlot <slot: 1> <1> 
    0122: [1] 1f 90 e8 07 14 02 .......... callScopedName <emitError> <internal-ed363076473b51ca685af450cc662b39-0> <argc: 1> 
    0128: [0] 3c ......................... endException 
    0129: [0] 54 ......................... loadNull 
    0130: [1] bf ......................... returnValue 
    0131: [0] 33 02 88 7d b4 16 .......... debug 

    # ejs.es:8004                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch         51      80         80          129       

VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [e-01]  -hoisted-1 var e

FUNCTION:   [Promise-40]  internal-ed363076473b51ca685af450cc662b39-0 const function emitError(args: Array) : void

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var e

    0000: [0] 33 02 98 7d 9c e5 07 ....... debug 

    # ejs.es:8012                           if (fired) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b da de 07 da dd 07 ....... getObjName <fired> <[ejs::Promise,private]> 
    0015: [1] 13 0a ...................... branchFalse8 <addr: 27> 
    0017: [0] 33 02 9a 7d 80 95 06 ....... debug 

    # ejs.es:8013                               return

    0024: [0] be ......................... return 
    0025: [0] 3e 00 ...................... goto8 <addr: 27> 
    0027: [0] 33 02 9c 7d bc 15 .......... debug 

    # ejs.es:8014                           }

    0033: [0] 33 02 9e 7d ce e5 07 ....... debug 

    # ejs.es:8015                           fired = true

    0040: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0043: [1] 57 ......................... loadThis 
    0044: [2] b3 da de 07 da dd 07 ....... putObjName <fired> <[ejs::Promise,private]> 
    0051: [0] 33 02 a0 7d d8 d6 07 ....... debug 

    # ejs.es:8016                           try {

    0058: [0] 33 02 a2 7d 94 e9 07 ....... debug 

    # ejs.es:8017                               issue("error", args)

    0065: [0] 56 b0 c1 04 ................ loadString <error> 
    0069: [1] 5b ......................... getLocalSlot0 
    0070: [2] 1f ce e6 07 da dd 07 04 .... callScopedName <issue> <[ejs::Promise,private]> <argc: 2> 
    0078: [0] 3e 21 ...................... goto8 <addr: 113> 
    0080: [0] 33 02 a4 7d da e6 07 ....... debug 

    # ejs.es:8018                           } catch (e) {

    0087: [0] 92 ......................... pushCatchArg 
    0088: [1] b6 02 02 ................... putBlockSlot <slot: 1> <1> 
    0091: [0] 33 02 a6 7d de e9 07 ....... debug 

    # ejs.es:8019                               p("EmitError CATCH", e)

    0098: [0] 56 ae ea 07 ................ loadString <EmitError CATCH> 
    0102: [1] 7d 02 02 ................... getBlockSlot <slot: 1> <1> 
    0105: [2] 1f 88 ec 06 d8 31 04 ....... callScopedName <p> <> <argc: 2> 
    0112: [0] 3c ......................... endException 
    0113: [0] 54 ......................... loadNull 
    0114: [1] bf ......................... returnValue 
    0115: [0] 33 02 aa 7d b4 16 .......... debug 

    # ejs.es:8021                       }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch         51      80         80          113       

VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [e-01]  -hoisted-1 var e

FUNCTION:   [Promise-41]  internal-ed363076473b51ca685af450cc662b39-0 const function emitCancel(args: Array) : void

     ARG:   [arg-00]   private args : Array

    0000: [0] 33 02 ba 7d a8 eb 07 ....... debug 

    # ejs.es:8029                           issue("cancel", args)

    0007: [0] 56 b4 e2 07 ................ loadString <cancel> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1f ce e6 07 da dd 07 04 .... callScopedName <issue> <[ejs::Promise,private]> <argc: 2> 
    0020: [0] 54 ......................... loadNull 
    0021: [1] bf ......................... returnValue 
    0022: [0] 33 02 bc 7d b4 16 .......... debug 

    # ejs.es:8030                       }
    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [Promise-42]  internal-ed363076473b51ca685af450cc662b39-0 const function cancel(args: Array) : void

     ARG:   [arg-00]   private args : Array

    0000: [0] 33 02 ca 7d d4 ec 07 ....... debug 

    # ejs.es:8037                           cancel = true

    0007: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] b3 b4 e2 07 14 ............. putObjName <cancel> <internal-ed363076473b51ca685af450cc662b39-0> 
    0016: [0] 33 02 cc 7d ce e5 07 ....... debug 

    # ejs.es:8038                           fired = true

    0023: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0026: [1] 57 ......................... loadThis 
    0027: [2] b3 da de 07 da dd 07 ....... putObjName <fired> <[ejs::Promise,private]> 
    0034: [0] 33 02 ce 7d 88 ed 07 ....... debug 

    # ejs.es:8039                           if (timer) {

    0041: [0] 57 ......................... loadThis 
    0042: [1] 7b ce dd 07 da dd 07 ....... getObjName <timer> <[ejs::Promise,private]> 
    0049: [1] 13 18 ...................... branchFalse8 <addr: 75> 
    0051: [0] 33 02 d0 7d ba ed 07 ....... debug 

    # ejs.es:8040                               timer.stop()

    0058: [0] 57 ......................... loadThis 
    0059: [1] 7b ce dd 07 da dd 07 ....... getObjName <timer> <[ejs::Promise,private]> 
    0066: [1] 1e f4 ed 07 e0 01 00 ....... callObjName <stop> <public> <argc: 0> 
    0073: [0] 3e 00 ...................... goto8 <addr: 75> 
    0075: [0] 33 02 d2 7d bc 15 .......... debug 

    # ejs.es:8041                           }

    0081: [0] 33 02 d4 7d fe ed 07 ....... debug 

    # ejs.es:8042                           clearListeners(["success", "error"])

    0088: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0090: [1] 89 ......................... new 
    0091: [1] 39 ......................... dup 
    0092: [2] 56 de a5 05 ................ loadString <success> 
    0096: [3] c5 ......................... swap 
    0097: [3] 56 d8 31 ................... loadString <> 
    0100: [4] 44 ......................... load0 
    0101: [5] b2 ......................... putObjNameExpr 
    0102: [1] 39 ......................... dup 
    0103: [2] 56 b0 c1 04 ................ loadString <error> 
    0107: [3] c5 ......................... swap 
    0108: [3] 56 d8 31 ................... loadString <> 
    0111: [4] 45 ......................... load1 
    0112: [5] b2 ......................... putObjNameExpr 
    0113: [1] 1f d4 a0 03 e0 01 02 ....... callScopedName <clearListeners> <public> <argc: 1> 
    0120: [0] 33 02 d6 7d a8 eb 07 ....... debug 

    # ejs.es:8043                           issue("cancel", args)

    0127: [0] 56 b4 e2 07 ................ loadString <cancel> 
    0131: [1] 5b ......................... getLocalSlot0 
    0132: [2] 1f ce e6 07 da dd 07 04 .... callScopedName <issue> <[ejs::Promise,private]> <argc: 2> 
    0140: [0] 54 ......................... loadNull 
    0141: [1] bf ......................... returnValue 
    0142: [0] 33 02 d8 7d b4 16 .......... debug 

    # ejs.es:8044                       }
    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [Promise-43]  internal-ed363076473b51ca685af450cc662b39-0 const function then(success: Function, error: Function, progress: Function) : Promise

     ARG:   [arg-00]   private success : Function
     ARG:   [arg-01]   private error : Function
     ARG:   [arg-02]   private progress : Function

    0000: [0] 41 03 03 06 09 ............. initDefaultArgs8 <3> <5> <8> <11> 
    0005: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0007: [1] 95 ......................... putLocalSlot1 
    0008: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0010: [1] 96 ......................... putLocalSlot2 
    0011: [0] 33 02 ee 7d b2 f0 07 ....... debug 

    # ejs.es:8055                           addListener("success", success)

    0018: [0] 56 de a5 05 ................ loadString <success> 
    0022: [1] 5b ......................... getLocalSlot0 
    0023: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0030: [0] 33 02 f0 7d 8a f1 07 ....... debug 

    # ejs.es:8056                           if (error) {

    0037: [0] 5c ......................... getLocalSlot1 
    0038: [1] 13 15 ...................... branchFalse8 <addr: 61> 
    0040: [0] 33 02 f2 7d bc f1 07 ....... debug 

    # ejs.es:8057                               addListener("error", error)

    0047: [0] 56 b0 c1 04 ................ loadString <error> 
    0051: [1] 5c ......................... getLocalSlot1 
    0052: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0059: [0] 3e 00 ...................... goto8 <addr: 61> 
    0061: [0] 33 02 f6 7d 94 f2 07 ....... debug 

    # ejs.es:8059                           if (progress) {

    0068: [0] 5d ......................... getLocalSlot2 
    0069: [1] 13 15 ...................... branchFalse8 <addr: 92> 
    0071: [0] 33 02 f8 7d cc f2 07 ....... debug 

    # ejs.es:8060                               addListener("progress", progress)

    0078: [0] 56 b0 f3 07 ................ loadString <progress> 
    0082: [1] 5d ......................... getLocalSlot2 
    0083: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0090: [0] 3e 00 ...................... goto8 <addr: 92> 
    0092: [0] 33 02 fc 7d 94 d0 07 ....... debug 

    # ejs.es:8062                           return this

    0099: [0] 57 ......................... loadThis 
    0100: [1] bf ......................... returnValue 
    
VARIABLE:   [success-00]  private var success : Function
VARIABLE:   [error-01]  private var error : Function
VARIABLE:   [progress-02]  private var progress : Function

FUNCTION:   [Promise-44]  internal-ed363076473b51ca685af450cc662b39-0 const function timeout(msec: Number) : Promise

     ARG:   [arg-00]   private msec : Number
   LOCAL:   [local-01] var done
   LOCAL:   [local-02] var awake : Function
   LOCAL:   [local-03] var --fun_10640--89941602-- : Function

    0000: [0] 33 02 90 7e 88 ed 07 ....... debug 

    # ejs.es:8072                           if (timer) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b ce dd 07 da dd 07 ....... getObjName <timer> <[ejs::Promise,private]> 
    0015: [1] 13 18 ...................... branchFalse8 <addr: 41> 
    0017: [0] 33 02 92 7e ba ed 07 ....... debug 

    # ejs.es:8073                               timer.stop()

    0024: [0] 57 ......................... loadThis 
    0025: [1] 7b ce dd 07 da dd 07 ....... getObjName <timer> <[ejs::Promise,private]> 
    0032: [1] 1e f4 ed 07 e0 01 00 ....... callObjName <stop> <public> <argc: 0> 
    0039: [0] 3e 00 ...................... goto8 <addr: 41> 
    0041: [0] 33 02 94 7e bc 15 .......... debug 

    # ejs.es:8074                           }

    0047: [0] 33 02 96 7e ba f4 07 ....... debug 

    # ejs.es:8075                           let done

    0054: [0] 33 02 98 7e e4 f4 07 ....... debug 

    # ejs.es:8076                           function awake(arg) {

    0061: [0] 35 04 00 ................... defineFunction <slot: 2> <0> 
    0064: [0] 33 02 a4 7e e8 f6 07 ....... debug 

    # ejs.es:8082                           addListener("success", awake)

    0071: [0] 56 de a5 05 ................ loadString <success> 
    0075: [1] 5d ......................... getLocalSlot2 
    0076: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0083: [0] 33 02 a6 7e bc f7 07 ....... debug 

    # ejs.es:8083                           addListener("error", awake)

    0090: [0] 56 b0 c1 04 ................ loadString <error> 
    0094: [1] 5d ......................... getLocalSlot2 
    0095: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0102: [0] 33 02 a8 7e 8c f8 07 ....... debug 

    # ejs.es:8084                           addListener("cancel", awake)

    0109: [0] 56 b4 e2 07 ................ loadString <cancel> 
    0113: [1] 5d ......................... getLocalSlot2 
    0114: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0121: [0] 33 02 aa 7e de f8 07 ....... debug 

    # ejs.es:8085                           timer = new Timer(msec, function() {

    0128: [0] 35 06 00 ................... defineFunction <slot: 3> <0> 
    0131: [0] 33 02 aa 7e de f8 07 ....... debug 

    # ejs.es:8085                           timer = new Timer(msec, function() {

    0138: [0] 33 02 ba 7e de f8 07 ....... debug 

    # ejs.es:8093                           timer = new Timer(msec, function() {

    0145: [0] 33 02 aa 7e de f8 07 ....... debug 

    # ejs.es:8085                           timer = new Timer(msec, function() {

    0152: [0] 7e ee 01 ................... getGlobalSlot <slot: 119> 
    0155: [1] 89 ......................... new 
    0156: [1] 5b ......................... getLocalSlot0 
    0157: [2] 33 02 ba 7e fe 8d 01 ....... debug 

    # ejs.es:8093                           })

    0164: [2] 5e ......................... getLocalSlot3 
    0165: [3] 20 04 ...................... callConstructor <argc: 2> 
    0167: [1] 33 02 aa 7e de f8 07 ....... debug 

    # ejs.es:8085                           timer = new Timer(msec, function() {

    0174: [1] 57 ......................... loadThis 
    0175: [2] b3 ce dd 07 da dd 07 ....... putObjName <timer> <[ejs::Promise,private]> 
    0182: [0] 33 02 bc 7e 94 d0 07 ....... debug 

    # ejs.es:8094                           return this

    0189: [0] 57 ......................... loadThis 
    0190: [1] bf ......................... returnValue 
    
VARIABLE:   [msec-00]  private var msec : Number
VARIABLE:   [done-01]  private var done

FUNCTION:   [awake-02]  private function awake(arg) : void

     ARG:   [arg-00]   private arg

    0000: [0] 33 02 9a 7e a8 f5 07 ....... debug 

    # ejs.es:8077                               done = true

    0007: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0010: [1] b6 02 02 ................... putBlockSlot <slot: 1> <1> 
    0013: [0] 33 02 9c 7e e0 f5 07 ....... debug 

    # ejs.es:8078                               if (timer) {

    0020: [0] 57 ......................... loadThis 
    0021: [1] 7b ce dd 07 da dd 07 ....... getObjName <timer> <[ejs::Promise,private]> 
    0028: [1] 13 18 ...................... branchFalse8 <addr: 54> 
    0030: [0] 33 02 9e 7e 9a f6 07 ....... debug 

    # ejs.es:8079                                   timer.stop()

    0037: [0] 57 ......................... loadThis 
    0038: [1] 7b ce dd 07 da dd 07 ....... getObjName <timer> <[ejs::Promise,private]> 
    0045: [1] 1e f4 ed 07 e0 01 00 ....... callObjName <stop> <public> <argc: 0> 
    0052: [0] 3e 00 ...................... goto8 <addr: 54> 
    0054: [0] be ......................... return 
    0055: [0] 33 02 a2 7e bc 15 .......... debug 

    # ejs.es:8081                           }
    
VARIABLE:   [arg-00]  private var arg

FUNCTION:   [--fun_10640--89941602---03]  private function --fun_10640--89941602--() : void


    0000: [0] 33 02 ac 7e c0 f9 07 ....... debug 

    # ejs.es:8086                               if (fired || done) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b da de 07 da dd 07 ....... getObjName <fired> <[ejs::Promise,private]> 
    0015: [1] 39 ......................... dup 
    0016: [2] 14 04 ...................... branchTrue8 <addr: 22> 
    0018: [1] 90 ......................... pop 
    0019: [0] 7d 02 02 ................... getBlockSlot <slot: 1> <1> 
    0022: [1] 13 0a ...................... branchFalse8 <addr: 34> 
    0024: [0] 33 02 ae 7e 8a fa 07 ....... debug 

    # ejs.es:8087                                   return;

    0031: [0] be ......................... return 
    0032: [0] 3e 00 ...................... goto8 <addr: 34> 
    0034: [0] 33 02 b0 7e ee b2 01 ....... debug 

    # ejs.es:8088                               }

    0041: [0] 33 02 b2 7e a8 f5 07 ....... debug 

    # ejs.es:8089                               done = true

    0048: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0051: [1] b6 02 02 ................... putBlockSlot <slot: 1> <1> 
    0054: [0] 33 02 b4 7e c2 fa 07 ....... debug 

    # ejs.es:8090                               timer = null

    0061: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0063: [1] 57 ......................... loadThis 
    0064: [2] b3 ce dd 07 da dd 07 ....... putObjName <timer> <[ejs::Promise,private]> 
    0071: [0] 33 02 b6 7e fc fa 07 ....... debug 

    # ejs.es:8091                               issue("timeout")

    0078: [0] 56 94 2c ................... loadString <timeout> 
    0081: [1] 1f ce e6 07 da dd 07 02 .... callScopedName <issue> <[ejs::Promise,private]> <argc: 1> 
    0089: [0] 33 02 b8 7e be fb 07 ....... debug 

    # ejs.es:8092                               issue("error", ["timeout"])

    0096: [0] 56 b0 c1 04 ................ loadString <error> 
    0100: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0102: [2] 89 ......................... new 
    0103: [2] 39 ......................... dup 
    0104: [3] 56 94 2c ................... loadString <timeout> 
    0107: [4] c5 ......................... swap 
    0108: [4] 56 d8 31 ................... loadString <> 
    0111: [5] 44 ......................... load0 
    0112: [6] b2 ......................... putObjNameExpr 
    0113: [2] 1f ce e6 07 da dd 07 04 .... callScopedName <issue> <[ejs::Promise,private]> <argc: 2> 
    0121: [0] 54 ......................... loadNull 
    0122: [1] bf ......................... returnValue 
    0123: [0] 33 02 ba 7e fe 8d 01 ....... debug 

    # ejs.es:8093                           })
    

FUNCTION:   [Promise-45]  internal-ed363076473b51ca685af450cc662b39-0 const function wait(timeout: Number) : Object

     ARG:   [arg-00]   private timeout : Number
   LOCAL:   [local-01] var done
   LOCAL:   [local-02] var result
   LOCAL:   [local-03] var awake : Function

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 45 ......................... load1 
    0005: [1] 88 ......................... neg 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 d0 7e b2 fd 07 ....... debug 

    # ejs.es:8104                           let done = false

    0014: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0016: [1] 95 ......................... putLocalSlot1 
    0017: [0] 33 02 d2 7e ec fd 07 ....... debug 

    # ejs.es:8105                           let result

    0024: [0] 33 02 d4 7e 9a fe 07 ....... debug 

    # ejs.es:8106                           function awake(...args) {

    0031: [0] 35 06 00 ................... defineFunction <slot: 3> <0> 
    0034: [0] 33 02 dc 7e e8 f6 07 ....... debug 

    # ejs.es:8110                           addListener("success", awake)

    0041: [0] 56 de a5 05 ................ loadString <success> 
    0045: [1] 5e ......................... getLocalSlot3 
    0046: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0053: [0] 33 02 de 7e bc f7 07 ....... debug 

    # ejs.es:8111                           addListener("error", awake)

    0060: [0] 56 b0 c1 04 ................ loadString <error> 
    0064: [1] 5e ......................... getLocalSlot3 
    0065: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0072: [0] 33 02 e0 7e 8c f8 07 ....... debug 

    # ejs.es:8112                           addListener("cancel", awake)

    0079: [0] 56 b4 e2 07 ................ loadString <cancel> 
    0083: [1] 5e ......................... getLocalSlot3 
    0084: [2] 1f f6 8e 01 e0 01 04 ....... callScopedName <addListener> <public> <argc: 2> 
    0091: [0] 33 02 e2 7e b4 ff 07 ....... debug 

    # ejs.es:8113                           new Timer(timeout, awake)

    0098: [0] 7e ee 01 ................... getGlobalSlot <slot: 119> 
    0101: [1] 89 ......................... new 
    0102: [1] 5b ......................... getLocalSlot0 
    0103: [2] 5e ......................... getLocalSlot3 
    0104: [3] 20 04 ...................... callConstructor <argc: 2> 
    0106: [1] 90 ......................... pop 
    0107: [0] 33 02 e4 7e 80 80 08 ....... debug 

    # ejs.es:8114                           while (!done && !fired) {

    0114: [0] 5c ......................... getLocalSlot1 
    0115: [1] 86 ......................... logicalNot 
    0116: [1] 39 ......................... dup 
    0117: [2] 13 0a ...................... branchFalse8 <addr: 129> 
    0119: [1] 90 ......................... pop 
    0120: [0] 57 ......................... loadThis 
    0121: [1] 7b da de 07 da dd 07 ....... getObjName <fired> <[ejs::Promise,private]> 
    0128: [1] 86 ......................... logicalNot 
    0129: [1] 13 15 ...................... branchFalse8 <addr: 152> 
    0131: [0] 33 02 e6 7e cc 80 08 ....... debug 

    # ejs.es:8115                               App.serviceEvents(timeout, true)

    0138: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0140: [1] 5b ......................... getLocalSlot0 
    0141: [2] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0144: [3] 1e f8 2b e0 01 04 .......... callObjName <serviceEvents> <public> <argc: 2> 
    0150: [0] 3e da ...................... goto8 <addr: 114> 
    0152: [0] 33 02 ea 7e a4 5d .......... debug 

    # ejs.es:8117                           return result

    0158: [0] 5d ......................... getLocalSlot2 
    0159: [1] bf ......................... returnValue 
    
VARIABLE:   [timeout-00]  private var timeout : Number
VARIABLE:   [done-01]  private var done
VARIABLE:   [result-02]  private var result

FUNCTION:   [awake-03]  private function awake(args: Array) : void

     ARG:   [arg-00]   private args : Array

    0000: [0] 33 02 d6 7e a8 f5 07 ....... debug 

    # ejs.es:8107                               done = true

    0007: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0010: [1] b6 02 02 ................... putBlockSlot <slot: 1> <1> 
    0013: [0] 33 02 d8 7e e6 fe 07 ....... debug 

    # ejs.es:8108                               result = args.slice(1)

    0020: [0] 5b ......................... getLocalSlot0 
    0021: [1] 45 ......................... load1 
    0022: [2] 1e f4 77 e0 01 02 .......... callObjName <slice> <public> <argc: 1> 
    0028: [0] 93 ......................... pushResult 
    0029: [1] b6 04 02 ................... putBlockSlot <slot: 2> <1> 
    0032: [0] be ......................... return 
    0033: [0] 33 02 da 7e bc 15 .......... debug 

    # ejs.es:8109                           }
    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [Promise-46]  [ejs::Promise,private] const function issue(name, args: Array) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private args : Array

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 f2 7e 88 ed 07 ....... debug 

    # ejs.es:8121                           if (timer) {

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b ce dd 07 da dd 07 ....... getObjName <timer> <[ejs::Promise,private]> 
    0022: [1] 13 18 ...................... branchFalse8 <addr: 48> 
    0024: [0] 33 02 f4 7e ba ed 07 ....... debug 

    # ejs.es:8122                               timer.stop()

    0031: [0] 57 ......................... loadThis 
    0032: [1] 7b ce dd 07 da dd 07 ....... getObjName <timer> <[ejs::Promise,private]> 
    0039: [1] 1e f4 ed 07 e0 01 00 ....... callObjName <stop> <public> <argc: 0> 
    0046: [0] 3e 00 ...................... goto8 <addr: 48> 
    0048: [0] 33 02 f8 7e c2 82 08 ....... debug 

    # ejs.es:8124                           if (args) {

    0055: [0] 5c ......................... getLocalSlot1 
    0056: [1] 13 25 ...................... branchFalse8 <addr: 95> 
    0058: [0] 33 02 fa 7e f2 82 08 ....... debug 

    # ejs.es:8125                               emit.apply(null, [name] + args)

    0065: [0] 57 ......................... loadThis 
    0066: [1] 7b ae 97 03 e0 01 .......... getObjName <emit> <public> 
    0072: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0074: [2] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0076: [3] 89 ......................... new 
    0077: [3] 39 ......................... dup 
    0078: [4] 5b ......................... getLocalSlot0 
    0079: [5] c5 ......................... swap 
    0080: [5] 56 d8 31 ................... loadString <> 
    0083: [6] 44 ......................... load0 
    0084: [7] b2 ......................... putObjNameExpr 
    0085: [3] 5c ......................... getLocalSlot1 
    0086: [4] 00 ......................... add 
    0087: [3] 1e be aa 03 00 04 .......... callObjName <apply> <> <argc: 2> 
    0093: [0] 3e 15 ...................... goto8 <addr: 116> 
    0095: [0] 33 02 fc 7e 94 42 .......... debug 

    # ejs.es:8126                           } else {

    0101: [0] 33 02 fe 7e d2 83 08 ....... debug 

    # ejs.es:8127                               emit(name)

    0108: [0] 5b ......................... getLocalSlot0 
    0109: [1] 1f ae 97 03 e0 01 02 ....... callScopedName <emit> <public> <argc: 1> 
    0116: [0] 54 ......................... loadNull 
    0117: [1] bf ......................... returnValue 
    0118: [0] 33 02 82 7f b4 16 .......... debug 

    # ejs.es:8129                       }
    
VARIABLE:   [name-00]  private var name
VARIABLE:   [args-01]  private var args : Array
VARIABLE:   [endpoints-00]  [ejs::Emitter,private] var endpoints
VARIABLE:   [timer-01]  [ejs::Promise,private] var timer
VARIABLE:   [fired-02]  [ejs::Promise,private] var fired : Boolean

CLASS:      final class Reflect extends Object
            #  Class Details: 31 class traits, 1 instance traits, requested slot 111

FUNCTION:   [Reflect-26]  -constructor- native const function Reflect(o: Object) : void

     ARG:   [arg-00]   private o : Object

    
VARIABLE:   [o-00]  private var o : Object

FUNCTION:   [Reflect-27]  public native const get function base() : void


    

FUNCTION:   [Reflect-28]  public native const get function isType() : Boolean


    

FUNCTION:   [Reflect-29]  public native const get function type() : void


    

FUNCTION:   [Reflect-30]  public native const get function name() : void


    
VARIABLE:   [obj-00]  [ejs::Reflect,private] native var obj : Object

FUNCTION:   [typeOf-112]  ejs native function typeOf(o) : void

     ARG:   [arg-00]   private o

    
VARIABLE:   [o-00]  private var o

CLASS:      native final class RegExp extends Object
            #  Class Details: 39 class traits, 0 instance traits, requested slot 113

FUNCTION:   [RegExp-24]  public native const override function toString() : void


    

FUNCTION:   [RegExp-26]  -constructor- native const function RegExp(pattern, flags) : void

     ARG:   [arg-00]   private pattern
     ARG:   [arg-01]   private flags

    
VARIABLE:   [pattern-00]  private var pattern
VARIABLE:   [flags-01]  private var flags

FUNCTION:   [RegExp-27]  public native const get function lastIndex() : Number


    

FUNCTION:   [RegExp-27]  public native const set function lastIndex(value: Number) : void

     ARG:   [arg-00]   private value : Number

    
VARIABLE:   [value-00]  private var value : Number

FUNCTION:   [RegExp-28]  public native const function exec(str, start: Number) : Array

     ARG:   [arg-00]   private str
     ARG:   [arg-01]   private start : Number

    
VARIABLE:   [str-00]  private var str
VARIABLE:   [start-01]  private var start : Number

FUNCTION:   [RegExp-29]  public native const get function global() : Boolean


    

FUNCTION:   [RegExp-30]  public native const get function ignoreCase() : Boolean


    

FUNCTION:   [RegExp-31]  public native const get function multiline() : Boolean


    

FUNCTION:   [RegExp-32]  public native const get function source() : void


    

FUNCTION:   [RegExp-33]  public native const get function matched() : void


    

FUNCTION:   [RegExp-34]  public const function replace(str, replacement: Object) : void

     ARG:   [arg-00]   private str
     ARG:   [arg-01]   private replacement : Object

    0000: [0] 33 02 aa 84 01 ee 94 08 .... debug 

    # ejs.es:8469                           str.replace(this, replacement)

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 57 ......................... loadThis 
    0010: [2] 5c ......................... getLocalSlot1 
    0011: [3] 1e f0 f3 01 e0 01 04 ....... callObjName <replace> <public> <argc: 2> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] bf ......................... returnValue 
    
VARIABLE:   [str-00]  private var str
VARIABLE:   [replacement-01]  private var replacement : Object

FUNCTION:   [RegExp-35]  public const function split(target) : Array

     ARG:   [arg-00]   private target

    0000: [0] 33 02 bc 84 01 b8 96 08 .... debug 

    # ejs.es:8478                           target.split(this)

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 57 ......................... loadThis 
    0010: [2] 1e ea 49 e0 01 02 .......... callObjName <split> <public> <argc: 1> 
    0016: [0] 93 ......................... pushResult 
    0017: [1] bf ......................... returnValue 
    
VARIABLE:   [target-00]  private var target

FUNCTION:   [RegExp-36]  public native const get function start() : Number


    

FUNCTION:   [RegExp-37]  public native const get function sticky() : Boolean


    

FUNCTION:   [RegExp-38]  public native const function test(str) : Boolean

     ARG:   [arg-00]   private str

    
VARIABLE:   [str-00]  private var str

CLASS:      class Socket extends Object
            #  Class Details: 41 class traits, 0 instance traits, requested slot 114

FUNCTION:   [Socket-26]  -constructor- native const function Socket() : void


    

FUNCTION:   [Socket-27]  public native const function addListener(name, listener: Function) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Socket-28]  public native const function accept() : Socket


    

FUNCTION:   [Socket-29]  public native const get function address() : void


    

FUNCTION:   [Socket-30]  public native const get function async() : Boolean


    

FUNCTION:   [Socket-30]  public native const set function async(enable: Boolean) : void

     ARG:   [arg-00]   private enable : Boolean

    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [Socket-31]  public native const function close() : void


    

FUNCTION:   [Socket-32]  public native const function connect(address: Object) : void

     ARG:   [arg-00]   private address : Object

    
VARIABLE:   [address-00]  private var address : Object

FUNCTION:   [Socket-33]  public const get function encoding() : void


    0000: [0] 33 02 e0 86 01 ee cf 01 .... debug 

    # ejs.es:8624                           "utf-8"

    0008: [0] 56 96 d0 01 ................ loadString <utf-8> 
    0012: [1] bf ......................... returnValue 
    

FUNCTION:   [Socket-33]  public const set function encoding(enc) : void

     ARG:   [arg-00]   private enc

    0000: [0] 33 02 ee 86 01 a2 d0 01 .... debug 

    # ejs.es:8631                           throw "Not yet implemented"

    0008: [0] 56 f2 d0 01 ................ loadString <Not yet implemented> 
    0012: [1] c6 ......................... throw 
    0013: [1] 54 ......................... loadNull 
    0014: [2] bf ......................... returnValue 
    0015: [0] 33 02 f0 86 01 b4 16 ....... debug 

    # ejs.es:8632                       }
    
VARIABLE:   [enc-00]  private var enc

FUNCTION:   [Socket-34]  public const function flush() : void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

FUNCTION:   [Socket-35]  public native const function listen(address) : Socket

     ARG:   [arg-00]   private address

    
VARIABLE:   [address-00]  private var address

FUNCTION:   [Socket-36]  public native const get function port() : Number


    

FUNCTION:   [Socket-37]  public native const function read(buffer: ByteArray, offset: Number, count: Number) : Object

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number

    
VARIABLE:   [buffer-00]  private var buffer : ByteArray
VARIABLE:   [offset-01]  private var offset : Number
VARIABLE:   [count-02]  private var count : Number

FUNCTION:   [Socket-38]  public native const get function remoteAddress() : void


    

FUNCTION:   [Socket-39]  public native const function removeListener(name: Object, listener: Function) : void

     ARG:   [arg-00]   private name : Object
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name : Object
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Socket-40]  public native const function write(data: Object) : Object

     ARG:   [arg-00]   private data : Object

    
VARIABLE:   [data-00]  private var data : Object

CLASS:      native final class String extends Object
            #  Class Details: 68 class traits, 0 instance traits, requested slot 116

FUNCTION:   [String-08]  iterator native const override function get() : Iterator


    

FUNCTION:   [String-12]  iterator native const override function getValues() : Iterator


    

FUNCTION:   [String-22]  public native const override function toJSON() : String


    

FUNCTION:   [String-24]  public native const override function toString() : String


    

FUNCTION:   [String-26]  -constructor- native const function String(str: Array) : void

     ARG:   [arg-00]   private str : Array

    
VARIABLE:   [str-00]  private var str : Array

FUNCTION:   [String-27]  public native const function caseCompare(compare: String) : Number

     ARG:   [arg-00]   private compare : String

    
VARIABLE:   [compare-00]  private var compare : String

FUNCTION:   [String-28]  public native const function caselessCompare(compare: String) : Number

     ARG:   [arg-00]   private compare : String

    
VARIABLE:   [compare-00]  private var compare : String

FUNCTION:   [String-29]  public native const function charAt(index: Number) : String

     ARG:   [arg-00]   private index : Number

    
VARIABLE:   [index-00]  private var index : Number

FUNCTION:   [String-30]  public native const function charCodeAt(index: Number) : Number

     ARG:   [arg-00]   private index : Number

    
VARIABLE:   [index-00]  private var index : Number

FUNCTION:   [String-31]  public native const function concat(args: Array) : String

     ARG:   [arg-00]   private args : Array

    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [String-32]  public native const function contains(pattern: Object) : Boolean

     ARG:   [arg-00]   private pattern : Object

    
VARIABLE:   [pattern-00]  private var pattern : Object

FUNCTION:   [String-33]  public native const function endsWith(test: String) : Boolean

     ARG:   [arg-00]   private test : String

    
VARIABLE:   [test-00]  private var test : String

FUNCTION:   [String-34]  public native const function format(args: Array) : String

     ARG:   [arg-00]   private args : Array

    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [String-35]  public native const static function fromCharCode(codes: Array) : String

     ARG:   [arg-00]   private codes : Array

    
VARIABLE:   [codes-00]  private var codes : Array

FUNCTION:   [String-36]  public native const function indexOf(pattern: String, startIndex: Number) : Number

     ARG:   [arg-00]   private pattern : String
     ARG:   [arg-01]   private startIndex : Number

    
VARIABLE:   [pattern-00]  private var pattern : String
VARIABLE:   [startIndex-01]  private var startIndex : Number

FUNCTION:   [String-37]  public native const get function isDigit() : Boolean


    

FUNCTION:   [String-38]  public native const get function isAlpha() : Boolean


    

FUNCTION:   [String-39]  public native const get function isAlphaNum() : Boolean


    

FUNCTION:   [String-40]  public native const get function isLower() : Boolean


    

FUNCTION:   [String-41]  public native const get function isSpace() : Boolean


    

FUNCTION:   [String-42]  public native const get function isUpper() : Boolean


    

FUNCTION:   [String-43]  public native const function lastIndexOf(pattern: String, location: Number) : Number

     ARG:   [arg-00]   private pattern : String
     ARG:   [arg-01]   private location : Number

    
VARIABLE:   [pattern-00]  private var pattern : String
VARIABLE:   [location-01]  private var location : Number

FUNCTION:   [String-44]  public native const get function length() : Number


    

FUNCTION:   [String-45]  public native const function match(pattern: RegExp) : Array

     ARG:   [arg-00]   private pattern : RegExp

    
VARIABLE:   [pattern-00]  private var pattern : RegExp

FUNCTION:   [String-46]  public const function parseJSON(filter: Function) : Object

     ARG:   [arg-00]   private filter : Function

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 ec 8d 01 80 b8 08 .... debug 

    # ejs.es:9078                           deserialize(this)

    0015: [0] 57 ......................... loadThis 
    0016: [1] 17 c6 01 02 ................ callGlobalSlot <slot: 99> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [filter-00]  private var filter : Function

FUNCTION:   [String-47]  public native const function toCamel() : String


    

FUNCTION:   [String-48]  public native const function toPascal() : String


    

FUNCTION:   [String-49]  public native const function printable() : String


    

FUNCTION:   [String-50]  public native const function quote() : String


    

FUNCTION:   [String-51]  public native const function remove(start: Number, end: Number) : String

     ARG:   [arg-00]   private start : Number
     ARG:   [arg-01]   private end : Number

    
VARIABLE:   [start-00]  private var start : Number
VARIABLE:   [end-01]  private var end : Number

FUNCTION:   [String-52]  public native const function replace(pattern: Object, replacement: String) : String

     ARG:   [arg-00]   private pattern : Object
     ARG:   [arg-01]   private replacement : String

    
VARIABLE:   [pattern-00]  private var pattern : Object
VARIABLE:   [replacement-01]  private var replacement : String

FUNCTION:   [String-53]  public native const function reverse() : String


    

FUNCTION:   [String-54]  public native const function search(pattern: Object) : Number

     ARG:   [arg-00]   private pattern : Object

    
VARIABLE:   [pattern-00]  private var pattern : Object

FUNCTION:   [String-55]  public native const function slice(start: Number, end: Number, step: Number) : String

     ARG:   [arg-00]   private start : Number
     ARG:   [arg-01]   private end : Number
     ARG:   [arg-02]   private step : Number

    
VARIABLE:   [start-00]  private var start : Number
VARIABLE:   [end-01]  private var end : Number
VARIABLE:   [step-02]  private var step : Number

FUNCTION:   [String-56]  public native const function split(delimiter: Object, limit: Number) : Array

     ARG:   [arg-00]   private delimiter : Object
     ARG:   [arg-01]   private limit : Number

    
VARIABLE:   [delimiter-00]  private var delimiter : Object
VARIABLE:   [limit-01]  private var limit : Number

FUNCTION:   [String-57]  public native const function startsWith(test: String) : Boolean

     ARG:   [arg-00]   private test : String

    
VARIABLE:   [test-00]  private var test : String

FUNCTION:   [String-58]  public native const function substring(startIndex: Number, end: Number) : String

     ARG:   [arg-00]   private startIndex : Number
     ARG:   [arg-01]   private end : Number

    
VARIABLE:   [startIndex-00]  private var startIndex : Number
VARIABLE:   [end-01]  private var end : Number

FUNCTION:   [String-59]  public const function times(times: Number) : String

     ARG:   [arg-00]   private times : Number
   LOCAL:   [local-01] var s : String
   LOCAL:   [local-02] var i

    0000: [0] 33 02 c6 8f 01 c6 c5 08 .... debug 

    # ejs.es:9187                           var s: String = ""

    0008: [0] 56 d8 31 ................... loadString <> 
    0011: [1] 95 ......................... putLocalSlot1 
    0012: [0] 33 02 c8 8f 01 84 c6 08 .... debug 

    # ejs.es:9188                           for (i in times) {

    0020: [0] 5b ......................... getLocalSlot0 
    0021: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0027: [0] 93 ......................... pushResult 
    0028: [1] 39 ......................... dup 
    0029: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0032: [1] 93 ......................... pushResult 
    0033: [2] 96 ......................... putLocalSlot2 
    0034: [1] 33 02 ca 8f 01 c2 c6 08 .... debug 

    # ejs.es:9189                               s += this

    0042: [1] 5c ......................... getLocalSlot1 
    0043: [2] 57 ......................... loadThis 
    0044: [3] 00 ......................... add 
    0045: [2] 95 ......................... putLocalSlot1 
    0046: [1] 3e ec ...................... goto8 <addr: 28> 
    0048: [1] 90 ......................... pop 
    0049: [0] 33 02 ce 8f 01 f6 c6 08 .... debug 

    # ejs.es:9191                           return s

    0057: [0] 5c ......................... getLocalSlot1 
    0058: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     29      32         48           48       StopIteration

VARIABLE:   [times-00]  private var times : Number
VARIABLE:   [s-01]  private var s : String
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [String-60]  public native const function tokenize(format: String) : Array

     ARG:   [arg-00]   private format : String

    
VARIABLE:   [format-00]  private var format : String

FUNCTION:   [String-61]  public native const function toLower() : String


    

FUNCTION:   [String-62]  public native const function toUpper() : String


    

FUNCTION:   [String-63]  public native const function trim(str: String) : String

     ARG:   [arg-00]   private str : String

    
VARIABLE:   [str-00]  private var str : String

FUNCTION:   [String-64]  public native const function trimStart(str: String) : String

     ARG:   [arg-00]   private str : String

    
VARIABLE:   [str-00]  private var str : String

FUNCTION:   [String-65]  public native const function trimEnd(str: String) : String

     ARG:   [arg-00]   private str : String

    
VARIABLE:   [str-00]  private var str : String

FUNCTION:   [String-66]  public const function -(str: String) : String

     ARG:   [arg-00]   private str : String
   LOCAL:   [local-01] var i : Number

    0000: [0] 33 02 b8 91 01 8c ce 08 .... debug 

    # ejs.es:9308                           var i: Number = indexOf(str)

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1f 9c 54 e0 01 02 .......... callScopedName <indexOf> <public> <argc: 1> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 95 ......................... putLocalSlot1 
    0017: [0] 33 02 ba 91 01 de ce 08 .... debug 

    # ejs.es:9309                           return remove(i, i + str.length)

    0025: [0] 5c ......................... getLocalSlot1 
    0026: [1] 5c ......................... getLocalSlot1 
    0027: [2] 5b ......................... getLocalSlot0 
    0028: [3] 7b aa 31 e0 01 ............. getObjName <length> <public> 
    0033: [3] 00 ......................... add 
    0034: [2] 1f de 74 e0 01 04 .......... callScopedName <remove> <public> <argc: 2> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] bf ......................... returnValue 
    
VARIABLE:   [str-00]  private var str : String
VARIABLE:   [i-01]  private var i : Number

FUNCTION:   [String-67]  public const function %(arg: Object) : String

     ARG:   [arg-00]   private arg : Object

    0000: [0] 33 02 98 92 01 8e d0 08 .... debug 

    # ejs.es:9356                           return format(arg)

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1f e0 c0 02 e0 01 02 ....... callScopedName <format> <public> <argc: 1> 
    0016: [0] 93 ......................... pushResult 
    0017: [1] bf ......................... returnValue 
    
VARIABLE:   [arg-00]  private var arg : Object

CLASS:      class System extends Object
            #  Class Details: 36 class traits, 0 instance traits, requested slot 117

FUNCTION:   [System-26]  -initializer- static function System-initializer() : void


    0000: [0] 33 02 a0 93 01 c4 03 ....... debug 

    # ejs.es:9424                       use default namespace public

    0007: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0009: [1] 02 ......................... addNamespaceRef 
    0010: [0] 33 02 a8 93 01 94 d1 08 .... debug 

    # ejs.es:9428                       public static const Bufsize: Number = 1024

    0018: [0] 51 80 10 ................... loadInt <1024> 
    0021: [1] 57 ......................... loadThis 
    0022: [2] b3 fa d1 08 e0 01 .......... putObjName <Bufsize> <public> 
    0028: [0] 33 02 b2 93 01 8a d2 08 .... debug 

    # ejs.es:9433                       native static function get hostname(): String

    0036: [0] 33 02 be 93 01 88 d3 08 .... debug 

    # ejs.es:9439                       native static function get ipaddr(): String

    0044: [0] 33 02 ce 93 01 fe d3 08 .... debug 

    # ejs.es:9447                       native static function run(cmd: String): String

    0052: [0] 33 02 dc 93 01 f6 d4 08 .... debug 

    # ejs.es:9454                       native static function runx(cmd: String): Void

    0060: [0] 33 02 e2 93 01 e4 d5 08 .... debug 

    # ejs.es:9457                       native static function daemon(cmd: String): Number

    0068: [0] 33 02 f2 93 01 da d6 08 .... debug 

    # ejs.es:9465                       static function sh(args): String {

    0076: [0] 33 02 82 94 01 c0 d8 08 .... debug 

    # ejs.es:9473                       static function cmd(args): String

    0084: [0] 33 02 8a 94 01 be d9 08 .... debug 

    # ejs.es:9477                       native static function exec(args): String

    0092: [0] be ......................... return 
    
VARIABLE:   [System-27]  public const static var Bufsize : Number

FUNCTION:   [System-28]  public native const static get function hostname() : String


    

FUNCTION:   [System-29]  public native const static get function ipaddr() : String


    

FUNCTION:   [System-30]  public native const static function run(cmd: String) : String

     ARG:   [arg-00]   private cmd : String

    
VARIABLE:   [cmd-00]  private var cmd : String

FUNCTION:   [System-31]  public native const static function runx(cmd: String) : void

     ARG:   [arg-00]   private cmd : String

    
VARIABLE:   [cmd-00]  private var cmd : String

FUNCTION:   [System-32]  public native const static function daemon(cmd: String) : Number

     ARG:   [arg-00]   private cmd : String

    
VARIABLE:   [cmd-00]  private var cmd : String

FUNCTION:   [System-33]  public const static function sh(args) : String

     ARG:   [arg-00]   private args

    0000: [0] 33 02 f4 93 01 b0 d7 08 .... debug 

    # ejs.es:9466                           return System.run("/bin/sh -c \"" + args + "\"").trim('\n')

    0008: [0] 7e ea 01 ................... getGlobalSlot <slot: 117> 
    0011: [1] 56 c4 f3 01 ................ loadString </bin/sh -c "> 
    0015: [2] 5b ......................... getLocalSlot0 
    0016: [3] 00 ......................... add 
    0017: [2] 56 80 f4 01 ................ loadString <"> 
    0021: [3] 00 ......................... add 
    0022: [2] 1e 92 f4 01 e0 01 02 ....... callObjName <run> <public> <argc: 1> 
    0029: [0] 93 ......................... pushResult 
    0030: [1] 56 84 f4 01 ................ loadString <
> 
    0034: [2] 1e 88 f4 01 00 02 .......... callObjName <trim> <> <argc: 1> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] bf ......................... returnValue 
    
VARIABLE:   [args-00]  private var args

FUNCTION:   [System-34]  public const static function cmd(args) : String

     ARG:   [arg-00]   private args

    0000: [0] 33 02 84 94 01 94 d9 08 .... debug 

    # ejs.es:9474                           sh(args)

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1f 9a f4 01 e0 01 02 ....... callScopedName <sh> <public> <argc: 1> 
    0016: [0] 93 ......................... pushResult 
    0017: [1] bf ......................... returnValue 
    
VARIABLE:   [args-00]  private var args

FUNCTION:   [System-35]  public native const static function exec(args) : String

     ARG:   [arg-00]   private args

    
VARIABLE:   [args-00]  private var args

CLASS:      class TextStream extends Object
            #  Class Details: 41 class traits, 4 instance traits, requested slot 118

FUNCTION:   [TextStream-26]  -constructor- const function TextStream(stream: Stream) : void

     ARG:   [arg-00]   private stream : Stream

    0000: [0] 7e ca 01 ................... getGlobalSlot <slot: 101> 
    0003: [1] 7b 9a de 05 e0 01 .......... getObjName <textEncoding> <public> 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 e0 c0 02 8e dc 08 ....... putObjName <format> <[ejs::TextStream,private]> 
    0017: [0] 33 02 bc 95 01 90 de 08 .... debug 

    # ejs.es:9566                           if (stream == null) {

    0025: [0] 5b ......................... getLocalSlot0 
    0026: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0028: [2] 25 ......................... compareEq 
    0029: [1] 13 14 ...................... branchFalse8 <addr: 51> 
    0031: [0] 33 02 be 95 01 d4 de 08 .... debug 

    # ejs.es:9567                               throw new ArgError("Must supply a Stream argument")

    0039: [0] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0041: [1] 89 ......................... new 
    0042: [1] 56 dc df 08 ................ loadString <Must supply a Stream argument> 
    0046: [2] 20 02 ...................... callConstructor <argc: 1> 
    0048: [1] c6 ......................... throw 
    0049: [1] 3e 00 ...................... goto8 <addr: 51> 
    0051: [1] 33 02 c0 95 01 bc 15 ....... debug 

    # ejs.es:9568                           }

    0058: [1] 33 02 c2 95 01 ea 8a 01 .... debug 

    # ejs.es:9569                           inbuf = new ByteArray

    0066: [1] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0068: [2] 89 ......................... new 
    0069: [2] 20 00 ...................... callConstructor <argc: 0> 
    0071: [2] 57 ......................... loadThis 
    0072: [3] b3 9e 85 01 8e dc 08 ....... putObjName <inbuf> <[ejs::TextStream,private]> 
    0079: [1] 33 02 d0 95 01 aa 8a 01 .... debug 

    # ejs.es:9576                           nextStream = stream

    0087: [1] 5b ......................... getLocalSlot0 
    0088: [2] 57 ......................... loadThis 
    0089: [3] b3 9e 87 01 8e dc 08 ....... putObjName <nextStream> <[ejs::TextStream,private]> 
    0096: [1] 33 02 d2 95 01 98 e0 08 .... debug 

    # ejs.es:9577                           newline = FileSystem("/").newline

    0104: [1] 56 f4 e0 08 ................ loadString </> 
    0108: [2] 17 4a 02 ................... callGlobalSlot <slot: 37> <argc: 1> 
    0111: [1] 93 ......................... pushResult 
    0112: [2] 7b c6 fd 03 e0 01 .......... getObjName <newline> <public> 
    0118: [2] 57 ......................... loadThis 
    0119: [3] b3 c6 fd 03 8e dc 08 ....... putObjName <newline> <[ejs::TextStream,private]> 
    0126: [1] be ......................... return 
    0127: [0] 33 02 d4 95 01 b4 16 ....... debug 

    # ejs.es:9578                       }
    
VARIABLE:   [stream-00]  private var stream : Stream

FUNCTION:   [TextStream-27]  public const function addListener(name, listener: Function) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    0000: [0] 33 02 e0 95 01 f8 e0 08 .... debug 

    # ejs.es:9584                           throw new ArgError("Listeners are not supported")

    0008: [0] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0010: [1] 89 ......................... new 
    0011: [1] 56 f4 e1 08 ................ loadString <Listeners are not supported> 
    0015: [2] 20 02 ...................... callConstructor <argc: 1> 
    0017: [1] c6 ......................... throw 
    0018: [1] 54 ......................... loadNull 
    0019: [2] bf ......................... returnValue 
    0020: [0] 33 02 e2 95 01 b4 16 ....... debug 

    # ejs.es:9585                       }
    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [TextStream-28]  public const get function async() : Boolean


    0000: [0] 33 02 ee 95 01 b4 f4 05 .... debug 

    # ejs.es:9591                           false

    0008: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0010: [1] bf ......................... returnValue 
    

FUNCTION:   [TextStream-28]  public const set function async(enable: Boolean) : void

     ARG:   [arg-00]   private enable : Boolean

    0000: [0] 33 02 fa 95 01 c0 f5 05 .... debug 

    # ejs.es:9597                           if (enable) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 13 14 ...................... branchFalse8 <addr: 31> 
    0011: [0] 33 02 fc 95 01 ac e2 08 .... debug 

    # ejs.es:9598                               throw new ArgError("Async mode not supported")

    0019: [0] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0021: [1] 89 ......................... new 
    0022: [1] 56 d6 f6 05 ................ loadString <Async mode not supported> 
    0026: [2] 20 02 ...................... callConstructor <argc: 1> 
    0028: [1] c6 ......................... throw 
    0029: [1] 3e 00 ...................... goto8 <addr: 31> 
    0031: [1] 54 ......................... loadNull 
    0032: [2] bf ......................... returnValue 
    0033: [0] 33 02 80 96 01 b4 16 ....... debug 

    # ejs.es:9600                       }
    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [TextStream-29]  public const get function available() : Number


    0000: [0] 33 02 8e 96 01 96 97 01 .... debug 

    # ejs.es:9607                           inbuf.available

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0016: [1] 7b ce 97 01 e0 01 .......... getObjName <available> <public> 
    0022: [1] bf ......................... returnValue 
    

FUNCTION:   [TextStream-30]  public const function close() : void


    0000: [0] 33 02 9a 96 01 ba a1 01 .... debug 

    # ejs.es:9613                           inbuf.flush()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0016: [1] 1e ee a1 01 e0 01 00 ....... callObjName <flush> <public> <argc: 0> 
    0023: [0] 33 02 9c 96 01 a0 98 01 .... debug 

    # ejs.es:9614                           nextStream.close()

    0031: [0] 57 ......................... loadThis 
    0032: [1] 7b 9e 87 01 8e dc 08 ....... getObjName <nextStream> <[ejs::TextStream,private]> 
    0039: [1] 1e b0 15 e0 01 00 .......... callObjName <close> <public> <argc: 0> 
    0045: [0] 54 ......................... loadNull 
    0046: [1] bf ......................... returnValue 
    0047: [0] 33 02 9e 96 01 b4 16 ....... debug 

    # ejs.es:9615                       }
    

FUNCTION:   [TextStream-31]  public const get function encoding() : String


    0000: [0] 33 02 ae 96 01 aa e3 08 .... debug 

    # ejs.es:9623                           format

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b e0 c0 02 8e dc 08 ....... getObjName <format> <[ejs::TextStream,private]> 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [TextStream-31]  public const set function encoding(encoding: String) : void

     ARG:   [arg-00]   private encoding : String

    0000: [0] 33 02 c0 96 01 c0 e4 08 .... debug 

    # ejs.es:9632                           format = encoding

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 e0 c0 02 8e dc 08 ....... putObjName <format> <[ejs::TextStream,private]> 
    0017: [0] 54 ......................... loadNull 
    0018: [1] bf ......................... returnValue 
    0019: [0] 33 02 c2 96 01 b4 16 ....... debug 

    # ejs.es:9633                       }
    
VARIABLE:   [encoding-00]  private var encoding : String

FUNCTION:   [TextStream-32]  public const function fill() : Number


    0000: [0] 33 02 d0 96 01 c0 e5 08 .... debug 

    # ejs.es:9640                           inbuf.compact()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0016: [1] 1e e0 51 e0 01 00 .......... callObjName <compact> <public> <argc: 0> 
    0022: [0] 33 02 d2 96 01 f8 e5 08 .... debug 

    # ejs.es:9641                           return nextStream.read(inbuf, -1)

    0030: [0] 57 ......................... loadThis 
    0031: [1] 7b 9e 87 01 8e dc 08 ....... getObjName <nextStream> <[ejs::TextStream,private]> 
    0038: [1] 57 ......................... loadThis 
    0039: [2] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0046: [2] 45 ......................... load1 
    0047: [3] 88 ......................... neg 
    0048: [3] 1e f4 8d 01 e0 01 04 ....... callObjName <read> <public> <argc: 2> 
    0055: [0] 93 ......................... pushResult 
    0056: [1] bf ......................... returnValue 
    

FUNCTION:   [TextStream-33]  public const function flush() : void


    0000: [0] 33 02 e0 96 01 ba a1 01 .... debug 

    # ejs.es:9648                           inbuf.flush()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0016: [1] 1e ee a1 01 e0 01 00 ....... callObjName <flush> <public> <argc: 0> 
    0023: [0] 33 02 e2 96 01 b0 a2 01 .... debug 

    # ejs.es:9649                           if (!(nextStream is ByteArray)) {

    0031: [0] 57 ......................... loadThis 
    0032: [1] 7b 9e 87 01 8e dc 08 ....... getObjName <nextStream> <[ejs::TextStream,private]> 
    0039: [1] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0041: [2] 43 ......................... isA 
    0042: [1] 86 ......................... logicalNot 
    0043: [1] 13 19 ...................... branchFalse8 <addr: 70> 
    0045: [0] 33 02 e4 96 01 8c a3 01 .... debug 

    # ejs.es:9650                               nextStream.flush()

    0053: [0] 57 ......................... loadThis 
    0054: [1] 7b 9e 87 01 8e dc 08 ....... getObjName <nextStream> <[ejs::TextStream,private]> 
    0061: [1] 1e ee a1 01 e0 01 00 ....... callObjName <flush> <public> <argc: 0> 
    0068: [0] 3e 00 ...................... goto8 <addr: 70> 
    0070: [0] 54 ......................... loadNull 
    0071: [1] bf ......................... returnValue 
    0072: [0] 33 02 e8 96 01 b4 16 ....... debug 

    # ejs.es:9652                       }
    

FUNCTION:   [TextStream-34]  public const function read(buffer: ByteArray, offset: Number, count: Number) : Number

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number
   LOCAL:   [local-03] var total
   LOCAL:   [local-04] var where
   LOCAL:   [local-05] var len

    0000: [0] 41 03 03 05 08 ............. initDefaultArgs8 <3> <5> <7> <10> 
    0005: [0] 44 ......................... load0 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 45 ......................... load1 
    0008: [1] 88 ......................... neg 
    0009: [1] 96 ......................... putLocalSlot2 
    0010: [0] 33 02 80 97 01 a0 e8 08 .... debug 

    # ejs.es:9664                           let total = 0

    0018: [0] 44 ......................... load0 
    0019: [1] 97 ......................... putLocalSlot3 
    0020: [0] 33 02 82 97 01 d4 e8 08 .... debug 

    # ejs.es:9665                           if (count < 0) {

    0028: [0] 5d ......................... getLocalSlot2 
    0029: [1] 44 ......................... load0 
    0030: [2] 2b ......................... compareLt 
    0031: [1] 13 14 ...................... branchFalse8 <addr: 53> 
    0033: [0] 33 02 84 97 01 8e e9 08 .... debug 

    # ejs.es:9666                               count = Number.MaxValue

    0041: [0] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0044: [1] 7b 82 c9 06 e0 01 .......... getObjName <MaxValue> <public> 
    0050: [1] 96 ......................... putLocalSlot2 
    0051: [0] 3e 00 ...................... goto8 <addr: 53> 
    0053: [0] 33 02 88 97 01 de e9 08 .... debug 

    # ejs.es:9668                           if (offset < 0) {

    0061: [0] 5c ......................... getLocalSlot1 
    0062: [1] 44 ......................... load0 
    0063: [2] 2b ......................... compareLt 
    0064: [1] 13 12 ...................... branchFalse8 <addr: 84> 
    0066: [0] 33 02 8a 97 01 ae 92 01 .... debug 

    # ejs.es:9669                               buffer.reset()

    0074: [0] 5b ......................... getLocalSlot0 
    0075: [1] 1e ec 92 01 e0 01 00 ....... callObjName <reset> <public> <argc: 0> 
    0082: [0] 3e 17 ...................... goto8 <addr: 107> 
    0084: [0] 33 02 8c 97 01 94 42 ....... debug 

    # ejs.es:9670                           } else {

    0091: [0] 33 02 8e 97 01 9a ea 08 .... debug 

    # ejs.es:9671                               buffer.flush()

    0099: [0] 5b ......................... getLocalSlot0 
    0100: [1] 1e ee a1 01 e0 01 00 ....... callObjName <flush> <public> <argc: 0> 
    0107: [0] 33 02 90 97 01 bc 15 ....... debug 

    # ejs.es:9672                           }

    0114: [0] 33 02 92 97 01 d8 ea 08 .... debug 

    # ejs.es:9673                           let where = buffer.writePosition

    0122: [0] 5b ......................... getLocalSlot0 
    0123: [1] 7b 9a e7 01 e0 01 .......... getObjName <writePosition> <public> 
    0129: [1] 98 ......................... putLocalSlot4 
    0130: [0] 33 02 94 97 01 b2 eb 08 .... debug 

    # ejs.es:9674                           while (count > 0) {

    0138: [0] 5d ......................... getLocalSlot2 
    0139: [1] 44 ......................... load0 
    0140: [2] 29 ......................... compareGt 
    0141: [1] 07 ce 04 f7 f7 ............. branchFalse <addr: 441> 
    0146: [0] 33 02 96 97 01 f2 eb 08 .... debug 

    # ejs.es:9675                               if (inbuf.available == 0) {

    0154: [0] 57 ......................... loadThis 
    0155: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0162: [1] 7b ce 97 01 e0 01 .......... getObjName <available> <public> 
    0168: [1] 44 ......................... load0 
    0169: [2] 25 ......................... compareEq 
    0170: [1] 13 3f ...................... branchFalse8 <addr: 235> 
    0172: [0] 33 02 98 97 01 ca ec 08 .... debug 

    # ejs.es:9676                                   if (fill() <= 0) {

    0180: [0] 1f d4 e6 08 e0 01 00 ....... callScopedName <fill> <public> <argc: 0> 
    0187: [0] 93 ......................... pushResult 
    0188: [1] 44 ......................... load0 
    0189: [2] 2a ......................... compareLe 
    0190: [1] 13 29 ...................... branchFalse8 <addr: 233> 
    0192: [0] 33 02 9a 97 01 98 ed 08 .... debug 

    # ejs.es:9677                                       if (total == 0) {

    0200: [0] 5e ......................... getLocalSlot3 
    0201: [1] 44 ......................... load0 
    0202: [2] 25 ......................... compareEq 
    0203: [1] 13 0d ...................... branchFalse8 <addr: 218> 
    0205: [0] 33 02 9c 97 01 ec ed 08 .... debug 

    # ejs.es:9678                                           return null

    0213: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0215: [1] bf ......................... returnValue 
    0216: [0] 3e 00 ...................... goto8 <addr: 218> 
    0218: [0] 33 02 a0 97 01 bc ee 08 .... debug 

    # ejs.es:9680                                       break

    0226: [0] 3d a4 03 f7 f7 ............. goto <addr: 441> 
    0231: [0] 3e 00 ...................... goto8 <addr: 233> 
    0233: [0] 3e 00 ...................... goto8 <addr: 235> 
    0235: [0] 33 02 a4 97 01 ee b2 01 .... debug 

    # ejs.es:9682                               }

    0243: [0] 33 02 a6 97 01 80 ef 08 .... debug 

    # ejs.es:9683                               let len = count.min(inbuf.available)

    0251: [0] 5d ......................... getLocalSlot2 
    0252: [1] 57 ......................... loadThis 
    0253: [2] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0260: [2] 7b ce 97 01 e0 01 .......... getObjName <available> <public> 
    0266: [2] 1e f2 db 02 e0 01 02 ....... callObjName <min> <public> <argc: 1> 
    0273: [0] 93 ......................... pushResult 
    0274: [1] 99 ......................... putLocalSlot5 
    0275: [0] 33 02 a8 97 01 ea ef 08 .... debug 

    # ejs.es:9684                               len = len.min(buffer.length - where)

    0283: [0] 60 ......................... getLocalSlot5 
    0284: [1] 5b ......................... getLocalSlot0 
    0285: [2] 7b aa 31 e0 01 ............. getObjName <length> <public> 
    0290: [2] 5f ......................... getLocalSlot4 
    0291: [3] c3 ......................... sub 
    0292: [2] 1e f2 db 02 00 02 .......... callObjName <min> <> <argc: 1> 
    0298: [0] 93 ......................... pushResult 
    0299: [1] 99 ......................... putLocalSlot5 
    0300: [0] 33 02 aa 97 01 d4 f0 08 .... debug 

    # ejs.es:9685                               if (len == 0) break

    0308: [0] 60 ......................... getLocalSlot5 
    0309: [1] 44 ......................... load0 
    0310: [2] 25 ......................... compareEq 
    0311: [1] 13 07 ...................... branchFalse8 <addr: 320> 
    0313: [0] 3d f6 01 f7 f7 ............. goto <addr: 441> 
    0318: [0] 3e 00 ...................... goto8 <addr: 320> 
    0320: [0] 33 02 ac 97 01 9c f1 08 .... debug 

    # ejs.es:9686                               len = buffer.copyIn(where, inbuf, inbuf.readPosition, len)

    0328: [0] 5b ......................... getLocalSlot0 
    0329: [1] 5f ......................... getLocalSlot4 
    0330: [2] 57 ......................... loadThis 
    0331: [3] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0338: [3] 57 ......................... loadThis 
    0339: [4] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0346: [4] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0352: [4] 60 ......................... getLocalSlot5 
    0353: [5] 1e d2 cc 01 e0 01 08 ....... callObjName <copyIn> <public> <argc: 4> 
    0360: [0] 93 ......................... pushResult 
    0361: [1] 99 ......................... putLocalSlot5 
    0362: [0] 33 02 ae 97 01 b2 f2 08 .... debug 

    # ejs.es:9687                               inbuf.readPosition += len

    0370: [0] 57 ......................... loadThis 
    0371: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0378: [1] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0384: [1] 60 ......................... getLocalSlot5 
    0385: [2] 00 ......................... add 
    0386: [1] 57 ......................... loadThis 
    0387: [2] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0394: [2] b3 94 92 01 e0 01 .......... putObjName <readPosition> <public> 
    0400: [0] 33 02 b0 97 01 86 f3 08 .... debug 

    # ejs.es:9688                               where += len

    0408: [0] 5f ......................... getLocalSlot4 
    0409: [1] 60 ......................... getLocalSlot5 
    0410: [2] 00 ......................... add 
    0411: [1] 98 ......................... putLocalSlot4 
    0412: [0] 33 02 b2 97 01 c0 f3 08 .... debug 

    # ejs.es:9689                               total += len

    0420: [0] 5e ......................... getLocalSlot3 
    0421: [1] 60 ......................... getLocalSlot5 
    0422: [2] 00 ......................... add 
    0423: [1] 97 ......................... putLocalSlot3 
    0424: [0] 33 02 b4 97 01 fa f3 08 .... debug 

    # ejs.es:9690                               count -= len

    0432: [0] 5d ......................... getLocalSlot2 
    0433: [1] 60 ......................... getLocalSlot5 
    0434: [2] c3 ......................... sub 
    0435: [1] 96 ......................... putLocalSlot2 
    0436: [0] 3d df 04 f7 f7 ............. goto <addr: 138> 
    0441: [0] 33 02 b6 97 01 bc 15 ....... debug 

    # ejs.es:9691                           }

    0448: [0] 33 02 b8 97 01 b4 f4 08 .... debug 

    # ejs.es:9692                           buffer.writePosition += total

    0456: [0] 5b ......................... getLocalSlot0 
    0457: [1] 7b 9a e7 01 e0 01 .......... getObjName <writePosition> <public> 
    0463: [1] 5e ......................... getLocalSlot3 
    0464: [2] 00 ......................... add 
    0465: [1] 5b ......................... getLocalSlot0 
    0466: [2] b3 9a e7 01 e0 01 .......... putObjName <writePosition> <public> 
    0472: [0] 33 02 ba 97 01 88 f5 08 .... debug 

    # ejs.es:9693                           return total

    0480: [0] 5e ......................... getLocalSlot3 
    0481: [1] bf ......................... returnValue 
    
VARIABLE:   [buffer-00]  private var buffer : ByteArray
VARIABLE:   [offset-01]  private var offset : Number
VARIABLE:   [count-02]  private var count : Number
VARIABLE:   [total-03]  private var total
VARIABLE:   [where-04]  private var where
VARIABLE:   [len-05]  -hoisted-5 var len

FUNCTION:   [TextStream-35]  public const function readLine() : String

   LOCAL:   [local-00] var nl
   LOCAL:   [local-01] var nlchar
   LOCAL:   [local-02] var i

    0000: [0] 33 02 cc 97 01 86 f6 08 .... debug 

    # ejs.es:9702                           if (inbuf.available == 0 && fill() <= 0) {

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0016: [1] 7b ce 97 01 e0 01 .......... getObjName <available> <public> 
    0022: [1] 44 ......................... load0 
    0023: [2] 25 ......................... compareEq 
    0024: [1] 39 ......................... dup 
    0025: [2] 13 0b ...................... branchFalse8 <addr: 38> 
    0027: [1] 90 ......................... pop 
    0028: [0] 1f d4 e6 08 e0 01 00 ....... callScopedName <fill> <public> <argc: 0> 
    0035: [0] 93 ......................... pushResult 
    0036: [1] 44 ......................... load0 
    0037: [2] 2a ......................... compareLe 
    0038: [1] 13 0d ...................... branchFalse8 <addr: 53> 
    0040: [0] 33 02 ce 97 01 d2 bf 07 .... debug 

    # ejs.es:9703                               return null

    0048: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0050: [1] bf ......................... returnValue 
    0051: [0] 3e 00 ...................... goto8 <addr: 53> 
    0053: [0] 33 02 d0 97 01 bc 15 ....... debug 

    # ejs.es:9704                           }

    0060: [0] 33 02 d4 97 01 fa f6 08 .... debug 

    # ejs.es:9706               			let nl = "\r\n"

    0068: [0] 56 e8 b2 05 ................ loadString <
> 
    0072: [1] 94 ......................... putLocalSlot0 
    0073: [0] 33 02 d6 97 01 a0 f7 08 .... debug 

    # ejs.es:9707                           while (true) {

    0081: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0084: [1] 07 a4 07 f7 f7 ............. branchFalse <addr: 555> 
    0089: [0] 33 02 d8 97 01 e4 f7 08 .... debug 

    # ejs.es:9708                               let nlchar = nl.charCodeAt(nl.length - 1)

    0097: [0] 5b ......................... getLocalSlot0 
    0098: [1] 5b ......................... getLocalSlot0 
    0099: [2] 7b aa 31 00 ................ getObjName <length> <> 
    0103: [2] 45 ......................... load1 
    0104: [3] c3 ......................... sub 
    0105: [2] 1e c0 a9 08 00 02 .......... callObjName <charCodeAt> <> <argc: 1> 
    0111: [0] 93 ......................... pushResult 
    0112: [1] 95 ......................... putLocalSlot1 
    0113: [0] 33 02 da 97 01 d8 f8 08 .... debug 

    # ejs.es:9709                               for (let i = inbuf.readPosition; i < inbuf.writePosition; i++) {

    0121: [0] 57 ......................... loadThis 
    0122: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0129: [1] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0135: [1] 96 ......................... putLocalSlot2 
    0136: [0] 5d ......................... getLocalSlot2 
    0137: [1] 57 ......................... loadThis 
    0138: [2] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0145: [2] 7b 9a e7 01 e0 01 .......... getObjName <writePosition> <public> 
    0151: [2] 2b ......................... compareLt 
    0152: [1] 07 e6 04 f7 f7 ............. branchFalse <addr: 464> 
    0157: [0] 33 02 dc 97 01 fa f9 08 .... debug 

    # ejs.es:9710                                   if (inbuf[i] == nlchar) {

    0165: [0] 57 ......................... loadThis 
    0166: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0173: [1] 56 d8 31 ................... loadString <> 
    0176: [2] 5d ......................... getLocalSlot2 
    0177: [3] 7c ......................... getObjNameExpr 
    0178: [1] 5c ......................... getLocalSlot1 
    0179: [2] 25 ......................... compareEq 
    0180: [1] 07 88 04 f7 f7 ............. branchFalse <addr: 445> 
    0185: [0] 33 02 de 97 01 d6 fa 08 .... debug 

    # ejs.es:9711                                       if (nl.length == 2 && i > inbuf.readPosition && nl.charCodeAt(0) == inbuf[i-1]) {

    0193: [0] 5b ......................... getLocalSlot0 
    0194: [1] 7b aa 31 00 ................ getObjName <length> <> 
    0198: [1] 46 ......................... load2 
    0199: [2] 25 ......................... compareEq 
    0200: [1] 39 ......................... dup 
    0201: [2] 13 11 ...................... branchFalse8 <addr: 220> 
    0203: [1] 90 ......................... pop 
    0204: [0] 5d ......................... getLocalSlot2 
    0205: [1] 57 ......................... loadThis 
    0206: [2] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0213: [2] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0219: [2] 29 ......................... compareGt 
    0220: [1] 39 ......................... dup 
    0221: [2] 13 1a ...................... branchFalse8 <addr: 249> 
    0223: [1] 90 ......................... pop 
    0224: [0] 5b ......................... getLocalSlot0 
    0225: [1] 44 ......................... load0 
    0226: [2] 1e c0 a9 08 00 02 .......... callObjName <charCodeAt> <> <argc: 1> 
    0232: [0] 93 ......................... pushResult 
    0233: [1] 57 ......................... loadThis 
    0234: [2] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0241: [2] 56 d8 31 ................... loadString <> 
    0244: [3] 5d ......................... getLocalSlot2 
    0245: [4] 45 ......................... load1 
    0246: [5] c3 ......................... sub 
    0247: [4] 7c ......................... getObjNameExpr 
    0248: [2] 25 ......................... compareEq 
    0249: [1] 13 56 ...................... branchFalse8 <addr: 337> 
    0251: [0] 33 02 e0 97 01 aa fc 08 .... debug 

    # ejs.es:9712               							result = inbuf.readString(i - inbuf.readPosition - 1)

    0259: [0] 57 ......................... loadThis 
    0260: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0267: [1] 5d ......................... getLocalSlot2 
    0268: [2] 57 ......................... loadThis 
    0269: [3] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0276: [3] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0282: [3] c3 ......................... sub 
    0283: [2] 45 ......................... load1 
    0284: [3] c3 ......................... sub 
    0285: [2] 1e 94 38 e0 01 02 .......... callObjName <readString> <public> <argc: 1> 
    0291: [0] 93 ......................... pushResult 
    0292: [1] b4 88 5b d8 31 ............. putScopedName <result> <> 
    0297: [0] 33 02 e2 97 01 a4 fd 08 .... debug 

    # ejs.es:9713               							inbuf.readPosition += 2

    0305: [0] 57 ......................... loadThis 
    0306: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0313: [1] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0319: [1] 46 ......................... load2 
    0320: [2] 00 ......................... add 
    0321: [1] 57 ......................... loadThis 
    0322: [2] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0329: [2] b3 94 92 01 e0 01 .......... putObjName <readPosition> <public> 
    0335: [0] 3e 5c ...................... goto8 <addr: 429> 
    0337: [0] 33 02 e4 97 01 80 af 03 .... debug 

    # ejs.es:9714                                       } else {

    0345: [0] 33 02 e6 97 01 e2 fd 08 .... debug 

    # ejs.es:9715               							result = inbuf.readString(i - inbuf.readPosition)

    0353: [0] 57 ......................... loadThis 
    0354: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0361: [1] 5d ......................... getLocalSlot2 
    0362: [2] 57 ......................... loadThis 
    0363: [3] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0370: [3] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0376: [3] c3 ......................... sub 
    0377: [2] 1e 94 38 e0 01 02 .......... callObjName <readString> <public> <argc: 1> 
    0383: [0] 93 ......................... pushResult 
    0384: [1] b4 88 5b d8 31 ............. putScopedName <result> <> 
    0389: [0] 33 02 e8 97 01 d4 fe 08 .... debug 

    # ejs.es:9716               							inbuf.readPosition++

    0397: [0] 57 ......................... loadThis 
    0398: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0405: [1] 7b 94 92 01 e0 01 .......... getObjName <readPosition> <public> 
    0411: [1] 39 ......................... dup 
    0412: [2] 3f 01 ...................... inc <1> 
    0414: [2] 57 ......................... loadThis 
    0415: [3] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0422: [3] b3 94 92 01 e0 01 .......... putObjName <readPosition> <public> 
    0428: [1] 90 ......................... pop 
    0429: [0] 33 02 ec 97 01 8c ff 08 .... debug 

    # ejs.es:9718                                       return result

    0437: [0] 79 88 5b d8 31 ............. getScopedName <result> <> 
    0442: [1] bf ......................... returnValue 
    0443: [0] 3e 00 ...................... goto8 <addr: 445> 
    0445: [0] 33 02 da 97 01 d8 f8 08 .... debug 

    # ejs.es:9709                               for (let i = inbuf.readPosition; i < inbuf.writePosition; i++) {

    0453: [0] 5d ......................... getLocalSlot2 
    0454: [1] 39 ......................... dup 
    0455: [2] 3f 01 ...................... inc <1> 
    0457: [2] 96 ......................... putLocalSlot2 
    0458: [1] 90 ......................... pop 
    0459: [0] 3d 91 05 f7 f7 ............. goto <addr: 136> 
    0464: [0] 33 02 f2 97 01 d8 ff 08 .... debug 

    # ejs.es:9721                               if (fill() <= 0) {

    0472: [0] 1f d4 e6 08 e0 01 00 ....... callScopedName <fill> <public> <argc: 0> 
    0479: [0] 93 ......................... pushResult 
    0480: [1] 44 ......................... load0 
    0481: [2] 2a ......................... compareLe 
    0482: [1] 13 42 ...................... branchFalse8 <addr: 550> 
    0484: [0] 33 02 f6 97 01 9e 80 09 .... debug 

    # ejs.es:9723                                   if (inbuf.available) {

    0492: [0] 57 ......................... loadThis 
    0493: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0500: [1] 7b ce 97 01 e0 01 .......... getObjName <available> <public> 
    0506: [1] 13 28 ...................... branchFalse8 <addr: 548> 
    0508: [0] 33 02 f8 97 01 f4 80 09 .... debug 

    # ejs.es:9724                                       return inbuf.readString(inbuf.available)

    0516: [0] 57 ......................... loadThis 
    0517: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0524: [1] 57 ......................... loadThis 
    0525: [2] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0532: [2] 7b ce 97 01 e0 01 .......... getObjName <available> <public> 
    0538: [2] 1e 94 38 e0 01 02 .......... callObjName <readString> <public> <argc: 1> 
    0544: [0] 93 ......................... pushResult 
    0545: [1] bf ......................... returnValue 
    0546: [0] 3e 00 ...................... goto8 <addr: 548> 
    0548: [0] 3e 00 ...................... goto8 <addr: 550> 
    0550: [0] 3d b5 07 f7 f7 ............. goto <addr: 81> 
    0555: [0] 33 02 80 98 01 bc 8e 06 .... debug 

    # ejs.es:9728                           return null

    0563: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0565: [1] bf ......................... returnValue 
    
VARIABLE:   [nl-00]  private var nl
VARIABLE:   [nlchar-01]  -hoisted-1 var nlchar
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [TextStream-36]  public const function readLines(numLines: Number) : Array

     ARG:   [arg-00]   private numLines : Number
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 45 ......................... load1 
    0005: [1] 88 ......................... neg 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 96 98 01 fe 82 09 .... debug 

    # ejs.es:9739                           var result: Array

    0015: [0] 33 02 98 98 01 ba 83 09 .... debug 

    # ejs.es:9740                           if (numLines <= 0) {

    0023: [0] 5b ......................... getLocalSlot0 
    0024: [1] 44 ......................... load0 
    0025: [2] 2a ......................... compareLe 
    0026: [1] 13 22 ...................... branchFalse8 <addr: 62> 
    0028: [0] 33 02 9a 98 01 fc 83 09 .... debug 

    # ejs.es:9741                               result = new Array

    0036: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0038: [1] 89 ......................... new 
    0039: [1] 20 00 ...................... callConstructor <argc: 0> 
    0041: [1] 95 ......................... putLocalSlot1 
    0042: [0] 33 02 9c 98 01 c2 84 09 .... debug 

    # ejs.es:9742                               numLines = Number.MaxValue

    0050: [0] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0053: [1] 7b 82 c9 06 e0 01 .......... getObjName <MaxValue> <public> 
    0059: [1] 94 ......................... putLocalSlot0 
    0060: [0] 3e 16 ...................... goto8 <addr: 84> 
    0062: [0] 33 02 9e 98 01 94 42 ....... debug 

    # ejs.es:9743                           } else {

    0069: [0] 33 02 a0 98 01 98 85 09 .... debug 

    # ejs.es:9744                               result = new Array(numLines)

    0077: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0079: [1] 89 ......................... new 
    0080: [1] 5b ......................... getLocalSlot0 
    0081: [2] 20 02 ...................... callConstructor <argc: 1> 
    0083: [1] 95 ......................... putLocalSlot1 
    0084: [0] 33 02 a4 98 01 f2 85 09 .... debug 

    # ejs.es:9746                           for (let i in numLines) {

    0092: [0] 5b ......................... getLocalSlot0 
    0093: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0099: [0] 93 ......................... pushResult 
    0100: [1] 39 ......................... dup 
    0101: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0104: [1] 93 ......................... pushResult 
    0105: [2] 96 ......................... putLocalSlot2 
    0106: [1] 33 02 a6 98 01 be 86 09 .... debug 

    # ejs.es:9747                               if ((line = readLine()) == null) {

    0114: [1] 1f f6 81 09 e0 01 00 ....... callScopedName <readLine> <public> <argc: 0> 
    0121: [1] 93 ......................... pushResult 
    0122: [2] 39 ......................... dup 
    0123: [3] b4 a4 87 09 d8 31 .......... putScopedName <line> <> 
    0129: [2] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0131: [3] 25 ......................... compareEq 
    0132: [2] 13 2a ...................... branchFalse8 <addr: 176> 
    0134: [1] 33 02 a8 98 01 ae 87 09 .... debug 

    # ejs.es:9748                                   if (i == 0) {

    0142: [1] 5d ......................... getLocalSlot2 
    0143: [2] 44 ......................... load0 
    0144: [3] 25 ......................... compareEq 
    0145: [2] 13 0d ...................... branchFalse8 <addr: 160> 
    0147: [1] 33 02 aa 98 01 f2 87 09 .... debug 

    # ejs.es:9749                                       return null

    0155: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0157: [2] bf ......................... returnValue 
    0158: [0] 3e 00 ...................... goto8 <addr: 160> 
    0160: [0] 33 02 ae 98 01 ba b2 01 .... debug 

    # ejs.es:9751                                   break

    0168: [0] 90 ......................... pop 
    0169: [-1] 3d 42 f7 f7 f7 ............. goto <addr: 207> 
    0174: [-1] 3e 00 ...................... goto8 <addr: 176> 
    0176: [-1] 33 02 b0 98 01 ee b2 01 .... debug 

    # ejs.es:9752                               }

    0184: [-1] 33 02 b2 98 01 ba 88 09 .... debug 

    # ejs.es:9753                               result[i] = line

    0192: [-1] 79 a4 87 09 d8 31 .......... getScopedName <line> <> 
    0198: [0] 5c ......................... getLocalSlot1 
    0199: [1] 56 d8 31 ................... loadString <> 
    0202: [2] 5d ......................... getLocalSlot2 
    0203: [3] b2 ......................... putObjNameExpr 
    0204: [-1] 3e 96 ...................... goto8 <addr: 100> 
    0206: [-1] 90 ......................... pop 
    0207: [-2] 33 02 b6 98 01 a4 5d ....... debug 

    # ejs.es:9755                           return result

    0214: [-2] 5c ......................... getLocalSlot1 
    0215: [-1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    101     104        206          206       StopIteration

VARIABLE:   [numLines-00]  private var numLines : Number
VARIABLE:   [result-01]  private var result : Array
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [TextStream-37]  public const function readString(count: Number) : String

     ARG:   [arg-00]   private count : Number

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 45 ......................... load1 
    0005: [1] 88 ......................... neg 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 ca 98 01 d2 ad 01 .... debug 

    # ejs.es:9765                           inbuf.readString(count)

    0015: [0] 57 ......................... loadThis 
    0016: [1] 7b 9e 85 01 8e dc 08 ....... getObjName <inbuf> <[ejs::TextStream,private]> 
    0023: [1] 5b ......................... getLocalSlot0 
    0024: [2] 1e 94 38 e0 01 02 .......... callObjName <readString> <public> <argc: 1> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] bf ......................... returnValue 
    
VARIABLE:   [count-00]  private var count : Number

FUNCTION:   [TextStream-38]  public const function removeListener(name, listener: Function) : void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    0000: [0] 33 02 d6 98 01 f8 e0 08 .... debug 

    # ejs.es:9771                           throw new ArgError("Listeners are not supported")

    0008: [0] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0010: [1] 89 ......................... new 
    0011: [1] 56 f4 e1 08 ................ loadString <Listeners are not supported> 
    0015: [2] 20 02 ...................... callConstructor <argc: 1> 
    0017: [1] c6 ......................... throw 
    0018: [1] 54 ......................... loadNull 
    0019: [2] bf ......................... returnValue 
    0020: [0] 33 02 d8 98 01 b4 16 ....... debug 

    # ejs.es:9772                       }
    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [TextStream-39]  public const function write(data: Array) : Number

     ARG:   [arg-00]   private data : Array

    0000: [0] 33 02 ea 98 01 fe 89 09 .... debug 

    # ejs.es:9781                           nextStream.write(data)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 9e 87 01 8e dc 08 ....... getObjName <nextStream> <[ejs::TextStream,private]> 
    0016: [1] 5b ......................... getLocalSlot0 
    0017: [2] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0024: [0] 93 ......................... pushResult 
    0025: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data : Array

FUNCTION:   [TextStream-40]  public const function writeLine(lines: Array) : Number

     ARG:   [arg-00]   private lines : Array
   LOCAL:   [local-01] var written
   LOCAL:   [local-02] var line

    0000: [0] 33 02 fc 98 01 b2 8b 09 .... debug 

    # ejs.es:9790                           let written = 0

    0008: [0] 44 ......................... load0 
    0009: [1] 95 ......................... putLocalSlot1 
    0010: [0] 33 02 fe 98 01 ea 8b 09 .... debug 

    # ejs.es:9791                           for each (let line in lines) {

    0018: [0] 5b ......................... getLocalSlot0 
    0019: [1] 1e 86 32 e2 31 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 39 ......................... dup 
    0027: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0030: [1] 93 ......................... pushResult 
    0031: [2] 96 ......................... putLocalSlot2 
    0032: [1] 33 02 80 99 01 c0 8c 09 .... debug 

    # ejs.es:9792                               nextStream.write(line)

    0040: [1] 57 ......................... loadThis 
    0041: [2] 7b 9e 87 01 8e dc 08 ....... getObjName <nextStream> <[ejs::TextStream,private]> 
    0048: [2] 5d ......................... getLocalSlot2 
    0049: [3] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0056: [1] 33 02 82 99 01 8e 8d 09 .... debug 

    # ejs.es:9793                               nextStream.write(newline)

    0064: [1] 57 ......................... loadThis 
    0065: [2] 7b 9e 87 01 8e dc 08 ....... getObjName <nextStream> <[ejs::TextStream,private]> 
    0072: [2] 57 ......................... loadThis 
    0073: [3] 7b c6 fd 03 8e dc 08 ....... getObjName <newline> <[ejs::TextStream,private]> 
    0080: [3] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0087: [1] 33 02 84 99 01 e2 8d 09 .... debug 

    # ejs.es:9794                               written += line.length + newline.length

    0095: [1] 5c ......................... getLocalSlot1 
    0096: [2] 5d ......................... getLocalSlot2 
    0097: [3] 7b aa 31 00 ................ getObjName <length> <> 
    0101: [3] 57 ......................... loadThis 
    0102: [4] 7b c6 fd 03 8e dc 08 ....... getObjName <newline> <[ejs::TextStream,private]> 
    0109: [4] 7b aa 31 e0 01 ............. getObjName <length> <public> 
    0114: [4] 00 ......................... add 
    0115: [3] 00 ......................... add 
    0116: [2] 95 ......................... putLocalSlot1 
    0117: [1] 3e a3 ...................... goto8 <addr: 26> 
    0119: [1] 90 ......................... pop 
    0120: [0] 33 02 88 99 01 d2 8e 09 .... debug 

    # ejs.es:9796                           return written

    0128: [0] 5c ......................... getLocalSlot1 
    0129: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     27      30        119          119       StopIteration

VARIABLE:   [lines-00]  private var lines : Array
VARIABLE:   [written-01]  private var written
VARIABLE:   [line-02]  -hoisted-2 var line
VARIABLE:   [newline-00]  [ejs::TextStream,private] var newline : String
VARIABLE:   [inbuf-01]  [ejs::TextStream,private] var inbuf : ByteArray
VARIABLE:   [format-02]  [ejs::TextStream,private] var format : String
VARIABLE:   [nextStream-03]  [ejs::TextStream,private] var nextStream : Stream

CLASS:      class Timer extends Object
            #  Class Details: 31 class traits, 0 instance traits, requested slot 119

FUNCTION:   [Timer-26]  -constructor- native const function Timer(period: Number, callback: Function, oneShot: Boolean, drift: Boolean) : void

     ARG:   [arg-00]   private period : Number
     ARG:   [arg-01]   private callback : Function
     ARG:   [arg-02]   private oneShot : Boolean
     ARG:   [arg-03]   private drift : Boolean

    
VARIABLE:   [period-00]  private var period : Number
VARIABLE:   [callback-01]  private var callback : Function
VARIABLE:   [oneShot-02]  private var oneShot : Boolean
VARIABLE:   [drift-03]  private var drift : Boolean

FUNCTION:   [Timer-27]  public native const get function drift() : Boolean


    

FUNCTION:   [Timer-27]  public native const set function drift(enable: Boolean) : void

     ARG:   [arg-00]   private enable : Boolean

    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [Timer-28]  public native const get function period() : Number


    

FUNCTION:   [Timer-28]  public native const set function period(period: Number) : void

     ARG:   [arg-00]   private period : Number

    
VARIABLE:   [period-00]  private var period : Number

FUNCTION:   [Timer-29]  public native const function restart() : void


    

FUNCTION:   [Timer-30]  public native const function stop() : void


    

FUNCTION:   [setInterval-120]  ejs function setInterval(callback: Function, delay: Number) : void

     ARG:   [arg-00]   private callback : Function
     ARG:   [arg-01]   private delay : Number

    0000: [0] 33 02 8a 9b 01 b2 97 09 .... debug 

    # ejs.es:9925                       Timer(delay, callback, true)

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 5b ......................... getLocalSlot0 
    0010: [2] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0013: [3] 17 ee 01 06 ................ callGlobalSlot <slot: 119> <argc: 3> 
    0017: [0] 93 ......................... pushResult 
    0018: [1] bf ......................... returnValue 
    
VARIABLE:   [callback-00]  private var callback : Function
VARIABLE:   [delay-01]  private var delay : Number

FUNCTION:   [setTimeout-121]  ejs function setTimeout(callback: Function, delay: Number) : void

     ARG:   [arg-00]   private callback : Function
     ARG:   [arg-01]   private delay : Number

    0000: [0] 33 02 9e 9b 01 9a 99 09 .... debug 

    # ejs.es:9935                       Timer(delay, callback)

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 5b ......................... getLocalSlot0 
    0010: [2] 17 ee 01 04 ................ callGlobalSlot <slot: 119> <argc: 2> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 90 ......................... pop 
    0016: [0] 54 ......................... loadNull 
    0017: [1] bf ......................... returnValue 
    0018: [0] 33 02 a0 9b 01 e6 4b ....... debug 

    # ejs.es:9936                   }
    
VARIABLE:   [callback-00]  private var callback : Function
VARIABLE:   [delay-01]  private var delay : Number

CLASS:      class TimerEvent extends Event
            #  Class Details: 28 class traits, 2 instance traits, requested slot 122

FUNCTION:   [TimerEvent-27]  -constructor- function TimerEvent() : void


    0000: [0] 21 00 ...................... callNextConstructor <argc: 0> 
    0002: [0] be ......................... return 
    

CLASS:      native final class Type extends Object
            #  Class Details: 26 class traits, 0 instance traits, requested slot 123

CLASS:      class Uri extends Object
            #  Class Details: 65 class traits, 0 instance traits, requested slot 124

FUNCTION:   [Uri-22]  public const override function toJSON() : String


    0000: [0] 33 02 84 a3 01 92 ce 09 .... debug 

    # ejs.es:10434                          JSON.stringify(this.toString())

    0008: [0] 7e c4 01 ................... getGlobalSlot <slot: 98> 
    0011: [1] 57 ......................... loadThis 
    0012: [2] 1e aa 33 e0 01 00 .......... callObjName <toString> <public> <argc: 0> 
    0018: [1] 93 ......................... pushResult 
    0019: [2] 1e b2 da 05 e0 01 02 ....... callObjName <stringify> <public> <argc: 1> 
    0026: [0] 93 ......................... pushResult 
    0027: [1] bf ......................... returnValue 
    

FUNCTION:   [Uri-24]  public native const override function toString() : String


    

FUNCTION:   [Uri-26]  -constructor- native const function Uri(uri: Object) : void

     ARG:   [arg-00]   private uri : Object

    
VARIABLE:   [uri-00]  private var uri : Object

FUNCTION:   [Uri-27]  public native const get function basename() : Uri


    

FUNCTION:   [Uri-28]  public native const get function complete() : Uri


    

FUNCTION:   [Uri-29]  public native const function components() : Object


    

FUNCTION:   [Uri-30]  public native const static function decode(str: String) : String

     ARG:   [arg-00]   private str : String

    
VARIABLE:   [str-00]  private var str : String

FUNCTION:   [Uri-31]  public native const static function decodeComponent(str: String) : String

     ARG:   [arg-00]   private str : String

    
VARIABLE:   [str-00]  private var str : String

FUNCTION:   [Uri-32]  public native const get function dirname() : Uri


    

FUNCTION:   [Uri-33]  public native const static function encode(str: String) : String

     ARG:   [arg-00]   private str : String

    
VARIABLE:   [str-00]  private var str : String

FUNCTION:   [Uri-34]  public native const static function encodeComponent(str: String) : String

     ARG:   [arg-00]   private str : String

    
VARIABLE:   [str-00]  private var str : String

FUNCTION:   [Uri-35]  public const function endsWith(suffix: Object) : Boolean

     ARG:   [arg-00]   private suffix : Object

    0000: [0] 33 02 c8 9f 01 e0 a4 09 .... debug 

    # ejs.es:10212                          path.toString().endsWith(suffix.toString())

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 84 35 e0 01 ............. getObjName <path> <public> 
    0014: [1] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] 5b ......................... getLocalSlot0 
    0021: [2] 1e aa 33 e0 01 00 .......... callObjName <toString> <public> <argc: 0> 
    0027: [1] 93 ......................... pushResult 
    0028: [2] 1e d6 8c 07 00 02 .......... callObjName <endsWith> <> <argc: 1> 
    0034: [0] 93 ......................... pushResult 
    0035: [1] bf ......................... returnValue 
    
VARIABLE:   [suffix-00]  private var suffix : Object

FUNCTION:   [Uri-36]  public native const get function extension() : String


    

FUNCTION:   [Uri-36]  public native const set function extension(value: String) : void

     ARG:   [arg-00]   private value : String

    
VARIABLE:   [value-00]  private var value : String

FUNCTION:   [Uri-37]  public native const get function hasExtension() : Boolean


    

FUNCTION:   [Uri-38]  public native const get function hasHost() : Boolean


    

FUNCTION:   [Uri-39]  public native const get function hasPort() : Boolean


    

FUNCTION:   [Uri-40]  public native const get function hasQuery() : Boolean


    

FUNCTION:   [Uri-41]  public native const get function hasReference() : Boolean


    

FUNCTION:   [Uri-42]  public native const get function hasScheme() : Boolean


    

FUNCTION:   [Uri-43]  public native const get function host() : String


    

FUNCTION:   [Uri-43]  public native const set function host(value: String) : void

     ARG:   [arg-00]   private value : String

    
VARIABLE:   [value-00]  private var value : String

FUNCTION:   [Uri-44]  public native const get function isAbsolute() : Boolean


    

FUNCTION:   [Uri-45]  public native const get function isDir() : Boolean


    

FUNCTION:   [Uri-46]  public const get function isRegular() : Boolean


    0000: [0] 33 02 d6 a0 01 9a af 09 .... debug 

    # ejs.es:10283                          isDir == false

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae 92 07 e0 01 .......... getObjName <isDir> <public> 
    0015: [1] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0017: [2] 25 ......................... compareEq 
    0018: [1] bf ......................... returnValue 
    

FUNCTION:   [Uri-47]  public const get function isRelative() : Boolean


    0000: [0] 33 02 e2 a0 01 a6 b0 09 .... debug 

    # ejs.es:10289                          isAbsolute == false

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b d4 a0 07 e0 01 .......... getObjName <isAbsolute> <public> 
    0015: [1] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0017: [2] 25 ......................... compareEq 
    0018: [1] bf ......................... returnValue 
    

FUNCTION:   [Uri-48]  public native const function join(other: Array) : Uri

     ARG:   [arg-00]   private other : Array

    
VARIABLE:   [other-00]  private var other : Array

FUNCTION:   [Uri-49]  public native const function joinExt(ext: String) : Uri

     ARG:   [arg-00]   private ext : String

    
VARIABLE:   [ext-00]  private var ext : String

FUNCTION:   [Uri-50]  public native const get function mimeType() : String


    

FUNCTION:   [Uri-51]  public native const get function normalize() : Uri


    

FUNCTION:   [Uri-52]  public native const get function path() : String


    

FUNCTION:   [Uri-52]  public native const set function path(value: String) : void

     ARG:   [arg-00]   private value : String

    
VARIABLE:   [value-00]  private var value : String

FUNCTION:   [Uri-53]  public native const get function port() : Number


    

FUNCTION:   [Uri-53]  public native const set function port(value: Number) : void

     ARG:   [arg-00]   private value : Number

    
VARIABLE:   [value-00]  private var value : Number

FUNCTION:   [Uri-54]  public native const get function scheme() : String


    

FUNCTION:   [Uri-54]  public native const set function scheme(value: String) : void

     ARG:   [arg-00]   private value : String

    
VARIABLE:   [value-00]  private var value : String

FUNCTION:   [Uri-55]  public native const get function query() : String


    

FUNCTION:   [Uri-55]  public native const set function query(value: String) : void

     ARG:   [arg-00]   private value : String

    
VARIABLE:   [value-00]  private var value : String

FUNCTION:   [Uri-56]  public native const get function reference() : String


    

FUNCTION:   [Uri-56]  public native const set function reference(value: String) : void

     ARG:   [arg-00]   private value : String

    
VARIABLE:   [value-00]  private var value : String

FUNCTION:   [Uri-57]  public const function relative(target: Uri) : Uri

     ARG:   [arg-00]   private target : Uri
   LOCAL:   [local-01] var parts
   LOCAL:   [local-02] var targetParts
   LOCAL:   [local-03] var results

    0000: [0] 33 02 9a a2 01 ce bc 09 .... debug 

    # ejs.es:10381                          let parts = this.normalize.path.toString().split("/")

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b c4 af 07 e0 01 .......... getObjName <normalize> <public> 
    0015: [1] 7b 84 35 00 ................ getObjName <path> <> 
    0019: [1] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0024: [0] 93 ......................... pushResult 
    0025: [1] 56 f4 e0 08 ................ loadString </> 
    0029: [2] 1e ea 49 00 02 ............. callObjName <split> <> <argc: 1> 
    0034: [0] 93 ......................... pushResult 
    0035: [1] 95 ......................... putLocalSlot1 
    0036: [0] 33 02 9c a2 01 d2 bd 09 .... debug 

    # ejs.es:10382                          let targetParts = target.normalize.path.toString().split("/")

    0044: [0] 5b ......................... getLocalSlot0 
    0045: [1] 7b c4 af 07 e0 01 .......... getObjName <normalize> <public> 
    0051: [1] 7b 84 35 00 ................ getObjName <path> <> 
    0055: [1] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0060: [0] 93 ......................... pushResult 
    0061: [1] 56 f4 e0 08 ................ loadString </> 
    0065: [2] 1e ea 49 00 02 ............. callObjName <split> <> <argc: 1> 
    0070: [0] 93 ......................... pushResult 
    0071: [1] 96 ......................... putLocalSlot2 
    0072: [0] 33 02 9e a2 01 fe be 09 .... debug 

    # ejs.es:10383                          if (parts.length < targetParts.length) {

    0080: [0] 5c ......................... getLocalSlot1 
    0081: [1] 7b aa 31 00 ................ getObjName <length> <> 
    0085: [1] 5d ......................... getLocalSlot2 
    0086: [2] 7b aa 31 00 ................ getObjName <length> <> 
    0090: [2] 2b ......................... compareLt 
    0091: [1] 13 52 ...................... branchFalse8 <addr: 175> 
    0093: [0] 33 02 a0 a2 01 e8 bf 09 .... debug 

    # ejs.es:10384                              u = this.clone()

    0101: [0] 57 ......................... loadThis 
    0102: [1] 1e cc 31 e0 01 00 .......... callObjName <clone> <public> <argc: 0> 
    0108: [0] 93 ......................... pushResult 
    0109: [1] b4 aa c0 09 d8 31 .......... putScopedName <u> <> 
    0115: [0] 33 02 a2 a2 01 ae c0 09 .... debug 

    # ejs.es:10385                              u.path = targetParts.slice(parts.length).join("/")

    0123: [0] 5d ......................... getLocalSlot2 
    0124: [1] 5c ......................... getLocalSlot1 
    0125: [2] 7b aa 31 00 ................ getObjName <length> <> 
    0129: [2] 1e f4 77 00 02 ............. callObjName <slice> <> <argc: 1> 
    0134: [0] 93 ......................... pushResult 
    0135: [1] 56 f4 e0 08 ................ loadString </> 
    0139: [2] 1e 92 36 00 02 ............. callObjName <join> <> <argc: 1> 
    0144: [0] 93 ......................... pushResult 
    0145: [1] 79 aa c0 09 d8 31 .......... getScopedName <u> <> 
    0151: [2] b3 84 35 00 ................ putObjName <path> <> 
    0155: [0] 33 02 a4 a2 01 b4 c1 09 .... debug 

    # ejs.es:10386                              return u

    0163: [0] 79 aa c0 09 d8 31 .......... getScopedName <u> <> 
    0169: [1] bf ......................... returnValue 
    0170: [0] 3d ca 04 f7 f7 ............. goto <addr: 468> 
    0175: [0] 33 02 a6 a2 01 94 42 ....... debug 

    # ejs.es:10387                          } else {

    0182: [0] 33 02 a8 a2 01 f6 c1 09 .... debug 

    # ejs.es:10388                              let results = ""

    0190: [0] 56 d8 31 ................... loadString <> 
    0193: [1] 97 ......................... putLocalSlot3 
    0194: [0] 33 02 aa a2 01 b8 c2 09 .... debug 

    # ejs.es:10389                              len = parts.length.min(targetParts.length)

    0202: [0] 5c ......................... getLocalSlot1 
    0203: [1] 7b aa 31 00 ................ getObjName <length> <> 
    0207: [1] 5d ......................... getLocalSlot2 
    0208: [2] 7b aa 31 00 ................ getObjName <length> <> 
    0212: [2] 1e f2 db 02 00 02 .......... callObjName <min> <> <argc: 1> 
    0218: [0] 93 ......................... pushResult 
    0219: [1] b4 f8 ee 08 d8 31 .......... putScopedName <len> <> 
    0225: [0] 33 02 ac a2 01 ae c3 09 .... debug 

    # ejs.es:10390                              for (common = 0; common < len; common++) {

    0233: [0] 44 ......................... load0 
    0234: [1] b4 a4 c4 09 d8 31 .......... putScopedName <common> <> 
    0240: [0] 79 a4 c4 09 d8 31 .......... getScopedName <common> <> 
    0246: [1] 79 f8 ee 08 d8 31 .......... getScopedName <len> <> 
    0252: [2] 2b ......................... compareLt 
    0253: [1] 13 4a ...................... branchFalse8 <addr: 329> 
    0255: [0] 33 02 ae a2 01 b2 c4 09 .... debug 

    # ejs.es:10391                                  if (parts[common] != targetParts[common]) {

    0263: [0] 5c ......................... getLocalSlot1 
    0264: [1] 56 d8 31 ................... loadString <> 
    0267: [2] 79 a4 c4 09 d8 31 .......... getScopedName <common> <> 
    0273: [3] 7c ......................... getObjNameExpr 
    0274: [1] 5d ......................... getLocalSlot2 
    0275: [2] 56 d8 31 ................... loadString <> 
    0278: [3] 79 a4 c4 09 d8 31 .......... getScopedName <common> <> 
    0284: [4] 7c ......................... getObjNameExpr 
    0285: [2] 2c ......................... compareNe 
    0286: [1] 13 0f ...................... branchFalse8 <addr: 303> 
    0288: [0] 33 02 b0 a2 01 bc ee 08 .... debug 

    # ejs.es:10392                                      break

    0296: [0] 3d 38 f7 f7 f7 ............. goto <addr: 329> 
    0301: [0] 3e 00 ...................... goto8 <addr: 303> 
    0303: [0] 33 02 ac a2 01 ae c3 09 .... debug 

    # ejs.es:10390                              for (common = 0; common < len; common++) {

    0311: [0] 79 a4 c4 09 d8 31 .......... getScopedName <common> <> 
    0317: [1] 39 ......................... dup 
    0318: [2] 3f 01 ...................... inc <1> 
    0320: [2] b4 a4 c4 09 d8 31 .......... putScopedName <common> <> 
    0326: [1] 90 ......................... pop 
    0327: [0] 3e a7 ...................... goto8 <addr: 240> 
    0329: [0] 33 02 b4 a2 01 ee b2 01 .... debug 

    # ejs.es:10394                              }

    0337: [0] 33 02 b6 a2 01 b2 c5 09 .... debug 

    # ejs.es:10395                              results = "../".times(parts.length - common - 1)

    0345: [0] 56 b4 c6 09 ................ loadString <../> 
    0349: [1] 5c ......................... getLocalSlot1 
    0350: [2] 7b aa 31 00 ................ getObjName <length> <> 
    0354: [2] 79 a4 c4 09 d8 31 .......... getScopedName <common> <> 
    0360: [3] c3 ......................... sub 
    0361: [2] 45 ......................... load1 
    0362: [3] c3 ......................... sub 
    0363: [2] 1e a0 c7 08 00 02 .......... callObjName <times> <> <argc: 1> 
    0369: [0] 93 ......................... pushResult 
    0370: [1] 97 ......................... putLocalSlot3 
    0371: [0] 33 02 ba a2 01 bc c6 09 .... debug 

    # ejs.es:10397                              if (targetParts.length > 1) {

    0379: [0] 5d ......................... getLocalSlot2 
    0380: [1] 7b aa 31 00 ................ getObjName <length> <> 
    0384: [1] 45 ......................... load1 
    0385: [2] 29 ......................... compareGt 
    0386: [1] 13 24 ...................... branchFalse8 <addr: 424> 
    0388: [0] 33 02 bc a2 01 98 c7 09 .... debug 

    # ejs.es:10398                                  results += targetParts.slice(common).join("/")

    0396: [0] 5e ......................... getLocalSlot3 
    0397: [1] 5d ......................... getLocalSlot2 
    0398: [2] 79 a4 c4 09 d8 31 .......... getScopedName <common> <> 
    0404: [3] 1e f4 77 00 02 ............. callObjName <slice> <> <argc: 1> 
    0409: [1] 93 ......................... pushResult 
    0410: [2] 56 f4 e0 08 ................ loadString </> 
    0414: [3] 1e 92 36 00 02 ............. callObjName <join> <> <argc: 1> 
    0419: [1] 93 ......................... pushResult 
    0420: [2] 00 ......................... add 
    0421: [1] 97 ......................... putLocalSlot3 
    0422: [0] 3e 1d ...................... goto8 <addr: 453> 
    0424: [0] 33 02 be a2 01 f4 84 02 .... debug 

    # ejs.es:10399                              } else {

    0432: [0] 33 02 c0 a2 01 9e c8 09 .... debug 

    # ejs.es:10400                                  results = results.trimEnd("/")

    0440: [0] 5e ......................... getLocalSlot3 
    0441: [1] 56 f4 e0 08 ................ loadString </> 
    0445: [2] 1e c4 d0 07 00 02 .......... callObjName <trimEnd> <> <argc: 1> 
    0451: [0] 93 ......................... pushResult 
    0452: [1] 97 ......................... putLocalSlot3 
    0453: [0] 33 02 c4 a2 01 84 c9 09 .... debug 

    # ejs.es:10402                              return Uri(results)

    0461: [0] 5e ......................... getLocalSlot3 
    0462: [1] 17 f8 01 02 ................ callGlobalSlot <slot: 124> <argc: 1> 
    0466: [0] 93 ......................... pushResult 
    0467: [1] bf ......................... returnValue 
    0468: [0] 54 ......................... loadNull 
    0469: [1] bf ......................... returnValue 
    0470: [0] 33 02 c8 a2 01 b4 16 ....... debug 

    # ejs.es:10404                      }
    
VARIABLE:   [target-00]  private var target : Uri
VARIABLE:   [parts-01]  private var parts
VARIABLE:   [targetParts-02]  private var targetParts
VARIABLE:   [results-03]  -hoisted-3 var results

FUNCTION:   [Uri-58]  public native const function replaceExt(ext: String) : Uri

     ARG:   [arg-00]   private ext : String

    
VARIABLE:   [ext-00]  private var ext : String

FUNCTION:   [Uri-59]  public native const function same(other: Object, exact: Boolean) : Boolean

     ARG:   [arg-00]   private other : Object
     ARG:   [arg-01]   private exact : Boolean

    
VARIABLE:   [other-00]  private var other : Object
VARIABLE:   [exact-01]  private var exact : Boolean

FUNCTION:   [Uri-60]  public const function startsWith(prefix: Object) : Boolean

     ARG:   [arg-00]   private prefix : Object

    0000: [0] 33 02 f6 a2 01 c6 cc 09 .... debug 

    # ejs.es:10427                          path.toString().startsWith(prefix.toString()) 

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 84 35 e0 01 ............. getObjName <path> <public> 
    0014: [1] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] 5b ......................... getLocalSlot0 
    0021: [2] 1e aa 33 e0 01 00 .......... callObjName <toString> <public> <argc: 0> 
    0027: [1] 93 ......................... pushResult 
    0028: [2] 1e b2 a1 02 00 02 .......... callObjName <startsWith> <> <argc: 1> 
    0034: [0] 93 ......................... pushResult 
    0035: [1] bf ......................... returnValue 
    
VARIABLE:   [prefix-00]  private var prefix : Object

FUNCTION:   [Uri-61]  public const function trimEnd(pat: String) : Uri

     ARG:   [arg-00]   private pat : String
   LOCAL:   [local-01] var u

    0000: [0] 33 02 a2 a3 01 c4 cf 09 .... debug 

    # ejs.es:10449                          let u = this.clone()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 1e cc 31 e0 01 00 .......... callObjName <clone> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 95 ......................... putLocalSlot1 
    0017: [0] 33 02 a4 a3 01 86 d0 09 .... debug 

    # ejs.es:10450                          u.path = u.path.toString().trimEnd(pat)

    0025: [0] 5c ......................... getLocalSlot1 
    0026: [1] 7b 84 35 00 ................ getObjName <path> <> 
    0030: [1] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0035: [0] 93 ......................... pushResult 
    0036: [1] 5b ......................... getLocalSlot0 
    0037: [2] 1e c4 d0 07 00 02 .......... callObjName <trimEnd> <> <argc: 1> 
    0043: [0] 93 ......................... pushResult 
    0044: [1] 5c ......................... getLocalSlot1 
    0045: [2] b3 84 35 00 ................ putObjName <path> <> 
    0049: [0] 33 02 a6 a3 01 ee d0 09 .... debug 

    # ejs.es:10451                          return u

    0057: [0] 5c ......................... getLocalSlot1 
    0058: [1] bf ......................... returnValue 
    
VARIABLE:   [pat-00]  private var pat : String
VARIABLE:   [u-01]  private var u

FUNCTION:   [Uri-62]  public native const function trimExt() : Uri


    

FUNCTION:   [Uri-63]  public const function trimStart(pat: String) : Uri

     ARG:   [arg-00]   private pat : String
   LOCAL:   [local-01] var u

    0000: [0] 33 02 c6 a3 01 c4 cf 09 .... debug 

    # ejs.es:10467                          let u = this.clone()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 1e cc 31 e0 01 00 .......... callObjName <clone> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 95 ......................... putLocalSlot1 
    0017: [0] 33 02 c8 a3 01 c4 d2 09 .... debug 

    # ejs.es:10468                          u.path = u.path.toString().trimStart(pat)

    0025: [0] 5c ......................... getLocalSlot1 
    0026: [1] 7b 84 35 00 ................ getObjName <path> <> 
    0030: [1] 1e aa 33 00 00 ............. callObjName <toString> <> <argc: 0> 
    0035: [0] 93 ......................... pushResult 
    0036: [1] 5b ......................... getLocalSlot0 
    0037: [2] 1e cc d3 07 00 02 .......... callObjName <trimStart> <> <argc: 1> 
    0043: [0] 93 ......................... pushResult 
    0044: [1] 5c ......................... getLocalSlot1 
    0045: [2] b3 84 35 00 ................ putObjName <path> <> 
    0049: [0] 33 02 ca a3 01 ee d0 09 .... debug 

    # ejs.es:10469                          return u

    0057: [0] 5c ......................... getLocalSlot1 
    0058: [1] bf ......................... returnValue 
    
VARIABLE:   [pat-00]  private var pat : String
VARIABLE:   [u-01]  private var u

FUNCTION:   [Uri-64]  public native const get function uri() : String


    

FUNCTION:   [Uri-64]  public native const set function uri(value: String) : void

     ARG:   [arg-00]   private value : String

    
VARIABLE:   [value-00]  private var value : String

FUNCTION:   [decodeUri-125]  ejs function decodeUri(str: String) : String

     ARG:   [arg-00]   private str : String

    0000: [0] 33 02 f4 a3 01 c6 d5 09 .... debug 

    # ejs.es:10490                      Uri.decode(str)

    0008: [0] 7e f8 01 ................... getGlobalSlot <slot: 124> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1e d0 9f 09 e0 01 02 ....... callObjName <decode> <public> <argc: 1> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [str-00]  private var str : String

FUNCTION:   [decodeUriComponent-126]  ejs function decodeUriComponent(str: String) : String

     ARG:   [arg-00]   private str : String

    0000: [0] 33 02 84 a4 01 f4 d6 09 .... debug 

    # ejs.es:10498                      Uri.decodeUriComponent(str)

    0008: [0] 7e f8 01 ................... getGlobalSlot <slot: 124> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1e bc d7 09 d8 31 02 ....... callObjName <decodeUriComponent> <> <argc: 1> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [str-00]  private var str : String

CLASS:      native final class Void extends Object
            #  Class Details: 26 class traits, 0 instance traits, requested slot 127

FUNCTION:   [Void-08]  iterator native const override function get() : Iterator


    

FUNCTION:   [Void-12]  iterator native const override function getValues() : Iterator


    

CLASS:      class Worker extends Object
            #  Class Details: 37 class traits, 4 instance traits, requested slot 128

FUNCTION:   [Worker-26]  -constructor- native const function Worker(script: Path, options: Object) : void

     ARG:   [arg-00]   private script : Path
     ARG:   [arg-01]   private options : Object

    
VARIABLE:   [script-00]  private var script : Path
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Worker-27]  public native const function eval(script: String, timeout: Number) : String

     ARG:   [arg-00]   private script : String
     ARG:   [arg-01]   private timeout : Number

    
VARIABLE:   [script-00]  private var script : String
VARIABLE:   [timeout-01]  private var timeout : Number

FUNCTION:   [Worker-28]  public native const static function exit() : Void


    

FUNCTION:   [Worker-29]  public native const static function join(workers: Object, timeout: Number) : Boolean

     ARG:   [arg-00]   private workers : Object
     ARG:   [arg-01]   private timeout : Number

    
VARIABLE:   [workers-00]  private var workers : Object
VARIABLE:   [timeout-01]  private var timeout : Number

FUNCTION:   [Worker-30]  public native const function load(script: Path, timeout: Number) : Void

     ARG:   [arg-00]   private script : Path
     ARG:   [arg-01]   private timeout : Number

    
VARIABLE:   [script-00]  private var script : Path
VARIABLE:   [timeout-01]  private var timeout : Number

FUNCTION:   [Worker-31]  public native const function preload(path: Path) : String

     ARG:   [arg-00]   private path : Path

    
VARIABLE:   [path-00]  private var path : Path

FUNCTION:   [Worker-32]  public native const function preeval(script: String) : String

     ARG:   [arg-00]   private script : String

    
VARIABLE:   [script-00]  private var script : String

FUNCTION:   [Worker-33]  public native const static function lookup(name: String) : Worker

     ARG:   [arg-00]   private name : String

    
VARIABLE:   [name-00]  private var name : String

FUNCTION:   [Worker-34]  public native const function postMessage(data: Object, ports: Array) : Void

     ARG:   [arg-00]   private data : Object
     ARG:   [arg-01]   private ports : Array

    
VARIABLE:   [data-00]  private var data : Object
VARIABLE:   [ports-01]  private var ports : Array

FUNCTION:   [Worker-35]  public native const function terminate() : Void


    

FUNCTION:   [Worker-36]  public native const function waitForMessage(timeout: Number) : Boolean

     ARG:   [arg-00]   private timeout : Number

    
VARIABLE:   [timeout-00]  private var timeout : Number
VARIABLE:   [onclose-00]  public var onclose : Function
VARIABLE:   [onmessage-01]  public var onmessage : Function
VARIABLE:   [onerror-02]  public var onerror : Function
VARIABLE:   [name-03]  public var name : String
VARIABLE:   [self-129]  ejs.worker var self : Worker

FUNCTION:   [exit-130]  ejs.worker function exit() : Void


    0000: [0] 33 02 ba a8 01 aa e9 09 .... debug 

    # ejs.es:10781                      Worker.exit()

    0008: [0] 7e 80 02 ................... getGlobalSlot <slot: 128> 
    0011: [1] 1e d2 17 e0 01 00 .......... callObjName <exit> <public> <argc: 0> 
    0017: [0] 93 ......................... pushResult 
    0018: [1] bf ......................... returnValue 
    

FUNCTION:   [postMessage-131]  ejs.worker function postMessage(data: Object, ports: Array) : Void

     ARG:   [arg-00]   private data : Object
     ARG:   [arg-01]   private ports : Array

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 ca a8 01 dc ea 09 .... debug 

    # ejs.es:10789                      self.postMessage(data, ports)

    0015: [0] 7e 82 02 ................... getGlobalSlot <slot: 129> 
    0018: [1] 5b ......................... getLocalSlot0 
    0019: [2] 5c ......................... getLocalSlot1 
    0020: [3] 1e a8 e5 09 e0 01 04 ....... callObjName <postMessage> <public> <argc: 2> 
    0027: [0] 93 ......................... pushResult 
    0028: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data : Object
VARIABLE:   [ports-01]  private var ports : Array

FUNCTION:   [onerror-132]  ejs.worker get function onerror() : Function


    0000: [0] 33 02 d6 a8 01 f2 eb 09 .... debug 

    # ejs.es:10795                      self.onerror

    0008: [0] 7e 82 02 ................... getGlobalSlot <slot: 129> 
    0011: [1] 7b e0 da 09 e0 01 .......... getObjName <onerror> <public> 
    0017: [1] bf ......................... returnValue 
    

FUNCTION:   [onerror-132]  ejs.worker set function onerror(fun: Function) : Void

     ARG:   [arg-00]   private fun : Function

    0000: [0] 33 02 e4 a8 01 fc ec 09 .... debug 

    # ejs.es:10802                      self.onerror = fun

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7e 82 02 ................... getGlobalSlot <slot: 129> 
    0012: [2] b3 e0 da 09 e0 01 .......... putObjName <onerror> <public> 
    0018: [0] 54 ......................... loadNull 
    0019: [1] bf ......................... returnValue 
    0020: [0] 33 02 e6 a8 01 e6 4b ....... debug 

    # ejs.es:10803                  }
    
VARIABLE:   [fun-00]  private var fun : Function

FUNCTION:   [onmessage-133]  ejs.worker get function onmessage() : Function


    0000: [0] 33 02 f2 a8 01 88 ee 09 .... debug 

    # ejs.es:10809                      self.onmessage

    0008: [0] 7e 82 02 ................... getGlobalSlot <slot: 129> 
    0011: [1] 7b 90 da 09 e0 01 .......... getObjName <onmessage> <public> 
    0017: [1] bf ......................... returnValue 
    

FUNCTION:   [onmessage-133]  ejs.worker set function onmessage(fun: Function) : Void

     ARG:   [arg-00]   private fun : Function

    0000: [0] 33 02 80 a9 01 9a ef 09 .... debug 

    # ejs.es:10816                      self.onmessage = fun

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7e 82 02 ................... getGlobalSlot <slot: 129> 
    0012: [2] b3 90 da 09 e0 01 .......... putObjName <onmessage> <public> 
    0018: [0] 54 ......................... loadNull 
    0019: [1] bf ......................... returnValue 
    0020: [0] 33 02 82 a9 01 e6 4b ....... debug 

    # ejs.es:10817                  }
    
VARIABLE:   [fun-00]  private var fun : Function

CLASS:      native final class XML extends Object
            #  Class Details: 31 class traits, 0 instance traits, requested slot 134

FUNCTION:   [XML-08]  iterator native const override function get() : Iterator


    

FUNCTION:   [XML-12]  iterator native const override function getValues() : Iterator


    

FUNCTION:   [XML-22]  public native const override function toJSON() : String


    

FUNCTION:   [XML-24]  public native const override function toString() : String


    

FUNCTION:   [XML-26]  -constructor- native const function XML(value: Object) : void

     ARG:   [arg-00]   private value : Object

    
VARIABLE:   [value-00]  private var value : Object

FUNCTION:   [XML-27]  public native const function load(filename: String) : Void

     ARG:   [arg-00]   private filename : String

    
VARIABLE:   [filename-00]  private var filename : String

FUNCTION:   [XML-28]  public native const function save(filename: String) : Void

     ARG:   [arg-00]   private filename : String

    
VARIABLE:   [filename-00]  private var filename : String

FUNCTION:   [XML-29]  public native const function length() : Number


    

FUNCTION:   [XML-30]  public native const function name() : String


    

CLASS:      class XMLHttp extends Object
            #  Class Details: 48 class traits, 4 instance traits, requested slot 135

FUNCTION:   [XMLHttp-26]  -constructor- function XMLHttp() : void


    0000: [0] 7e bc 01 ................... getGlobalSlot <slot: 94> 
    0003: [1] 89 ......................... new 
    0004: [1] 20 00 ...................... callConstructor <argc: 0> 
    0006: [1] 57 ......................... loadThis 
    0007: [2] b3 ae f6 09 b4 f6 09 ....... putObjName <hp> <[ejs::XMLHttp,private]> 
    0014: [0] 44 ......................... load0 
    0015: [1] 57 ......................... loadThis 
    0016: [2] b3 ae f7 09 b4 f6 09 ....... putObjName <state> <[ejs::XMLHttp,private]> 
    0023: [0] be ......................... return 
    

FUNCTION:   [XMLHttp-27]  -initializer- static function XMLHttp-initializer() : Void


    0000: [0] 33 02 90 b0 01 c4 03 ....... debug 

    # ejs.es:11272                      use default namespace public

    0007: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0009: [1] 02 ......................... addNamespaceRef 
    0010: [0] 33 02 96 b0 01 de f5 09 .... debug 

    # ejs.es:11275                      private var hp: Http = new Http

    0018: [0] 33 02 98 b0 01 e2 f6 09 .... debug 

    # ejs.es:11276                      private var state: Number = 0

    0026: [0] 33 02 9a b0 01 ba f7 09 .... debug 

    # ejs.es:11277                      private var response: ByteArray

    0034: [0] 33 02 a2 b0 01 8a f8 09 .... debug 

    # ejs.es:11281                      static const Uninitialized = 0              

    0042: [0] 44 ......................... load0 
    0043: [1] 57 ......................... loadThis 
    0044: [2] b3 f4 f8 09 e0 01 .......... putObjName <Uninitialized> <public> 
    0050: [0] 33 02 aa b0 01 90 f9 09 .... debug 

    # ejs.es:11285                      static const Open = 1

    0058: [0] 45 ......................... load1 
    0059: [1] 57 ......................... loadThis 
    0060: [2] b3 cc f9 09 e0 01 .......... putObjName <Open> <public> 
    0066: [0] 33 02 b2 b0 01 d6 f9 09 .... debug 

    # ejs.es:11289                      static const Sent = 2

    0074: [0] 46 ......................... load2 
    0075: [1] 57 ......................... loadThis 
    0076: [2] b3 92 fa 09 e0 01 .......... putObjName <Sent> <public> 
    0082: [0] 33 02 ba b0 01 9c fa 09 .... debug 

    # ejs.es:11293                      static const Receiving = 3

    0090: [0] 47 ......................... load3 
    0091: [1] 57 ......................... loadThis 
    0092: [2] b3 e2 fa 09 e0 01 .......... putObjName <Receiving> <public> 
    0098: [0] 33 02 c2 b0 01 f6 fa 09 .... debug 

    # ejs.es:11297                      static const Loaded = 4

    0106: [0] 48 ......................... load4 
    0107: [1] 57 ......................... loadThis 
    0108: [2] b3 b6 fb 09 e0 01 .......... putObjName <Loaded> <public> 
    0114: [0] 33 02 cc b0 01 c4 fb 09 .... debug 

    # ejs.es:11302                      public var onreadystatechange: Function

    0122: [0] 33 02 d6 b0 01 ca fc 09 .... debug 

    # ejs.es:11307                      function abort(): void

    0130: [0] 33 02 e4 b0 01 be fd 09 .... debug 

    # ejs.es:11314                      function get http() : Http

    0138: [0] 33 02 f2 b0 01 a2 fe 09 .... debug 

    # ejs.es:11321                      function get readyState() : Number

    0146: [0] 33 02 fe b0 01 b2 ff 09 .... debug 

    # ejs.es:11327                      function get responseText(): String

    0154: [0] 33 02 8c b1 01 d4 80 0a .... debug 

    # ejs.es:11334                      function get responseXML(): XML

    0162: [0] 33 02 9a b1 01 f6 81 0a .... debug 

    # ejs.es:11341                      function get responseBody(): String {

    0170: [0] 33 02 aa b1 01 96 84 0a .... debug 

    # ejs.es:11349                      function get status(): Number

    0178: [0] 33 02 b6 b1 01 8e 85 0a .... debug 

    # ejs.es:11355                      function get statusText() : String

    0186: [0] 33 02 c4 b1 01 b4 86 0a .... debug 

    # ejs.es:11362                      function getAllResponseHeaders(): String {

    0194: [0] 33 02 de b1 01 f2 89 0a .... debug 

    # ejs.es:11375                      function getResponseHeader(key: String)

    0202: [0] 33 02 f6 b1 01 a6 8b 0a .... debug 

    # ejs.es:11387                      function open(method: String, url: String, async: Boolean = false, user: String? = null, 

    0210: [0] 33 02 ae b2 01 a2 96 0a .... debug 

    # ejs.es:11415                      function send(content: String): Void {

    0218: [0] 33 02 ce b2 01 d6 97 0a .... debug 

    # ejs.es:11431                      function setRequestHeader(key: String, value: String): Void

    0226: [0] 33 02 da b2 01 d0 99 0a .... debug 

    # ejs.es:11437                      private function callback (e: Event) {

    0234: [0] 33 02 f6 b2 01 bc 9d 0a .... debug 

    # ejs.es:11451                      private function notify() {

    0242: [0] be ......................... return 
    
VARIABLE:   [XMLHttp-28]  public const static var Uninitialized
VARIABLE:   [XMLHttp-29]  public const static var Open
VARIABLE:   [XMLHttp-30]  public const static var Sent
VARIABLE:   [XMLHttp-31]  public const static var Receiving
VARIABLE:   [XMLHttp-32]  public const static var Loaded

FUNCTION:   [XMLHttp-33]  public const function abort() : Void


    0000: [0] 33 02 d8 b0 01 88 fd 09 .... debug 

    # ejs.es:11308                          hp.close

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0016: [1] 7b b0 15 e0 01 ............. getObjName <close> <public> 
    0021: [1] bf ......................... returnValue 
    

FUNCTION:   [XMLHttp-34]  public const get function http() : Http


    0000: [0] 33 02 e6 b0 01 84 fe 09 .... debug 

    # ejs.es:11315                          hp

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [XMLHttp-35]  public const get function readyState() : Number


    0000: [0] 33 02 f4 b0 01 f8 fe 09 .... debug 

    # ejs.es:11322                          state

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f7 09 b4 f6 09 ....... getObjName <state> <[ejs::XMLHttp,private]> 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [XMLHttp-36]  public const get function responseText() : String


    0000: [0] 33 02 80 b1 01 8a 80 0a .... debug 

    # ejs.es:11328                          hp.response

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0016: [1] 7b 88 9b 05 e0 01 .......... getObjName <response> <public> 
    0022: [1] bf ......................... returnValue 
    

FUNCTION:   [XMLHttp-37]  public const get function responseXML() : XML


    0000: [0] 33 02 8e b1 01 a4 81 0a .... debug 

    # ejs.es:11335                          XML(hp.response)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0016: [1] 7b 88 9b 05 e0 01 .......... getObjName <response> <public> 
    0022: [1] 17 8c 02 02 ................ callGlobalSlot <slot: 134> <argc: 1> 
    0026: [0] 93 ......................... pushResult 
    0027: [1] bf ......................... returnValue 
    

FUNCTION:   [XMLHttp-38]  public const get function responseBody() : String


    0000: [0] 33 02 9c b1 01 d2 82 0a .... debug 

    # ejs.es:11342                          throw new Error("Unsupported API")

    0008: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0010: [1] 89 ......................... new 
    0011: [1] 56 b0 83 0a ................ loadString <Unsupported API> 
    0015: [2] 20 02 ...................... callConstructor <argc: 1> 
    0017: [1] c6 ......................... throw 
    0018: [1] 33 02 9e b1 01 d0 83 0a .... debug 

    # ejs.es:11343                          return ""

    0026: [1] 56 d8 31 ................... loadString <> 
    0029: [2] bf ......................... returnValue 
    

FUNCTION:   [XMLHttp-39]  public const get function status() : Number


    0000: [0] 33 02 ac b1 01 e2 84 0a .... debug 

    # ejs.es:11350                          hp.status

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0016: [1] 7b dc 17 e0 01 ............. getObjName <status> <public> 
    0021: [1] bf ......................... returnValue 
    

FUNCTION:   [XMLHttp-40]  public const get function statusText() : String


    0000: [0] 33 02 b8 b1 01 e4 85 0a .... debug 

    # ejs.es:11356                          hp.statusMessage

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0016: [1] 7b 9e a4 05 e0 01 .......... getObjName <statusMessage> <public> 
    0022: [1] bf ......................... returnValue 
    

FUNCTION:   [XMLHttp-41]  public const function getAllResponseHeaders() : String

   LOCAL:   [local-00] var result : String
   LOCAL:   [local-01] var key

    0000: [0] 33 02 c6 b1 01 9a 87 0a .... debug 

    # ejs.es:11363                          let result: String = ""

    0008: [0] 56 d8 31 ................... loadString <> 
    0011: [1] 94 ......................... putLocalSlot0 
    0012: [0] 33 02 c8 b1 01 e2 87 0a .... debug 

    # ejs.es:11364                          for (key in hp.headers) {

    0020: [0] 57 ......................... loadThis 
    0021: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0028: [1] 7b ea 8f 05 e0 01 .......... getObjName <headers> <public> 
    0034: [1] 1e da 31 e2 31 00 .......... callObjName <get> <iterator> <argc: 0> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] 39 ......................... dup 
    0042: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0045: [1] 93 ......................... pushResult 
    0046: [2] 95 ......................... putLocalSlot1 
    0047: [1] 33 02 ca b1 01 ae 88 0a .... debug 

    # ejs.es:11365                              result = result.concat(key + ": " + hp.headers[key] + '\n')

    0055: [1] 5b ......................... getLocalSlot0 
    0056: [2] 5c ......................... getLocalSlot1 
    0057: [3] 56 92 3a ................... loadString <: > 
    0060: [4] 00 ......................... add 
    0061: [3] 57 ......................... loadThis 
    0062: [4] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0069: [4] 7b ea 8f 05 e0 01 .......... getObjName <headers> <public> 
    0075: [4] 56 d8 31 ................... loadString <> 
    0078: [5] 5c ......................... getLocalSlot1 
    0079: [6] 7c ......................... getObjNameExpr 
    0080: [4] 00 ......................... add 
    0081: [3] 56 84 f4 01 ................ loadString <
> 
    0085: [4] 00 ......................... add 
    0086: [3] 1e d0 52 e0 01 02 .......... callObjName <concat> <public> <argc: 1> 
    0092: [1] 93 ......................... pushResult 
    0093: [2] 94 ......................... putLocalSlot0 
    0094: [1] 3e c9 ...................... goto8 <addr: 41> 
    0096: [1] 90 ......................... pop 
    0097: [0] 33 02 ce b1 01 a4 5d ....... debug 

    # ejs.es:11367                          return result

    0104: [0] 5b ......................... getLocalSlot0 
    0105: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     42      45         96           96       StopIteration

VARIABLE:   [result-00]  private var result : String
VARIABLE:   [key-01]  -hoisted-1 var key

FUNCTION:   [XMLHttp-42]  public const function getResponseHeader(key: String) : void

     ARG:   [arg-00]   private key : String

    0000: [0] 33 02 e0 b1 01 d2 8a 0a .... debug 

    # ejs.es:11376                          header(key)

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1f 80 8f 05 d8 31 02 ....... callScopedName <header> <> <argc: 1> 
    0016: [0] 93 ......................... pushResult 
    0017: [1] bf ......................... returnValue 
    
VARIABLE:   [key-00]  private var key : String

FUNCTION:   [XMLHttp-43]  public const function open(method: String, url: String, async: Boolean, user: String, password: String) : Void

     ARG:   [arg-00]   private method : String
     ARG:   [arg-01]   private url : String
     ARG:   [arg-02]   private async : Boolean
     ARG:   [arg-03]   private user : String
     ARG:   [arg-04]   private password : String
   LOCAL:   [local-05] var timeout
   LOCAL:   [local-06] var when : Date

    0000: [0] 41 04 04 07 0a 15 .......... initDefaultArgs8 <4> <6> <9> <12> <23> 
    0006: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0008: [1] 96 ......................... putLocalSlot2 
    0009: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0011: [1] 97 ......................... putLocalSlot3 
    0012: [0] 33 02 f8 b1 01 ea 8c 0a .... debug 

    # ejs.es:11388                              password: String = null): Void {

    0020: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0022: [1] 98 ......................... putLocalSlot4 
    0023: [0] 33 02 fa b1 01 cc 8d 0a .... debug 

    # ejs.es:11389                          hp.method = method

    0031: [0] 5b ......................... getLocalSlot0 
    0032: [1] 57 ......................... loadThis 
    0033: [2] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0040: [2] b3 8c 94 05 e0 01 .......... putObjName <method> <public> 
    0046: [0] 33 02 fc b1 01 8a 8e 0a .... debug 

    # ejs.es:11390                          hp.uri = url

    0054: [0] 5c ......................... getLocalSlot1 
    0055: [1] 57 ......................... loadThis 
    0056: [2] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0063: [2] b3 94 fc 04 e0 01 .......... putObjName <uri> <public> 
    0069: [0] 33 02 fe b1 01 bc 8e 0a .... debug 

    # ejs.es:11391                          if (user && password) {

    0077: [0] 5e ......................... getLocalSlot3 
    0078: [1] 39 ......................... dup 
    0079: [2] 13 02 ...................... branchFalse8 <addr: 83> 
    0081: [1] 90 ......................... pop 
    0082: [0] 5f ......................... getLocalSlot4 
    0083: [1] 13 1b ...................... branchFalse8 <addr: 112> 
    0085: [0] 33 02 80 b2 01 84 8f 0a .... debug 

    # ejs.es:11392                              hp.setCredentials(user, password)

    0093: [0] 57 ......................... loadThis 
    0094: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0101: [1] 5e ......................... getLocalSlot3 
    0102: [2] 5f ......................... getLocalSlot4 
    0103: [3] 1e 88 9f 05 e0 01 04 ....... callObjName <setCredentials> <public> <argc: 2> 
    0110: [0] 3e 00 ...................... goto8 <addr: 112> 
    0112: [0] 33 02 82 b2 01 bc 15 ....... debug 

    # ejs.es:11393                          }

    0119: [0] 33 02 84 b2 01 e8 8f 0a .... debug 

    # ejs.es:11394                          hp.callback = callback

    0127: [0] 57 ......................... loadThis 
    0128: [1] 7b be 63 b4 f6 09 .......... getObjName <callback> <[ejs::XMLHttp,private]> 
    0134: [1] 57 ......................... loadThis 
    0135: [2] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0142: [2] b3 be 63 d8 31 ............. putObjName <callback> <> 
    0147: [0] 33 02 86 b2 01 ae 90 0a .... debug 

    # ejs.es:11395                          response = new ByteArray(System.Bufsize, 1)

    0155: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0157: [1] 89 ......................... new 
    0158: [1] 7e ea 01 ................... getGlobalSlot <slot: 117> 
    0161: [2] 7b fa d1 08 e0 01 .......... getObjName <Bufsize> <public> 
    0167: [2] 45 ......................... load1 
    0168: [3] 20 04 ...................... callConstructor <argc: 2> 
    0170: [1] 57 ......................... loadThis 
    0171: [2] b3 88 9b 05 b4 f6 09 ....... putObjName <response> <[ejs::XMLHttp,private]> 
    0178: [0] 33 02 8a b2 01 9e 91 0a .... debug 

    # ejs.es:11397                          hp.connect()

    0186: [0] 57 ......................... loadThis 
    0187: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0194: [1] 1e e2 ff 04 e0 01 00 ....... callObjName <connect> <public> <argc: 0> 
    0201: [0] 33 02 8c b2 01 d0 91 0a .... debug 

    # ejs.es:11398                          state = Open

    0209: [0] 57 ......................... loadThis 
    0210: [1] 7b cc f9 09 e0 01 .......... getObjName <Open> <public> 
    0216: [1] 57 ......................... loadThis 
    0217: [2] b3 ae f7 09 b4 f6 09 ....... putObjName <state> <[ejs::XMLHttp,private]> 
    0224: [0] 33 02 8e b2 01 82 92 0a .... debug 

    # ejs.es:11399                          notify()

    0232: [0] 1f ac 92 0a b4 f6 09 00 .... callScopedName <notify> <[ejs::XMLHttp,private]> <argc: 0> 
    0240: [0] 33 02 94 b2 01 ba 92 0a .... debug 

    # ejs.es:11402                          if (!async || 1) {

    0248: [0] 5d ......................... getLocalSlot2 
    0249: [1] 86 ......................... logicalNot 
    0250: [1] 39 ......................... dup 
    0251: [2] 14 02 ...................... branchTrue8 <addr: 255> 
    0253: [1] 90 ......................... pop 
    0254: [0] 45 ......................... load1 
    0255: [1] 13 59 ...................... branchFalse8 <addr: 346> 
    0257: [0] 33 02 96 b2 01 f8 92 0a .... debug 

    # ejs.es:11403                              let timeout = 5 * 1000

    0265: [0] 49 ......................... load5 
    0266: [1] 51 d0 0f ................... loadInt <1000> 
    0269: [2] 87 ......................... mul 
    0270: [1] 99 ......................... putLocalSlot5 
    0271: [0] 33 02 98 b2 01 c6 93 0a .... debug 

    # ejs.es:11404                              let when: Date = new Date

    0279: [0] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0281: [1] 89 ......................... new 
    0282: [1] 20 00 ...................... callConstructor <argc: 0> 
    0284: [1] 9a ......................... putLocalSlot6 
    0285: [0] 33 02 9a b2 01 a4 94 0a .... debug 

    # ejs.es:11405                              while (state != Loaded && when.elapsed < timeout) {

    0293: [0] 57 ......................... loadThis 
    0294: [1] 7b ae f7 09 b4 f6 09 ....... getObjName <state> <[ejs::XMLHttp,private]> 
    0301: [1] 57 ......................... loadThis 
    0302: [2] 7b b6 fb 09 e0 01 .......... getObjName <Loaded> <public> 
    0308: [2] 2c ......................... compareNe 
    0309: [1] 39 ......................... dup 
    0310: [2] 13 0a ...................... branchFalse8 <addr: 322> 
    0312: [1] 90 ......................... pop 
    0313: [0] 61 ......................... getLocalSlot6 
    0314: [1] 7b e0 bf 02 e0 01 .......... getObjName <elapsed> <public> 
    0320: [1] 60 ......................... getLocalSlot5 
    0321: [2] 2b ......................... compareLt 
    0322: [1] 13 14 ...................... branchFalse8 <addr: 344> 
    0324: [0] 33 02 9c b2 01 ac 95 0a .... debug 

    # ejs.es:11406                                  App.serviceEvents(1, timeout)

    0332: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0334: [1] 45 ......................... load1 
    0335: [2] 60 ......................... getLocalSlot5 
    0336: [3] 1e f8 2b e0 01 04 .......... callObjName <serviceEvents> <public> <argc: 2> 
    0342: [0] 3e cd ...................... goto8 <addr: 293> 
    0344: [0] 3e 00 ...................... goto8 <addr: 346> 
    0346: [0] 54 ......................... loadNull 
    0347: [1] bf ......................... returnValue 
    0348: [0] 33 02 a2 b2 01 b4 16 ....... debug 

    # ejs.es:11409                      }
    
VARIABLE:   [method-00]  private var method : String
VARIABLE:   [url-01]  private var url : String
VARIABLE:   [async-02]  private var async : Boolean
VARIABLE:   [user-03]  private var user : String
VARIABLE:   [password-04]  private var password : String
VARIABLE:   [timeout-05]  -hoisted-5 var timeout
VARIABLE:   [when-06]  -hoisted-5 var when : Date

FUNCTION:   [XMLHttp-44]  public const function send(content: String) : Void

     ARG:   [arg-00]   private content : String

    0000: [0] 33 02 ba b2 01 80 97 0a .... debug 

    # ejs.es:11421                          hp.write(content)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0016: [1] 5b ......................... getLocalSlot0 
    0017: [2] 1e a2 91 01 e0 01 02 ....... callObjName <write> <public> <argc: 1> 
    0024: [0] 54 ......................... loadNull 
    0025: [1] bf ......................... returnValue 
    0026: [0] 33 02 bc b2 01 b4 16 ....... debug 

    # ejs.es:11422                      }
    
VARIABLE:   [content-00]  private var content : String

FUNCTION:   [XMLHttp-45]  public const function setRequestHeader(key: String, value: String) : Void

     ARG:   [arg-00]   private key : String
     ARG:   [arg-01]   private value : String

    0000: [0] 33 02 d0 b2 01 de 98 0a .... debug 

    # ejs.es:11432                          hp.addHeader(key, value, 1)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ae f6 09 b4 f6 09 ....... getObjName <hp> <[ejs::XMLHttp,private]> 
    0016: [1] 5b ......................... getLocalSlot0 
    0017: [2] 5c ......................... getLocalSlot1 
    0018: [3] 45 ......................... load1 
    0019: [4] 1e f4 c8 05 e0 01 06 ....... callObjName <addHeader> <public> <argc: 3> 
    0026: [0] 93 ......................... pushResult 
    0027: [1] bf ......................... returnValue 
    
VARIABLE:   [key-00]  private var key : String
VARIABLE:   [value-01]  private var value : String

FUNCTION:   [XMLHttp-46]  [ejs::XMLHttp,private] const function callback(e: Event) : void

     ARG:   [arg-00]   private e : Event
   LOCAL:   [local-01] var hp : Http
   LOCAL:   [local-02] var count

    0000: [0] 33 02 dc b2 01 ae 9a 0a .... debug 

    # ejs.es:11438                          if (e is HttpError) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 79 f2 9a 0a d8 31 .......... getScopedName <HttpError> <> 
    0015: [2] 43 ......................... isA 
    0016: [1] 13 1b ...................... branchFalse8 <addr: 45> 
    0018: [0] 33 02 de b2 01 86 9b 0a .... debug 

    # ejs.es:11439                              notify()

    0026: [0] 1f ac 92 0a b4 f6 09 00 .... callScopedName <notify> <[ejs::XMLHttp,private]> <argc: 0> 
    0034: [0] 33 02 e0 b2 01 80 95 06 .... debug 

    # ejs.es:11440                              return

    0042: [0] be ......................... return 
    0043: [0] 3e 00 ...................... goto8 <addr: 45> 
    0045: [0] 33 02 e2 b2 01 bc 15 ....... debug 

    # ejs.es:11441                          }

    0052: [0] 33 02 e4 b2 01 b8 9b 0a .... debug 

    # ejs.es:11442                          let hp: Http = e.data

    0060: [0] 5b ......................... getLocalSlot0 
    0061: [1] 7b de ae 01 e0 01 .......... getObjName <data> <public> 
    0067: [1] 95 ......................... putLocalSlot1 
    0068: [0] 33 02 e6 b2 01 fc 9b 0a .... debug 

    # ejs.es:11443                          let count = hp.read(response)

    0076: [0] 5c ......................... getLocalSlot1 
    0077: [1] 57 ......................... loadThis 
    0078: [2] 7b 88 9b 05 b4 f6 09 ....... getObjName <response> <[ejs::XMLHttp,private]> 
    0085: [2] 1e f4 8d 01 e0 01 02 ....... callObjName <read> <public> <argc: 1> 
    0092: [0] 93 ......................... pushResult 
    0093: [1] 96 ......................... putLocalSlot2 
    0094: [0] 33 02 e8 b2 01 d0 9c 0a .... debug 

    # ejs.es:11444                          state = (count == 0) ? Loaded : Receiving

    0102: [0] 5d ......................... getLocalSlot2 
    0103: [1] 44 ......................... load0 
    0104: [2] 25 ......................... compareEq 
    0105: [1] 13 09 ...................... branchFalse8 <addr: 116> 
    0107: [0] 57 ......................... loadThis 
    0108: [1] 7b b6 fb 09 e0 01 .......... getObjName <Loaded> <public> 
    0114: [1] 3e 07 ...................... goto8 <addr: 123> 
    0116: [1] 57 ......................... loadThis 
    0117: [2] 7b e2 fa 09 e0 01 .......... getObjName <Receiving> <public> 
    0123: [2] 57 ......................... loadThis 
    0124: [3] b3 ae f7 09 b4 f6 09 ....... putObjName <state> <[ejs::XMLHttp,private]> 
    0131: [1] 33 02 ea b2 01 82 92 0a .... debug 

    # ejs.es:11445                          notify()

    0139: [1] 1f ac 92 0a b4 f6 09 00 .... callScopedName <notify> <[ejs::XMLHttp,private]> <argc: 0> 
    0147: [1] 54 ......................... loadNull 
    0148: [2] bf ......................... returnValue 
    0149: [0] 33 02 ec b2 01 b4 16 ....... debug 

    # ejs.es:11446                      }
    
VARIABLE:   [e-00]  private var e : Event
VARIABLE:   [hp-01]  private var hp : Http
VARIABLE:   [count-02]  private var count

FUNCTION:   [XMLHttp-47]  [ejs::XMLHttp,private] const function notify() : void


    0000: [0] 33 02 f8 b2 01 84 9e 0a .... debug 

    # ejs.es:11452                          if (onreadystatechange) {

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b a4 fc 09 e0 01 .......... getObjName <onreadystatechange> <public> 
    0015: [1] 13 11 ...................... branchFalse8 <addr: 34> 
    0017: [0] 33 02 fa b2 01 d0 9e 0a .... debug 

    # ejs.es:11453                              onreadystatechange()

    0025: [0] 1f a4 fc 09 e0 01 00 ....... callScopedName <onreadystatechange> <public> <argc: 0> 
    0032: [0] 3e 00 ...................... goto8 <addr: 34> 
    0034: [0] be ......................... return 
    0035: [0] 33 02 fe b2 01 b4 16 ....... debug 

    # ejs.es:11455                      }
    
VARIABLE:   [hp-00]  [ejs::XMLHttp,private] var hp : Http
VARIABLE:   [state-01]  [ejs::XMLHttp,private] var state : Number
VARIABLE:   [response-02]  [ejs::XMLHttp,private] var response : ByteArray
VARIABLE:   [onreadystatechange-03]  public var onreadystatechange : Function

CLASS:      native final class XMLList extends Object
            #  Class Details: 29 class traits, 0 instance traits, requested slot 136

FUNCTION:   [XMLList-08]  iterator native const override function get() : Iterator


    

FUNCTION:   [XMLList-12]  iterator native const override function getValues() : Iterator


    

FUNCTION:   [XMLList-22]  public native const override function toJSON() : String


    

FUNCTION:   [XMLList-24]  public native const override function toString() : String


    

FUNCTION:   [XMLList-26]  -constructor- native const function XMLList() : void


    

FUNCTION:   [XMLList-27]  public native const function length() : Number


    

FUNCTION:   [XMLList-28]  public native const function name() : String


    

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 185)
#
0000    public var stderr
0001    public var stdin
0002    public var stdout
0003    ejs var App: Type
0004    ejs function appInit
0005    ejs var Array: Type
0006    ejs var BinaryStream: Type
0007    ejs var Block: Type
0008    ejs var Boolean: Type
0009    ejs var ByteArray: Type
0010    ejs var Cmd: Type
0011    ejs var CmdArgs: Type
0012    public function gc
0013    public function readFile
0014    ejs var Config: Type
0015    ejs var Date: Type
0016    ejs var Emitter: Type
0017    internal-ed363076473b51ca685af450cc662b39-0 var Endpoint: Type
0018    ejs var ArgError: Type
0019    ejs var ArithmeticError: Type
0020    ejs var AssertError: Type
0021    ejs var InstructionError: Type
0022    ejs var Error: Type
0023    ejs var IOError: Type
0024    ejs var InternalError: Type
0025    ejs var MemoryError: Type
0026    ejs var OutOfBoundsError: Type
0027    ejs var ReferenceError: Type
0028    ejs var ResourceError: Type
0029    ejs var SecurityError: Type
0030    ejs var StateError: Type
0031    ejs var SyntaxError: Type
0032    ejs var TypeError: Type
0033    ejs var URIError: Type
0034    ejs var Event: Type
0035    ejs var ErrorEvent: Type
0036    ejs var File: Type
0037    ejs var FileSystem: Type
0038    ejs var Frame: Type
0039    ejs var Function: Type
0040    ejs function makeGetter
0041    ejs function clearBoundThis
0042    ejs var GC: Type
0043    public var EJSCRIPT: Boolean
0044    public var ECMA: Boolean
0045    public var ejs
0046    public var public
0047    public var internal
0048    public var iterator
0049    public var CONFIG
0050    ejs var TODO: Boolean
0051    ejs var FUTURE: Boolean
0052    ejs var ASC: Boolean
0053    ejs var DOC_ONLY: Boolean
0054    ejs var DEPRECATED: Boolean
0055    ejs var boolean
0056    ejs var double
0057    ejs var num
0058    ejs var string
0059    ejs var false: Boolean
0060    ejs var global: Object
0061    ejs var null
0062    ejs var Infinity
0063    ejs var NegativeInfinity
0064    ejs var NaN
0065    ejs var true: Boolean
0066    ejs var undefined
0067    ejs var void
0068    ejs function assert
0069    ejs function breakpoint
0070    ejs function cloneBase
0071    ejs function decodeURI
0072    ejs function dump
0073    ejs function dumpAll
0074    ejs function dumpDef
0075    ejs function encodeURI
0076    ejs function escape
0077    ejs function md5
0078    ejs function blend
0079    ejs function eval
0080    ejs function formatStack
0081    ejs function hashcode
0082    ejs function isNaN
0083    ejs function isFinite
0084    ejs function load
0085    ejs function print
0086    ejs function parse
0087    ejs function parseFloat
0088    ejs function parseInt
0089    ejs function printHash
0090    ejs function instanceOf
0091    ejs function error
0092    ejs function input
0093    ejs function output
0094    ejs var Http: Type
0095    iterator var Iterable: Type
0096    iterator var Iterator: Type
0097    iterator var StopIteration: Type
0098    ejs var JSON: Type
0099    ejs function deserialize
0100    ejs function serialize
0101    ejs var Locale: Type
0102    ejs var Logger: Type
0103    ejs var Math: Type
0104    ejs var Memory: Type
0105    ejs var Namespace: Type
0106    ejs var Null: Type
0107    ejs var Number: Type
0108    ejs var Object: Type
0109    ejs var Path: Type
0110    ejs var Promise: Type
0111    ejs var Reflect: Type
0112    ejs function typeOf
0113    ejs var RegExp: Type
0114    ejs var Socket: Type
0115    ejs var Stream: Type
0116    ejs var String: Type
0117    ejs var System: Type
0118    ejs var TextStream: Type
0119    ejs var Timer: Type
0120    ejs function setInterval
0121    ejs function setTimeout
0122    ejs var TimerEvent: Type
0123    ejs var Type: Type
0124    ejs var Uri: Type
0125    ejs function decodeUri
0126    ejs function decodeUriComponent
0127    ejs var Void: Type
0128    ejs var Worker: Type
0129    ejs.worker var self: Worker
0130    ejs.worker function exit
0131    ejs.worker function postMessage
0132    ejs.worker function onerror
0133    ejs.worker function onmessage
0134    ejs var XML: Type
0135    ejs var XMLHttp: Type
0136    ejs var XMLList: Type

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "App" class (Num slots 52, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function App-initializer
0027    public var config: Object
0028    [ejs::App,private] var _errorStream
0029    [ejs::App,private] var _inputStream
0030    [ejs::App,private] var _outputStream
0031    internal-ed363076473b51ca685af450cc662b39-0 var defaultConfig
0032    public function args
0033    public function dir
0034    public function chdir
0035    public function exeDir
0036    public function exePath
0037    public function errorStream
0038    public function exit
0039    public function getenv
0040    public function inputStream
0041    public var logger
0042    public function name
0043    public function noexit
0044    public function outputStream
0045    public function putenv
0046    public function search
0047    public function createSearch
0048    public function serviceEvents
0049    public function sleep
0050    public function title
0051    public function version

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Array" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Array
0027    public function append
0028    public function clear
0029    public function compact
0030    public function concat
0031    public function contains
0032    public function every
0033    public function filter
0034    public function find
0035    public function findAll
0036    public function forEach
0037    public function indexOf
0038    public function insert
0039    public function join
0040    public function lastIndexOf
0041    public function length
0042    public function map
0043    public function pop
0044    public function push
0045    public function reject
0046    public function remove
0047    public function reverse
0048    public function shift
0049    public function slice
0050    public function some
0051    public function sort
0052    public function splice
0053    public function transform
0054    public function unique
0055    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "BinaryStream" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function BinaryStream
0027    -initializer- function BinaryStream-initializer
0028    public var BigEndian
0029    public var LittleEndian
0030    public function addListener
0031    public function async
0032    public function available
0033    public function close
0034    public function encoding
0035    public function endian
0036    public function flush
0037    public function read
0038    public function readBoolean
0039    public function readByte
0040    public function readDate
0041    public function readDouble
0042    public function readInteger
0043    public function readLong
0044    public function readString
0045    public function readXML
0046    public function removeListener
0047    public function room
0048    public function write
0049    public function writeByte
0050    public function writeShort
0051    public function writeDouble
0052    public function writeInteger
0053    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs::BinaryStream,private] var inbuf
0001    [ejs::BinaryStream,private] var outbuf
0002    [ejs::BinaryStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Block" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Boolean" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 64, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function ByteArray
0027    -initializer- function ByteArray-initializer
0028    public var LittleEndian
0029    public var BigEndian
0030    public function addListener
0031    public function available
0032    public function async
0033    public function close
0034    public function compact
0035    public function copyIn
0036    public function copyOut
0037    public function encoding
0038    public function endian
0039    public function flush
0040    public function length
0041    public function MD5
0042    public function read
0043    public function readBoolean
0044    public function readByte
0045    public function readDate
0046    public function readDouble
0047    public function readInteger
0048    public function readLong
0049    public function readPosition
0050    public function readShort
0051    public function readString
0052    public function removeListener
0053    public function reset
0054    public function room
0055    public function write
0056    public function writeByte
0057    public function writeShort
0058    public function writeDouble
0059    public function writeInteger
0060    public function writeLong
0061    public function writePosition
0062    public function input
0063    public function output

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Cmd" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function sh
0027    public function run
0028    public function daemon
0029    public function runx

#
#  Instance slot assignments for the "Cmd" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "CmdArgs" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function CmdArgs
0027    [ejs::CmdArgs,private] function parseTemplate
0028    [ejs::CmdArgs,private] function validate

#
#  Instance slot assignments for the "CmdArgs" class (Num prop 4, num inherited 0)
#
0000    public var args: Array
0001    public var options: Object
0002    [ejs::CmdArgs,private] var ranges: Object
0003    [ejs::CmdArgs,private] var aliases: Object

#
#  Class slot assignments for the "Config" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public var Debug: Boolean
0027    public var CPU
0028    public var OS
0029    public var Product
0030    public var Title
0031    public var Version
0032    public var LibDir
0033    public var BinDir
0034    public var ModDir

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Date" class (Num slots 87, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Date
0027    public function day
0028    public function dayOfYear
0029    public function date
0030    public function elapsed
0031    public function format
0032    public function formatUTC
0033    public function fullYear
0034    public function getDate
0035    public function getDay
0036    public function getFullYear
0037    public function getHours
0038    public function getMilliseconds
0039    public function getMinutes
0040    public function getMonth
0041    public function getSeconds
0042    public function getTime
0043    public function getTimezoneOffset
0044    public function getUTCDate
0045    public function getUTCDay
0046    public function getUTCFullYear
0047    public function getUTCHours
0048    public function getUTCMilliseconds
0049    public function getUTCMinutes
0050    public function getUTCMonth
0051    public function getUTCSeconds
0052    public function hours
0053    public function milliseconds
0054    public function minutes
0055    public function month
0056    public function nanoAge
0057    public function nextDay
0058    public function now
0059    public function parseDate
0060    public function parseUTCDate
0061    public function parse
0062    public function seconds
0063    public function setDate
0064    public function setFullYear
0065    public function setHours
0066    public function setMilliseconds
0067    public function setMinutes
0068    public function setMonth
0069    public function setSeconds
0070    public function setTime
0071    public function setUTCDate
0072    public function setUTCFullYear
0073    public function setUTCHours
0074    public function setUTCMilliseconds
0075    public function setUTCMinutes
0076    public function setUTCMonth
0077    public function setUTCSeconds
0078    public function time
0079    public function toDateString
0080    public function toISOString
0081    public function toLocaleDateString
0082    public function toLocaleTimeString
0083    public function toTimeString
0084    public function toUTCString
0085    public function UTC
0086    public function year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Emitter" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener

#
#  Instance slot assignments for the "Emitter" class (Num prop 1, num inherited 0)
#
0000    [ejs::Emitter,private] var endpoints: Object

#
#  Class slot assignments for the "Endpoint" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 4, num inherited 0)
#
0000    public var callback
0001    public var name
0002    public var active: Boolean
0003    public var again: Boolean

#
#  Class slot assignments for the "ArgError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "AssertError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InstructionError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Error" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "IOError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InternalError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "MemoryError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ReferenceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ResourceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SecurityError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SecurityError

#
#  Instance slot assignments for the "SecurityError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "StateError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SyntaxError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "TypeError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "URIError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Event" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event

#
#  Instance slot assignments for the "Event" class (Num prop 2, num inherited 0)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "ErrorEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function ErrorEvent

#
#  Instance slot assignments for the "ErrorEvent" class (Num prop 6, num inherited 2)
#
0000    public var data
0001    public var timestamp
0002    public var message
0003    public var filename
0004    public var lineno
0005    public var stack

#
#  Class slot assignments for the "File" class (Num slots 47, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function File
0027    public function addListener
0028    public function async
0029    public function canRead
0030    public function canWrite
0031    public function close
0032    public function encoding
0033    public function flush
0034    public function isOpen
0035    public function open
0036    public function options
0037    public function path
0038    public function position
0039    public function read
0040    public function readBytes
0041    public function readString
0042    public function remove
0043    public function removeListener
0044    public function size
0045    public function truncate
0046    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "FileSystem" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function FileSystem
0027    public function hasDrives
0028    public function newline
0029    public function root
0030    public function separators

#
#  Instance slot assignments for the "FileSystem" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Frame" class (Num slots 31, num inherited 31)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Frame" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Function" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function enabled
0027    public function workQuota
0028    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Http" class (Num slots 118, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Http
0027    -initializer- function Http-initializer
0028    public var Continue
0029    public var Ok
0030    public var Created
0031    public var Accepted
0032    public var NotAuthoritative
0033    public var NoContent
0034    public var Reset
0035    public var Partial
0036    public var MultipleChoice
0037    public var MovedPermanently
0038    public var MovedTemporarily
0039    public var SeeOther
0040    public var NotModified
0041    public var UseProxy
0042    public var BadRequest
0043    public var Unauthorized
0044    public var PaymentRequired
0045    public var Forbidden
0046    public var NotFound
0047    public var BadMethod
0048    public var NotAccepted
0049    public var ProxyAuth
0050    public var ClientTimeout
0051    public var Conflict
0052    public var Gone
0053    public var LengthRequired
0054    public var PrecondFailed
0055    public var EntityTooLarge
0056    public var ReqTooLong
0057    public var UnsupportedType
0058    public var ServerError
0059    public var NotImplemented
0060    public var BadGateway
0061    public var Unavailable
0062    public var GatewayTimeout
0063    public var Version
0064    public function addListener
0065    public function async
0066    public function chunkSize
0067    public function close
0068    public function connect
0069    public function certificate
0070    public function contentLength
0071    public function contentType
0072    public function date
0073    public function del
0074    public function encoding
0075    public function expires
0076    public function finalize
0077    public function flush
0078    public function followRedirects
0079    public function form
0080    public function get
0081    public function getRequestHeaders
0082    public function head
0083    public function header
0084    public function headers
0085    public function isSecure
0086    public function key
0087    public function lastModified
0088    public function method
0089    public function options
0090    public function post
0091    public function put
0092    public function read
0093    public function readString
0094    public function readLines
0095    public function readXml
0096    public function removeListener
0097    public function response
0098    public function retries
0099    public function setCredentials
0100    public function setHeader
0101    public function setHeaders
0102    public function status
0103    public function statusMessage
0104    public function success
0105    public function timeout
0106    public function trace
0107    public function upload
0108    public function uri
0109    public function wait
0110    public function write
0111    public function addHeader
0112    public function bodyLength
0113    public function code
0114    public function codeString
0115    public function available
0116    public function contentEncoding
0117    public function mimeType

#
#  Instance slot assignments for the "Http" class (Num prop 1, num inherited 0)
#
0000    [ejs::Http,private] var _response

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Iterator" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function parse
0027    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Locale" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Locale
0027    -initializer- function Locale-initializer
0028    public var textEncoding

#
#  Instance slot assignments for the "Locale" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Logger" class (Num slots 53, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Logger
0027    -initializer- function Logger-initializer
0028    public var Off
0029    public var Error
0030    public var Warn
0031    public var Info
0032    public var Config
0033    public var All
0034    public function addListener
0035    public function async
0036    public function close
0037    public function filter
0038    public function flush
0039    public function level
0040    public function match
0041    public function name
0042    public function outstream
0043    public function parent
0044    public function debug
0045    public function config
0046    public function error
0047    public function info
0048    public function read
0049    public function removeListener
0050    public function write
0051    public function warn
0052    [ejs::Logger,private] function emit

#
#  Instance slot assignments for the "Logger" class (Num prop 6, num inherited 0)
#
0000    [ejs::Logger,private] var _filter: Function
0001    [ejs::Logger,private] var _level
0002    [ejs::Logger,private] var _pattern
0003    [ejs::Logger,private] var _name
0004    [ejs::Logger,private] var _outstream: Stream
0005    [ejs::Logger,private] var _parent: Logger

#
#  Class slot assignments for the "Math" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Math-initializer
0027    public var E
0028    public var LN2
0029    public var LN10
0030    public var LOG2E
0031    public var LOG10E
0032    public var PI
0033    public var SQRT1_2
0034    public var SQRT2
0035    public function abs
0036    public function acos
0037    public function asin
0038    public function atan
0039    public function atan2
0040    public function ceil
0041    public function cos
0042    public function exp
0043    public function floor
0044    public function log10
0045    public function log
0046    public function max
0047    public function min
0048    public function pow
0049    public function random
0050    public function round
0051    public function sin
0052    public function sqrt
0053    public function tan

#
#  Instance slot assignments for the "Math" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Memory" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function allocated
0027    public function callback
0028    public function maximum
0029    public function peak
0030    public function redline
0031    public function resident
0032    public function stack
0033    public function system
0034    public function stats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Namespace" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Namespace" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Null" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Number" class (Num slots 49, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Number
0027    -initializer- function Number-initializer
0028    public var MAX_VALUE: Number
0029    public var MIN_VALUE: Number
0030    public var NaN: Number
0031    public var NEGATIVE_INFINITY: Number
0032    public var POSITIVE_INFINITY: Number
0033    public var MaxValue: Number
0034    public var MinValue: Number
0035    public function abs
0036    public function ceil
0037    public function floor
0038    public function isFinite
0039    public function isNaN
0040    public function round
0041    public function toExponential
0042    public function toFixed
0043    public function toPrecision
0044    public function byte
0045    public function integral
0046    public function max
0047    public function min
0048    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Object" class (Num slots 26, num inherited 0)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    public function create
0005    public function defineProperty
0006    public function defineProperties
0007    public function freeze
0008    iterator function get
0009    public function getOwnPropertyDescriptor
0010    public function getOwnPropertyNames
0011    public function getOwnPrototypeOf
0012    iterator function getValues
0013    public function hasOwnProperty
0014    public function isExtensible
0015    public function isFrozen
0016    public function isPrototypeOf
0017    public function isSealed
0018    public function keys
0019    public function preventExtensions
0020    public function propertyIsEnumerable
0021    public function seal
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Path" class (Num slots 85, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Path
0027    public function absolute
0028    public function accessed
0029    public function basename
0030    public function components
0031    public function contains
0032    public function copy
0033    public function created
0034    public function dirname
0035    public function endsWith
0036    public function exists
0037    public function extension
0038    public function find
0039    public function files
0040    public function hasDrive
0041    public function isAbsolute
0042    public function isDir
0043    public function isLink
0044    public function isRegular
0045    public function isRelative
0046    public function join
0047    public function joinExt
0048    public function length
0049    public function linkTarget
0050    public function makeDir
0051    public function makeLink
0052    public function makeTemp
0053    public function map
0054    public function mimeType
0055    public function modified
0056    public function name
0057    public function natural
0058    public function normalize
0059    public function open
0060    public function openTextStream
0061    public function openBinaryStream
0062    public function parent
0063    public function perms
0064    public function portable
0065    public function readBytes
0066    public function readLines
0067    public function readString
0068    public function readXML
0069    public function relative
0070    public function remove
0071    public function removeAll
0072    public function rename
0073    public function replaceExt
0074    public function resolve
0075    public function same
0076    public function separator
0077    public function size
0078    public function startsWith
0079    public function toLower
0080    public function trimEnd
0081    public function trimExt
0082    public function trimStart
0083    public function truncate
0084    public function write

#
#  Instance slot assignments for the "Path" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Promise" class (Num slots 47, num inherited 35)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener
0035    -constructor- function Promise
0036    internal-ed363076473b51ca685af450cc662b39-0 function addCallback
0037    internal-ed363076473b51ca685af450cc662b39-0 function addCancelback
0038    internal-ed363076473b51ca685af450cc662b39-0 function addErrback
0039    internal-ed363076473b51ca685af450cc662b39-0 function emitSuccess
0040    internal-ed363076473b51ca685af450cc662b39-0 function emitError
0041    internal-ed363076473b51ca685af450cc662b39-0 function emitCancel
0042    internal-ed363076473b51ca685af450cc662b39-0 function cancel
0043    internal-ed363076473b51ca685af450cc662b39-0 function then
0044    internal-ed363076473b51ca685af450cc662b39-0 function timeout
0045    internal-ed363076473b51ca685af450cc662b39-0 function wait
0046    [ejs::Promise,private] function issue

#
#  Instance slot assignments for the "Promise" class (Num prop 3, num inherited 1)
#
0000    [ejs::Emitter,private] var endpoints
0001    [ejs::Promise,private] var timer
0002    [ejs::Promise,private] var fired: Boolean

#
#  Class slot assignments for the "Reflect" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Reflect
0027    public function base
0028    public function isType
0029    public function type
0030    public function name

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [ejs::Reflect,private] var obj: Object

#
#  Class slot assignments for the "RegExp" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function RegExp
0027    public function lastIndex
0028    public function exec
0029    public function global
0030    public function ignoreCase
0031    public function multiline
0032    public function source
0033    public function matched
0034    public function replace
0035    public function split
0036    public function start
0037    public function sticky
0038    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Socket" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Socket
0027    public function addListener
0028    public function accept
0029    public function address
0030    public function async
0031    public function close
0032    public function connect
0033    public function encoding
0034    public function flush
0035    public function listen
0036    public function port
0037    public function read
0038    public function remoteAddress
0039    public function removeListener
0040    public function write

#
#  Instance slot assignments for the "Socket" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Stream" class (Num slots 7, num inherited 0)
#
0000    public function addListener
0001    public function async
0002    public function close
0003    public function flush
0004    public function read
0005    public function removeListener
0006    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "String" class (Num slots 68, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function String
0027    public function caseCompare
0028    public function caselessCompare
0029    public function charAt
0030    public function charCodeAt
0031    public function concat
0032    public function contains
0033    public function endsWith
0034    public function format
0035    public function fromCharCode
0036    public function indexOf
0037    public function isDigit
0038    public function isAlpha
0039    public function isAlphaNum
0040    public function isLower
0041    public function isSpace
0042    public function isUpper
0043    public function lastIndexOf
0044    public function length
0045    public function match
0046    public function parseJSON
0047    public function toCamel
0048    public function toPascal
0049    public function printable
0050    public function quote
0051    public function remove
0052    public function replace
0053    public function reverse
0054    public function search
0055    public function slice
0056    public function split
0057    public function startsWith
0058    public function substring
0059    public function times
0060    public function tokenize
0061    public function toLower
0062    public function toUpper
0063    public function trim
0064    public function trimStart
0065    public function trimEnd
0066    public function -
0067    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 36, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function System-initializer
0027    public var Bufsize: Number
0028    public function hostname
0029    public function ipaddr
0030    public function run
0031    public function runx
0032    public function daemon
0033    public function sh
0034    public function cmd
0035    public function exec

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TextStream" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TextStream
0027    public function addListener
0028    public function async
0029    public function available
0030    public function close
0031    public function encoding
0032    public function fill
0033    public function flush
0034    public function read
0035    public function readLine
0036    public function readLines
0037    public function readString
0038    public function removeListener
0039    public function write
0040    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs::TextStream,private] var newline: String
0001    [ejs::TextStream,private] var inbuf: ByteArray
0002    [ejs::TextStream,private] var format: String
0003    [ejs::TextStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Timer" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Timer
0027    public function drift
0028    public function period
0029    public function restart
0030    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TimerEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function TimerEvent

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 2, num inherited 2)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "Type" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Uri" class (Num slots 65, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Uri
0027    public function basename
0028    public function complete
0029    public function components
0030    public function decode
0031    public function decodeComponent
0032    public function dirname
0033    public function encode
0034    public function encodeComponent
0035    public function endsWith
0036    public function extension
0037    public function hasExtension
0038    public function hasHost
0039    public function hasPort
0040    public function hasQuery
0041    public function hasReference
0042    public function hasScheme
0043    public function host
0044    public function isAbsolute
0045    public function isDir
0046    public function isRegular
0047    public function isRelative
0048    public function join
0049    public function joinExt
0050    public function mimeType
0051    public function normalize
0052    public function path
0053    public function port
0054    public function scheme
0055    public function query
0056    public function reference
0057    public function relative
0058    public function replaceExt
0059    public function same
0060    public function startsWith
0061    public function trimEnd
0062    public function trimExt
0063    public function trimStart
0064    public function uri

#
#  Instance slot assignments for the "Uri" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Void" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Worker" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Worker
0027    public function eval
0028    public function exit
0029    public function join
0030    public function load
0031    public function preload
0032    public function preeval
0033    public function lookup
0034    public function postMessage
0035    public function terminate
0036    public function waitForMessage

#
#  Instance slot assignments for the "Worker" class (Num prop 4, num inherited 0)
#
0000    public var onclose: Function
0001    public var onmessage: Function
0002    public var onerror: Function
0003    public var name: String

#
#  Class slot assignments for the "XML" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XML
0027    public function load
0028    public function save
0029    public function length
0030    public function name

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "XMLHttp" class (Num slots 48, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLHttp
0027    -initializer- function XMLHttp-initializer
0028    public var Uninitialized
0029    public var Open
0030    public var Sent
0031    public var Receiving
0032    public var Loaded
0033    public function abort
0034    public function http
0035    public function readyState
0036    public function responseText
0037    public function responseXML
0038    public function responseBody
0039    public function status
0040    public function statusText
0041    public function getAllResponseHeaders
0042    public function getResponseHeader
0043    public function open
0044    public function send
0045    public function setRequestHeader
0046    [ejs::XMLHttp,private] function callback
0047    [ejs::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs::XMLHttp,private] var hp: Http
0001    [ejs::XMLHttp,private] var state: Number
0002    [ejs::XMLHttp,private] var response: ByteArray
0003    public var onreadystatechange: Function

#
#  Class slot assignments for the "XMLList" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLList
0027    public function length
0028    public function name

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 84084 bytes)
#
0000   ""
0001   "ejs.es"
0002   "}"
0003   "internal-ed363076473b51ca685af450cc662b39-0"
0004   "ejs"
0005   "module ejs {"
0006   "    public var stderr: TextStream"
0007   "stderr"
0008   "public"
0009   "TextStream"
0010   "    public var stdin: TextStream"
0011   "stdin"
0012   "    public var stdout: TextStream"
0013   "stdout"
0014   "    class App {"
0015   "        use default namespace public"
0016   "        static var config: Object"
0017   "config"
0018   "Object"
0019   "        private static var _errorStream: Stream"
0020   "_errorStream"
0021   "[ejs::App,private]"
0022   "Stream"
0023   "        private static var _inputStream: Stream"
0024   "_inputStream"
0025   "        private static var _outputStream: Stream"
0026   "_outputStream"
0027   "        static internal var defaultConfig = {"
0028   "defaultConfig"
0029   "            log: {"
0030   "log"
0031   "                enable: true,"
0032   "enable"
0033   "                where: "stdout","
0034   "where"
0035   "                level: 2,"
0036   "level"
0037   "            cache: {"
0038   "cache"
0039   "            directories: {"
0040   "directories"
0041   "                cache: "cache","
0042   "        native static function get args(): Array"
0043   "args"
0044   "Array"
0045   "        native static function get dir(): Path"
0046   "dir"
0047   "Path"
0048   "        native static function chdir(value: Object): Void"
0049   "chdir"
0050   "value"
0051   "private"
0052   "Void"
0053   "        native static function get exeDir(): Path"
0054   "exeDir"
0055   "        native static function get exePath(): Path"
0056   "exePath"
0057   "        static function get errorStream(): Stream"
0058   "            _errorStream"
0059   "errorStream"
0060   "        static function set errorStream(stream: Stream): Void {"
0061   "            _errorStream = stream"
0062   "            if (stderr) {"
0063   "                stderr.close()"
0064   "close"
0065   "            }"
0066   "            stderr = TextStream(_errorStream)"
0067   "        }"
0068   "stream"
0069   "        native static function exit(status: Number = 0): Void"
0070   "exit"
0071   "status"
0072   "Number"
0073   "        native static function getenv(name: String): String"
0074   "getenv"
0075   "name"
0076   "String"
0077   "        static function get inputStream(): Stream"
0078   "            _inputStream"
0079   "inputStream"
0080   "       static function set inputStream(stream: Stream): Void {"
0081   "            _inputStream = stream"
0082   "            if (stdin) {"
0083   "                stdin.close()"
0084   "            stdin = TextStream(_inputStream)"
0085   "        public static var logger: Logger"
0086   "logger"
0087   "Logger"
0088   "        static function get name(): String"
0089   "            Config.Product"
0090   "Product"
0091   "        native static function noexit(exit: Boolean = true): Void"
0092   "noexit"
0093   "Boolean"
0094   "        static function get outputStream(): Stream"
0095   "            _outputStream"
0096   "outputStream"
0097   "        static function set outputStream(stream: Stream): Void {"
0098   "            _outputStream = stream"
0099   "            if (stdout) {"
0100   "                stdout.close()"
0101   "            stdout = TextStream(_outputStream)"
0102   "        native static function putenv(name: String, value: String): Void"
0103   "putenv"
0104   "        native static function get search(): Array"
0105   "search"
0106   "        native static function set search(paths: Array): Void"
0107   "paths"
0108   "        native static function createSearch(searchPath: String? = null): Array"
0109   "createSearch"
0110   "searchPath"
0111   "        native static function serviceEvents(timeout: Number = -1, oneEvent: Boolean = false): Void"
0112   "serviceEvents"
0113   "timeout"
0114   "oneEvent"
0115   "        native static function sleep(delay: Number = -1): Void"
0116   "sleep"
0117   "delay"
0118   "        static static function get title(): String"
0119   "            Config.Title"
0120   "Title"
0121   "title"
0122   "        static static function get version(): String"
0123   "            Config.Version"
0124   "Version"
0125   "version"
0126   "App"
0127   "App-initializer"
0128   "-initializer-"
0129   "constructor"
0130   "Function"
0131   "length"
0132   "prototype"
0133   "clone"
0134   ""
0135   "get"
0136   "iterator"
0137   "Iterator"
0138   "getValues"
0139   "hasOwnProperty"
0140   "isPrototypeOf"
0141   "propertyIsEnumerable"
0142   "toJSON"
0143   "toLocaleString"
0144   "toString"
0145   "valueOf"
0146   "    function appInit(): Void {"
0147   "        let dir = App.getenv("HOME")"
0148   "HOME"
0149   "        if (dir) {"
0150   "path"
0151   "-hoisted-3"
0152   "            let path = Path(dir).join(".ejsrc")"
0153   ".ejsrc"
0154   "join"
0155   "            if (path.exists) {"
0156   "exists"
0157   "                try {"
0158   "                    App.config = deserialize(path.readString())"
0159   "readString"
0160   "                } catch (e) {"
0161   "e"
0162   "-hoisted-4"
0163   "                    error("Can't parse " + path + ": " + e)"
0164   "Can't parse "
0165   ": "
0166   "        let config = App.config || {}"
0167   "        App.config = config"
0168   "        blend(config, App.defaultConfig, false)"
0169   "        stdout = TextStream(App.outputStream)"
0170   "        stderr = TextStream(App.errorStream)"
0171   "        stdin = TextStream(App.inputStream)"
0172   "        let log = config.log"
0173   "        if (log.enable) {"
0174   "-hoisted-5"
0175   "            let stream"
0176   "            if (log.where == "stdout") {"
0177   "                stream = App.outputStream"
0178   "            } else if (log.where == "stderr") {"
0179   "                stream = App.errorStream"
0180   "            } else {"
0181   "                stream = File(log.where, "w")"
0182   "w"
0183   "            App.logger = new Logger(App.name, stream, log.level)"
0184   "            if (log.match) {"
0185   "match"
0186   "                App.logger.match = log.match"
0187   "        if (config.search) {"
0188   "            if (config.search is Array) {"
0189   "                App.search = config.search + App.search"
0190   "            } else if (config.search is String) {"
0191   "                App.search = config.search.split(Path.SearchSeparator) + App.search"
0192   "SearchSeparator"
0193   "split"
0194   "        if (config.scripts) {"
0195   "scripts"
0196   "            for each (m in config.scripts) {"
0197   "m"
0198   "-hoisted-6"
0199   "                load(m)"
0200   "    }"
0201   "appInit"
0202   "StopIteration"
0203   "    appInit()"
0204   "block_0028_1"
0205   "-block-"
0206   "    dynamic native class Array {"
0207   "        native function Array(...values)"
0208   "-constructor-"
0209   "values"
0210   "        native function append(obj: Object): Array"
0211   "append"
0212   "obj"
0213   "        native function clear() : Void"
0214   "clear"
0215   "        override native function clone(deep: Boolean = true) : Array"
0216   "deep"
0217   "        native function compact() : Array"
0218   "compact"
0219   "        native function concat(...args): Array "
0220   "concat"
0221   "        function contains(element: Object): Boolean {"
0222   "            if (indexOf(element) >= 0) {"
0223   "indexOf"
0224   "                return true"
0225   "                return false"
0226   "contains"
0227   "element"
0228   "        function every(match: Function): Boolean {"
0229   "            for (let i: Number in this) {"
0230   "i"
0231   "-hoisted-1"
0232   "                if (!match(this[i], i, this)) {"
0233   "                    return false"
0234   "            return true"
0235   "every"
0236   "        function filter(match: Function): Array"
0237   "            findAll(match)"
0238   "findAll"
0239   "filter"
0240   "        function find(match: Function): Object {"
0241   "result"
0242   "            var result: Array = new Array"
0243   "-hoisted-2"
0244   "                if (match(this[i], i, this)) {"
0245   "                    return this[i]"
0246   "            return result"
0247   "find"
0248   "        function findAll(match: Function): Array {"
0249   "                    result.append(this[i])"
0250   "        function forEach(callback: Function, thisObj: Object? = null): Void {"
0251   "            if (thisObj) {"
0252   "                for (let i: Number in this) {"
0253   "                    callback.call(thisObj, this[i], i, this)"
0254   "call"
0255   "                    callback(this[i], i, this)"
0256   "forEach"
0257   "callback"
0258   "thisObj"
0259   "        override iterator native function get(): Iterator"
0260   "        override iterator native function getValues(): Iterator"
0261   "        native function indexOf(element: Object, startIndex: Number = 0): Number"
0262   "startIndex"
0263   "        native function insert(pos: Number, ...args): Array"
0264   "insert"
0265   "pos"
0266   "        native function join(sep: String = undefined): String"
0267   "sep"
0268   "        native function lastIndexOf(element: Object, startIndex: Number = 0): Number"
0269   "lastIndexOf"
0270   "        native function get length(): Number"
0271   "        native function set length(value: Number): Void"
0272   "        function map(mapper: Function): Array {"
0273   "            var result: Array = clone()"
0274   "            result.transform(mapper)"
0275   "transform"
0276   "map"
0277   "mapper"
0278   "        native function pop(): Object "
0279   "pop"
0280   "        native function push(...items): Number "
0281   "push"
0282   "items"
0283   "        function reject(match: Function): Array {"
0284   "reject"
0285   "        function remove(start: Number, end: Number = -1): Void {"
0286   "            if (start < 0) {"
0287   "                start += length"
0288   "            if (end < 0) {"
0289   "                end += length"
0290   "            splice(start, end - start + 1)"
0291   "splice"
0292   "remove"
0293   "start"
0294   "end"
0295   "        native function reverse(): Array "
0296   "reverse"
0297   "        native function shift(): Object "
0298   "shift"
0299   "        native function slice(start: Number, end: Number = -1, step: Number = 1): Array "
0300   "slice"
0301   "step"
0302   "        function some(match: Function): Boolean {"
0303   "                    return true"
0304   "            return false"
0305   "some"
0306   "        native function sort(compare: Function? = null, order: Number = 1): Array "
0307   "sort"
0308   "compare"
0309   "order"
0310   "        native function splice(start: Number, deleteCount: Number, ...values): Array "
0311   "deleteCount"
0312   "        override native function toString(): String "
0313   "        function transform(mapper: Function): Void {"
0314   "                this[i] = mapper(this[i], i, this);"
0315   "        native function unique(): Array"
0316   "unique"
0317   "        function unshift(...items): Object"
0318   "            insert(0, items)"
0319   "unshift"
0320   "block_0406_19"
0321   "    class BinaryStream implements Stream {"
0322   "        static const BigEndian: Number = ByteArray.BigEndian"
0323   "BigEndian"
0324   "        static const LittleEndian: Number = ByteArray.LittleEndian"
0325   "LittleEndian"
0326   "        private var inbuf: ByteArray"
0327   "inbuf"
0328   "[ejs::BinaryStream,private]"
0329   "ByteArray"
0330   "        private var outbuf: ByteArray"
0331   "outbuf"
0332   "        private var nextStream: Stream"
0333   "nextStream"
0334   "        function BinaryStream(stream: Stream) {"
0335   "            if (!stream) {"
0336   "                throw new ArgError("Must supply a Stream to connect with")"
0337   "Must supply a Stream to connect with"
0338   "            nextStream = stream"
0339   "            inbuf = new ByteArray"
0340   "            outbuf = new ByteArray"
0341   "            inbuf.addListener("writable", function (event: String, buffer: ByteArray) {"
0342   "                nextStream.read(buffer)"
0343   "read"
0344   "            })"
0345   "--fun_1604--89941725--"
0346   "event"
0347   "buffer"
0348   "writable"
0349   "addListener"
0350   "            outbuf.addListener("readable", function (event: String, buffer: ByteArray) {"
0351   "                count = nextStream.write(buffer)"
0352   "write"
0353   "count"
0354   "                buffer.readPosition += count"
0355   "readPosition"
0356   "                buffer.reset()"
0357   "reset"
0358   "--fun_1630--89941725--"
0359   "readable"
0360   "BinaryStream"
0361   "        native function addListener(name, listener: Function): Void"
0362   "listener"
0363   "        native function get async(): Boolean"
0364   "async"
0365   "        native function set async(enable: Boolean): Void"
0366   "        function get available(): Number"
0367   "            inbuf.available"
0368   "available"
0369   "        function close(): void"
0370   "            nextStream.close()"
0371   "        function get encoding(): String {"
0372   "            return inbuf.enc"
0373   "enc"
0374   "encoding"
0375   "        function set encoding(enc: String): Void {"
0376   "            inbuf.encoding = enc"
0377   "            outbuf.encoding = enc"
0378   "        function get endian(): Number"
0379   "            inbuf.endian"
0380   "endian"
0381   "        function set endian(value: Number): Void {"
0382   "            if (value != BigEndian && value != LittleEndian) {"
0383   "                throw new ArgError("Bad endian value")"
0384   "Bad endian value"
0385   "            inbuf.endian = value"
0386   "            outbuf.endian = value"
0387   "        function flush(): Void {"
0388   "            inbuf.flush()"
0389   "flush"
0390   "            outbuf.flush()"
0391   "            if (!(nextStream is ByteArray)) {"
0392   "                nextStream.flush()"
0393   "        function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number"
0394   "            inbuf.read(buffer, offset, count)"
0395   "offset"
0396   "        function readBoolean(): Boolean"
0397   "            inbuf.readBoolean()"
0398   "readBoolean"
0399   "        function readByte(): Number"
0400   "            inbuf.readByte()"
0401   "readByte"
0402   "        function readDate(): Date"
0403   "            inbuf.readDate()"
0404   "readDate"
0405   "Date"
0406   "        function readDouble(): Date"
0407   "            inbuf.readDouble()"
0408   "readDouble"
0409   "        function readInteger(): Number"
0410   "            inbuf.readInteger()"
0411   "readInteger"
0412   "        function readLong(): Number"
0413   "readLong"
0414   "        function readString(count: Number = -1): String "
0415   "            inbuf.readString(count)"
0416   "        function readXML(): XML {"
0417   "data"
0418   "            var data: String = """
0419   "            while (1) {"
0420   "s"
0421   "                var s: String = inbuf.readString()"
0422   "                if (s == null && data.length == 0) {"
0423   "                    return null"
0424   "                if (s.length == 0) {"
0425   "                    break"
0426   "                }"
0427   "                data += s"
0428   "            return new XML(data)"
0429   "readXML"
0430   "XML"
0431   "        native function removeListener(name, listener: Function): Void"
0432   "removeListener"
0433   "        function room(): Number"
0434   "            outbuf.room()"
0435   "room"
0436   "        function write(...items): Number {"
0437   "            let count: Number = 0"
0438   "            for each (i in items) {"
0439   "                count += outbuf.write(i)"
0440   "            return count"
0441   "        function writeByte(data: Number): Void "
0442   "            outbuf.writeByte(outbuf)"
0443   "writeByte"
0444   "        function writeShort(data: Number): Void"
0445   "            outbuf.writeShort(data)"
0446   "writeShort"
0447   "        function writeDouble(data: Number): Void"
0448   "            outbuf.writeDouble(data)"
0449   "writeDouble"
0450   "        function writeInteger(data: Number): Void"
0451   "            outbuf.writeInteger(data)"
0452   "writeInteger"
0453   "        function writeLong(data: Number): Void"
0454   "            outbuf.writeLong(data)"
0455   "writeLong"
0456   "BinaryStream-initializer"
0457   "block_0918_39"
0458   "    native final class Block { }"
0459   "Block"
0460   "block_1261_47"
0461   "    native final class Boolean {"
0462   "        native function Boolean(value: Boolean? = false)"
0463   "block_1323_48"
0464   "    final class ByteArray implements Stream {"
0465   "        static const LittleEndian: Number   = 0"
0466   "        static const BigEndian: Number      = 1"
0467   "        native function ByteArray(size: Number = -1, growable: Boolean = true)"
0468   "size"
0469   "growable"
0470   "        native function addListener(name: Object, listener: Function): Void"
0471   "        native function get available(): Number "
0472   "        native function close(): Void"
0473   "        native function compact(): Void"
0474   "        native function copyIn(destOffset: Number, src: ByteArray, srcOffset: Number = 0, count: Number = -1): Number"
0475   "copyIn"
0476   "destOffset"
0477   "src"
0478   "srcOffset"
0479   "        native function copyOut(srcOffset: Number, dest: ByteArray, destOffset: Number = 0, count: Number = -1): Number"
0480   "copyOut"
0481   "dest"
0482   "        function get encoding(): String "
0483   "            "utf-8""
0484   "utf-8"
0485   "            throw "Not yet implemented""
0486   "Not yet implemented"
0487   "        native function get endian(): Number"
0488   "        native function set endian(value: Number): Void"
0489   "        native function flush(): Void"
0490   "        function get MD5(): String {"
0491   "buf"
0492   "            let buf: ByteArray = this.clone()"
0493   "            return md5(buf.readString())"
0494   "MD5"
0495   "        native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number"
0496   "        native function readBoolean(): Boolean"
0497   "        native function readByte(): Number"
0498   "        native function readDate(): Date"
0499   "        native function readDouble(): Date"
0500   "        native function readInteger(): Number"
0501   "        native function readLong(): Number"
0502   "        native function get readPosition(): Number"
0503   "        native function set readPosition(position: Number): Void"
0504   "position"
0505   "        native function readShort(): Number"
0506   "readShort"
0507   "        native function readString(count: Number = -1): String"
0508   "        native function removeListener(name: Object, listener: Function): Void"
0509   "        native function reset(): Void"
0510   "        native function get room(): Number "
0511   "        native function write(...data): Number"
0512   "        native function writeByte(data: Number): Void"
0513   "        native function writeShort(data: Number): Void"
0514   "        native function writeDouble(data: Number): Void"
0515   "        native function writeInteger(data: Number): Void"
0516   "        native function writeLong(data: Number): Void"
0517   "        native function get writePosition(): Number"
0518   "writePosition"
0519   "        native function set writePosition(position: Number): Void"
0520   "        function get input(): Function { return null; }"
0521   "input"
0522   "        function set input(callback: Function): Void {"
0523   "            addListener("writable", function(event: String, ba: ByteArray): Void {"
0524   "                callback(ba)"
0525   "--fun_2614--89941712--"
0526   "ba"
0527   "        function get output(): Function { return null; } "
0528   "output"
0529   "        function set output(callback: Function): Void {"
0530   "            addListener("readable", function(event: String, ba: ByteArray): Void {"
0531   "--fun_2657--89941712--"
0532   "ByteArray-initializer"
0533   "block_1389_49"
0534   "    class Cmd {"
0535   "        static function sh(cmdline: String, data: String? = null): String {"
0536   "            return run(("/bin/sh -c \"" + cmdline.replace(/\\/g, "\\\\") + "\"").trim('\n'), data)"
0537   "/bin/sh -c ""
0538   "/\\/g"
0539   "\\"
0540   "replace"
0541   """
0542   "
"
0543   "trim"
0544   "run"
0545   "sh"
0546   "cmdline"
0547   "        static function run(cmdline: String, data: String? = null): String"
0548   "            System.run(cmdline)"
0549   "        static function daemon(cmdline: String): Number "
0550   "            System.daemon(cmdline)"
0551   "daemon"
0552   "        static function runx(cmdline: String): Void {"
0553   "            System.runx(cmdline)"
0554   "runx"
0555   "Cmd"
0556   "block_1842_50"
0557   "    class CmdArgs {"
0558   "        public var args: Array = []"
0559   "        public var options: Object = {}"
0560   "options"
0561   "        private var ranges: Object = {}"
0562   "ranges"
0563   "[ejs::CmdArgs,private]"
0564   "        private var aliases: Object = {}"
0565   "aliases"
0566   "        private function parseTemplate(template: Object): Void {"
0567   "            for each (item in template) {"
0568   "item"
0569   "key"
0570   "                let key = item[0]"
0571   "                let range = item[1] || null"
0572   "range"
0573   "                let defaultValue = item[2]"
0574   "defaultValue"
0575   "                if (key is Array) {"
0576   "                    for each (k in key) {"
0577   "k"
0578   "                        ranges[k] = range"
0579   "                        options[k] = defaultValue"
0580   "                        if (k != key[0]) {"
0581   "                            aliases[k] = key[0]"
0582   "                } else {"
0583   "                    ranges[key] = range"
0584   "                    options[key] = defaultValue"
0585   "parseTemplate"
0586   "template"
0587   "        private function validate(): Void {"
0588   "            for (key in options) {"
0589   "-hoisted-0"
0590   "                let range = ranges[key]"
0591   "                let value = options[key]"
0592   "                if (!range) {"
0593   "                    continue"
0594   "                if (range === Number) {"
0595   "                    if (! value.match(/^\d+$/)) {"
0596   "/^\d+$/"
0597   "                       throw new ArgError("Option \"" + key + "\" must be a number")"
0598   "Option ""
0599   "" must be a number"
0600   "                } else if (range === Boolean) {"
0601   "                    if (value is Boolean) {"
0602   "                        value = value.toString()"
0603   "                    } else {"
0604   "                        value = value.toLower()"
0605   "toLower"
0606   "                    if (value != "true" && value != "false") {"
0607   "true"
0608   "false"
0609   "                       throw new ArgError("Option \"" + key + "\" must be true or false")"
0610   "" must be true or false"
0611   "                } else if (range === String) {"
0612   "                } else if (range is RegExp) {"
0613   "                    if (!value.match(range)) {"
0614   "                        throw new ArgError("Option \"" + key + "\" has bad value: \"" + value + "\"")"
0615   "" has bad value: ""
0616   "                } else if (range is Array) {"
0617   "ok"
0618   "                    let ok = false"
0619   "                    for each (v in range) {"
0620   "v"
0621   "                        if (value == v) {"
0622   "                            ok = true"
0623   "                            break"
0624   "                    if (! ok) {"
0625   "                    if (value != range) {"
0626   "validate"
0627   "        function CmdArgs(template: Object, argv: Array = App.args.slice(1)) {"
0628   "            parseTemplate(template)"
0629   "            for (i = 0; i < argv.length; i++) {"
0630   "arg"
0631   "                let arg = argv[i]"
0632   "                if (arg.startsWith("-")) {"
0633   "-"
0634   "startsWith"
0635   "                    let key = arg.slice(arg.startsWith("--") ? 2 : 1)"
0636   "--"
0637   "                    if (aliases[key]) {"
0638   "                        key = aliases[key]"
0639   "                    if (key.contains('=')) {"
0640   "="
0641   "parts"
0642   "                        let parts = key.split('=')"
0643   "                        key = parts[0]"
0644   "                        options[key] = parts[1]"
0645   "                        continue"
0646   "                    if (ranges[key] === undefined) {"
0647   "                        throw "Undefined option " + key"
0648   "Undefined option "
0649   "                    if (!ranges[key]) {"
0650   "                        options[key] = true"
0651   "                        if (++i >= argv.length) {"
0652   "                            throw "Missing option for " + key"
0653   "Missing option for "
0654   "                        }"
0655   "                        options[key] = argv[i]"
0656   "                    args.append(arg)"
0657   "            validate()"
0658   "CmdArgs"
0659   "argv"
0660   "block_1963_51"
0661   "    use default namespace public"
0662   "    function gc(): Void"
0663   "        GC.run "
0664   "gc"
0665   "    function readFile(path: String, encoding: String? = null): String"
0666   "        Path(path).readString()"
0667   "readFile"
0668   "block_2183_83"
0669   "    enumerable class Config extends Object {"
0670   "        static const Debug: Boolean"
0671   "Debug"
0672   "        shared static const CPU: String"
0673   "CPU"
0674   "        static const OS: String"
0675   "OS"
0676   "        static const Product: String"
0677   "        static const Title: String"
0678   "        static const Version: String"
0679   "        static const LibDir: String"
0680   "LibDir"
0681   "        static const BinDir: String"
0682   "BinDir"
0683   "        static const ModDir: String"
0684   "ModDir"
0685   "Config"
0686   "block_2307_84"
0687   "    final class Date {"
0688   "        native function Date(...args)"
0689   "        native function get day(): Number "
0690   "day"
0691   "        native function set day(day: Number): Void"
0692   "        native function get dayOfYear(): Number "
0693   "dayOfYear"
0694   "        native function set dayOfYear(day: Number): Void"
0695   "        native function get date(): Number "
0696   "date"
0697   "        native function set date(date: Number): Void"
0698   "        native function get elapsed(): Number"
0699   "elapsed"
0700   "        native function format(layout: String): String "
0701   "format"
0702   "layout"
0703   "        native function formatUTC(layout: String): String "
0704   "formatUTC"
0705   "        native function get fullYear(): Number "
0706   "fullYear"
0707   "        native function set fullYear(year: Number): void"
0708   "year"
0709   "        function getDate(): Number "
0710   "            date"
0711   "getDate"
0712   "        function getDay(): Number "
0713   "            day"
0714   "getDay"
0715   "        function getFullYear(): Number "
0716   "            fullYear"
0717   "getFullYear"
0718   "        function getHours(): Number "
0719   "            hours"
0720   "hours"
0721   "getHours"
0722   "        function getMilliseconds(): Number "
0723   "            milliseconds"
0724   "milliseconds"
0725   "getMilliseconds"
0726   "        function getMinutes(): Number "
0727   "            minutes"
0728   "minutes"
0729   "getMinutes"
0730   "        function getMonth(): Number "
0731   "            month"
0732   "month"
0733   "getMonth"
0734   "        function getSeconds(): Number "
0735   "            seconds"
0736   "seconds"
0737   "getSeconds"
0738   "        function getTime(): Number"
0739   "            time"
0740   "time"
0741   "getTime"
0742   "        native function getTimezoneOffset(): Number"
0743   "getTimezoneOffset"
0744   "        native function getUTCDate(): Number "
0745   "getUTCDate"
0746   "        native function getUTCDay(): Number "
0747   "getUTCDay"
0748   "        native function getUTCFullYear(): Number "
0749   "getUTCFullYear"
0750   "        native function getUTCHours(): Number "
0751   "getUTCHours"
0752   "        native function getUTCMilliseconds(): Number "
0753   "getUTCMilliseconds"
0754   "        native function getUTCMinutes(): Number "
0755   "getUTCMinutes"
0756   "        native function getUTCMonth(): Number "
0757   "getUTCMonth"
0758   "        native function getUTCSeconds(): Number "
0759   "getUTCSeconds"
0760   "        native function get hours(): Number "
0761   "        native function set hours(hour: Number): void"
0762   "hour"
0763   "        native function get milliseconds(): Number "
0764   "        native function set milliseconds(ms: Number): void"
0765   "ms"
0766   "        native function get minutes(): Number "
0767   "        native function set minutes(min: Number): void"
0768   "min"
0769   "        native function get month(): Number "
0770   "        native function set month(month: Number): void"
0771   "        function nanoAge(): Number"
0772   "            elapsed * 1000"
0773   "nanoAge"
0774   "        native function nextDay(inc: Number = 1): Date"
0775   "nextDay"
0776   "inc"
0777   "        static native function now(): Number"
0778   "now"
0779   "        static native function parseDate(dateString: String, defaultDate: Date? = null): Date"
0780   "parseDate"
0781   "dateString"
0782   "defaultDate"
0783   "        static native function parseUTCDate(dateString: String, defaultDate: Date? = null): Date"
0784   "parseUTCDate"
0785   "        static native function parse(dateString: String): Number"
0786   "parse"
0787   "        native function get seconds(): Number "
0788   "        native function set seconds(sec: Number): void"
0789   "sec"
0790   "        function setDate(d: Number): void"
0791   "            date = d"
0792   "setDate"
0793   "d"
0794   "        function setFullYear(y: Number): void {"
0795   "            year = y"
0796   "setFullYear"
0797   "y"
0798   "        function setHours(h: Number): void"
0799   "            hours = h"
0800   "setHours"
0801   "h"
0802   "        function setMilliseconds(ms: Number): void"
0803   "            milliseconds = ms"
0804   "setMilliseconds"
0805   "        function setMinutes(min: Number): void"
0806   "            minutes = min"
0807   "setMinutes"
0808   "        function setMonth(mon: Number): void"
0809   "            month = mon"
0810   "setMonth"
0811   "mon"
0812   "        function setSeconds(sec: Number, msec: Number? = null): void {"
0813   "            seconds = sec"
0814   "            if (msec != null) {"
0815   "                milliseconds = msec"
0816   "setSeconds"
0817   "msec"
0818   "        function setTime(value: Number): void"
0819   "            time = value"
0820   "setTime"
0821   "        native function setUTCDate(d: Number): void"
0822   "setUTCDate"
0823   "        native function setUTCFullYear(y: Number): void"
0824   "setUTCFullYear"
0825   "        native function setUTCHours(h: Number): void"
0826   "setUTCHours"
0827   "        native function setUTCMilliseconds(ms: Number): void"
0828   "setUTCMilliseconds"
0829   "        native function setUTCMinutes(min: Number): void"
0830   "setUTCMinutes"
0831   "        native function setUTCMonth(mon: Number): void"
0832   "setUTCMonth"
0833   "        native function setUTCSeconds(sec: Number, msec: Number? = null): void"
0834   "setUTCSeconds"
0835   "        native function get time(): Number "
0836   "        native function set time(value: Number): Void "
0837   "        function toDateString(): String "
0838   "            format("%a %b %d %Y")"
0839   "%a %b %d %Y"
0840   "toDateString"
0841   "        native override function toJSON(): String"
0842   "        native function toISOString(): String "
0843   "toISOString"
0844   "        function toLocaleDateString(): String "
0845   "            format("%a, %d %b %Y GMT%z")"
0846   "%a, %d %b %Y GMT%z"
0847   "toLocaleDateString"
0848   "        override function toLocaleString(): String"
0849   "            format("%a, %d %b %Y %T GMT%z (%Z)")"
0850   "%a, %d %b %Y %T GMT%z (%Z)"
0851   "        function toLocaleTimeString(): String "
0852   "            format("%X")"
0853   "%X"
0854   "toLocaleTimeString"
0855   "        function toTimeString(): String "
0856   "            format("%X GMT%z (%Z)")"
0857   "%X GMT%z (%Z)"
0858   "toTimeString"
0859   "        function toUTCString(): String "
0860   "            formatUTC("%a, %d %b %Y %T GMT")"
0861   "%a, %d %b %Y %T GMT"
0862   "toUTCString"
0863   "        native static function UTC(year: Number, month: Number, day: Number, hours: Number = 0, "
0864   "UTC"
0865   "        override function valueOf(): Number"
0866   "        native function get year(): Number "
0867   "        native function set year(year: Number): void"
0868   "block_2385_85"
0869   "block_3088_87"
0870   "    class Emitter {"
0871   "        private var endpoints: Object"
0872   "endpoints"
0873   "[ejs::Emitter,private]"
0874   "        function Emitter()"
0875   "            endpoints = new Object"
0876   "Emitter"
0877   "        private function addOneListener(name: String, callback: Function): Void {"
0878   "listeners"
0879   "            let listeners : Array? = endpoints[name]"
0880   "            if (listeners) {"
0881   "                for each (var e: Endpoint in listeners) {"
0882   "                    if (e.callback == callback && e.name == name) {"
0883   "                        return"
0884   "                listeners = endpoints[name] = new Array"
0885   "            if (callback) {"
0886   "                listeners.append(new Endpoint(callback, name))"
0887   "                emit("addListener", name, callback)"
0888   "emit"
0889   "addOneListener"
0890   "Endpoint"
0891   "        function addListener(name: Object, callback: Function): Void {"
0892   "            if (name is String) {"
0893   "                addOneListener(name, callback)"
0894   "            } else if (name is Array) {"
0895   "                for each (n in name) {"
0896   "n"
0897   "                    addOneListener(n, callback)"
0898   "                throw new Error("Bad name type for addListener")"
0899   "Bad name type for addListener"
0900   "        function clearListeners(name: Object? = null): Void {"
0901   "            if (name == null) {"
0902   "                endpoints = new Object"
0903   "                    listeners = endpoints[n] = new Array"
0904   "clearListeners"
0905   "        function hasListeners(): Boolean "
0906   "            endpoints.length > 0"
0907   "hasListeners"
0908   "        function listeners(name: String): Array"
0909   "            endpoints[name].clone(true)"
0910   "        function emit(name: String, ...args): Void {"
0911   "            let listeners: Array? = endpoints[name]"
0912   "                    if (name == e.name) {"
0913   "                        if (!e.active) {"
0914   "active"
0915   "                            e.active = true"
0916   "                            do {"
0917   "                                e.again = false"
0918   "again"
0919   "                                try {"
0920   "                                    e.callback.apply(null, [name] + args)"
0921   "apply"
0922   "                                } catch (e) {"
0923   "                                    App.errorStream.write("Exception in event on listener: " + name  + "\n" + e)"
0924   "Exception in event on listener: "
0925   "                            } while (e.again)"
0926   "                            e.active = false"
0927   "                        } else {"
0928   "                            e.again = true"
0929   "        private function removeOneListener(name: String, callback: Function): Void {"
0930   "            var listeners: Array? = endpoints[name]"
0931   "            for (let i in listeners) {"
0932   "                var e: Endpoint = listeners[i]"
0933   "                if (e.callback == callback && e.name == name) {"
0934   "                    emit("removeListener", name, callback)"
0935   "                    listeners.splice(i, 1)"
0936   "removeOneListener"
0937   "        function removeListener(name: Object, callback: Function): Void {"
0938   "                removeOneListener(name, callback)"
0939   "                    removeOneListener(n, callback)"
0940   "                throw new Error("Bad name type for removeListener")"
0941   "Bad name type for removeListener"
0942   "    internal class Endpoint {"
0943   "        public var callback: Function"
0944   "        public var name: String"
0945   "        public var active: Boolean"
0946   "        public var again: Boolean"
0947   "        function Endpoint(callback: Function, name: String) {"
0948   "            this.callback = callback"
0949   "            this.name = name"
0950   "block_3169_88"
0951   "    native dynamic class ArgError extends Error {"
0952   "        native function ArgError(message: String? = null) "
0953   "ArgError"
0954   "message"
0955   "Error"
0956   "code"
0957   "stack"
0958   "    native dynamic class ArithmeticError extends Error {"
0959   "        native function ArithmeticError(message: String? = null) "
0960   "ArithmeticError"
0961   "    native dynamic class AssertError extends Error {"
0962   "        native function AssertError(message: String? = null) "
0963   "AssertError"
0964   "    native dynamic class InstructionError extends Error {"
0965   "        native function InstructionError(message: String? = null) "
0966   "InstructionError"
0967   "    native dynamic class Error {"
0968   "        native var message: String"
0969   "        native function get code(): Number"
0970   "        native function set code(value: Number): Void"
0971   "        native var stack: String "
0972   "        native function Error(message: String? = null)"
0973   "    native dynamic class IOError extends Error {"
0974   "        native function IOError(message: String? = null) "
0975   "IOError"
0976   "    native dynamic class InternalError extends Error {"
0977   "        native function InternalError(message: String? = null) "
0978   "InternalError"
0979   "    native dynamic class MemoryError extends Error {"
0980   "        native function MemoryError(message: String? = null) "
0981   "MemoryError"
0982   "    native dynamic class OutOfBoundsError extends Error {"
0983   "        native function OutOfBoundsError(message: String? = null) "
0984   "OutOfBoundsError"
0985   "    native dynamic class ReferenceError extends Error {"
0986   "        native function ReferenceError(message: String? = null)"
0987   "ReferenceError"
0988   "    native dynamic class ResourceError extends Error {"
0989   "        native function ResourceError(message: String? = null) "
0990   "ResourceError"
0991   "    native dynamic class SecurityError extends Error {"
0992   "        native function SecurityError(message: String? = null) "
0993   "SecurityError"
0994   "    native dynamic class StateError extends Error {"
0995   "        native function StateError(message: String? = null) "
0996   "StateError"
0997   "    native dynamic class SyntaxError extends Error {"
0998   "        native function SyntaxError(message: String? = null) "
0999   "SyntaxError"
1000   "    native dynamic class TypeError extends Error {"
1001   "        native function TypeError(message: String? = null) "
1002   "TypeError"
1003   "    native dynamic class URIError extends Error {"
1004   "        native function URIError(message: String? = null) "
1005   "URIError"
1006   "block_3381_116"
1007   "    class Event {"
1008   "        var data: Object"
1009   "        var timestamp: Date"
1010   "timestamp"
1011   "        function Event(data: Object? = null) {"
1012   "            this.timestamp = new Date"
1013   "            this.data = data"
1014   "Event"
1015   "        override function toString(): String"
1016   "            "[Event: " +  typeOf(this) + "]""
1017   "[Event: "
1018   "]"
1019   "    class ErrorEvent extends Event {"
1020   "        var message: String"
1021   "        var filename: String"
1022   "filename"
1023   "        var lineno: String"
1024   "lineno"
1025   "        var stack: String"
1026   "ErrorEvent"
1027   "block_3687_117"
1028   "    final class File implements Stream {"
1029   "        native function File(path: Object, options: Object? = null)"
1030   "File"
1031   "        native function get canRead(): Boolean"
1032   "canRead"
1033   "        native function get canWrite(): Boolean"
1034   "canWrite"
1035   "        native function close(): void "
1036   "            return "utf-8""
1037   "        function flush(): Void {}"
1038   "        native function get isOpen(): Boolean"
1039   "isOpen"
1040   "        native function open(options: Object? = null): File"
1041   "open"
1042   "        native function get options(): Object"
1043   "        native function get path(): Path "
1044   "        native function get position(): Number"
1045   "        native function set position(loc: Number): void"
1046   "loc"
1047   "        native function readBytes(count: Number = -1): ByteArray"
1048   "readBytes"
1049   "        function remove(): Void {"
1050   "            if (isOpen) {"
1051   "                throw new IOError("File is open")"
1052   "File is open"
1053   "            Path(path).remove()"
1054   "        native function get size(): Number "
1055   "        native function truncate(value: Number): Void "
1056   "truncate"
1057   "        native function write(...items): Number"
1058   "block_3804_118"
1059   "    class FileSystem {"
1060   "        native function FileSystem(path: Object? = null)"
1061   "FileSystem"
1062   "        native function get hasDrives(): Boolean "
1063   "hasDrives"
1064   "        native function get newline(): String "
1065   "newline"
1066   "        native function set newline(terminator: String): Void"
1067   "terminator"
1068   "        native function get root(): Path"
1069   "root"
1070   "        native function get separators(): String "
1071   "separators"
1072   "        native function set separators(sep: String): Void "
1073   "block_4043_120"
1074   "    native final class Frame extends Function {"
1075   "Frame"
1076   "boundThis"
1077   "bind"
1078   "setScope"
1079   "block_4168_121"
1080   "    native class Function {"
1081   "        native function apply(thisObject: Object, args: Array): Object "
1082   "thisObject"
1083   "        native function call(thisObject: Object, ...args): Object "
1084   "        native function get boundThis(): Object"
1085   "        native function bind(thisObj: Object, overwrite: Boolean = true): Void"
1086   "overwrite"
1087   "        native function setScope(scope: Object): Void"
1088   "scope"
1089   "    native function makeGetter(fn: Function): Function"
1090   "makeGetter"
1091   "fn"
1092   "    native function clearBoundThis(fn: Function): Function"
1093   "clearBoundThis"
1094   "block_4226_122"
1095   "    class GC {"
1096   "        native static function get enabled(): Boolean"
1097   "enabled"
1098   "        native static function set enabled(on: Boolean): Void"
1099   "on"
1100   "        native static function get workQuota(): Number"
1101   "workQuota"
1102   "        native static function set workQuota(quota: Number): Void"
1103   "quota"
1104   "        native static function run(deep: Boolean = false): void"
1105   "GC"
1106   "block_4351_123"
1107   "    public var EJSCRIPT: Boolean = true"
1108   "EJSCRIPT"
1109   "    public var ECMA: Boolean = false"
1110   "ECMA"
1111   "public namespace ejs"
1112   "Namespace"
1113   "    public namespace public"
1114   "    public namespace internal"
1115   "internal"
1116   "    public namespace iterator"
1117   "    public namespace CONFIG"
1118   "CONFIG"
1119   "    use namespace iterator"
1120   "TODO"
1121   "    const TODO: Boolean = false"
1122   "    const FUTURE: Boolean = false"
1123   "FUTURE"
1124   "    const ASC: Boolean = false"
1125   "ASC"
1126   "    const DOC_ONLY: Boolean = false"
1127   "DOC_ONLY"
1128   "    const DEPRECATED: Boolean = false"
1129   "DEPRECATED"
1130   "    native const boolean: Type"
1131   "boolean"
1132   "Type"
1133   "    native const double: Type"
1134   "double"
1135   "    native const num: Type"
1136   "num"
1137   "    native const string: Type"
1138   "string"
1139   "    native const false: Boolean"
1140   "    native var global: Object"
1141   "global"
1142   "    native const null: Null"
1143   "null"
1144   "Null"
1145   "    native const Infinity: Number"
1146   "Infinity"
1147   "    native const NegativeInfinity: Number"
1148   "NegativeInfinity"
1149   "    native const NaN: Number"
1150   "NaN"
1151   "    native const true: Boolean"
1152   "    native const undefined: Void"
1153   "undefined"
1154   "    native const void: Type"
1155   "void"
1156   "    native function assert(condition: Boolean): Boolean"
1157   "assert"
1158   "condition"
1159   "    native function breakpoint(): Void"
1160   "breakpoint"
1161   "    native function cloneBase(klass: Type): Void"
1162   "cloneBase"
1163   "klass"
1164   "    native function decodeURI(str: String): String"
1165   "decodeURI"
1166   "str"
1167   "    function dump(...args): Void {"
1168   "        for each (var e: Object in args) {"
1169   "            print(serialize(e, {pretty: true}))"
1170   "pretty"
1171   "dump"
1172   "    function dumpAll(...args): Void {"
1173   "            print(serialize(e, {pretty: true, hidden: true, baseClasses: true}))"
1174   "hidden"
1175   "baseClasses"
1176   "dumpAll"
1177   "    function dumpDef(...args): Void {"
1178   "        for each (var o: Object in args) {"
1179   "o"
1180   "            for each (var key: Object in Object.getOwnPropertyNames(o)) {"
1181   "getOwnPropertyNames"
1182   "                print(key + ": " + serialize(Object.getOwnPropertyDescriptor(o, key), {pretty: true, depth: 1}))"
1183   "getOwnPropertyDescriptor"
1184   "depth"
1185   "dumpDef"
1186   "    native function encodeURI(str: String): String"
1187   "encodeURI"
1188   "    native function escape(str: String): String"
1189   "escape"
1190   "    native function md5(str: String): String"
1191   "md5"
1192   "    native function blend(dest: Object, src: Object, overwrite: Boolean = true): Object"
1193   "blend"
1194   "    native function eval(script: String, cache: String? = null): Object"
1195   "eval"
1196   "script"
1197   "    native function formatStack(): String"
1198   "formatStack"
1199   "    native function hashcode(o: Object): Number"
1200   "hashcode"
1201   "    function isNaN(arg: Number): Boolean"
1202   "        arg.isNaN"
1203   "isNaN"
1204   "    function isFinite(arg: Number): Boolean"
1205   "        arg.isFinite"
1206   "isFinite"
1207   "    native function load(file: String, cache: String? = null): Object"
1208   "load"
1209   "file"
1210   "    native function print(...args): void"
1211   "print"
1212   "    native function parse(str: String, preferredType: Type? = null): Object"
1213   "preferredType"
1214   "    function parseFloat(str: String): Number"
1215   "        parse(str, Number)"
1216   "parseFloat"
1217   "    native function parseInt(str: String, radix: Number = 10): Number"
1218   "parseInt"
1219   "radix"
1220   "    function printHash(name: String, o: Object): Void"
1221   "        print("%20s %X" % [name, hashcode(o)])"
1222   "%20s %X"
1223   "printHash"
1224   "    function instanceOf(obj: Object, target: Object): Boolean"
1225   "        obj is target"
1226   "instanceOf"
1227   "target"
1228   "    native function error(...args): void"
1229   "error"
1230   "    native function input(): String"
1231   "    native function output(...args): void"
1232   "block_4448_124"
1233   "    dynamic class Http implements Stream {"
1234   "        /** HTTP status code */     static const Continue           : Number    = 100"
1235   "Continue"
1236   "        /** HTTP status code */     static const Ok                 : Number    = 200"
1237   "Ok"
1238   "        /** HTTP status code */     static const Created            : Number    = 201"
1239   "Created"
1240   "        /** HTTP status code */     static const Accepted           : Number    = 202"
1241   "Accepted"
1242   "        /** HTTP status code */     static const NotAuthoritative   : Number    = 203"
1243   "NotAuthoritative"
1244   "        /** HTTP status code */     static const NoContent          : Number    = 204"
1245   "NoContent"
1246   "        /** HTTP status code */     static const Reset              : Number    = 205"
1247   "Reset"
1248   "        /** HTTP status code */     static const Partial            : Number    = 206"
1249   "Partial"
1250   "        /** HTTP status code */     static const MultipleChoice     : Number    = 300"
1251   "MultipleChoice"
1252   "        /** HTTP status code */     static const MovedPermanently   : Number    = 301"
1253   "MovedPermanently"
1254   "        /** HTTP status code */     static const MovedTemporarily   : Number    = 302"
1255   "MovedTemporarily"
1256   "        /** HTTP status code */     static const SeeOther           : Number    = 303"
1257   "SeeOther"
1258   "        /** HTTP status code */     static const NotModified        : Number    = 304"
1259   "NotModified"
1260   "        /** HTTP status code */     static const UseProxy           : Number    = 305"
1261   "UseProxy"
1262   "        /** HTTP status code */     static const BadRequest         : Number    = 400"
1263   "BadRequest"
1264   "        /** HTTP status code */     static const Unauthorized       : Number    = 401"
1265   "Unauthorized"
1266   "        /** HTTP status code */     static const PaymentRequired    : Number    = 402"
1267   "PaymentRequired"
1268   "        /** HTTP status code */     static const Forbidden          : Number    = 403"
1269   "Forbidden"
1270   "        /** HTTP status code */     static const NotFound           : Number    = 404"
1271   "NotFound"
1272   "        /** HTTP status code */     static const BadMethod          : Number    = 405"
1273   "BadMethod"
1274   "        /** HTTP status code */     static const NotAccepted        : Number    = 406"
1275   "NotAccepted"
1276   "        /** HTTP status code */     static const ProxyAuth          : Number    = 407"
1277   "ProxyAuth"
1278   "        /** HTTP status code */     static const ClientTimeout      : Number    = 408"
1279   "ClientTimeout"
1280   "        /** HTTP status code */     static const Conflict           : Number    = 409"
1281   "Conflict"
1282   "        /** HTTP status code */     static const Gone               : Number    = 410"
1283   "Gone"
1284   "        /** HTTP status code */     static const LengthRequired     : Number    = 411"
1285   "LengthRequired"
1286   "        /** HTTP status code */     static const PrecondFailed      : Number    = 412"
1287   "PrecondFailed"
1288   "        /** HTTP status code */     static const EntityTooLarge     : Number    = 413"
1289   "EntityTooLarge"
1290   "        /** HTTP status code */     static const ReqTooLong         : Number    = 414"
1291   "ReqTooLong"
1292   "        /** HTTP status code */     static const UnsupportedType    : Number    = 415"
1293   "UnsupportedType"
1294   "        /** HTTP status code */     static const ServerError        : Number    = 500"
1295   "ServerError"
1296   "        /** HTTP status code */     static const NotImplemented     : Number    = 501"
1297   "NotImplemented"
1298   "        /** HTTP status code */     static const BadGateway         : Number    = 502"
1299   "BadGateway"
1300   "        /** HTTP status code */     static const Unavailable        : Number    = 503"
1301   "Unavailable"
1302   "        /** HTTP status code */     static const GatewayTimeout     : Number    = 504"
1303   "GatewayTimeout"
1304   "        /** HTTP status code */     static const Version            : Number    = 505"
1305   "        private var _response: String"
1306   "_response"
1307   "[ejs::Http,private]"
1308   "        native function Http(uri: Uri? = null)"
1309   "Http"
1310   "uri"
1311   "Uri"
1312   "        native function get chunkSize(): Boolean"
1313   "chunkSize"
1314   "        native function set chunkSize(value: Boolean): Void"
1315   "        native function close(): Void "
1316   "        native function connect(uri: Uri? = null, ...data): Void"
1317   "connect"
1318   "        native function get certificate(): Path"
1319   "certificate"
1320   "        native function set certificate(certFile: Path): Void"
1321   "certFile"
1322   "        native function get contentLength(): Number"
1323   "contentLength"
1324   "        native function get contentType(): String"
1325   "contentType"
1326   "        native function get date(): Date"
1327   "        native function del(uri: Uri? = null, ...data): Void"
1328   "del"
1329   "        function get encoding(): String"
1330   "        native function get expires(): Date"
1331   "expires"
1332   "        native function finalize(): Void "
1333   "finalize"
1334   "        native function get followRedirects(): Boolean"
1335   "followRedirects"
1336   "        native function set followRedirects(flag: Boolean): Void"
1337   "flag"
1338   "        native function form(uri: Uri, postData: Object): Void"
1339   "form"
1340   "postData"
1341   "        native function get(uri: Uri? = null, ...data): Void"
1342   "        native function getRequestHeaders(): Object"
1343   "getRequestHeaders"
1344   "        native function head(uri: Uri? = null): Void"
1345   "head"
1346   "        native function header(key: String): String"
1347   "header"
1348   "        native function get headers(): Object"
1349   "headers"
1350   "        native function get isSecure(): Boolean"
1351   "isSecure"
1352   "        native function get key(): Path"
1353   "        native function set key(keyFile: Path): Void"
1354   "keyFile"
1355   "        native function get lastModified(): Date"
1356   "lastModified"
1357   "        native function get method(): String"
1358   "method"
1359   "        native function set method(name: String)"
1360   "        native function options(uri: Uri? = null): Void"
1361   "        native function post(uri: Uri, ...data): Void"
1362   "post"
1363   "        native function put(uri: Uri, ...data): Void"
1364   "put"
1365   "        function readLines(count: Number = -1): Array {"
1366   "            let stream: TextStream = TextStream(this)"
1367   "            result = stream.readLines()"
1368   "readLines"
1369   "        function readXml(): XML"
1370   "            XML(response)"
1371   "response"
1372   "readXml"
1373   "        native function get response(): String"
1374   "        native function get retries(): Number"
1375   "retries"
1376   "        native function set retries(count: Number): Void"
1377   "        native function setCredentials(username: String, password: String): Void"
1378   "setCredentials"
1379   "username"
1380   "password"
1381   "        native function setHeader(key: String, value: String, overwrite: Boolean = true): Void"
1382   "setHeader"
1383   "        native function setHeaders(headers: Object, overwrite: Boolean = true): Void"
1384   "setHeaders"
1385   "        native function get status(): Number"
1386   "        native function get statusMessage(): String"
1387   "statusMessage"
1388   "        function get success(): Boolean"
1389   "            200 <= status && status < 300"
1390   "success"
1391   "        native function get timeout(): Number"
1392   "        native function set timeout(timeout: Number): Void"
1393   "        native function trace(uri: Uri? = null): Void"
1394   "trace"
1395   "        function upload(uri: String, files: Object, fields: Object? = null): Void {"
1396   "boundary"
1397   "            let boundary = "<<Upload Boundary>>""
1398   "<<Upload Boundary>>"
1399   "            let buf = new ByteArray(4096)"
1400   "            let http = this"
1401   "http"
1402   "            buf.addListener("readable", function (event, buf) {"
1403   "                http.write(buf)"
1404   "                buf.flush()"
1405   "--fun_6988--89941657--"
1406   "            setHeader("Content-Type", "multipart/form-data; boundary=" + boundary)"
1407   "Content-Type"
1408   "multipart/form-data; boundary="
1409   "            post(uri)"
1410   "            if (fields) {"
1411   "                for (key in fields) {"
1412   "-hoisted-7"
1413   "                    buf.write('--' + boundary + "\r\n")"
1414   "
"
1415   "                    buf.write('Content-Disposition: form-data; name=' + Uri.encode(key) + "\r\n")"
1416   "Content-Disposition: form-data; name="
1417   "encode"
1418   "                    buf.write('Content-Type: application/x-www-form-urlencoded\r\n\r\n')"
1419   "Content-Type: application/x-www-form-urlencoded

"
1420   "                    buf.write(Uri.encode(fields[key]) + "\r\n")"
1421   "            for (key in files) {"
1422   "-hoisted-8"
1423   "                file = files[key]"
1424   "                buf.write('--' + boundary + "\r\n")"
1425   "                buf.write('Content-Disposition: form-data; name=' + key + '; filename=' + Path(file).basename + "\r\n")"
1426   "; filename="
1427   "basename"
1428   "                buf.write('Content-Type: ' + Uri(file).mimeType + "\r\n\r\n")"
1429   "Content-Type: "
1430   "mimeType"
1431   "

"
1432   "                f = File(file).open()"
1433   "f"
1434   "                data = new ByteArray"
1435   "                while (f.read(data)) {"
1436   "                    buf.write(data)"
1437   "                f.close()"
1438   "                buf.write("\r\n")"
1439   "            buf.write('--' + boundary + "--\r\n\r\n")"
1440   "--

"
1441   "            http.finalize()"
1442   "            http.wait()"
1443   "wait"
1444   "upload"
1445   "files"
1446   "fields"
1447   "        native function get uri(): Uri"
1448   "        native function set uri(newUri: Uri): Void"
1449   "newUri"
1450   "        native function wait(timeout: Number = -1): Boolean"
1451   "        native function write(...data): Void"
1452   "        function addHeader(key: String, value: String, overwrite: Boolean = true): Void"
1453   "            setHeader(key, value, overwrite)"
1454   "addHeader"
1455   "        function get bodyLength(): Void"
1456   "            contentLength"
1457   "bodyLength"
1458   "        function set bodyLength(value: Number): Void {"
1459   "            setHeader("content-length", value)"
1460   "content-length"
1461   "        function get code(): Number"
1462   "            status"
1463   "        function get codeString(): String"
1464   "            statusMessage"
1465   "codeString"
1466   "        function get contentEncoding(): String"
1467   "            header("content-encoding")"
1468   "content-encoding"
1469   "contentEncoding"
1470   "        static function mimeType(ext: String): String"
1471   "            Uri(ext)..mimeType"
1472   ".mimeType"
1473   "ext"
1474   "Http-initializer"
1475   "block_4868_129"
1476   "    iterator interface Iterable {"
1477   "Iterable"
1478   "    iterator native final class Iterator {"
1479   "        native function next(): Object"
1480   "next"
1481   "    iterator native final class StopIteration {}"
1482   "block_5514_134"
1483   "    final class JSON {"
1484   "        static function parse(data: String, filter: Function? = null): Object"
1485   "            deserialize(data, { filter: filter })"
1486   "        static function stringify(obj: Object, replacer: Object? = null, indent: Object? = null): String"
1487   "            serialize(obj, {replacer: replacer, indent: indent})"
1488   "replacer"
1489   "indent"
1490   "stringify"
1491   "JSON"
1492   "    native function deserialize(str: String): Object"
1493   "deserialize"
1494   "    native function serialize(obj: Object, options: Object? = null): String"
1495   "serialize"
1496   "block_5611_135"
1497   "    class Locale {"
1498   "        static const textEncoding = "utf-8""
1499   "textEncoding"
1500   "        function Locale(language: String, country: String, variant: String) {}"
1501   "Locale"
1502   "language"
1503   "country"
1504   "variant"
1505   "Locale-initializer"
1506   "block_5748_136"
1507   "    class Logger implements Stream {"
1508   "        static const Off: Number = -1 "
1509   "Off"
1510   "        static const Error: Number = 0"
1511   "        static const Warn: Number = 1"
1512   "Warn"
1513   "        static const Info: Number = 2"
1514   "Info"
1515   "        static const Config: Number = 3"
1516   "        static const All: Number = 9"
1517   "All"
1518   "        private var _filter: Function"
1519   "_filter"
1520   "[ejs::Logger,private]"
1521   "        private var _level: Number = 0"
1522   "_level"
1523   "        private var _pattern: RegExp"
1524   "_pattern"
1525   "RegExp"
1526   "        private var _name: String"
1527   "_name"
1528   "        private var _outstream: Stream"
1529   "_outstream"
1530   "        private var _parent: Logger"
1531   "_parent"
1532   "        function Logger(name: String, output = null, level: Number? = 0) {"
1533   "            _name = name"
1534   "            if (output && output is Logger) {"
1535   "                _level = output.level"
1536   "                _parent = output"
1537   "                if (output == "stdout") {"
1538   "                    _outstream = App.outputStream"
1539   "                } else if (output == "stderr") {"
1540   "                    _outstream = App.errorStream"
1541   "                    _outstream = output || App.errorStream"
1542   "                _level = level"
1543   "        function addListener(name, listener: Function): Void {"
1544   "            throw "addListener is not supported""
1545   "addListener is not supported"
1546   "        function get async(): Boolean"
1547   "            false"
1548   "        function set async(enable: Boolean): Void {"
1549   "            if (enable) {"
1550   "                throw "Async mode not supported""
1551   "Async mode not supported"
1552   "        function close(): Void {"
1553   "            _outstream = null"
1554   "        function get filter(): Function"
1555   "            _filter"
1556   "        function set filter(fn: Function): void {"
1557   "            _filter = fn"
1558   "        function get level(): Number"
1559   "            _level"
1560   "        function set level(level: Number): void {"
1561   "            _level = level"
1562   "        function get match(): RegExp"
1563   "            _pattern"
1564   "        function set match(pattern: RegExp): void {"
1565   "            _pattern = pattern"
1566   "pattern"
1567   "        function get name(): String"
1568   "            _name"
1569   "        function set name(name: String): void {"
1570   "        function get outstream(): Stream"
1571   "            _outstream"
1572   "outstream"
1573   "        function set outstream(stream: Stream): void {"
1574   "            _outstream = outstream"
1575   "        function get parent(): Logger"
1576   "            _parent"
1577   "parent"
1578   "        function set parent(parent: Logger): void {"
1579   "            _parent = parent"
1580   "        function debug(level: Number, ...msgs): void "
1581   "            emit(this, level, "", "", msgs.join(" ") + "\n")"
1582   " "
1583   "debug"
1584   "msgs"
1585   "        function config(...msgs): void"
1586   "            emit(this, Config, "", "CONFIG", msgs.join(" ") + "\n")"
1587   "        function error(...msgs): void"
1588   "            emit(this, Error, "", "ERROR", msgs.join(" ") + "\n")"
1589   "ERROR"
1590   "        function info(...msgs): void"
1591   "            emit(this, Info, "", "INFO", msgs.join(" ") + "\n")"
1592   "INFO"
1593   "info"
1594   "        function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number  {"
1595   "            throw "Read not supported""
1596   "Read not supported"
1597   "            return null"
1598   "        function removeListener(name, listener: Function): Void {"
1599   "        function write(...data): Number"
1600   "            info(data)"
1601   "        function warn(...msgs): void"
1602   "            emit(this, Warn, "", "WARN", msgs.join(" ") + "\n")"
1603   "WARN"
1604   "warn"
1605   "        private function emit(log: Logger, level: Number, name: String, kind: String, msg: String): Void {"
1606   "            if (level > _level || !_outstream)"
1607   "                return"
1608   "            if (name)"
1609   "                name = _name + "." + name"
1610   "."
1611   "            else name = _name"
1612   "            if (_pattern && !name.match(_pattern))"
1613   "            if (_filter && !filter.call(this, log, level, msg))"
1614   "            if (_parent) {"
1615   "                _parent.emit(log, level, name, kind, msg)"
1616   "                if (kind)"
1617   "                    _outstream.write(name + ": " + kind + ": " + msg)"
1618   "                else _outstream.write(name + ": " + msg)"
1619   "kind"
1620   "msg"
1621   "Logger-initializer"
1622   "block_5828_137"
1623   "    class Math extends Object {"
1624   "        static const E: Number = 2.7182818284590452354"
1625   "E"
1626   "        static const LN2: Number = 0.6931471805599453"
1627   "LN2"
1628   "        static const LN10: Number = 2.302585092994046"
1629   "LN10"
1630   "        static const LOG2E: Number = 1.4426950408889634"
1631   "LOG2E"
1632   "        static const LOG10E: Number = 0.4342944819032518"
1633   "LOG10E"
1634   "        static const PI: Number = 3.1415926535897932"
1635   "PI"
1636   "        static const SQRT1_2: Number = 0.7071067811865476"
1637   "SQRT1_2"
1638   "        static const SQRT2: Number = 1.4142135623730951"
1639   "SQRT2"
1640   "        native static function abs(value: Number): Number "
1641   "abs"
1642   "        native static function acos(angle: Number): Number "
1643   "acos"
1644   "angle"
1645   "        native static function asin(oper: Number): Number "
1646   "asin"
1647   "oper"
1648   "        native static function atan(oper: Number): Number "
1649   "atan"
1650   "        native static function atan2(y: Number, x: Number): Number "
1651   "atan2"
1652   "x"
1653   "        native static function ceil(oper: Number): Number"
1654   "ceil"
1655   "        native static function cos(angle: Number): Number "
1656   "cos"
1657   "        native static function exp(power: Number): Number "
1658   "exp"
1659   "power"
1660   "        native static function floor(oper: Number): Number"
1661   "floor"
1662   "        native static function log10(oper: Number): Number "
1663   "log10"
1664   "        native static function log(oper: Number): Number "
1665   "        native static function max(x: Number, y: Number): Number"
1666   "max"
1667   "        native static function min(x: Number, y: Number): Number"
1668   "        native static function pow(num: Number, pow: Number): Number"
1669   "pow"
1670   "        native static function random(): Number "
1671   "random"
1672   "        native static function round(num: Number): Number"
1673   "round"
1674   "        native static function sin(angle: Number): Number "
1675   "sin"
1676   "        native static function sqrt(oper: Number): Number "
1677   "sqrt"
1678   "        native static function tan(angle: Number): Number "
1679   "tan"
1680   "Math"
1681   "Math-initializer"
1682   "block_6154_146"
1683   "    class Memory {"
1684   "        native static function get allocated(): Number"
1685   "allocated"
1686   "        native static function set callback(fn: Function): Void"
1687   "        native static function get callback(): Void"
1688   "        native static function get maximum(): Number"
1689   "maximum"
1690   "        native static function set maximum(value: Number): Void"
1691   "        native static function get peak(): Number"
1692   "peak"
1693   "        native static function get redline(): Number"
1694   "redline"
1695   "        native static function set redline(value: Number): Void"
1696   "        native static function get resident(): Number"
1697   "resident"
1698   "        native static function get stack(): Number"
1699   "        native static function get system(): Number"
1700   "system"
1701   "        native static function stats(): void"
1702   "stats"
1703   "Memory"
1704   "block_6393_147"
1705   "block_6537_148"
1706   "    native final class Namespace {"
1707   "block_6605_149"
1708   "    native final class Null {"
1709   "block_6665_150"
1710   "    native final class Number {"
1711   "        native function Number(value: Object? = null)"
1712   "        static var /* const */ MAX_VALUE: Number = MaxValue"
1713   "MAX_VALUE"
1714   "MaxValue"
1715   "        static var /* const */ MIN_VALUE: Number = MinValue"
1716   "MIN_VALUE"
1717   "MinValue"
1718   "        static var /* const */ NaN : Number = NaN"
1719   "        static var /* const */ NEGATIVE_INFINITY: Number = NegativeInfinity"
1720   "NEGATIVE_INFINITY"
1721   "        static var /* const */ POSITIVE_INFINITY: Number = Infinity"
1722   "POSITIVE_INFINITY"
1723   "        native static const MaxValue: Number"
1724   "        native static const MinValue: Number"
1725   "        function get abs(): Number"
1726   "            Math.abs(this)"
1727   "        function get ceil(): Number "
1728   "            Math.ceil(this)"
1729   "        function get floor(): Number"
1730   "            Math.floor(this)"
1731   "        native function get isFinite(): Boolean"
1732   "        native function get isNaN(): Boolean"
1733   "        function get round(): Number"
1734   "            Math.round(this)"
1735   "        native function toExponential(fractionDigits: Number = 0): String"
1736   "toExponential"
1737   "fractionDigits"
1738   "        native function toFixed(fractionDigits: Number = 0): String"
1739   "toFixed"
1740   "        native function toPrecision(numDigits: Number = MAX_VALUE): String"
1741   "toPrecision"
1742   "numDigits"
1743   "        function get byte(): Number"
1744   "            integral(8)"
1745   "integral"
1746   "byte"
1747   "        native function integral(size: Number = 32): Number"
1748   "        function max(...other): Number {"
1749   "            let result = this"
1750   "            for each (n in other) {"
1751   "                n = n cast Number"
1752   "                if (n > result) {"
1753   "                    result = n"
1754   "other"
1755   "        function min(...other): Number {"
1756   "                if (n < result) {"
1757   "        function power(nth: Number): Number"
1758   "            Math.pow(this, nth)"
1759   "nth"
1760   "        override native function toString(radix: Number = 10): String"
1761   "Number-initializer"
1762   "block_6739_151"
1763   "    dynamic native class Object implements Iterable {"
1764   "shared native function get constructor(): Function"
1765   "shared ejs static native function get length(): Number"
1766   "shared static native function get prototype(): Object"
1767   "        native function clone(deep: Boolean = true) : Object"
1768   "        static native function create(prototype, props: Object = undefined): Object "
1769   "create"
1770   "props"
1771   "        static native function defineProperty(obj: Object, name: String, options: Object): Void"
1772   "defineProperty"
1773   "        static function defineProperties(obj: Object, properties: Object): Void {"
1774   "            for (p in properties) {"
1775   "p"
1776   "                defineProperty(obj, p, properties[p])"
1777   "defineProperties"
1778   "properties"
1779   "        static native function freeze(obj: Object): Void"
1780   "freeze"
1781   "        iterator native function get(options: Object? = null): Iterator"
1782   "        static native function getOwnPropertyDescriptor(obj: Object, prop: String): Object"
1783   "prop"
1784   "        static native function getOwnPropertyNames(obj: Object): Array"
1785   "        static native function getOwnPrototypeOf(obj: Object): Type"
1786   "getOwnPrototypeOf"
1787   "        iterator native function getValues(): Iterator"
1788   "        native function hasOwnProperty(name: String): Boolean"
1789   "        static native function isExtensible(obj: Object): Boolean"
1790   "isExtensible"
1791   "        static native function isFrozen(obj: Object): Boolean"
1792   "isFrozen"
1793   "        native function isPrototypeOf(obj: Object): Boolean"
1794   "        static native function isSealed(obj: Object): Boolean"
1795   "isSealed"
1796   "        static function keys(obj: Object): Array {"
1797   "            let result = []"
1798   "            for (key in obj) {"
1799   "                result.append(key)"
1800   "keys"
1801   "        static native function preventExtensions(obj: Object): Object"
1802   "preventExtensions"
1803   "        native function propertyIsEnumerable(property: String): Boolean"
1804   "property"
1805   "        static native function seal(obj: Object): Void"
1806   "seal"
1807   "        native function toJSON(): String"
1808   "        native function toLocaleString(): String"
1809   "        native function toString(): String"
1810   "        function valueOf(): String"
1811   "            this"
1812   "block_7001_156"
1813   "    final class Path {"
1814   "        native function Path(path: String)"
1815   "        native function get absolute(): Path"
1816   "absolute"
1817   "        native function get accessed(): Date "
1818   "accessed"
1819   "        native function get basename(): Path"
1820   "        native function get components(): Array"
1821   "components"
1822   "        function contains(pattern: String): Boolean"
1823   "            name.contains(pattern)"
1824   "        native function copy(target: Object, options: Object? = null): Void"
1825   "copy"
1826   "        native function get created(): Date "
1827   "created"
1828   "        native function get dirname(): Path"
1829   "dirname"
1830   "        function endsWith(suffix: String): Boolean"
1831   "            name.endsWith(suffix)"
1832   "endsWith"
1833   "suffix"
1834   "        native function get exists(): Boolean "
1835   "        native function get extension(): String "
1836   "extension"
1837   "        function find(glob: String = "*", recurse: Boolean = true): Array {"
1838   "*"
1839   "            function recursiveFind(path: Path, pattern: RegExp, recurse: Boolean): Array {"
1840   "                let result: Array = []"
1841   "                if (path.isDir) {"
1842   "isDir"
1843   "                    for each (f in path.files(true)) {"
1844   "                        if (recurse) {"
1845   "got"
1846   "                            let got: Array = recursiveFind(f, pattern, recurse)"
1847   "                            for each (i in got) {"
1848   "                                result.append(i)"
1849   "                            if (f.basename.toString().match(pattern)) {"
1850   "                                result.append(f)"
1851   "                if (path.basename.toString().match(pattern)) {"
1852   "                    result.append(path)"
1853   "                return result"
1854   "recursiveFind"
1855   "recurse"
1856   "            pattern = RegExp("^" + glob.replace(/\./g, "\\.").replace(/\*/g, ".*") + "$")"
1857   "^"
1858   "/\./g"
1859   "\."
1860   "/\*/g"
1861   ".*"
1862   "$"
1863   "            return recursiveFind(this, pattern, recurse)"
1864   "glob"
1865   "        native function files(enumDirs: Boolean = false): Array "
1866   "enumDirs"
1867   "        native function get hasDrive(): Boolean "
1868   "hasDrive"
1869   "        native function get isAbsolute(): Boolean"
1870   "isAbsolute"
1871   "        native function get isDir(): Boolean"
1872   "        native function get isLink(): Boolean"
1873   "isLink"
1874   "        native function get isRegular(): Boolean"
1875   "isRegular"
1876   "        native function get isRelative(): Boolean"
1877   "isRelative"
1878   "        native function join(...other): Path"
1879   "        native function joinExt(ext: String): Path"
1880   "joinExt"
1881   "        native function get length(): Number "
1882   "        native function get linkTarget(): Path"
1883   "linkTarget"
1884   "        native function makeDir(options: Object? = null): Void"
1885   "makeDir"
1886   "        native function makeLink(target: Path, hard: Boolean = false): Void"
1887   "makeLink"
1888   "hard"
1889   "        native function makeTemp(): Path"
1890   "makeTemp"
1891   "        native function map(separator: String): Path"
1892   "separator"
1893   "        native function mimeType(): String"
1894   "        native function get modified(): Date "
1895   "modified"
1896   "        native function get name(): String "
1897   "        native function get natural(): Path "
1898   "natural"
1899   "        native function get normalize(): Path"
1900   "normalize"
1901   "        function open(options: Object? = null): File"
1902   "            new File(this, options)"
1903   "        function openTextStream(options: Object? = null): TextStream"
1904   "            new TextStream(open(options))"
1905   "openTextStream"
1906   "        function openBinaryStream(options: Object? = null): BinaryStream"
1907   "            new BinaryStream(open(options))"
1908   "openBinaryStream"
1909   "        native function get parent(): Path"
1910   "        native function get perms(): Number"
1911   "perms"
1912   "        native function set perms(perms: Number): Void"
1913   "        native function get portable(): Path "
1914   "portable"
1915   "        function readBytes(): ByteArray {"
1916   "            let file: File = File(this).open()"
1917   "            result = file.readBytes()"
1918   "            file.close()"
1919   "        function readLines(): Array {"
1920   "            let stream: TextStream = TextStream(open(this))"
1921   "            stream.close()"
1922   "        function readString(): String {"
1923   "            let file: File = open(this)"
1924   "            result = file.readString()"
1925   "            let data = file.readString()"
1926   "            if (data == null) {"
1927   "                return null"
1928   "        native function get relative(): Path"
1929   "relative"
1930   "        native function remove(): Void "
1931   "        function removeAll(): Void {"
1932   "            for each (f in find('*')) {"
1933   "                f.remove()"
1934   "            remove()"
1935   "removeAll"
1936   "        native function rename(target: Object): Void"
1937   "rename"
1938   "        function replaceExt(ext: String): Path"
1939   "            this.trimExt().joinExt(ext)"
1940   "trimExt"
1941   "replaceExt"
1942   "        native function resolve(...otherPaths): Path"
1943   "resolve"
1944   "otherPaths"
1945   "        native function same(other: Object): Boolean"
1946   "same"
1947   "        native function get separator(): String"
1948   "        function startsWith(prefix: String): Boolean"
1949   "            this.toString().startsWith(prefix)"
1950   "prefix"
1951   "        function toLower(): Path"
1952   "            new Path(name.toString().toLower())"
1953   "        native override function toString(): String"
1954   "        function trimEnd(pat: String): Path {"
1955   "            if (name.endsWith(pat)) {"
1956   "                loc = name.lastIndexOf(pat)"
1957   "                if (loc >= 0) {"
1958   "                    return new Path(name.slice(0, loc))"
1959   "            return this"
1960   "trimEnd"
1961   "pat"
1962   "        native function trimExt(): Path"
1963   "        function trimStart(pat: String): Path {"
1964   "            if (name.startsWith(pat)) {"
1965   "                return new Path(name.slice(pat.length))"
1966   "trimStart"
1967   "        native function truncate(size: Number): Void"
1968   "        function write(...args): Void {"
1969   "            var file: File = new File(this, { mode: "w", permissions: 0644 })"
1970   "mode"
1971   "permissions"
1972   "            try {"
1973   "                for each (item in args) {"
1974   "                    if (item is String) {"
1975   "                        file.write(item)"
1976   "                        file.write(serialize(item))"
1977   "            catch (es) {"
1978   "es"
1979   "                throw new IOError("Can't write to file")"
1980   "Can't write to file"
1981   "            finally {"
1982   "                file.close()"
1983   "block_7308_159"
1984   "    dynamic class Promise extends Emitter {"
1985   "        private var timer: Timer"
1986   "timer"
1987   "[ejs::Promise,private]"
1988   "Timer"
1989   "        private var fired: Boolean"
1990   "fired"
1991   "        function addCallback(listener: Function): Promise {"
1992   "            addListener("success", listener)"
1993   "addCallback"
1994   "Promise"
1995   "        function addCancelback(listener: Function): Promise {"
1996   "            addListener("cancel", listener)"
1997   "cancel"
1998   "addCancelback"
1999   "        function addErrback(listener: Function): Promise {"
2000   "            addListener("error", listener)"
2001   "addErrback"
2002   "        function emitSuccess(...args): Void {"
2003   "            if (fired) {"
2004   "            fired = true"
2005   "                issue("success", args)"
2006   "issue"
2007   "            } catch (e) {"
2008   "                p("CATCH", e)"
2009   "CATCH"
2010   "                emitError(e)"
2011   "emitError"
2012   "emitSuccess"
2013   "        function emitError(...args): Void {"
2014   "                issue("error", args)"
2015   "                p("EmitError CATCH", e)"
2016   "EmitError CATCH"
2017   "        function emitCancel(...args): Void {"
2018   "            issue("cancel", args)"
2019   "emitCancel"
2020   "        function cancel(...args): Void {"
2021   "            cancel = true"
2022   "            if (timer) {"
2023   "                timer.stop()"
2024   "stop"
2025   "            clearListeners(["success", "error"])"
2026   "        function then(success: Function, error: Function? = null, progress: Function? = null): Promise {"
2027   "            addListener("success", success)"
2028   "            if (error) {"
2029   "                addListener("error", error)"
2030   "            if (progress) {"
2031   "                addListener("progress", progress)"
2032   "progress"
2033   "then"
2034   "        function timeout(msec: Number): Promise {"
2035   "done"
2036   "            let done"
2037   "            function awake(arg) {"
2038   "                done = true"
2039   "                if (timer) {"
2040   "                    timer.stop()"
2041   "awake"
2042   "            addListener("success", awake)"
2043   "            addListener("error", awake)"
2044   "            addListener("cancel", awake)"
2045   "            timer = new Timer(msec, function() {"
2046   "                if (fired || done) {"
2047   "                    return;"
2048   "                timer = null"
2049   "                issue("timeout")"
2050   "                issue("error", ["timeout"])"
2051   "--fun_10640--89941602--"
2052   "        function wait(timeout: Number = -1): Object {"
2053   "            let done = false"
2054   "            let result"
2055   "            function awake(...args) {"
2056   "                result = args.slice(1)"
2057   "            new Timer(timeout, awake)"
2058   "            while (!done && !fired) {"
2059   "                App.serviceEvents(timeout, true)"
2060   "        private function issue(name: String, args: Array? = null): Void {"
2061   "            if (args) {"
2062   "                emit.apply(null, [name] + args)"
2063   "                emit(name)"
2064   "block_7945_178"
2065   "    final class Reflect {"
2066   "        native private var obj: Object"
2067   "[ejs::Reflect,private]"
2068   "        native function Reflect(o: Object)"
2069   "Reflect"
2070   "        native function get base(): Type"
2071   "base"
2072   "        native function get isType(): Boolean"
2073   "isType"
2074   "        native function get type(): Type"
2075   "type"
2076   "        native function get name(): String"
2077   "    native function typeOf(o): String"
2078   "typeOf"
2079   "block_8183_195"
2080   "    native final class RegExp {"
2081   "        native function RegExp(pattern: String, flags: String? = null)"
2082   "flags"
2083   "        shared native function get lastIndex(): Number"
2084   "lastIndex"
2085   "        native function set lastIndex(value: Number): Void"
2086   "        native function exec(str: String, start: Number = 0): Array"
2087   "exec"
2088   "        shared native function get global(): Boolean"
2089   "        shared native function get ignoreCase(): Boolean"
2090   "ignoreCase"
2091   "        shared native function get multiline(): Boolean"
2092   "multiline"
2093   "        shared native function get source(): String"
2094   "source"
2095   "        native function get matched(): String"
2096   "matched"
2097   "        function replace(str: String, replacement: Object): String"
2098   "            str.replace(this, replacement)"
2099   "replacement"
2100   "        function split(target: String): Array"
2101   "            target.split(this)"
2102   "        native function get start(): Number"
2103   "        shared native function get sticky(): Boolean"
2104   "sticky"
2105   "        native function test(str: String): Boolean"
2106   "test"
2107   "        override native function toString(): String"
2108   "block_8351_196"
2109   "    class Socket implements Stream {"
2110   "        native function Socket()"
2111   "Socket"
2112   "        native function accept(): Socket"
2113   "accept"
2114   "        native function get address(): String "
2115   "address"
2116   "        native function connect(address: Object): Void"
2117   "        native function listen(address): Socket"
2118   "listen"
2119   "        native function get port(): Number "
2120   "port"
2121   "        native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Object "
2122   "        native function get remoteAddress(): String "
2123   "remoteAddress"
2124   "        native function write(data: Object): Object"
2125   "block_8557_197"
2126   "    interface Stream {"
2127   "block_8736_198"
2128   "    native final class String {"
2129   "        native function String(...str)"
2130   "        native function caseCompare(compare: String): Number"
2131   "caseCompare"
2132   "        native function caselessCompare(compare: String): Number"
2133   "caselessCompare"
2134   "        native function charAt(index: Number): String"
2135   "charAt"
2136   "index"
2137   "        native function charCodeAt(index: Number = 0): Number"
2138   "charCodeAt"
2139   "        native function concat(...args): String"
2140   "        native function contains(pattern: Object): Boolean"
2141   "        native function endsWith(test: String): Boolean"
2142   "        native function format(...args): String"
2143   "        native static function fromCharCode(...codes): String"
2144   "fromCharCode"
2145   "codes"
2146   "        native function indexOf(pattern: String, startIndex: Number = 0): Number"
2147   "        native function get isDigit(): Boolean"
2148   "isDigit"
2149   "        native function get isAlpha(): Boolean"
2150   "isAlpha"
2151   "        native function get isAlphaNum(): Boolean"
2152   "isAlphaNum"
2153   "        native function get isLower(): Boolean"
2154   "isLower"
2155   "        native function get isSpace(): Boolean"
2156   "isSpace"
2157   "        native function get isUpper(): Boolean"
2158   "isUpper"
2159   "        native function lastIndexOf(pattern: String, location: Number = -1): Number"
2160   "location"
2161   "        native function match(pattern: RegExp): Array"
2162   "        function parseJSON(filter: Function? = null): Object"
2163   "            deserialize(this)"
2164   "parseJSON"
2165   "        native function toCamel(): String"
2166   "toCamel"
2167   "        native function toPascal(): String"
2168   "toPascal"
2169   "        native function printable(): String"
2170   "printable"
2171   "        native function quote(): String"
2172   "quote"
2173   "        native function remove(start: Number, end: Number = -1): String"
2174   "        native function replace(pattern: Object, replacement: String): String"
2175   "        native function reverse(): String"
2176   "        native function search(pattern: Object): Number"
2177   "        native function slice(start: Number, end: Number = -1, step: Number = 1): String"
2178   "        native function split(delimiter: Object, limit: Number = -1): Array"
2179   "delimiter"
2180   "limit"
2181   "        native function startsWith(test: String): Boolean"
2182   "        native function substring(startIndex: Number, end: Number = -1): String"
2183   "substring"
2184   "        function times(times: Number): String {"
2185   "            var s: String = """
2186   "            for (i in times) {"
2187   "                s += this"
2188   "            return s"
2189   "times"
2190   "        native function tokenize(format: String): Array"
2191   "tokenize"
2192   "        override native function toJSON(): String"
2193   "        native function toLower(): String"
2194   "        native function toUpper(): String"
2195   "toUpper"
2196   "        native function trim(str: String? = null): String"
2197   "        native function trimStart(str: String? = null): String"
2198   "        native function trimEnd(str: String? = null): String"
2199   "        function - (str: String): String {"
2200   "            var i: Number = indexOf(str)"
2201   "            return remove(i, i + str.length)"
2202   "        function % (arg: Object): String {"
2203   "            return format(arg)"
2204   "%"
2205   "block_8881_199"
2206   "    class System {"
2207   "        public static const Bufsize: Number = 1024"
2208   "Bufsize"
2209   "        native static function get hostname(): String"
2210   "hostname"
2211   "        native static function get ipaddr(): String"
2212   "ipaddr"
2213   "        native static function run(cmd: String): String"
2214   "cmd"
2215   "        native static function runx(cmd: String): Void"
2216   "        native static function daemon(cmd: String): Number"
2217   "        static function sh(args): String {"
2218   "            return System.run("/bin/sh -c \"" + args + "\"").trim('\n')"
2219   "        static function cmd(args): String"
2220   "            sh(args)"
2221   "        native static function exec(args): String"
2222   "System"
2223   "System-initializer"
2224   "block_9411_204"
2225   "    class TextStream implements Stream {"
2226   "        private var newline: String"
2227   "[ejs::TextStream,private]"
2228   "        private var format: String = Locale.textEncoding"
2229   "        function TextStream(stream: Stream) {"
2230   "            if (stream == null) {"
2231   "                throw new ArgError("Must supply a Stream argument")"
2232   "Must supply a Stream argument"
2233   "            newline = FileSystem("/").newline"
2234   "/"
2235   "            throw new ArgError("Listeners are not supported")"
2236   "Listeners are not supported"
2237   "                throw new ArgError("Async mode not supported")"
2238   "            format"
2239   "        function set encoding(encoding: String): Void {"
2240   "            format = encoding"
2241   "        function fill(): Number {"
2242   "            inbuf.compact()"
2243   "            return nextStream.read(inbuf, -1)"
2244   "fill"
2245   "        function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number {"
2246   "total"
2247   "            let total = 0"
2248   "            if (count < 0) {"
2249   "                count = Number.MaxValue"
2250   "            if (offset < 0) {"
2251   "                buffer.flush()"
2252   "            let where = buffer.writePosition"
2253   "            while (count > 0) {"
2254   "                if (inbuf.available == 0) {"
2255   "                    if (fill() <= 0) {"
2256   "                        if (total == 0) {"
2257   "                            return null"
2258   "                        break"
2259   "len"
2260   "                let len = count.min(inbuf.available)"
2261   "                len = len.min(buffer.length - where)"
2262   "                if (len == 0) break"
2263   "                len = buffer.copyIn(where, inbuf, inbuf.readPosition, len)"
2264   "                inbuf.readPosition += len"
2265   "                where += len"
2266   "                total += len"
2267   "                count -= len"
2268   "            buffer.writePosition += total"
2269   "            return total"
2270   "        function readLine(): String {"
2271   "            if (inbuf.available == 0 && fill() <= 0) {"
2272   "nl"
2273   "			let nl = "\r\n""
2274   "            while (true) {"
2275   "nlchar"
2276   "                let nlchar = nl.charCodeAt(nl.length - 1)"
2277   "                for (let i = inbuf.readPosition; i < inbuf.writePosition; i++) {"
2278   "                    if (inbuf[i] == nlchar) {"
2279   "                        if (nl.length == 2 && i > inbuf.readPosition && nl.charCodeAt(0) == inbuf[i-1]) {"
2280   "							result = inbuf.readString(i - inbuf.readPosition - 1)"
2281   "							inbuf.readPosition += 2"
2282   "							result = inbuf.readString(i - inbuf.readPosition)"
2283   "							inbuf.readPosition++"
2284   "                        return result"
2285   "                if (fill() <= 0) {"
2286   "                    if (inbuf.available) {"
2287   "                        return inbuf.readString(inbuf.available)"
2288   "readLine"
2289   "        function readLines(numLines: Number = -1): Array {"
2290   "            var result: Array"
2291   "            if (numLines <= 0) {"
2292   "                result = new Array"
2293   "                numLines = Number.MaxValue"
2294   "                result = new Array(numLines)"
2295   "            for (let i in numLines) {"
2296   "                if ((line = readLine()) == null) {"
2297   "line"
2298   "                    if (i == 0) {"
2299   "                        return null"
2300   "                result[i] = line"
2301   "numLines"
2302   "        function readString(count: Number = -1): String"
2303   "            nextStream.write(data)"
2304   "        function writeLine(...lines): Number {"
2305   "written"
2306   "            let written = 0"
2307   "            for each (let line in lines) {"
2308   "                nextStream.write(line)"
2309   "                nextStream.write(newline)"
2310   "                written += line.length + newline.length"
2311   "            return written"
2312   "writeLine"
2313   "lines"
2314   "block_9530_205"
2315   "    class Timer {"
2316   "        native function Timer(period: Number, callback: Function, oneShot: Boolean = true, drift: Boolean = true)"
2317   "period"
2318   "oneShot"
2319   "drift"
2320   "        native function get drift(): Boolean"
2321   "        native function set drift(enable: Boolean): Void"
2322   "        native function get period(): Number"
2323   "        native function set period(period: Number): Void"
2324   "        native function restart(): Void"
2325   "restart"
2326   "        native function stop(): Void"
2327   "    function setInterval(callback: Function, delay: Number)"
2328   "        Timer(delay, callback, true)"
2329   "setInterval"
2330   "    function setTimeout(callback: Function, delay: Number): Void {"
2331   "        Timer(delay, callback)"
2332   "setTimeout"
2333   "    class TimerEvent extends Event { }"
2334   "TimerEvent"
2335   "block_9850_230"
2336   "    native final class Type {"
2337   "block_9994_231"
2338   "    class Uri {"
2339   "        native function Uri(uri: Object)"
2340   "        native function get basename(): Uri"
2341   "        native function get complete(): Uri"
2342   "complete"
2343   "        native function components(): Object "
2344   "        native static function decode(str: String): String"
2345   "decode"
2346   "        native static function decodeComponent(str: String): String"
2347   "decodeComponent"
2348   "        native function get dirname(): Uri"
2349   "        native static function encode(str: String): String"
2350   "        native static function encodeComponent(str: String): String"
2351   "encodeComponent"
2352   "        function endsWith(suffix: Object): Boolean"
2353   "            path.toString().endsWith(suffix.toString())"
2354   "        native function get extension(): String"
2355   "        native function set extension(value: String): Void"
2356   "        native function get hasExtension(): Boolean "
2357   "hasExtension"
2358   "        native function get hasHost(): Boolean "
2359   "hasHost"
2360   "        native function get hasPort(): Boolean "
2361   "hasPort"
2362   "        native function get hasQuery(): Boolean "
2363   "hasQuery"
2364   "        native function get hasReference(): Boolean "
2365   "hasReference"
2366   "        native function get hasScheme(): Boolean "
2367   "hasScheme"
2368   "        native function get host(): String"
2369   "host"
2370   "        native function set host(value: String): Void"
2371   "        function get isRegular(): Boolean"
2372   "            isDir == false"
2373   "        function get isRelative(): Boolean"
2374   "            isAbsolute == false"
2375   "        native function join(...other): Uri"
2376   "        native function joinExt(ext: String): Uri"
2377   "        native function get mimeType(): String"
2378   "        native function get normalize(): Uri"
2379   "        native function get path(): String"
2380   "        native function set path(value: String): Void"
2381   "        native function get port(): Number"
2382   "        native function set port(value: Number): Void"
2383   "        native function get scheme(): String"
2384   "scheme"
2385   "        native function set scheme(value: String): Void"
2386   "        native function get query(): String"
2387   "query"
2388   "        native function set query(value: String): Void"
2389   "        native function get reference(): String"
2390   "reference"
2391   "        native function set reference(value: String): Void"
2392   "        function relative(target: Uri): Uri {"
2393   "            let parts = this.normalize.path.toString().split("/")"
2394   "            let targetParts = target.normalize.path.toString().split("/")"
2395   "targetParts"
2396   "            if (parts.length < targetParts.length) {"
2397   "                u = this.clone()"
2398   "u"
2399   "                u.path = targetParts.slice(parts.length).join("/")"
2400   "                return u"
2401   "results"
2402   "                let results = """
2403   "                len = parts.length.min(targetParts.length)"
2404   "                for (common = 0; common < len; common++) {"
2405   "common"
2406   "                    if (parts[common] != targetParts[common]) {"
2407   "                results = "../".times(parts.length - common - 1)"
2408   "../"
2409   "                if (targetParts.length > 1) {"
2410   "                    results += targetParts.slice(common).join("/")"
2411   "                    results = results.trimEnd("/")"
2412   "                return Uri(results)"
2413   "        native function replaceExt(ext: String): Uri"
2414   "        native function same(other: Object, exact: Boolean = false): Boolean"
2415   "exact"
2416   "        function startsWith(prefix: Object): Boolean"
2417   "            path.toString().startsWith(prefix.toString()) "
2418   "        override function toJSON(): String"
2419   "            JSON.stringify(this.toString())"
2420   "        function trimEnd(pat: String): Uri {"
2421   "            let u = this.clone()"
2422   "            u.path = u.path.toString().trimEnd(pat)"
2423   "            return u"
2424   "        native function trimExt(): Uri"
2425   "        function trimStart(pat: String): Uri {"
2426   "            u.path = u.path.toString().trimStart(pat)"
2427   "        native function get uri(): String"
2428   "        native function set uri(value: String): Void"
2429   "    function decodeUri(str: String): String"
2430   "        Uri.decode(str)"
2431   "decodeUri"
2432   "    function decodeUriComponent(str: String): String"
2433   "        Uri.decodeUriComponent(str)"
2434   "decodeUriComponent"
2435   "block_10122_232"
2436   "    native final class Void {"
2437   "block_10552_239"
2438   "    class Worker {"
2439   "onclose"
2440   "        var onclose: Function"
2441   "        var onmessage: Function"
2442   "onmessage"
2443   "        var onerror: Function"
2444   "onerror"
2445   "        var name: String"
2446   "        native function Worker(script: Path? = null, options: Object? = null)"
2447   "Worker"
2448   "        native function eval(script: String, timeout: Number = -1): String"
2449   "        native static function exit(): Void"
2450   "        native static function join(workers: Object? = null, timeout: Number = -1): Boolean"
2451   "workers"
2452   "        native function load(script: Path, timeout: Number = 0): Void"
2453   "        native function preload(path: Path): String"
2454   "preload"
2455   "        native function preeval(script: String): String"
2456   "preeval"
2457   "        native static function lookup(name: String): Worker"
2458   "lookup"
2459   "        native function postMessage(data: Object, ports: Array? = null): Void"
2460   "postMessage"
2461   "ports"
2462   "        native function terminate(): Void"
2463   "terminate"
2464   "        native function waitForMessage(timeout: Number = -1): Boolean"
2465   "waitForMessage"
2466   "    use default namespace "ejs.worker""
2467   "ejs.worker"
2468   "self"
2469   "    var self: Worker"
2470   "    function exit(): Void"
2471   "        Worker.exit()"
2472   "    function postMessage(data: Object, ports: Array? = null): Void"
2473   "        self.postMessage(data, ports)"
2474   "    function get onerror(): Function"
2475   "        self.onerror"
2476   "    function set onerror(fun: Function): Void {"
2477   "        self.onerror = fun"
2478   "fun"
2479   "    function get onmessage(): Function"
2480   "        self.onmessage"
2481   "    function set onmessage(fun: Function): Void {"
2482   "        self.onmessage = fun"
2483   "block_10628_240"
2484   "    final native class XML extends Object {"
2485   "        native function XML(value: Object? = null)"
2486   "        native function load(filename: String): Void"
2487   "        native function save(filename: String): Void"
2488   "save"
2489   "        native function length(): Number"
2490   "        native function name(): String"
2491   "        override native function toJSON(): String "
2492   "block_10847_241"
2493   "    class XMLHttp {"
2494   "        private var hp: Http = new Http"
2495   "hp"
2496   "[ejs::XMLHttp,private]"
2497   "        private var state: Number = 0"
2498   "state"
2499   "        private var response: ByteArray"
2500   "        static const Uninitialized = 0              "
2501   "Uninitialized"
2502   "        static const Open = 1"
2503   "Open"
2504   "        static const Sent = 2"
2505   "Sent"
2506   "        static const Receiving = 3"
2507   "Receiving"
2508   "        static const Loaded = 4"
2509   "Loaded"
2510   "        public var onreadystatechange: Function"
2511   "onreadystatechange"
2512   "        function abort(): void"
2513   "            hp.close"
2514   "abort"
2515   "        function get http() : Http"
2516   "            hp"
2517   "        function get readyState() : Number"
2518   "            state"
2519   "readyState"
2520   "        function get responseText(): String"
2521   "            hp.response"
2522   "responseText"
2523   "        function get responseXML(): XML"
2524   "            XML(hp.response)"
2525   "responseXML"
2526   "        function get responseBody(): String {"
2527   "            throw new Error("Unsupported API")"
2528   "Unsupported API"
2529   "            return """
2530   "responseBody"
2531   "        function get status(): Number"
2532   "            hp.status"
2533   "        function get statusText() : String"
2534   "            hp.statusMessage"
2535   "statusText"
2536   "        function getAllResponseHeaders(): String {"
2537   "            let result: String = """
2538   "            for (key in hp.headers) {"
2539   "                result = result.concat(key + ": " + hp.headers[key] + '\n')"
2540   "getAllResponseHeaders"
2541   "        function getResponseHeader(key: String)"
2542   "            header(key)"
2543   "getResponseHeader"
2544   "        function open(method: String, url: String, async: Boolean = false, user: String? = null, "
2545   "                password: String = null): Void {"
2546   "            hp.method = method"
2547   "            hp.uri = url"
2548   "            if (user && password) {"
2549   "                hp.setCredentials(user, password)"
2550   "            hp.callback = callback"
2551   "            response = new ByteArray(System.Bufsize, 1)"
2552   "            hp.connect()"
2553   "            state = Open"
2554   "            notify()"
2555   "notify"
2556   "            if (!async || 1) {"
2557   "                let timeout = 5 * 1000"
2558   "                let when: Date = new Date"
2559   "when"
2560   "                while (state != Loaded && when.elapsed < timeout) {"
2561   "                    App.serviceEvents(1, timeout)"
2562   "url"
2563   "user"
2564   "        function send(content: String): Void {"
2565   "            hp.write(content)"
2566   "send"
2567   "content"
2568   "        function setRequestHeader(key: String, value: String): Void"
2569   "            hp.addHeader(key, value, 1)"
2570   "setRequestHeader"
2571   "        private function callback (e: Event) {"
2572   "            if (e is HttpError) {"
2573   "HttpError"
2574   "                notify()"
2575   "            let hp: Http = e.data"
2576   "            let count = hp.read(response)"
2577   "            state = (count == 0) ? Loaded : Receiving"
2578   "        private function notify() {"
2579   "            if (onreadystatechange) {"
2580   "                onreadystatechange()"
2581   "XMLHttp"
2582   "XMLHttp-initializer"
2583   "block_11261_242"
2584   "    final native class XMLList extends Object {"
2585   "        native function XMLList() "
2586   "XMLList"
2587   "block_11509_249"
2588   "__initializer__"

==============================================================================================

MODULE:   ejs.cjs <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_11918_250 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 02 98 bc 01 10 .......... debug 

    # ejs.es:12044              }

    0009: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0011: [0] 01 6c ...................... addNamespace <ejs.cjs> 
    0013: [0] 33 02 9c ba 01 7c .......... debug 

    # ejs.es:11918              module ejs.cjs {

    0019: [0] 33 02 ae ba 01 9e 01 ....... debug 

    # ejs.es:11927                  function require(id: String): Object

    0026: [0] 33 02 be ba 01 fe 02 ....... debug 

    # ejs.es:11935                  public class Loader {

    0033: [0] 34 d4 08 ................... defineClass <type: 0x22a,  public::Loader> 
    0036: [0] 24 ......................... closeBlock 
    0037: [0] 3b ......................... endCode 
    

BLOCK:      [block_11918_250-00]  block_11918_250 (Slots 0)

FUNCTION:   [require-137]  ejs.cjs function require(id: String) : Object

     ARG:   [arg-00]   private id : String

    0000: [0] 33 02 b0 ba 01 f0 01 ....... debug 

    # ejs.es:11928                      Loader.require(id)

    0007: [0] 7e 94 02 ................... getGlobalSlot <slot: 138> 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 1e a6 02 b6 02 02 .......... callObjName <require> <public> <argc: 1> 
    0017: [0] 93 ......................... pushResult 
    0018: [1] bf ......................... returnValue 
    
VARIABLE:   [id-00]  private var id : String

CLASS:      class Loader extends Object
            #  Class Details: 39 class traits, 0 instance traits, requested slot 138

FUNCTION:   [Loader-26]  -initializer- static function Loader-initializer() : Void


    0000: [0] 33 02 c2 ba 01 b2 03 ....... debug 

    # ejs.es:11937                      public  static var mainId

    0007: [0] 33 02 c4 ba 01 84 04 ....... debug 

    # ejs.es:11938                      private static var signatures = {}

    0014: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0018: [1] 57 ......................... loadThis 
    0019: [2] b3 da 04 f0 04 ............. putObjName <signatures> <[Loader,private]> 
    0024: [0] 33 02 c6 ba 01 92 05 ....... debug 

    # ejs.es:11939                      private static var timestamps = {}

    0031: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0035: [1] 57 ......................... loadThis 
    0036: [2] b3 e8 05 f0 04 ............. putObjName <timestamps> <[Loader,private]> 
    0041: [0] 33 02 c8 ba 01 fe 05 ....... debug 

    # ejs.es:11940                      private static const defaultExtensions = [".es", ".js"]

    0048: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0050: [1] 89 ......................... new 
    0051: [1] 39 ......................... dup 
    0052: [2] 56 a2 07 ................... loadString <.es> 
    0055: [3] c5 ......................... swap 
    0056: [3] 56 aa 07 ................... loadString <> 
    0059: [4] 44 ......................... load0 
    0060: [5] b2 ......................... putObjNameExpr 
    0061: [1] 39 ......................... dup 
    0062: [2] 56 ac 07 ................... loadString <.js> 
    0065: [3] c5 ......................... swap 
    0066: [3] 56 aa 07 ................... loadString <> 
    0069: [4] 45 ......................... load1 
    0070: [5] b2 ......................... putObjNameExpr 
    0071: [1] 57 ......................... loadThis 
    0072: [2] b3 fe 06 f0 04 ............. putObjName <defaultExtensions> <[Loader,private]> 
    0077: [0] 33 02 ca ba 01 b4 07 ....... debug 

    # ejs.es:11941                      private static var config

    0084: [0] 33 02 d0 ba 01 86 08 ....... debug 

    # ejs.es:11944                      static function init(mainId: String? = null) {

    0091: [0] 33 02 e2 ba 01 e0 09 ....... debug 

    # ejs.es:11953                      public static function require(id: String): Object {

    0098: [0] 33 02 86 bb 01 d0 0e ....... debug 

    # ejs.es:11971                      public static function load(id: String, path: Path, codeReader: Function? = null): Object {

    0105: [0] 33 02 ba bb 01 c4 1e ....... debug 

    # ejs.es:11997                      public static function cached(path: Path, cachedir: Path? = null): Path {

    0112: [0] 33 02 d2 bb 01 ae 25 ....... debug 

    # ejs.es:12009                      public static function wrap(code: String): String

    0119: [0] 33 02 e0 bb 01 a4 28 ....... debug 

    # ejs.es:12016                      private static function locate(id: Path) {

    0126: [0] 33 02 92 bc 01 fa 31 ....... debug 

    # ejs.es:12041                      public static function setConfig(newConfig): Void

    0133: [0] be ......................... return 
    
VARIABLE:   [Loader-27]  public static var mainId
VARIABLE:   [Loader-28]  [Loader,private] static var signatures
VARIABLE:   [Loader-29]  [Loader,private] static var timestamps
VARIABLE:   [Loader-30]  [Loader,private] const static var defaultExtensions
VARIABLE:   [Loader-31]  [Loader,private] static var config

FUNCTION:   [Loader-32]  internal-ed363076473b51ca685af450cc662b39-0 const static function init(mainId: String) : void

     ARG:   [arg-00]   private mainId : String

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 d2 ba 01 f4 08 ....... debug 

    # ejs.es:11945                          require.main = mainId

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 57 ......................... loadThis 
    0016: [2] 7b a6 02 b6 02 ............. getObjName <require> <public> 
    0021: [2] b3 b8 09 00 ................ putObjName <main> <> 
    0025: [0] be ......................... return 
    0026: [0] 33 02 d4 ba 01 c2 09 ....... debug 

    # ejs.es:11946                      }
    
VARIABLE:   [mainId-00]  private var mainId : String

FUNCTION:   [Loader-33]  public const static function require(id: String) : Object

     ARG:   [arg-00]   private id : String
   LOCAL:   [local-01] var path : Path
   LOCAL:   [local-02] var exports

    0000: [0] 33 02 e4 ba 01 e4 0a ....... debug 

    # ejs.es:11954                          let path: Path = locate(id)

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 1f b4 0b f0 04 02 .......... callScopedName <locate> <[Loader,private]> <argc: 1> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 95 ......................... putLocalSlot1 
    0016: [0] 33 02 e6 ba 01 c2 0b ....... debug 

    # ejs.es:11955                          let exports = signatures[path]

    0023: [0] 57 ......................... loadThis 
    0024: [1] 7b da 04 f0 04 ............. getObjName <signatures> <[Loader,private]> 
    0029: [1] 56 aa 07 ................... loadString <> 
    0032: [2] 5c ......................... getLocalSlot1 
    0033: [3] 7c ......................... getObjNameExpr 
    0034: [1] 96 ......................... putLocalSlot2 
    0035: [0] 33 02 e8 ba 01 a8 0c ....... debug 

    # ejs.es:11956                          if (!exports || path.modified > timestamps[path]) {

    0042: [0] 5d ......................... getLocalSlot2 
    0043: [1] 86 ......................... logicalNot 
    0044: [1] 39 ......................... dup 
    0045: [2] 14 13 ...................... branchTrue8 <addr: 66> 
    0047: [1] 90 ......................... pop 
    0048: [0] 5c ......................... getLocalSlot1 
    0049: [1] 7b a8 0d b6 02 ............. getObjName <modified> <public> 
    0054: [1] 57 ......................... loadThis 
    0055: [2] 7b e8 05 f0 04 ............. getObjName <timestamps> <[Loader,private]> 
    0060: [2] 56 aa 07 ................... loadString <> 
    0063: [3] 5c ......................... getLocalSlot1 
    0064: [4] 7c ......................... getObjNameExpr 
    0065: [2] 29 ......................... compareGt 
    0066: [1] 13 13 ...................... branchFalse8 <addr: 87> 
    0068: [0] 33 02 ea ba 01 ba 0d ....... debug 

    # ejs.es:11957                              return load(id, path)

    0075: [0] 5b ......................... getLocalSlot0 
    0076: [1] 5c ......................... getLocalSlot1 
    0077: [2] 1f 86 0e b6 02 04 .......... callScopedName <load> <public> <argc: 2> 
    0083: [0] 93 ......................... pushResult 
    0084: [1] bf ......................... returnValue 
    0085: [0] 3e 00 ...................... goto8 <addr: 87> 
    0087: [0] 33 02 ee ba 01 90 0e ....... debug 

    # ejs.es:11959                          return exports

    0094: [0] 5d ......................... getLocalSlot2 
    0095: [1] bf ......................... returnValue 
    
VARIABLE:   [id-00]  private var id : String
VARIABLE:   [path-01]  private var path : Path
VARIABLE:   [exports-02]  private var exports

FUNCTION:   [Loader-34]  public const static function load(id: String, path: Path, codeReader: Function) : Object

     ARG:   [arg-00]   private id : String
     ARG:   [arg-01]   private path : Path
     ARG:   [arg-02]   private codeReader : Function
   LOCAL:   [local-03] var initializer
   LOCAL:   [local-04] var code
   LOCAL:   [local-05] var cache : Path

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 96 ......................... putLocalSlot2 
    0007: [0] 33 02 88 bb 01 b0 10 ....... debug 

    # ejs.es:11972                          let initializer, code

    0014: [0] 33 02 8a bb 01 fe 10 ....... debug 

    # ejs.es:11973                          if (path) {

    0021: [0] 5c ......................... getLocalSlot1 
    0022: [1] 07 90 03 f7 f7 ............. branchFalse <addr: 227> 
    0027: [0] 33 02 8c bb 01 d0 11 ....... debug 

    # ejs.es:11974                              let cache: Path = cached(path)

    0034: [0] 5c ......................... getLocalSlot1 
    0035: [1] 1f ae 12 b6 02 02 .......... callScopedName <cached> <public> <argc: 1> 
    0041: [0] 93 ......................... pushResult 
    0042: [1] 99 ......................... putLocalSlot5 
    0043: [0] 33 02 8e bb 01 bc 12 ....... debug 

    # ejs.es:11975                              if (cache && cache.exists && cache.modified >= path.modified) {

    0050: [0] 60 ......................... getLocalSlot5 
    0051: [1] 39 ......................... dup 
    0052: [2] 13 07 ...................... branchFalse8 <addr: 61> 
    0054: [1] 90 ......................... pop 
    0055: [0] 60 ......................... getLocalSlot5 
    0056: [1] 7b dc 13 b6 02 ............. getObjName <exists> <public> 
    0061: [1] 39 ......................... dup 
    0062: [2] 13 0e ...................... branchFalse8 <addr: 78> 
    0064: [1] 90 ......................... pop 
    0065: [0] 60 ......................... getLocalSlot5 
    0066: [1] 7b a8 0d b6 02 ............. getObjName <modified> <public> 
    0071: [1] 5c ......................... getLocalSlot1 
    0072: [2] 7b a8 0d b6 02 ............. getObjName <modified> <public> 
    0077: [2] 28 ......................... compareGe 
    0078: [1] 13 14 ...................... branchFalse8 <addr: 100> 
    0080: [0] 33 02 90 bb 01 ea 13 ....... debug 

    # ejs.es:11976                                  initializer = global.load(cache)

    0087: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0089: [1] 60 ......................... getLocalSlot5 
    0090: [2] 1e 86 0e aa 07 02 .......... callObjName <load> <> <argc: 1> 
    0096: [0] 93 ......................... pushResult 
    0097: [1] 97 ......................... putLocalSlot3 
    0098: [0] 3e 5e ...................... goto8 <addr: 194> 
    0100: [0] 33 02 92 bb 01 d4 14 ....... debug 

    # ejs.es:11977                              } else {

    0107: [0] 33 02 94 bb 01 86 15 ....... debug 

    # ejs.es:11978                                  if (codeReader) {

    0114: [0] 5d ......................... getLocalSlot2 
    0115: [1] 13 10 ...................... branchFalse8 <addr: 133> 
    0117: [0] 33 02 96 bb 01 d2 15 ....... debug 

    # ejs.es:11979                                      code = codeReader(path)

    0124: [0] 5c ......................... getLocalSlot1 
    0125: [1] 1a 04 00 02 ................ callBlockSlot <slot: 2> <0> <argc: 1> 
    0129: [0] 93 ......................... pushResult 
    0130: [1] 98 ......................... putLocalSlot4 
    0131: [0] 3e 27 ...................... goto8 <addr: 172> 
    0133: [0] 33 02 98 bb 01 b2 16 ....... debug 

    # ejs.es:11980                                  } else {

    0140: [0] 33 02 9a bb 01 ec 16 ....... debug 

    # ejs.es:11981                                      code = path.readString()

    0147: [0] 5c ......................... getLocalSlot1 
    0148: [1] 1e ce 17 b6 02 00 .......... callObjName <readString> <public> <argc: 0> 
    0154: [0] 93 ......................... pushResult 
    0155: [1] 98 ......................... putLocalSlot4 
    0156: [0] 33 02 9c bb 01 e4 17 ....... debug 

    # ejs.es:11982                                      code = wrap(code)

    0163: [0] 5f ......................... getLocalSlot4 
    0164: [1] 1f b8 18 b6 02 02 .......... callScopedName <wrap> <public> <argc: 1> 
    0170: [0] 93 ......................... pushResult 
    0171: [1] 98 ......................... putLocalSlot4 
    0172: [0] 33 02 9e bb 01 c2 18 ....... debug 

    # ejs.es:11983                                  }

    0179: [0] 33 02 a0 bb 01 ee 18 ....... debug 

    # ejs.es:11984                                  initializer = eval(code, cache)

    0186: [0] 5f ......................... getLocalSlot4 
    0187: [1] 60 ......................... getLocalSlot5 
    0188: [2] 17 9e 01 04 ................ callGlobalSlot <slot: 79> <argc: 2> 
    0192: [0] 93 ......................... pushResult 
    0193: [1] 97 ......................... putLocalSlot3 
    0194: [0] 33 02 a2 bb 01 d6 19 ....... debug 

    # ejs.es:11985                              }

    0201: [0] 33 02 a4 bb 01 fa 19 ....... debug 

    # ejs.es:11986                              timestamps[path] = path.modified

    0208: [0] 5c ......................... getLocalSlot1 
    0209: [1] 7b a8 0d b6 02 ............. getObjName <modified> <public> 
    0214: [1] 57 ......................... loadThis 
    0215: [2] 7b e8 05 f0 04 ............. getObjName <timestamps> <[Loader,private]> 
    0220: [2] 56 aa 07 ................... loadString <> 
    0223: [3] 5c ......................... getLocalSlot1 
    0224: [4] b2 ......................... putObjNameExpr 
    0225: [0] 3e 25 ...................... goto8 <addr: 264> 
    0227: [0] 33 02 a6 bb 01 dc 1a ....... debug 

    # ejs.es:11987                          } else {

    0234: [0] 33 02 a8 bb 01 86 1b ....... debug 

    # ejs.es:11988                              code = wrap(code)

    0241: [0] 5f ......................... getLocalSlot4 
    0242: [1] 1f b8 18 b6 02 02 .......... callScopedName <wrap> <public> <argc: 1> 
    0248: [0] 93 ......................... pushResult 
    0249: [1] 98 ......................... putLocalSlot4 
    0250: [0] 33 02 aa bb 01 ca 1b ....... debug 

    # ejs.es:11989                              initializer = eval(code)

    0257: [0] 5f ......................... getLocalSlot4 
    0258: [1] 17 9e 01 02 ................ callGlobalSlot <slot: 79> <argc: 1> 
    0262: [0] 93 ......................... pushResult 
    0263: [1] 97 ......................... putLocalSlot3 
    0264: [0] 33 02 ac bb 01 9c 1c ....... debug 

    # ejs.es:11990                          }

    0271: [0] 33 02 ae bb 01 b8 1c ....... debug 

    # ejs.es:11991                          signatures[path] = exports = {}

    0278: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0282: [1] 39 ......................... dup 
    0283: [2] b4 98 0c aa 07 ............. putScopedName <exports> <> 
    0288: [1] 57 ......................... loadThis 
    0289: [2] 7b da 04 f0 04 ............. getObjName <signatures> <[Loader,private]> 
    0294: [2] 56 aa 07 ................... loadString <> 
    0297: [3] 5c ......................... getLocalSlot1 
    0298: [4] b2 ......................... putObjNameExpr 
    0299: [0] 33 02 b0 bb 01 90 1d ....... debug 

    # ejs.es:11992                          initializer(require, exports, {id: id, path: path}, null)

    0306: [0] 57 ......................... loadThis 
    0307: [1] 7b a6 02 b6 02 ............. getObjName <require> <public> 
    0312: [1] 79 98 0c aa 07 ............. getScopedName <exports> <> 
    0317: [2] 56 00 ...................... loadString <> 
    0319: [3] 56 c4 02 ................... loadString <id> 
    0322: [4] 5b ......................... getLocalSlot0 
    0323: [5] 56 00 ...................... loadString <> 
    0325: [6] 56 da 0a ................... loadString <path> 
    0328: [7] 5c ......................... getLocalSlot1 
    0329: [8] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0335: [3] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0337: [4] 1a 06 00 08 ................ callBlockSlot <slot: 3> <0> <argc: 4> 
    0341: [0] 33 02 b2 bb 01 90 0e ....... debug 

    # ejs.es:11993                          return exports

    0348: [0] 79 98 0c aa 07 ............. getScopedName <exports> <> 
    0353: [1] bf ......................... returnValue 
    
VARIABLE:   [id-00]  private var id : String
VARIABLE:   [path-01]  private var path : Path
VARIABLE:   [codeReader-02]  private var codeReader : Function
VARIABLE:   [initializer-03]  private var initializer
VARIABLE:   [code-04]  private var code
VARIABLE:   [cache-05]  -hoisted-5 var cache : Path

FUNCTION:   [Loader-35]  public const static function cached(path: Path, cachedir: Path) : Path

     ARG:   [arg-00]   private path : Path
     ARG:   [arg-01]   private cachedir : Path
   LOCAL:   [local-02] var dir

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 bc bb 01 e8 1f ....... debug 

    # ejs.es:11998                          config ||= App.config

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b f8 07 f0 04 ............. getObjName <config> <[Loader,private]> 
    0020: [1] 39 ......................... dup 
    0021: [2] 14 08 ...................... branchTrue8 <addr: 31> 
    0023: [1] 90 ......................... pop 
    0024: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0026: [1] 7b f8 07 b6 02 ............. getObjName <config> <public> 
    0031: [1] 57 ......................... loadThis 
    0032: [2] b3 f8 07 f0 04 ............. putObjName <config> <[Loader,private]> 
    0037: [0] 33 02 be bb 01 ac 20 ....... debug 

    # ejs.es:11999                          if (path && config.cache.enable) {

    0044: [0] 5b ......................... getLocalSlot0 
    0045: [1] 39 ......................... dup 
    0046: [2] 13 0f ...................... branchFalse8 <addr: 63> 
    0048: [1] 90 ......................... pop 
    0049: [0] 57 ......................... loadThis 
    0050: [1] 7b f8 07 f0 04 ............. getObjName <config> <[Loader,private]> 
    0055: [1] 7b ae 11 00 ................ getObjName <cache> <> 
    0059: [1] 7b 8a 21 00 ................ getObjName <enable> <> 
    0063: [1] 13 62 ...................... branchFalse8 <addr: 163> 
    0065: [0] 33 02 c0 bb 01 b6 21 ....... debug 

    # ejs.es:12000                              let dir = cachedir || Path(config.directories.cache) || Path("cache")

    0072: [0] 5c ......................... getLocalSlot1 
    0073: [1] 39 ......................... dup 
    0074: [2] 14 20 ...................... branchTrue8 <addr: 108> 
    0076: [1] 90 ......................... pop 
    0077: [0] 57 ......................... loadThis 
    0078: [1] 7b f8 07 f0 04 ............. getObjName <config> <[Loader,private]> 
    0083: [1] 7b e2 22 00 ................ getObjName <directories> <> 
    0087: [1] 7b ae 11 00 ................ getObjName <cache> <> 
    0091: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0095: [0] 93 ......................... pushResult 
    0096: [1] 39 ......................... dup 
    0097: [2] 14 09 ...................... branchTrue8 <addr: 108> 
    0099: [1] 90 ......................... pop 
    0100: [0] 56 ae 11 ................... loadString <cache> 
    0103: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0107: [0] 93 ......................... pushResult 
    0108: [1] 96 ......................... putLocalSlot2 
    0109: [0] 33 02 c2 bb 01 fa 22 ....... debug 

    # ejs.es:12001                              if (dir.exists) {

    0116: [0] 5d ......................... getLocalSlot2 
    0117: [1] 7b dc 13 00 ................ getObjName <exists> <> 
    0121: [1] 13 26 ...................... branchFalse8 <addr: 161> 
    0123: [0] 33 02 c4 bb 01 be 23 ....... debug 

    # ejs.es:12002                                  return Path(dir).join(md5(path)).joinExt('.mod')

    0130: [0] 5d ......................... getLocalSlot2 
    0131: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0135: [0] 93 ......................... pushResult 
    0136: [1] 5b ......................... getLocalSlot0 
    0137: [2] 17 9a 01 02 ................ callGlobalSlot <slot: 77> <argc: 1> 
    0141: [1] 93 ......................... pushResult 
    0142: [2] 1e c8 24 b6 02 02 .......... callObjName <join> <public> <argc: 1> 
    0148: [0] 93 ......................... pushResult 
    0149: [1] 56 d2 24 ................... loadString <.mod> 
    0152: [2] 1e dc 24 00 02 ............. callObjName <joinExt> <> <argc: 1> 
    0157: [0] 93 ......................... pushResult 
    0158: [1] bf ......................... returnValue 
    0159: [0] 3e 00 ...................... goto8 <addr: 161> 
    0161: [0] 3e 00 ...................... goto8 <addr: 163> 
    0163: [0] 33 02 ca bb 01 ec 24 ....... debug 

    # ejs.es:12005                          return null

    0170: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0172: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : Path
VARIABLE:   [cachedir-01]  private var cachedir : Path
VARIABLE:   [dir-02]  -hoisted-2 var dir

FUNCTION:   [Loader-36]  public const static function wrap(code: String) : String

     ARG:   [arg-00]   private code : String

    0000: [0] 33 02 d4 bb 01 a2 26 ....... debug 

    # ejs.es:12010                          "(function(require, exports, module, system) {\n" + code + "\n})"

    0007: [0] 56 be 27 ................... loadString <(function(require, exports, module, system) {
> 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 00 ......................... add 
    0012: [1] 56 9c 28 ................... loadString <
})> 
    0015: [2] 00 ......................... add 
    0016: [1] bf ......................... returnValue 
    
VARIABLE:   [code-00]  private var code : String

FUNCTION:   [Loader-37]  [Loader,private] const static function locate(id: Path) : void

     ARG:   [arg-00]   private id : Path
   LOCAL:   [local-01] var extensions
   LOCAL:   [local-02] var dir : Path
   LOCAL:   [local-03] var ext
   LOCAL:   [local-04] var path : Path

    0000: [0] 33 02 e2 bb 01 8a 29 ....... debug 

    # ejs.es:12017                          if (id.exists) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7b dc 13 b6 02 ............. getObjName <exists> <public> 
    0013: [1] 13 0b ...................... branchFalse8 <addr: 26> 
    0015: [0] 33 02 e4 bb 01 c4 29 ....... debug 

    # ejs.es:12018                              return id

    0022: [0] 5b ......................... getLocalSlot0 
    0023: [1] bf ......................... returnValue 
    0024: [0] 3e 00 ...................... goto8 <addr: 26> 
    0026: [0] 33 02 e6 bb 01 f8 29 ....... debug 

    # ejs.es:12019                          } 

    0033: [0] 33 02 e8 bb 01 e8 1f ....... debug 

    # ejs.es:12020                          config ||= App.config

    0040: [0] 57 ......................... loadThis 
    0041: [1] 7b f8 07 f0 04 ............. getObjName <config> <[Loader,private]> 
    0046: [1] 39 ......................... dup 
    0047: [2] 14 08 ...................... branchTrue8 <addr: 57> 
    0049: [1] 90 ......................... pop 
    0050: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0052: [1] 7b f8 07 b6 02 ............. getObjName <config> <public> 
    0057: [1] 57 ......................... loadThis 
    0058: [2] b3 f8 07 f0 04 ............. putObjName <config> <[Loader,private]> 
    0063: [0] 33 02 ec bb 01 96 2a ....... debug 

    # ejs.es:12022                          let extensions = config.extensions || defaultExtensions

    0070: [0] 57 ......................... loadThis 
    0071: [1] 7b f8 07 f0 04 ............. getObjName <config> <[Loader,private]> 
    0076: [1] 7b 9e 2b 00 ................ getObjName <extensions> <> 
    0080: [1] 39 ......................... dup 
    0081: [2] 14 07 ...................... branchTrue8 <addr: 90> 
    0083: [1] 90 ......................... pop 
    0084: [0] 57 ......................... loadThis 
    0085: [1] 7b fe 06 f0 04 ............. getObjName <defaultExtensions> <[Loader,private]> 
    0090: [1] 95 ......................... putLocalSlot1 
    0091: [0] 33 02 ee bb 01 b4 2b ....... debug 

    # ejs.es:12023                          for each (let dir: Path in App.search) {

    0098: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0100: [1] 7b 9e 2c b6 02 ............. getObjName <search> <public> 
    0105: [1] 1e ac 2c c0 2c 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0111: [0] 93 ......................... pushResult 
    0112: [1] 39 ......................... dup 
    0113: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0116: [1] 93 ......................... pushResult 
    0117: [2] 96 ......................... putLocalSlot2 
    0118: [1] 33 02 f0 bb 01 d2 2c ....... debug 

    # ejs.es:12024                              for each (ext in extensions) {

    0125: [1] 5c ......................... getLocalSlot1 
    0126: [2] 1e ac 2c c0 2c 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0132: [1] 93 ......................... pushResult 
    0133: [2] 39 ......................... dup 
    0134: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0137: [2] 93 ......................... pushResult 
    0138: [3] 97 ......................... putLocalSlot3 
    0139: [2] 33 02 f4 bb 01 ce 2d ....... debug 

    # ejs.es:12026                                  let path: Path = Path(dir).join(id)

    0146: [2] 5d ......................... getLocalSlot2 
    0147: [3] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0151: [2] 93 ......................... pushResult 
    0152: [3] 5b ......................... getLocalSlot0 
    0153: [4] 1e c8 24 b6 02 02 .......... callObjName <join> <public> <argc: 1> 
    0159: [2] 93 ......................... pushResult 
    0160: [3] 98 ......................... putLocalSlot4 
    0161: [2] 33 02 f6 bb 01 be 2e ....... debug 

    # ejs.es:12027                                  path = path.joinExt(ext)

    0168: [2] 5f ......................... getLocalSlot4 
    0169: [3] 5e ......................... getLocalSlot3 
    0170: [4] 1e dc 24 b6 02 02 .......... callObjName <joinExt> <public> <argc: 1> 
    0176: [2] 93 ......................... pushResult 
    0177: [3] 98 ......................... putLocalSlot4 
    0178: [2] 33 02 f8 bb 01 98 2f ....... debug 

    # ejs.es:12028                                  if (path.exists) {

    0185: [2] 5f ......................... getLocalSlot4 
    0186: [3] 7b dc 13 b6 02 ............. getObjName <exists> <public> 
    0191: [3] 13 0b ...................... branchFalse8 <addr: 204> 
    0193: [2] 33 02 fa bb 01 e6 2f ....... debug 

    # ejs.es:12029                                      return path

    0200: [2] 5f ......................... getLocalSlot4 
    0201: [3] bf ......................... returnValue 
    0202: [0] 3e 00 ...................... goto8 <addr: 204> 
    0204: [0] 3e b7 ...................... goto8 <addr: 133> 
    0206: [0] 90 ......................... pop 
    0207: [-1] 3e 9f ...................... goto8 <addr: 112> 
    0209: [-1] 90 ......................... pop 
    0210: [-2] 33 02 82 bc 01 ae 30 ....... debug 

    # ejs.es:12033                          throw new IOError("Can't find module \"" + id + "\"")

    0217: [-2] 7e 2e ...................... getGlobalSlot <slot: 23> 
    0219: [-1] 89 ......................... new 
    0220: [-1] 56 b2 31 ................... loadString <Can't find module "> 
    0223: [0] 5b ......................... getLocalSlot0 
    0224: [1] 00 ......................... add 
    0225: [0] 56 da 31 ................... loadString <"> 
    0228: [1] 00 ......................... add 
    0229: [0] 20 02 ...................... callConstructor <argc: 1> 
    0231: [-1] c6 ......................... throw 
    0232: [-1] 54 ......................... loadNull 
    0233: [0] bf ......................... returnValue 
    0234: [0] 33 02 84 bc 01 c2 09 ....... debug 

    # ejs.es:12034                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    134     137        206          206       StopIteration
1   iteration    113     116        209          209       StopIteration

VARIABLE:   [id-00]  private var id : Path
VARIABLE:   [extensions-01]  private var extensions
VARIABLE:   [dir-02]  -hoisted-2 var dir : Path
VARIABLE:   [ext-03]  -hoisted-3 var ext
VARIABLE:   [path-04]  -hoisted-3 var path : Path

FUNCTION:   [Loader-38]  public const static function setConfig(newConfig) : Void

     ARG:   [arg-00]   private newConfig

    0000: [0] 33 02 94 bc 01 ee 32 ....... debug 

    # ejs.es:12042                          config = newConfig

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 57 ......................... loadThis 
    0010: [3] b3 f8 07 f0 04 ............. putObjName <config> <[Loader,private]> 
    0015: [1] bf ......................... returnValue 
    
VARIABLE:   [newConfig-00]  private var newConfig

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 185)
#
0000    public var stderr
0001    public var stdin
0002    public var stdout
0003    ejs var App: Type
0004    ejs function appInit
0005    ejs var Array: Type
0006    ejs var BinaryStream: Type
0007    ejs var Block: Type
0008    ejs var Boolean: Type
0009    ejs var ByteArray: Type
0010    ejs var Cmd: Type
0011    ejs var CmdArgs: Type
0012    public function gc
0013    public function readFile
0014    ejs var Config: Type
0015    ejs var Date: Type
0016    ejs var Emitter: Type
0017    internal-ed363076473b51ca685af450cc662b39-0 var Endpoint: Type
0018    ejs var ArgError: Type
0019    ejs var ArithmeticError: Type
0020    ejs var AssertError: Type
0021    ejs var InstructionError: Type
0022    ejs var Error: Type
0023    ejs var IOError: Type
0024    ejs var InternalError: Type
0025    ejs var MemoryError: Type
0026    ejs var OutOfBoundsError: Type
0027    ejs var ReferenceError: Type
0028    ejs var ResourceError: Type
0029    ejs var SecurityError: Type
0030    ejs var StateError: Type
0031    ejs var SyntaxError: Type
0032    ejs var TypeError: Type
0033    ejs var URIError: Type
0034    ejs var Event: Type
0035    ejs var ErrorEvent: Type
0036    ejs var File: Type
0037    ejs var FileSystem: Type
0038    ejs var Frame: Type
0039    ejs var Function: Type
0040    ejs function makeGetter
0041    ejs function clearBoundThis
0042    ejs var GC: Type
0043    public var EJSCRIPT: Boolean
0044    public var ECMA: Boolean
0045    public var ejs
0046    public var public
0047    public var internal
0048    public var iterator
0049    public var CONFIG
0050    ejs var TODO: Boolean
0051    ejs var FUTURE: Boolean
0052    ejs var ASC: Boolean
0053    ejs var DOC_ONLY: Boolean
0054    ejs var DEPRECATED: Boolean
0055    ejs var boolean
0056    ejs var double
0057    ejs var num
0058    ejs var string
0059    ejs var false: Boolean
0060    ejs var global: Object
0061    ejs var null
0062    ejs var Infinity
0063    ejs var NegativeInfinity
0064    ejs var NaN
0065    ejs var true: Boolean
0066    ejs var undefined
0067    ejs var void
0068    ejs function assert
0069    ejs function breakpoint
0070    ejs function cloneBase
0071    ejs function decodeURI
0072    ejs function dump
0073    ejs function dumpAll
0074    ejs function dumpDef
0075    ejs function encodeURI
0076    ejs function escape
0077    ejs function md5
0078    ejs function blend
0079    ejs function eval
0080    ejs function formatStack
0081    ejs function hashcode
0082    ejs function isNaN
0083    ejs function isFinite
0084    ejs function load
0085    ejs function print
0086    ejs function parse
0087    ejs function parseFloat
0088    ejs function parseInt
0089    ejs function printHash
0090    ejs function instanceOf
0091    ejs function error
0092    ejs function input
0093    ejs function output
0094    ejs var Http: Type
0095    iterator var Iterable: Type
0096    iterator var Iterator: Type
0097    iterator var StopIteration: Type
0098    ejs var JSON: Type
0099    ejs function deserialize
0100    ejs function serialize
0101    ejs var Locale: Type
0102    ejs var Logger: Type
0103    ejs var Math: Type
0104    ejs var Memory: Type
0105    ejs var Namespace: Type
0106    ejs var Null: Type
0107    ejs var Number: Type
0108    ejs var Object: Type
0109    ejs var Path: Type
0110    ejs var Promise: Type
0111    ejs var Reflect: Type
0112    ejs function typeOf
0113    ejs var RegExp: Type
0114    ejs var Socket: Type
0115    ejs var Stream: Type
0116    ejs var String: Type
0117    ejs var System: Type
0118    ejs var TextStream: Type
0119    ejs var Timer: Type
0120    ejs function setInterval
0121    ejs function setTimeout
0122    ejs var TimerEvent: Type
0123    ejs var Type: Type
0124    ejs var Uri: Type
0125    ejs function decodeUri
0126    ejs function decodeUriComponent
0127    ejs var Void: Type
0128    ejs var Worker: Type
0129    ejs.worker var self: Worker
0130    ejs.worker function exit
0131    ejs.worker function postMessage
0132    ejs.worker function onerror
0133    ejs.worker function onmessage
0134    ejs var XML: Type
0135    ejs var XMLHttp: Type
0136    ejs var XMLList: Type
0137    ejs.cjs function require
0138    public var Loader: Type

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "App" class (Num slots 52, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function App-initializer
0027    public var config: Object
0028    [ejs::App,private] var _errorStream
0029    [ejs::App,private] var _inputStream
0030    [ejs::App,private] var _outputStream
0031    internal-ed363076473b51ca685af450cc662b39-0 var defaultConfig
0032    public function args
0033    public function dir
0034    public function chdir
0035    public function exeDir
0036    public function exePath
0037    public function errorStream
0038    public function exit
0039    public function getenv
0040    public function inputStream
0041    public var logger
0042    public function name
0043    public function noexit
0044    public function outputStream
0045    public function putenv
0046    public function search
0047    public function createSearch
0048    public function serviceEvents
0049    public function sleep
0050    public function title
0051    public function version

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Array" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Array
0027    public function append
0028    public function clear
0029    public function compact
0030    public function concat
0031    public function contains
0032    public function every
0033    public function filter
0034    public function find
0035    public function findAll
0036    public function forEach
0037    public function indexOf
0038    public function insert
0039    public function join
0040    public function lastIndexOf
0041    public function length
0042    public function map
0043    public function pop
0044    public function push
0045    public function reject
0046    public function remove
0047    public function reverse
0048    public function shift
0049    public function slice
0050    public function some
0051    public function sort
0052    public function splice
0053    public function transform
0054    public function unique
0055    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "BinaryStream" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function BinaryStream
0027    -initializer- function BinaryStream-initializer
0028    public var BigEndian
0029    public var LittleEndian
0030    public function addListener
0031    public function async
0032    public function available
0033    public function close
0034    public function encoding
0035    public function endian
0036    public function flush
0037    public function read
0038    public function readBoolean
0039    public function readByte
0040    public function readDate
0041    public function readDouble
0042    public function readInteger
0043    public function readLong
0044    public function readString
0045    public function readXML
0046    public function removeListener
0047    public function room
0048    public function write
0049    public function writeByte
0050    public function writeShort
0051    public function writeDouble
0052    public function writeInteger
0053    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs::BinaryStream,private] var inbuf
0001    [ejs::BinaryStream,private] var outbuf
0002    [ejs::BinaryStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Block" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Boolean" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 64, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function ByteArray
0027    -initializer- function ByteArray-initializer
0028    public var LittleEndian
0029    public var BigEndian
0030    public function addListener
0031    public function available
0032    public function async
0033    public function close
0034    public function compact
0035    public function copyIn
0036    public function copyOut
0037    public function encoding
0038    public function endian
0039    public function flush
0040    public function length
0041    public function MD5
0042    public function read
0043    public function readBoolean
0044    public function readByte
0045    public function readDate
0046    public function readDouble
0047    public function readInteger
0048    public function readLong
0049    public function readPosition
0050    public function readShort
0051    public function readString
0052    public function removeListener
0053    public function reset
0054    public function room
0055    public function write
0056    public function writeByte
0057    public function writeShort
0058    public function writeDouble
0059    public function writeInteger
0060    public function writeLong
0061    public function writePosition
0062    public function input
0063    public function output

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Cmd" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function sh
0027    public function run
0028    public function daemon
0029    public function runx

#
#  Instance slot assignments for the "Cmd" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "CmdArgs" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function CmdArgs
0027    [ejs::CmdArgs,private] function parseTemplate
0028    [ejs::CmdArgs,private] function validate

#
#  Instance slot assignments for the "CmdArgs" class (Num prop 4, num inherited 0)
#
0000    public var args: Array
0001    public var options: Object
0002    [ejs::CmdArgs,private] var ranges: Object
0003    [ejs::CmdArgs,private] var aliases: Object

#
#  Class slot assignments for the "Config" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public var Debug: Boolean
0027    public var CPU
0028    public var OS
0029    public var Product
0030    public var Title
0031    public var Version
0032    public var LibDir
0033    public var BinDir
0034    public var ModDir

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Date" class (Num slots 87, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Date
0027    public function day
0028    public function dayOfYear
0029    public function date
0030    public function elapsed
0031    public function format
0032    public function formatUTC
0033    public function fullYear
0034    public function getDate
0035    public function getDay
0036    public function getFullYear
0037    public function getHours
0038    public function getMilliseconds
0039    public function getMinutes
0040    public function getMonth
0041    public function getSeconds
0042    public function getTime
0043    public function getTimezoneOffset
0044    public function getUTCDate
0045    public function getUTCDay
0046    public function getUTCFullYear
0047    public function getUTCHours
0048    public function getUTCMilliseconds
0049    public function getUTCMinutes
0050    public function getUTCMonth
0051    public function getUTCSeconds
0052    public function hours
0053    public function milliseconds
0054    public function minutes
0055    public function month
0056    public function nanoAge
0057    public function nextDay
0058    public function now
0059    public function parseDate
0060    public function parseUTCDate
0061    public function parse
0062    public function seconds
0063    public function setDate
0064    public function setFullYear
0065    public function setHours
0066    public function setMilliseconds
0067    public function setMinutes
0068    public function setMonth
0069    public function setSeconds
0070    public function setTime
0071    public function setUTCDate
0072    public function setUTCFullYear
0073    public function setUTCHours
0074    public function setUTCMilliseconds
0075    public function setUTCMinutes
0076    public function setUTCMonth
0077    public function setUTCSeconds
0078    public function time
0079    public function toDateString
0080    public function toISOString
0081    public function toLocaleDateString
0082    public function toLocaleTimeString
0083    public function toTimeString
0084    public function toUTCString
0085    public function UTC
0086    public function year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Emitter" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener

#
#  Instance slot assignments for the "Emitter" class (Num prop 1, num inherited 0)
#
0000    [ejs::Emitter,private] var endpoints: Object

#
#  Class slot assignments for the "Endpoint" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 4, num inherited 0)
#
0000    public var callback
0001    public var name
0002    public var active: Boolean
0003    public var again: Boolean

#
#  Class slot assignments for the "ArgError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "AssertError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InstructionError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Error" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "IOError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InternalError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "MemoryError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ReferenceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ResourceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SecurityError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SecurityError

#
#  Instance slot assignments for the "SecurityError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "StateError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SyntaxError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "TypeError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "URIError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Event" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event

#
#  Instance slot assignments for the "Event" class (Num prop 2, num inherited 0)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "ErrorEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function ErrorEvent

#
#  Instance slot assignments for the "ErrorEvent" class (Num prop 6, num inherited 2)
#
0000    public var data
0001    public var timestamp
0002    public var message
0003    public var filename
0004    public var lineno
0005    public var stack

#
#  Class slot assignments for the "File" class (Num slots 47, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function File
0027    public function addListener
0028    public function async
0029    public function canRead
0030    public function canWrite
0031    public function close
0032    public function encoding
0033    public function flush
0034    public function isOpen
0035    public function open
0036    public function options
0037    public function path
0038    public function position
0039    public function read
0040    public function readBytes
0041    public function readString
0042    public function remove
0043    public function removeListener
0044    public function size
0045    public function truncate
0046    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "FileSystem" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function FileSystem
0027    public function hasDrives
0028    public function newline
0029    public function root
0030    public function separators

#
#  Instance slot assignments for the "FileSystem" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Frame" class (Num slots 31, num inherited 31)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Frame" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Function" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function enabled
0027    public function workQuota
0028    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Http" class (Num slots 118, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Http
0027    -initializer- function Http-initializer
0028    public var Continue
0029    public var Ok
0030    public var Created
0031    public var Accepted
0032    public var NotAuthoritative
0033    public var NoContent
0034    public var Reset
0035    public var Partial
0036    public var MultipleChoice
0037    public var MovedPermanently
0038    public var MovedTemporarily
0039    public var SeeOther
0040    public var NotModified
0041    public var UseProxy
0042    public var BadRequest
0043    public var Unauthorized
0044    public var PaymentRequired
0045    public var Forbidden
0046    public var NotFound
0047    public var BadMethod
0048    public var NotAccepted
0049    public var ProxyAuth
0050    public var ClientTimeout
0051    public var Conflict
0052    public var Gone
0053    public var LengthRequired
0054    public var PrecondFailed
0055    public var EntityTooLarge
0056    public var ReqTooLong
0057    public var UnsupportedType
0058    public var ServerError
0059    public var NotImplemented
0060    public var BadGateway
0061    public var Unavailable
0062    public var GatewayTimeout
0063    public var Version
0064    public function addListener
0065    public function async
0066    public function chunkSize
0067    public function close
0068    public function connect
0069    public function certificate
0070    public function contentLength
0071    public function contentType
0072    public function date
0073    public function del
0074    public function encoding
0075    public function expires
0076    public function finalize
0077    public function flush
0078    public function followRedirects
0079    public function form
0080    public function get
0081    public function getRequestHeaders
0082    public function head
0083    public function header
0084    public function headers
0085    public function isSecure
0086    public function key
0087    public function lastModified
0088    public function method
0089    public function options
0090    public function post
0091    public function put
0092    public function read
0093    public function readString
0094    public function readLines
0095    public function readXml
0096    public function removeListener
0097    public function response
0098    public function retries
0099    public function setCredentials
0100    public function setHeader
0101    public function setHeaders
0102    public function status
0103    public function statusMessage
0104    public function success
0105    public function timeout
0106    public function trace
0107    public function upload
0108    public function uri
0109    public function wait
0110    public function write
0111    public function addHeader
0112    public function bodyLength
0113    public function code
0114    public function codeString
0115    public function available
0116    public function contentEncoding
0117    public function mimeType

#
#  Instance slot assignments for the "Http" class (Num prop 1, num inherited 0)
#
0000    [ejs::Http,private] var _response

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Iterator" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function parse
0027    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Locale" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Locale
0027    -initializer- function Locale-initializer
0028    public var textEncoding

#
#  Instance slot assignments for the "Locale" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Logger" class (Num slots 53, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Logger
0027    -initializer- function Logger-initializer
0028    public var Off
0029    public var Error
0030    public var Warn
0031    public var Info
0032    public var Config
0033    public var All
0034    public function addListener
0035    public function async
0036    public function close
0037    public function filter
0038    public function flush
0039    public function level
0040    public function match
0041    public function name
0042    public function outstream
0043    public function parent
0044    public function debug
0045    public function config
0046    public function error
0047    public function info
0048    public function read
0049    public function removeListener
0050    public function write
0051    public function warn
0052    [ejs::Logger,private] function emit

#
#  Instance slot assignments for the "Logger" class (Num prop 6, num inherited 0)
#
0000    [ejs::Logger,private] var _filter: Function
0001    [ejs::Logger,private] var _level
0002    [ejs::Logger,private] var _pattern
0003    [ejs::Logger,private] var _name
0004    [ejs::Logger,private] var _outstream: Stream
0005    [ejs::Logger,private] var _parent: Logger

#
#  Class slot assignments for the "Math" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Math-initializer
0027    public var E
0028    public var LN2
0029    public var LN10
0030    public var LOG2E
0031    public var LOG10E
0032    public var PI
0033    public var SQRT1_2
0034    public var SQRT2
0035    public function abs
0036    public function acos
0037    public function asin
0038    public function atan
0039    public function atan2
0040    public function ceil
0041    public function cos
0042    public function exp
0043    public function floor
0044    public function log10
0045    public function log
0046    public function max
0047    public function min
0048    public function pow
0049    public function random
0050    public function round
0051    public function sin
0052    public function sqrt
0053    public function tan

#
#  Instance slot assignments for the "Math" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Memory" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function allocated
0027    public function callback
0028    public function maximum
0029    public function peak
0030    public function redline
0031    public function resident
0032    public function stack
0033    public function system
0034    public function stats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Namespace" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Namespace" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Null" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Number" class (Num slots 49, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Number
0027    -initializer- function Number-initializer
0028    public var MAX_VALUE: Number
0029    public var MIN_VALUE: Number
0030    public var NaN: Number
0031    public var NEGATIVE_INFINITY: Number
0032    public var POSITIVE_INFINITY: Number
0033    public var MaxValue: Number
0034    public var MinValue: Number
0035    public function abs
0036    public function ceil
0037    public function floor
0038    public function isFinite
0039    public function isNaN
0040    public function round
0041    public function toExponential
0042    public function toFixed
0043    public function toPrecision
0044    public function byte
0045    public function integral
0046    public function max
0047    public function min
0048    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Object" class (Num slots 26, num inherited 0)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    public function create
0005    public function defineProperty
0006    public function defineProperties
0007    public function freeze
0008    iterator function get
0009    public function getOwnPropertyDescriptor
0010    public function getOwnPropertyNames
0011    public function getOwnPrototypeOf
0012    iterator function getValues
0013    public function hasOwnProperty
0014    public function isExtensible
0015    public function isFrozen
0016    public function isPrototypeOf
0017    public function isSealed
0018    public function keys
0019    public function preventExtensions
0020    public function propertyIsEnumerable
0021    public function seal
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Path" class (Num slots 85, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Path
0027    public function absolute
0028    public function accessed
0029    public function basename
0030    public function components
0031    public function contains
0032    public function copy
0033    public function created
0034    public function dirname
0035    public function endsWith
0036    public function exists
0037    public function extension
0038    public function find
0039    public function files
0040    public function hasDrive
0041    public function isAbsolute
0042    public function isDir
0043    public function isLink
0044    public function isRegular
0045    public function isRelative
0046    public function join
0047    public function joinExt
0048    public function length
0049    public function linkTarget
0050    public function makeDir
0051    public function makeLink
0052    public function makeTemp
0053    public function map
0054    public function mimeType
0055    public function modified
0056    public function name
0057    public function natural
0058    public function normalize
0059    public function open
0060    public function openTextStream
0061    public function openBinaryStream
0062    public function parent
0063    public function perms
0064    public function portable
0065    public function readBytes
0066    public function readLines
0067    public function readString
0068    public function readXML
0069    public function relative
0070    public function remove
0071    public function removeAll
0072    public function rename
0073    public function replaceExt
0074    public function resolve
0075    public function same
0076    public function separator
0077    public function size
0078    public function startsWith
0079    public function toLower
0080    public function trimEnd
0081    public function trimExt
0082    public function trimStart
0083    public function truncate
0084    public function write

#
#  Instance slot assignments for the "Path" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Promise" class (Num slots 47, num inherited 35)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener
0035    -constructor- function Promise
0036    internal-ed363076473b51ca685af450cc662b39-0 function addCallback
0037    internal-ed363076473b51ca685af450cc662b39-0 function addCancelback
0038    internal-ed363076473b51ca685af450cc662b39-0 function addErrback
0039    internal-ed363076473b51ca685af450cc662b39-0 function emitSuccess
0040    internal-ed363076473b51ca685af450cc662b39-0 function emitError
0041    internal-ed363076473b51ca685af450cc662b39-0 function emitCancel
0042    internal-ed363076473b51ca685af450cc662b39-0 function cancel
0043    internal-ed363076473b51ca685af450cc662b39-0 function then
0044    internal-ed363076473b51ca685af450cc662b39-0 function timeout
0045    internal-ed363076473b51ca685af450cc662b39-0 function wait
0046    [ejs::Promise,private] function issue

#
#  Instance slot assignments for the "Promise" class (Num prop 3, num inherited 1)
#
0000    [ejs::Emitter,private] var endpoints
0001    [ejs::Promise,private] var timer
0002    [ejs::Promise,private] var fired: Boolean

#
#  Class slot assignments for the "Reflect" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Reflect
0027    public function base
0028    public function isType
0029    public function type
0030    public function name

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [ejs::Reflect,private] var obj: Object

#
#  Class slot assignments for the "RegExp" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function RegExp
0027    public function lastIndex
0028    public function exec
0029    public function global
0030    public function ignoreCase
0031    public function multiline
0032    public function source
0033    public function matched
0034    public function replace
0035    public function split
0036    public function start
0037    public function sticky
0038    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Socket" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Socket
0027    public function addListener
0028    public function accept
0029    public function address
0030    public function async
0031    public function close
0032    public function connect
0033    public function encoding
0034    public function flush
0035    public function listen
0036    public function port
0037    public function read
0038    public function remoteAddress
0039    public function removeListener
0040    public function write

#
#  Instance slot assignments for the "Socket" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Stream" class (Num slots 7, num inherited 0)
#
0000    public function addListener
0001    public function async
0002    public function close
0003    public function flush
0004    public function read
0005    public function removeListener
0006    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "String" class (Num slots 68, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function String
0027    public function caseCompare
0028    public function caselessCompare
0029    public function charAt
0030    public function charCodeAt
0031    public function concat
0032    public function contains
0033    public function endsWith
0034    public function format
0035    public function fromCharCode
0036    public function indexOf
0037    public function isDigit
0038    public function isAlpha
0039    public function isAlphaNum
0040    public function isLower
0041    public function isSpace
0042    public function isUpper
0043    public function lastIndexOf
0044    public function length
0045    public function match
0046    public function parseJSON
0047    public function toCamel
0048    public function toPascal
0049    public function printable
0050    public function quote
0051    public function remove
0052    public function replace
0053    public function reverse
0054    public function search
0055    public function slice
0056    public function split
0057    public function startsWith
0058    public function substring
0059    public function times
0060    public function tokenize
0061    public function toLower
0062    public function toUpper
0063    public function trim
0064    public function trimStart
0065    public function trimEnd
0066    public function -
0067    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 36, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function System-initializer
0027    public var Bufsize: Number
0028    public function hostname
0029    public function ipaddr
0030    public function run
0031    public function runx
0032    public function daemon
0033    public function sh
0034    public function cmd
0035    public function exec

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TextStream" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TextStream
0027    public function addListener
0028    public function async
0029    public function available
0030    public function close
0031    public function encoding
0032    public function fill
0033    public function flush
0034    public function read
0035    public function readLine
0036    public function readLines
0037    public function readString
0038    public function removeListener
0039    public function write
0040    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs::TextStream,private] var newline: String
0001    [ejs::TextStream,private] var inbuf: ByteArray
0002    [ejs::TextStream,private] var format: String
0003    [ejs::TextStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Timer" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Timer
0027    public function drift
0028    public function period
0029    public function restart
0030    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TimerEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function TimerEvent

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 2, num inherited 2)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "Type" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Uri" class (Num slots 65, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Uri
0027    public function basename
0028    public function complete
0029    public function components
0030    public function decode
0031    public function decodeComponent
0032    public function dirname
0033    public function encode
0034    public function encodeComponent
0035    public function endsWith
0036    public function extension
0037    public function hasExtension
0038    public function hasHost
0039    public function hasPort
0040    public function hasQuery
0041    public function hasReference
0042    public function hasScheme
0043    public function host
0044    public function isAbsolute
0045    public function isDir
0046    public function isRegular
0047    public function isRelative
0048    public function join
0049    public function joinExt
0050    public function mimeType
0051    public function normalize
0052    public function path
0053    public function port
0054    public function scheme
0055    public function query
0056    public function reference
0057    public function relative
0058    public function replaceExt
0059    public function same
0060    public function startsWith
0061    public function trimEnd
0062    public function trimExt
0063    public function trimStart
0064    public function uri

#
#  Instance slot assignments for the "Uri" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Void" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Worker" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Worker
0027    public function eval
0028    public function exit
0029    public function join
0030    public function load
0031    public function preload
0032    public function preeval
0033    public function lookup
0034    public function postMessage
0035    public function terminate
0036    public function waitForMessage

#
#  Instance slot assignments for the "Worker" class (Num prop 4, num inherited 0)
#
0000    public var onclose: Function
0001    public var onmessage: Function
0002    public var onerror: Function
0003    public var name: String

#
#  Class slot assignments for the "XML" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XML
0027    public function load
0028    public function save
0029    public function length
0030    public function name

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "XMLHttp" class (Num slots 48, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLHttp
0027    -initializer- function XMLHttp-initializer
0028    public var Uninitialized
0029    public var Open
0030    public var Sent
0031    public var Receiving
0032    public var Loaded
0033    public function abort
0034    public function http
0035    public function readyState
0036    public function responseText
0037    public function responseXML
0038    public function responseBody
0039    public function status
0040    public function statusText
0041    public function getAllResponseHeaders
0042    public function getResponseHeader
0043    public function open
0044    public function send
0045    public function setRequestHeader
0046    [ejs::XMLHttp,private] function callback
0047    [ejs::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs::XMLHttp,private] var hp: Http
0001    [ejs::XMLHttp,private] var state: Number
0002    [ejs::XMLHttp,private] var response: ByteArray
0003    public var onreadystatechange: Function

#
#  Class slot assignments for the "XMLList" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLList
0027    public function length
0028    public function name

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Loader" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Loader-initializer
0027    public var mainId
0028    [Loader,private] var signatures
0029    [Loader,private] var timestamps
0030    [Loader,private] var defaultExtensions
0031    [Loader,private] var config
0032    internal-ed363076473b51ca685af450cc662b39-0 function init
0033    public function require
0034    public function load
0035    public function cached
0036    public function wrap
0037    [Loader,private] function locate
0038    public function setConfig

#
#  Instance slot assignments for the "Loader" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 3543 bytes)
#
0000   ""
0001   "ejs.es"
0002   "}"
0003   "internal-ed363076473b51ca685af450cc662b39-0"
0004   "ejs.cjs"
0005   "module ejs.cjs {"
0006   "    function require(id: String): Object"
0007   "        Loader.require(id)"
0008   "require"
0009   "public"
0010   "id"
0011   "private"
0012   "String"
0013   "ejs"
0014   "Object"
0015   "    public class Loader {"
0016   "        public  static var mainId"
0017   "mainId"
0018   "        private static var signatures = {}"
0019   "signatures"
0020   "[Loader,private]"
0021   "        private static var timestamps = {}"
0022   "timestamps"
0023   "        private static const defaultExtensions = [".es", ".js"]"
0024   "defaultExtensions"
0025   ".es"
0026   ""
0027   ".js"
0028   "        private static var config"
0029   "config"
0030   "        static function init(mainId: String? = null) {"
0031   "            require.main = mainId"
0032   "main"
0033   "        }"
0034   "init"
0035   "        public static function require(id: String): Object {"
0036   "path"
0037   "            let path: Path = locate(id)"
0038   "locate"
0039   "            let exports = signatures[path]"
0040   "exports"
0041   "            if (!exports || path.modified > timestamps[path]) {"
0042   "modified"
0043   "                return load(id, path)"
0044   "load"
0045   "            return exports"
0046   "Path"
0047   "        public static function load(id: String, path: Path, codeReader: Function? = null): Object {"
0048   "initializer"
0049   "            let initializer, code"
0050   "code"
0051   "            if (path) {"
0052   "cache"
0053   "-hoisted-5"
0054   "                let cache: Path = cached(path)"
0055   "cached"
0056   "                if (cache && cache.exists && cache.modified >= path.modified) {"
0057   "exists"
0058   "                    initializer = global.load(cache)"
0059   "                } else {"
0060   "                    if (codeReader) {"
0061   "                        code = codeReader(path)"
0062   "                    } else {"
0063   "                        code = path.readString()"
0064   "readString"
0065   "                        code = wrap(code)"
0066   "wrap"
0067   "                    }"
0068   "                    initializer = eval(code, cache)"
0069   "                }"
0070   "                timestamps[path] = path.modified"
0071   "            } else {"
0072   "                code = wrap(code)"
0073   "                initializer = eval(code)"
0074   "            }"
0075   "            signatures[path] = exports = {}"
0076   "            initializer(require, exports, {id: id, path: path}, null)"
0077   "codeReader"
0078   "Function"
0079   "        public static function cached(path: Path, cachedir: Path? = null): Path {"
0080   "            config ||= App.config"
0081   "            if (path && config.cache.enable) {"
0082   "enable"
0083   "dir"
0084   "-hoisted-2"
0085   "                let dir = cachedir || Path(config.directories.cache) || Path("cache")"
0086   "directories"
0087   "                if (dir.exists) {"
0088   "                    return Path(dir).join(md5(path)).joinExt('.mod')"
0089   "join"
0090   ".mod"
0091   "joinExt"
0092   "            return null"
0093   "cachedir"
0094   "        public static function wrap(code: String): String"
0095   "            "(function(require, exports, module, system) {\n" + code + "\n})""
0096   "(function(require, exports, module, system) {
"
0097   "
})"
0098   "        private static function locate(id: Path) {"
0099   "            if (id.exists) {"
0100   "                return id"
0101   "            } "
0102   "            let extensions = config.extensions || defaultExtensions"
0103   "extensions"
0104   "            for each (let dir: Path in App.search) {"
0105   "search"
0106   "getValues"
0107   "iterator"
0108   "                for each (ext in extensions) {"
0109   "ext"
0110   "-hoisted-3"
0111   "                    let path: Path = Path(dir).join(id)"
0112   "                    path = path.joinExt(ext)"
0113   "                    if (path.exists) {"
0114   "                        return path"
0115   "            throw new IOError("Can't find module \"" + id + "\"")"
0116   "Can't find module ""
0117   """
0118   "StopIteration"
0119   "        public static function setConfig(newConfig): Void"
0120   "            config = newConfig"
0121   "setConfig"
0122   "newConfig"
0123   "Void"
0124   "Loader"
0125   "Loader-initializer"
0126   "-initializer-"
0127   "constructor"
0128   "length"
0129   "Number"
0130   "prototype"
0131   "clone"
0132   "get"
0133   "Iterator"
0134   "hasOwnProperty"
0135   "Boolean"
0136   "isPrototypeOf"
0137   "propertyIsEnumerable"
0138   "toJSON"
0139   "toLocaleString"
0140   "toString"
0141   "valueOf"
0142   "block_11918_250"
0143   "-block-"
0144   "__initializer__"

==============================================================================================

MODULE:   ejs.unix <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_12065_264 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 02 8e c0 01 10 .......... debug 

    # ejs.es:12295              }

    0009: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0011: [0] 01 6c ...................... addNamespace <ejs.unix> 
    0013: [0] 33 02 c2 bc 01 7e .......... debug 

    # ejs.es:12065              module ejs.unix {

    0019: [0] 33 02 c6 bc 01 a2 01 ....... debug 

    # ejs.es:12067                  use default namespace public

    0026: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0028: [1] 02 ......................... addNamespaceRef 
    0029: [0] 33 02 d4 bc 01 e4 01 ....... debug 

    # ejs.es:12074                  function basename(path: String): Path

    0036: [0] 33 02 e4 bc 01 ca 03 ....... debug 

    # ejs.es:12082                  function chdir(dir: Object): Void

    0043: [0] 33 02 f4 bc 01 f0 04 ....... debug 

    # ejs.es:12090                  function chmod(path: String, perms: Number): Void

    0050: [0] 33 02 9c bd 01 c4 06 ....... debug 

    # ejs.es:12110                  function cp(fromPath: String, toPath: String): void

    0057: [0] 33 02 ac bd 01 ae 08 ....... debug 

    # ejs.es:12118                  function dirname(path: String): Path

    0064: [0] 33 02 bc bd 01 c6 09 ....... debug 

    # ejs.es:12126                  function exists(path: String): Boolean

    0071: [0] 33 02 ce bd 01 ee 0a ....... debug 

    # ejs.es:12135                  function extension(path: String): String

    0078: [0] 33 02 dc bd 01 96 0c ....... debug 

    # ejs.es:12142                  function freeSpace(path: String? = null): Number

    0085: [0] 33 02 ec bd 01 e0 0d ....... debug 

    # ejs.es:12150                  function isDir(path: String): Boolean

    0092: [0] 33 02 fc bd 01 f2 0e ....... debug 

    # ejs.es:12158                  function kill(pid: Number, signal: Number = 2): Void {

    0099: [0] 33 02 9c be 01 b0 13 ....... debug 

    # ejs.es:12174                  function ls(path: String = ".", enumDirs: Boolean = false): Array

    0106: [0] 33 02 b2 be 01 b6 15 ....... debug 

    # ejs.es:12185                  function find(path: Object, glob: String = "*", recurse: Boolean = true): Array {

    0113: [0] 33 02 da be 01 8c 1c ....... debug 

    # ejs.es:12205                  function mkdir(path: String, permissions: Number = 0755): void

    0120: [0] 33 02 ec be 01 b4 1e ....... debug 

    # ejs.es:12214                  function mv(fromFile: String, toFile: String): void

    0127: [0] 33 02 92 bf 01 a4 20 ....... debug 

    # ejs.es:12233                  function pwd(): Path

    0134: [0] 33 02 b8 bf 01 fe 20 ....... debug 

    # ejs.es:12252                  function rm(path: Path): void {

    0141: [0] 33 02 d2 bf 01 96 24 ....... debug 

    # ejs.es:12265                  function rmdir(path: Path, contents: Boolean = false): void {

    0148: [0] 33 02 ec bf 01 82 27 ....... debug 

    # ejs.es:12278                  function tempname(directory: String? = null): File

    0155: [0] 24 ......................... closeBlock 
    0156: [0] 3b ......................... endCode 
    

BLOCK:      [block_12065_264-00]  block_12065_264 (Slots 0)

FUNCTION:   [basename-139]  public function basename(path: String) : Path

     ARG:   [arg-00]   private path : String

    0000: [0] 33 02 d6 bc 01 b8 02 ....... debug 

    # ejs.es:12075                      Path(path).basename

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 7b f0 02 82 03 ............. getObjName <basename> <public> 
    0018: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String

FUNCTION:   [chdir-140]  public function chdir(dir: Object) : Void

     ARG:   [arg-00]   private dir : Object

    0000: [0] 33 02 e6 bc 01 96 04 ....... debug 

    # ejs.es:12083                      App.chdir(dir)

    0007: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0009: [1] 5b ......................... getLocalSlot0 
    0010: [2] 1e c4 04 82 03 02 .......... callObjName <chdir> <public> <argc: 1> 
    0016: [0] 93 ......................... pushResult 
    0017: [1] bf ......................... returnValue 
    
VARIABLE:   [dir-00]  private var dir : Object

FUNCTION:   [chmod-141]  public function chmod(path: String, perms: Number) : Void

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private perms : Number

    0000: [0] 33 02 f6 bc 01 dc 05 ....... debug 

    # ejs.es:12091                      Path(path).perms = perms

    0007: [0] 5c ......................... getLocalSlot1 
    0008: [1] 39 ......................... dup 
    0009: [2] 5b ......................... getLocalSlot0 
    0010: [3] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0014: [2] 93 ......................... pushResult 
    0015: [3] b3 9e 06 82 03 ............. putObjName <perms> <public> 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String
VARIABLE:   [perms-01]  private var perms : Number

FUNCTION:   [cp-142]  public function cp(fromPath: String, toPath: String) : Void

     ARG:   [arg-00]   private fromPath : String
     ARG:   [arg-01]   private toPath : String

    0000: [0] 33 02 9e bd 01 b4 07 ....... debug 

    # ejs.es:12111                      Path(fromPath).copy(toPath) 

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 5c ......................... getLocalSlot1 
    0014: [2] 1e fe 07 82 03 02 .......... callObjName <copy> <public> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [fromPath-00]  private var fromPath : String
VARIABLE:   [toPath-01]  private var toPath : String

FUNCTION:   [dirname-143]  public function dirname(path: String) : Path

     ARG:   [arg-00]   private path : String

    0000: [0] 33 02 ae bd 01 80 09 ....... debug 

    # ejs.es:12119                      Path(path).dirname

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 7b b6 09 82 03 ............. getObjName <dirname> <public> 
    0018: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String

FUNCTION:   [exists-144]  public function exists(path: String) : Boolean

     ARG:   [arg-00]   private path : String

    0000: [0] 33 02 be bd 01 9c 0a ....... debug 

    # ejs.es:12127                      Path(path).exists

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 7b d0 0a 82 03 ............. getObjName <exists> <public> 
    0018: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String

FUNCTION:   [extension-145]  public function extension(path: String) : String

     ARG:   [arg-00]   private path : String

    0000: [0] 33 02 d0 bd 01 c8 0b ....... debug 

    # ejs.es:12136                      Path(path).extension

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 7b 82 0c 82 03 ............. getObjName <extension> <public> 
    0018: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String

FUNCTION:   [freeSpace-146]  public function freeSpace(path: String) : Number

     ARG:   [arg-00]   private path : String

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 de bd 01 80 0d ....... debug 

    # ejs.es:12143                      FileSystem(path).freeSpace()

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 17 4a 02 ................... callGlobalSlot <slot: 37> <argc: 1> 
    0018: [0] 93 ......................... pushResult 
    0019: [1] 1e ca 0d de 0d 00 .......... callObjName <freeSpace> <> <argc: 0> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String

FUNCTION:   [isDir-147]  public function isDir(path: String) : Boolean

     ARG:   [arg-00]   private path : String

    0000: [0] 33 02 ee bd 01 b4 0e ....... debug 

    # ejs.es:12151                      Path(path).isDir

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 7b e6 0e 82 03 ............. getObjName <isDir> <public> 
    0018: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String

FUNCTION:   [kill-148]  public function kill(pid: Number, signal: Number) : Void

     ARG:   [arg-00]   private pid : Number
     ARG:   [arg-01]   private signal : Number

    0000: [0] 41 02 02 04 ................ initDefaultArgs8 <2> <4> <6> 
    0004: [0] 46 ......................... load2 
    0005: [1] 95 ......................... putLocalSlot1 
    0006: [0] 33 02 fe bd 01 e8 0f ....... debug 

    # ejs.es:12159                      if (Config.OS == "WIN") {

    0013: [0] 7e 1c ...................... getGlobalSlot <slot: 14> 
    0015: [1] 7b ac 10 82 03 ............. getObjName <OS> <public> 
    0020: [1] 56 b2 10 ................... loadString <WIN> 
    0023: [2] 25 ......................... compareEq 
    0024: [1] 13 1c ...................... branchFalse8 <addr: 54> 
    0026: [0] 33 02 80 be 01 ba 10 ....... debug 

    # ejs.es:12160                          Cmd.run("/bin/kill -f -" + signal + " " + pid)

    0033: [0] 7e 14 ...................... getGlobalSlot <slot: 10> 
    0035: [1] 56 b0 11 ................... loadString </bin/kill -f -> 
    0038: [2] 5c ......................... getLocalSlot1 
    0039: [3] 00 ......................... add 
    0040: [2] 56 ce 11 ................... loadString < > 
    0043: [3] 00 ......................... add 
    0044: [2] 5b ......................... getLocalSlot0 
    0045: [3] 00 ......................... add 
    0046: [2] 1e d2 11 82 03 02 .......... callObjName <run> <public> <argc: 1> 
    0052: [0] 3e 21 ...................... goto8 <addr: 87> 
    0054: [0] 33 02 82 be 01 da 11 ....... debug 

    # ejs.es:12161                      } else {

    0061: [0] 33 02 84 be 01 fc 11 ....... debug 

    # ejs.es:12162                          Cmd.run("/bin/kill -" + signal + " " + pid)

    0068: [0] 7e 14 ...................... getGlobalSlot <slot: 10> 
    0070: [1] 56 ec 12 ................... loadString </bin/kill -> 
    0073: [2] 5c ......................... getLocalSlot1 
    0074: [3] 00 ......................... add 
    0075: [2] 56 ce 11 ................... loadString < > 
    0078: [3] 00 ......................... add 
    0079: [2] 5b ......................... getLocalSlot0 
    0080: [3] 00 ......................... add 
    0081: [2] 1e d2 11 82 03 02 .......... callObjName <run> <public> <argc: 1> 
    0087: [0] 54 ......................... loadNull 
    0088: [1] bf ......................... returnValue 
    0089: [0] 33 02 88 be 01 84 13 ....... debug 

    # ejs.es:12164                  }
    
VARIABLE:   [pid-00]  private var pid : Number
VARIABLE:   [signal-01]  private var signal : Number

FUNCTION:   [ls-149]  public function ls(path: String, enumDirs: Boolean) : Array

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private enumDirs : Boolean

    0000: [0] 41 03 03 07 0a ............. initDefaultArgs8 <3> <5> <9> <12> 
    0005: [0] 56 bc 14 ................... loadString <.> 
    0008: [1] 94 ......................... putLocalSlot0 
    0009: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0011: [1] 95 ......................... putLocalSlot1 
    0012: [0] 33 02 9e be 01 c0 14 ....... debug 

    # ejs.es:12175                      Path(path).files(enumDirs)

    0019: [0] 5b ......................... getLocalSlot0 
    0020: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0024: [0] 93 ......................... pushResult 
    0025: [1] 5c ......................... getLocalSlot1 
    0026: [2] 1e 86 15 82 03 02 .......... callObjName <files> <public> <argc: 1> 
    0032: [0] 93 ......................... pushResult 
    0033: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String
VARIABLE:   [enumDirs-01]  private var enumDirs : Boolean

FUNCTION:   [find-150]  public function find(path: Object, glob: String, recurse: Boolean) : Array

     ARG:   [arg-00]   private path : Object
     ARG:   [arg-01]   private glob : String
     ARG:   [arg-02]   private recurse : Boolean
   LOCAL:   [local-03] var result
   LOCAL:   [local-04] var paths
   LOCAL:   [local-05] var path

    0000: [0] 41 03 03 07 0b ............. initDefaultArgs8 <3> <5> <9> <13> 
    0005: [0] 56 e2 16 ................... loadString <*> 
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0012: [1] 96 ......................... putLocalSlot2 
    0013: [0] 33 02 b4 be 01 f4 16 ....... debug 

    # ejs.es:12186                      let result = []

    0020: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0022: [1] 89 ......................... new 
    0023: [1] 97 ......................... putLocalSlot3 
    0024: [0] 33 02 b6 be 01 a4 17 ....... debug 

    # ejs.es:12187                      if (path is Array) {

    0031: [0] 5b ......................... getLocalSlot0 
    0032: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0034: [2] 43 ......................... isA 
    0035: [1] 13 3c ...................... branchFalse8 <addr: 97> 
    0037: [0] 33 02 b8 be 01 80 18 ....... debug 

    # ejs.es:12188                          let paths = path

    0044: [0] 5b ......................... getLocalSlot0 
    0045: [1] 98 ......................... putLocalSlot4 
    0046: [0] 33 02 ba be 01 ba 18 ....... debug 

    # ejs.es:12189                          for each (path in paths) {

    0053: [0] 5f ......................... getLocalSlot4 
    0054: [1] 1e 9e 19 b2 19 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0060: [0] 93 ......................... pushResult 
    0061: [1] 39 ......................... dup 
    0062: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0065: [1] 93 ......................... pushResult 
    0066: [2] 99 ......................... putLocalSlot5 
    0067: [1] 33 02 bc be 01 c4 19 ....... debug 

    # ejs.es:12190                              result += Path(path).find(glob, recurse)

    0074: [1] 5e ......................... getLocalSlot3 
    0075: [2] 60 ......................... getLocalSlot5 
    0076: [3] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0080: [2] 93 ......................... pushResult 
    0081: [3] 5c ......................... getLocalSlot1 
    0082: [4] 5d ......................... getLocalSlot2 
    0083: [5] 1e b6 1a 82 03 04 .......... callObjName <find> <public> <argc: 2> 
    0089: [2] 93 ......................... pushResult 
    0090: [3] 00 ......................... add 
    0091: [2] 97 ......................... putLocalSlot3 
    0092: [1] 3e df ...................... goto8 <addr: 61> 
    0094: [1] 90 ......................... pop 
    0095: [0] 3e 20 ...................... goto8 <addr: 129> 
    0097: [0] 33 02 c0 be 01 da 11 ....... debug 

    # ejs.es:12192                      } else {

    0104: [0] 33 02 c2 be 01 c0 1a ....... debug 

    # ejs.es:12193                          result += Path(path).find(glob, recurse)

    0111: [0] 5e ......................... getLocalSlot3 
    0112: [1] 5b ......................... getLocalSlot0 
    0113: [2] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0117: [1] 93 ......................... pushResult 
    0118: [2] 5c ......................... getLocalSlot1 
    0119: [3] 5d ......................... getLocalSlot2 
    0120: [4] 1e b6 1a 82 03 04 .......... callObjName <find> <public> <argc: 2> 
    0126: [1] 93 ......................... pushResult 
    0127: [2] 00 ......................... add 
    0128: [1] 97 ......................... putLocalSlot3 
    0129: [0] 33 02 c6 be 01 aa 1b ....... debug 

    # ejs.es:12195                      return result

    0136: [0] 5e ......................... getLocalSlot3 
    0137: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     62      65         94           94       StopIteration

VARIABLE:   [path-00]  private var path : Object
VARIABLE:   [glob-01]  private var glob : String
VARIABLE:   [recurse-02]  private var recurse : Boolean
VARIABLE:   [result-03]  private var result
VARIABLE:   [paths-04]  -hoisted-4 static var paths
VARIABLE:   [path-05]  -hoisted-5 static var path

FUNCTION:   [mkdir-151]  public function mkdir(path: String, permissions: Number) : Void

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private permissions : Number

    0000: [0] 41 02 02 06 ................ initDefaultArgs8 <2> <4> <8> 
    0004: [0] 51 da 07 ................... loadInt <493> 
    0007: [1] 95 ......................... putLocalSlot1 
    0008: [0] 33 02 dc be 01 92 1d ....... debug 

    # ejs.es:12206                      Path(path).makeDir({permissions: permissions})

    0015: [0] 5b ......................... getLocalSlot0 
    0016: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] 56 00 ...................... loadString <> 
    0023: [2] 56 80 1e ................... loadString <permissions> 
    0026: [3] 5c ......................... getLocalSlot1 
    0027: [4] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0032: [2] 1e 98 1e 82 03 02 .......... callObjName <makeDir> <public> <argc: 1> 
    0038: [0] 93 ......................... pushResult 
    0039: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : String
VARIABLE:   [permissions-01]  private var permissions : Number

FUNCTION:   [mv-152]  public function mv(fromFile: String, toFile: String) : Void

     ARG:   [arg-00]   private fromFile : String
     ARG:   [arg-01]   private toFile : String

    0000: [0] 33 02 ee be 01 a4 1f ....... debug 

    # ejs.es:12215                      Path(fromFile).rename(toFile)

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 5c ......................... getLocalSlot1 
    0014: [2] 1e f0 1f 82 03 02 .......... callObjName <rename> <public> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [fromFile-00]  private var fromFile : String
VARIABLE:   [toFile-01]  private var toFile : String

FUNCTION:   [pwd-153]  public function pwd() : Path


    0000: [0] 33 02 94 bf 01 d6 20 ....... debug 

    # ejs.es:12234                      App.dir

    0007: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0009: [1] 7b d0 04 82 03 ............. getObjName <dir> <public> 
    0014: [1] bf ......................... returnValue 
    

FUNCTION:   [rm-154]  public function rm(path: Path) : Void

     ARG:   [arg-00]   private path : Path

    0000: [0] 33 02 ba bf 01 c6 21 ....... debug 

    # ejs.es:12253                      if (path.isDir) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7b e6 0e 82 03 ............. getObjName <isDir> <public> 
    0013: [1] 13 1b ...................... branchFalse8 <addr: 42> 
    0015: [0] 33 02 bc bf 01 fa 21 ....... debug 

    # ejs.es:12254                          throw new ArgError(path.toString() + " is a directory")

    0022: [0] 7e 24 ...................... getGlobalSlot <slot: 18> 
    0024: [1] 89 ......................... new 
    0025: [1] 5b ......................... getLocalSlot0 
    0026: [2] 1e 82 23 82 03 00 .......... callObjName <toString> <public> <argc: 0> 
    0032: [1] 93 ......................... pushResult 
    0033: [2] 56 94 23 ................... loadString < is a directory> 
    0036: [3] 00 ......................... add 
    0037: [2] 20 02 ...................... callConstructor <argc: 1> 
    0039: [1] c6 ......................... throw 
    0040: [1] 3e 00 ...................... goto8 <addr: 42> 
    0042: [1] 33 02 be bf 01 b4 23 ....... debug 

    # ejs.es:12255                      } 

    0049: [1] 33 02 c0 bf 01 ca 23 ....... debug 

    # ejs.es:12256                      Path(path).remove()

    0056: [1] 5b ......................... getLocalSlot0 
    0057: [2] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0061: [1] 93 ......................... pushResult 
    0062: [2] 1e 82 24 82 03 00 .......... callObjName <remove> <public> <argc: 0> 
    0068: [1] 54 ......................... loadNull 
    0069: [2] bf ......................... returnValue 
    0070: [0] 33 02 c2 bf 01 84 13 ....... debug 

    # ejs.es:12257                  }
    
VARIABLE:   [path-00]  private var path : Path

FUNCTION:   [rmdir-155]  public function rmdir(path: Path, contents: Boolean) : Void

     ARG:   [arg-00]   private path : Path
     ARG:   [arg-01]   private contents : Boolean

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 d4 bf 01 9a 25 ....... debug 

    # ejs.es:12266                      if (contents) {

    0014: [0] 5c ......................... getLocalSlot1 
    0015: [1] 13 15 ...................... branchFalse8 <addr: 38> 
    0017: [0] 33 02 d6 bf 01 ca 25 ....... debug 

    # ejs.es:12267                          Path(path).removeAll()

    0024: [0] 5b ......................... getLocalSlot0 
    0025: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0029: [0] 93 ......................... pushResult 
    0030: [1] 1e 90 26 82 03 00 .......... callObjName <removeAll> <public> <argc: 0> 
    0036: [0] 3e 1a ...................... goto8 <addr: 64> 
    0038: [0] 33 02 d8 bf 01 da 11 ....... debug 

    # ejs.es:12268                      } else {

    0045: [0] 33 02 da bf 01 a4 26 ....... debug 

    # ejs.es:12269                          Path(path).remove()

    0052: [0] 5b ......................... getLocalSlot0 
    0053: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0057: [0] 93 ......................... pushResult 
    0058: [1] 1e 82 24 82 03 00 .......... callObjName <remove> <public> <argc: 0> 
    0064: [0] 54 ......................... loadNull 
    0065: [1] bf ......................... returnValue 
    0066: [0] 33 02 de bf 01 84 13 ....... debug 

    # ejs.es:12271                  }
    
VARIABLE:   [path-00]  private var path : Path
VARIABLE:   [contents-01]  private var contents : Boolean

FUNCTION:   [tempname-156]  public function tempname(directory: String) : File

     ARG:   [arg-00]   private directory : String

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 02 ee bf 01 f0 27 ....... debug 

    # ejs.es:12279                      FileSystem.makeTemp(directory)

    0014: [0] 7e 4a ...................... getGlobalSlot <slot: 37> 
    0016: [1] 5b ......................... getLocalSlot0 
    0017: [2] 1e be 28 de 0d 02 .......... callObjName <makeTemp> <> <argc: 1> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [directory-00]  private var directory : String

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 185)
#
0000    public var stderr
0001    public var stdin
0002    public var stdout
0003    ejs var App: Type
0004    ejs function appInit
0005    ejs var Array: Type
0006    ejs var BinaryStream: Type
0007    ejs var Block: Type
0008    ejs var Boolean: Type
0009    ejs var ByteArray: Type
0010    ejs var Cmd: Type
0011    ejs var CmdArgs: Type
0012    public function gc
0013    public function readFile
0014    ejs var Config: Type
0015    ejs var Date: Type
0016    ejs var Emitter: Type
0017    internal-ed363076473b51ca685af450cc662b39-0 var Endpoint: Type
0018    ejs var ArgError: Type
0019    ejs var ArithmeticError: Type
0020    ejs var AssertError: Type
0021    ejs var InstructionError: Type
0022    ejs var Error: Type
0023    ejs var IOError: Type
0024    ejs var InternalError: Type
0025    ejs var MemoryError: Type
0026    ejs var OutOfBoundsError: Type
0027    ejs var ReferenceError: Type
0028    ejs var ResourceError: Type
0029    ejs var SecurityError: Type
0030    ejs var StateError: Type
0031    ejs var SyntaxError: Type
0032    ejs var TypeError: Type
0033    ejs var URIError: Type
0034    ejs var Event: Type
0035    ejs var ErrorEvent: Type
0036    ejs var File: Type
0037    ejs var FileSystem: Type
0038    ejs var Frame: Type
0039    ejs var Function: Type
0040    ejs function makeGetter
0041    ejs function clearBoundThis
0042    ejs var GC: Type
0043    public var EJSCRIPT: Boolean
0044    public var ECMA: Boolean
0045    public var ejs
0046    public var public
0047    public var internal
0048    public var iterator
0049    public var CONFIG
0050    ejs var TODO: Boolean
0051    ejs var FUTURE: Boolean
0052    ejs var ASC: Boolean
0053    ejs var DOC_ONLY: Boolean
0054    ejs var DEPRECATED: Boolean
0055    ejs var boolean
0056    ejs var double
0057    ejs var num
0058    ejs var string
0059    ejs var false: Boolean
0060    ejs var global: Object
0061    ejs var null
0062    ejs var Infinity
0063    ejs var NegativeInfinity
0064    ejs var NaN
0065    ejs var true: Boolean
0066    ejs var undefined
0067    ejs var void
0068    ejs function assert
0069    ejs function breakpoint
0070    ejs function cloneBase
0071    ejs function decodeURI
0072    ejs function dump
0073    ejs function dumpAll
0074    ejs function dumpDef
0075    ejs function encodeURI
0076    ejs function escape
0077    ejs function md5
0078    ejs function blend
0079    ejs function eval
0080    ejs function formatStack
0081    ejs function hashcode
0082    ejs function isNaN
0083    ejs function isFinite
0084    ejs function load
0085    ejs function print
0086    ejs function parse
0087    ejs function parseFloat
0088    ejs function parseInt
0089    ejs function printHash
0090    ejs function instanceOf
0091    ejs function error
0092    ejs function input
0093    ejs function output
0094    ejs var Http: Type
0095    iterator var Iterable: Type
0096    iterator var Iterator: Type
0097    iterator var StopIteration: Type
0098    ejs var JSON: Type
0099    ejs function deserialize
0100    ejs function serialize
0101    ejs var Locale: Type
0102    ejs var Logger: Type
0103    ejs var Math: Type
0104    ejs var Memory: Type
0105    ejs var Namespace: Type
0106    ejs var Null: Type
0107    ejs var Number: Type
0108    ejs var Object: Type
0109    ejs var Path: Type
0110    ejs var Promise: Type
0111    ejs var Reflect: Type
0112    ejs function typeOf
0113    ejs var RegExp: Type
0114    ejs var Socket: Type
0115    ejs var Stream: Type
0116    ejs var String: Type
0117    ejs var System: Type
0118    ejs var TextStream: Type
0119    ejs var Timer: Type
0120    ejs function setInterval
0121    ejs function setTimeout
0122    ejs var TimerEvent: Type
0123    ejs var Type: Type
0124    ejs var Uri: Type
0125    ejs function decodeUri
0126    ejs function decodeUriComponent
0127    ejs var Void: Type
0128    ejs var Worker: Type
0129    ejs.worker var self: Worker
0130    ejs.worker function exit
0131    ejs.worker function postMessage
0132    ejs.worker function onerror
0133    ejs.worker function onmessage
0134    ejs var XML: Type
0135    ejs var XMLHttp: Type
0136    ejs var XMLList: Type
0137    ejs.cjs function require
0138    public var Loader: Type
0139    public function basename
0140    public function chdir
0141    public function chmod
0142    public function cp
0143    public function dirname
0144    public function exists
0145    public function extension
0146    public function freeSpace
0147    public function isDir
0148    public function kill
0149    public function ls
0150    public function find
0151    public function mkdir
0152    public function mv
0153    public function pwd
0154    public function rm
0155    public function rmdir
0156    public function tempname

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "App" class (Num slots 52, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function App-initializer
0027    public var config: Object
0028    [ejs::App,private] var _errorStream
0029    [ejs::App,private] var _inputStream
0030    [ejs::App,private] var _outputStream
0031    internal-ed363076473b51ca685af450cc662b39-0 var defaultConfig
0032    public function args
0033    public function dir
0034    public function chdir
0035    public function exeDir
0036    public function exePath
0037    public function errorStream
0038    public function exit
0039    public function getenv
0040    public function inputStream
0041    public var logger
0042    public function name
0043    public function noexit
0044    public function outputStream
0045    public function putenv
0046    public function search
0047    public function createSearch
0048    public function serviceEvents
0049    public function sleep
0050    public function title
0051    public function version

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Array" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Array
0027    public function append
0028    public function clear
0029    public function compact
0030    public function concat
0031    public function contains
0032    public function every
0033    public function filter
0034    public function find
0035    public function findAll
0036    public function forEach
0037    public function indexOf
0038    public function insert
0039    public function join
0040    public function lastIndexOf
0041    public function length
0042    public function map
0043    public function pop
0044    public function push
0045    public function reject
0046    public function remove
0047    public function reverse
0048    public function shift
0049    public function slice
0050    public function some
0051    public function sort
0052    public function splice
0053    public function transform
0054    public function unique
0055    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "BinaryStream" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function BinaryStream
0027    -initializer- function BinaryStream-initializer
0028    public var BigEndian
0029    public var LittleEndian
0030    public function addListener
0031    public function async
0032    public function available
0033    public function close
0034    public function encoding
0035    public function endian
0036    public function flush
0037    public function read
0038    public function readBoolean
0039    public function readByte
0040    public function readDate
0041    public function readDouble
0042    public function readInteger
0043    public function readLong
0044    public function readString
0045    public function readXML
0046    public function removeListener
0047    public function room
0048    public function write
0049    public function writeByte
0050    public function writeShort
0051    public function writeDouble
0052    public function writeInteger
0053    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs::BinaryStream,private] var inbuf
0001    [ejs::BinaryStream,private] var outbuf
0002    [ejs::BinaryStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Block" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Boolean" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 64, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function ByteArray
0027    -initializer- function ByteArray-initializer
0028    public var LittleEndian
0029    public var BigEndian
0030    public function addListener
0031    public function available
0032    public function async
0033    public function close
0034    public function compact
0035    public function copyIn
0036    public function copyOut
0037    public function encoding
0038    public function endian
0039    public function flush
0040    public function length
0041    public function MD5
0042    public function read
0043    public function readBoolean
0044    public function readByte
0045    public function readDate
0046    public function readDouble
0047    public function readInteger
0048    public function readLong
0049    public function readPosition
0050    public function readShort
0051    public function readString
0052    public function removeListener
0053    public function reset
0054    public function room
0055    public function write
0056    public function writeByte
0057    public function writeShort
0058    public function writeDouble
0059    public function writeInteger
0060    public function writeLong
0061    public function writePosition
0062    public function input
0063    public function output

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Cmd" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function sh
0027    public function run
0028    public function daemon
0029    public function runx

#
#  Instance slot assignments for the "Cmd" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "CmdArgs" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function CmdArgs
0027    [ejs::CmdArgs,private] function parseTemplate
0028    [ejs::CmdArgs,private] function validate

#
#  Instance slot assignments for the "CmdArgs" class (Num prop 4, num inherited 0)
#
0000    public var args: Array
0001    public var options: Object
0002    [ejs::CmdArgs,private] var ranges: Object
0003    [ejs::CmdArgs,private] var aliases: Object

#
#  Class slot assignments for the "Config" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public var Debug: Boolean
0027    public var CPU
0028    public var OS
0029    public var Product
0030    public var Title
0031    public var Version
0032    public var LibDir
0033    public var BinDir
0034    public var ModDir

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Date" class (Num slots 87, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Date
0027    public function day
0028    public function dayOfYear
0029    public function date
0030    public function elapsed
0031    public function format
0032    public function formatUTC
0033    public function fullYear
0034    public function getDate
0035    public function getDay
0036    public function getFullYear
0037    public function getHours
0038    public function getMilliseconds
0039    public function getMinutes
0040    public function getMonth
0041    public function getSeconds
0042    public function getTime
0043    public function getTimezoneOffset
0044    public function getUTCDate
0045    public function getUTCDay
0046    public function getUTCFullYear
0047    public function getUTCHours
0048    public function getUTCMilliseconds
0049    public function getUTCMinutes
0050    public function getUTCMonth
0051    public function getUTCSeconds
0052    public function hours
0053    public function milliseconds
0054    public function minutes
0055    public function month
0056    public function nanoAge
0057    public function nextDay
0058    public function now
0059    public function parseDate
0060    public function parseUTCDate
0061    public function parse
0062    public function seconds
0063    public function setDate
0064    public function setFullYear
0065    public function setHours
0066    public function setMilliseconds
0067    public function setMinutes
0068    public function setMonth
0069    public function setSeconds
0070    public function setTime
0071    public function setUTCDate
0072    public function setUTCFullYear
0073    public function setUTCHours
0074    public function setUTCMilliseconds
0075    public function setUTCMinutes
0076    public function setUTCMonth
0077    public function setUTCSeconds
0078    public function time
0079    public function toDateString
0080    public function toISOString
0081    public function toLocaleDateString
0082    public function toLocaleTimeString
0083    public function toTimeString
0084    public function toUTCString
0085    public function UTC
0086    public function year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Emitter" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener

#
#  Instance slot assignments for the "Emitter" class (Num prop 1, num inherited 0)
#
0000    [ejs::Emitter,private] var endpoints: Object

#
#  Class slot assignments for the "Endpoint" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 4, num inherited 0)
#
0000    public var callback
0001    public var name
0002    public var active: Boolean
0003    public var again: Boolean

#
#  Class slot assignments for the "ArgError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "AssertError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InstructionError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Error" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "IOError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InternalError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "MemoryError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ReferenceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ResourceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SecurityError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SecurityError

#
#  Instance slot assignments for the "SecurityError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "StateError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SyntaxError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "TypeError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "URIError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Event" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event

#
#  Instance slot assignments for the "Event" class (Num prop 2, num inherited 0)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "ErrorEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function ErrorEvent

#
#  Instance slot assignments for the "ErrorEvent" class (Num prop 6, num inherited 2)
#
0000    public var data
0001    public var timestamp
0002    public var message
0003    public var filename
0004    public var lineno
0005    public var stack

#
#  Class slot assignments for the "File" class (Num slots 47, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function File
0027    public function addListener
0028    public function async
0029    public function canRead
0030    public function canWrite
0031    public function close
0032    public function encoding
0033    public function flush
0034    public function isOpen
0035    public function open
0036    public function options
0037    public function path
0038    public function position
0039    public function read
0040    public function readBytes
0041    public function readString
0042    public function remove
0043    public function removeListener
0044    public function size
0045    public function truncate
0046    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "FileSystem" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function FileSystem
0027    public function hasDrives
0028    public function newline
0029    public function root
0030    public function separators

#
#  Instance slot assignments for the "FileSystem" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Frame" class (Num slots 31, num inherited 31)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Frame" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Function" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function enabled
0027    public function workQuota
0028    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Http" class (Num slots 118, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Http
0027    -initializer- function Http-initializer
0028    public var Continue
0029    public var Ok
0030    public var Created
0031    public var Accepted
0032    public var NotAuthoritative
0033    public var NoContent
0034    public var Reset
0035    public var Partial
0036    public var MultipleChoice
0037    public var MovedPermanently
0038    public var MovedTemporarily
0039    public var SeeOther
0040    public var NotModified
0041    public var UseProxy
0042    public var BadRequest
0043    public var Unauthorized
0044    public var PaymentRequired
0045    public var Forbidden
0046    public var NotFound
0047    public var BadMethod
0048    public var NotAccepted
0049    public var ProxyAuth
0050    public var ClientTimeout
0051    public var Conflict
0052    public var Gone
0053    public var LengthRequired
0054    public var PrecondFailed
0055    public var EntityTooLarge
0056    public var ReqTooLong
0057    public var UnsupportedType
0058    public var ServerError
0059    public var NotImplemented
0060    public var BadGateway
0061    public var Unavailable
0062    public var GatewayTimeout
0063    public var Version
0064    public function addListener
0065    public function async
0066    public function chunkSize
0067    public function close
0068    public function connect
0069    public function certificate
0070    public function contentLength
0071    public function contentType
0072    public function date
0073    public function del
0074    public function encoding
0075    public function expires
0076    public function finalize
0077    public function flush
0078    public function followRedirects
0079    public function form
0080    public function get
0081    public function getRequestHeaders
0082    public function head
0083    public function header
0084    public function headers
0085    public function isSecure
0086    public function key
0087    public function lastModified
0088    public function method
0089    public function options
0090    public function post
0091    public function put
0092    public function read
0093    public function readString
0094    public function readLines
0095    public function readXml
0096    public function removeListener
0097    public function response
0098    public function retries
0099    public function setCredentials
0100    public function setHeader
0101    public function setHeaders
0102    public function status
0103    public function statusMessage
0104    public function success
0105    public function timeout
0106    public function trace
0107    public function upload
0108    public function uri
0109    public function wait
0110    public function write
0111    public function addHeader
0112    public function bodyLength
0113    public function code
0114    public function codeString
0115    public function available
0116    public function contentEncoding
0117    public function mimeType

#
#  Instance slot assignments for the "Http" class (Num prop 1, num inherited 0)
#
0000    [ejs::Http,private] var _response

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Iterator" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function parse
0027    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Locale" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Locale
0027    -initializer- function Locale-initializer
0028    public var textEncoding

#
#  Instance slot assignments for the "Locale" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Logger" class (Num slots 53, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Logger
0027    -initializer- function Logger-initializer
0028    public var Off
0029    public var Error
0030    public var Warn
0031    public var Info
0032    public var Config
0033    public var All
0034    public function addListener
0035    public function async
0036    public function close
0037    public function filter
0038    public function flush
0039    public function level
0040    public function match
0041    public function name
0042    public function outstream
0043    public function parent
0044    public function debug
0045    public function config
0046    public function error
0047    public function info
0048    public function read
0049    public function removeListener
0050    public function write
0051    public function warn
0052    [ejs::Logger,private] function emit

#
#  Instance slot assignments for the "Logger" class (Num prop 6, num inherited 0)
#
0000    [ejs::Logger,private] var _filter: Function
0001    [ejs::Logger,private] var _level
0002    [ejs::Logger,private] var _pattern
0003    [ejs::Logger,private] var _name
0004    [ejs::Logger,private] var _outstream: Stream
0005    [ejs::Logger,private] var _parent: Logger

#
#  Class slot assignments for the "Math" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Math-initializer
0027    public var E
0028    public var LN2
0029    public var LN10
0030    public var LOG2E
0031    public var LOG10E
0032    public var PI
0033    public var SQRT1_2
0034    public var SQRT2
0035    public function abs
0036    public function acos
0037    public function asin
0038    public function atan
0039    public function atan2
0040    public function ceil
0041    public function cos
0042    public function exp
0043    public function floor
0044    public function log10
0045    public function log
0046    public function max
0047    public function min
0048    public function pow
0049    public function random
0050    public function round
0051    public function sin
0052    public function sqrt
0053    public function tan

#
#  Instance slot assignments for the "Math" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Memory" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function allocated
0027    public function callback
0028    public function maximum
0029    public function peak
0030    public function redline
0031    public function resident
0032    public function stack
0033    public function system
0034    public function stats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Namespace" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Namespace" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Null" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Number" class (Num slots 49, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Number
0027    -initializer- function Number-initializer
0028    public var MAX_VALUE: Number
0029    public var MIN_VALUE: Number
0030    public var NaN: Number
0031    public var NEGATIVE_INFINITY: Number
0032    public var POSITIVE_INFINITY: Number
0033    public var MaxValue: Number
0034    public var MinValue: Number
0035    public function abs
0036    public function ceil
0037    public function floor
0038    public function isFinite
0039    public function isNaN
0040    public function round
0041    public function toExponential
0042    public function toFixed
0043    public function toPrecision
0044    public function byte
0045    public function integral
0046    public function max
0047    public function min
0048    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Object" class (Num slots 26, num inherited 0)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    public function create
0005    public function defineProperty
0006    public function defineProperties
0007    public function freeze
0008    iterator function get
0009    public function getOwnPropertyDescriptor
0010    public function getOwnPropertyNames
0011    public function getOwnPrototypeOf
0012    iterator function getValues
0013    public function hasOwnProperty
0014    public function isExtensible
0015    public function isFrozen
0016    public function isPrototypeOf
0017    public function isSealed
0018    public function keys
0019    public function preventExtensions
0020    public function propertyIsEnumerable
0021    public function seal
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Path" class (Num slots 85, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Path
0027    public function absolute
0028    public function accessed
0029    public function basename
0030    public function components
0031    public function contains
0032    public function copy
0033    public function created
0034    public function dirname
0035    public function endsWith
0036    public function exists
0037    public function extension
0038    public function find
0039    public function files
0040    public function hasDrive
0041    public function isAbsolute
0042    public function isDir
0043    public function isLink
0044    public function isRegular
0045    public function isRelative
0046    public function join
0047    public function joinExt
0048    public function length
0049    public function linkTarget
0050    public function makeDir
0051    public function makeLink
0052    public function makeTemp
0053    public function map
0054    public function mimeType
0055    public function modified
0056    public function name
0057    public function natural
0058    public function normalize
0059    public function open
0060    public function openTextStream
0061    public function openBinaryStream
0062    public function parent
0063    public function perms
0064    public function portable
0065    public function readBytes
0066    public function readLines
0067    public function readString
0068    public function readXML
0069    public function relative
0070    public function remove
0071    public function removeAll
0072    public function rename
0073    public function replaceExt
0074    public function resolve
0075    public function same
0076    public function separator
0077    public function size
0078    public function startsWith
0079    public function toLower
0080    public function trimEnd
0081    public function trimExt
0082    public function trimStart
0083    public function truncate
0084    public function write

#
#  Instance slot assignments for the "Path" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Promise" class (Num slots 47, num inherited 35)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener
0035    -constructor- function Promise
0036    internal-ed363076473b51ca685af450cc662b39-0 function addCallback
0037    internal-ed363076473b51ca685af450cc662b39-0 function addCancelback
0038    internal-ed363076473b51ca685af450cc662b39-0 function addErrback
0039    internal-ed363076473b51ca685af450cc662b39-0 function emitSuccess
0040    internal-ed363076473b51ca685af450cc662b39-0 function emitError
0041    internal-ed363076473b51ca685af450cc662b39-0 function emitCancel
0042    internal-ed363076473b51ca685af450cc662b39-0 function cancel
0043    internal-ed363076473b51ca685af450cc662b39-0 function then
0044    internal-ed363076473b51ca685af450cc662b39-0 function timeout
0045    internal-ed363076473b51ca685af450cc662b39-0 function wait
0046    [ejs::Promise,private] function issue

#
#  Instance slot assignments for the "Promise" class (Num prop 3, num inherited 1)
#
0000    [ejs::Emitter,private] var endpoints
0001    [ejs::Promise,private] var timer
0002    [ejs::Promise,private] var fired: Boolean

#
#  Class slot assignments for the "Reflect" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Reflect
0027    public function base
0028    public function isType
0029    public function type
0030    public function name

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [ejs::Reflect,private] var obj: Object

#
#  Class slot assignments for the "RegExp" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function RegExp
0027    public function lastIndex
0028    public function exec
0029    public function global
0030    public function ignoreCase
0031    public function multiline
0032    public function source
0033    public function matched
0034    public function replace
0035    public function split
0036    public function start
0037    public function sticky
0038    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Socket" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Socket
0027    public function addListener
0028    public function accept
0029    public function address
0030    public function async
0031    public function close
0032    public function connect
0033    public function encoding
0034    public function flush
0035    public function listen
0036    public function port
0037    public function read
0038    public function remoteAddress
0039    public function removeListener
0040    public function write

#
#  Instance slot assignments for the "Socket" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Stream" class (Num slots 7, num inherited 0)
#
0000    public function addListener
0001    public function async
0002    public function close
0003    public function flush
0004    public function read
0005    public function removeListener
0006    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "String" class (Num slots 68, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function String
0027    public function caseCompare
0028    public function caselessCompare
0029    public function charAt
0030    public function charCodeAt
0031    public function concat
0032    public function contains
0033    public function endsWith
0034    public function format
0035    public function fromCharCode
0036    public function indexOf
0037    public function isDigit
0038    public function isAlpha
0039    public function isAlphaNum
0040    public function isLower
0041    public function isSpace
0042    public function isUpper
0043    public function lastIndexOf
0044    public function length
0045    public function match
0046    public function parseJSON
0047    public function toCamel
0048    public function toPascal
0049    public function printable
0050    public function quote
0051    public function remove
0052    public function replace
0053    public function reverse
0054    public function search
0055    public function slice
0056    public function split
0057    public function startsWith
0058    public function substring
0059    public function times
0060    public function tokenize
0061    public function toLower
0062    public function toUpper
0063    public function trim
0064    public function trimStart
0065    public function trimEnd
0066    public function -
0067    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 36, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function System-initializer
0027    public var Bufsize: Number
0028    public function hostname
0029    public function ipaddr
0030    public function run
0031    public function runx
0032    public function daemon
0033    public function sh
0034    public function cmd
0035    public function exec

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TextStream" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TextStream
0027    public function addListener
0028    public function async
0029    public function available
0030    public function close
0031    public function encoding
0032    public function fill
0033    public function flush
0034    public function read
0035    public function readLine
0036    public function readLines
0037    public function readString
0038    public function removeListener
0039    public function write
0040    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs::TextStream,private] var newline: String
0001    [ejs::TextStream,private] var inbuf: ByteArray
0002    [ejs::TextStream,private] var format: String
0003    [ejs::TextStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Timer" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Timer
0027    public function drift
0028    public function period
0029    public function restart
0030    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TimerEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function TimerEvent

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 2, num inherited 2)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "Type" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Uri" class (Num slots 65, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Uri
0027    public function basename
0028    public function complete
0029    public function components
0030    public function decode
0031    public function decodeComponent
0032    public function dirname
0033    public function encode
0034    public function encodeComponent
0035    public function endsWith
0036    public function extension
0037    public function hasExtension
0038    public function hasHost
0039    public function hasPort
0040    public function hasQuery
0041    public function hasReference
0042    public function hasScheme
0043    public function host
0044    public function isAbsolute
0045    public function isDir
0046    public function isRegular
0047    public function isRelative
0048    public function join
0049    public function joinExt
0050    public function mimeType
0051    public function normalize
0052    public function path
0053    public function port
0054    public function scheme
0055    public function query
0056    public function reference
0057    public function relative
0058    public function replaceExt
0059    public function same
0060    public function startsWith
0061    public function trimEnd
0062    public function trimExt
0063    public function trimStart
0064    public function uri

#
#  Instance slot assignments for the "Uri" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Void" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Worker" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Worker
0027    public function eval
0028    public function exit
0029    public function join
0030    public function load
0031    public function preload
0032    public function preeval
0033    public function lookup
0034    public function postMessage
0035    public function terminate
0036    public function waitForMessage

#
#  Instance slot assignments for the "Worker" class (Num prop 4, num inherited 0)
#
0000    public var onclose: Function
0001    public var onmessage: Function
0002    public var onerror: Function
0003    public var name: String

#
#  Class slot assignments for the "XML" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XML
0027    public function load
0028    public function save
0029    public function length
0030    public function name

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "XMLHttp" class (Num slots 48, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLHttp
0027    -initializer- function XMLHttp-initializer
0028    public var Uninitialized
0029    public var Open
0030    public var Sent
0031    public var Receiving
0032    public var Loaded
0033    public function abort
0034    public function http
0035    public function readyState
0036    public function responseText
0037    public function responseXML
0038    public function responseBody
0039    public function status
0040    public function statusText
0041    public function getAllResponseHeaders
0042    public function getResponseHeader
0043    public function open
0044    public function send
0045    public function setRequestHeader
0046    [ejs::XMLHttp,private] function callback
0047    [ejs::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs::XMLHttp,private] var hp: Http
0001    [ejs::XMLHttp,private] var state: Number
0002    [ejs::XMLHttp,private] var response: ByteArray
0003    public var onreadystatechange: Function

#
#  Class slot assignments for the "XMLList" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLList
0027    public function length
0028    public function name

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Loader" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Loader-initializer
0027    public var mainId
0028    [Loader,private] var signatures
0029    [Loader,private] var timestamps
0030    [Loader,private] var defaultExtensions
0031    [Loader,private] var config
0032    internal-ed363076473b51ca685af450cc662b39-0 function init
0033    public function require
0034    public function load
0035    public function cached
0036    public function wrap
0037    [Loader,private] function locate
0038    public function setConfig

#
#  Instance slot assignments for the "Loader" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 2664 bytes)
#
0000   ""
0001   "ejs.es"
0002   "}"
0003   "internal-ed363076473b51ca685af450cc662b39-0"
0004   "ejs.unix"
0005   "module ejs.unix {"
0006   "    use default namespace public"
0007   "    function basename(path: String): Path"
0008   "        Path(path).basename"
0009   "basename"
0010   "public"
0011   "path"
0012   "private"
0013   "String"
0014   "ejs"
0015   "Path"
0016   "    function chdir(dir: Object): Void"
0017   "        App.chdir(dir)"
0018   "chdir"
0019   "dir"
0020   "Object"
0021   "Void"
0022   "    function chmod(path: String, perms: Number): Void"
0023   "        Path(path).perms = perms"
0024   "perms"
0025   "chmod"
0026   "Number"
0027   "    function cp(fromPath: String, toPath: String): void"
0028   "        Path(fromPath).copy(toPath) "
0029   "copy"
0030   "cp"
0031   "fromPath"
0032   "toPath"
0033   "    function dirname(path: String): Path"
0034   "        Path(path).dirname"
0035   "dirname"
0036   "    function exists(path: String): Boolean"
0037   "        Path(path).exists"
0038   "exists"
0039   "Boolean"
0040   "    function extension(path: String): String"
0041   "        Path(path).extension"
0042   "extension"
0043   "    function freeSpace(path: String? = null): Number"
0044   "        FileSystem(path).freeSpace()"
0045   "freeSpace"
0046   ""
0047   "    function isDir(path: String): Boolean"
0048   "        Path(path).isDir"
0049   "isDir"
0050   "    function kill(pid: Number, signal: Number = 2): Void {"
0051   "        if (Config.OS == "WIN") {"
0052   "OS"
0053   "WIN"
0054   "            Cmd.run("/bin/kill -f -" + signal + " " + pid)"
0055   "/bin/kill -f -"
0056   " "
0057   "run"
0058   "        } else {"
0059   "            Cmd.run("/bin/kill -" + signal + " " + pid)"
0060   "/bin/kill -"
0061   "    }"
0062   "kill"
0063   "pid"
0064   "signal"
0065   "    function ls(path: String = ".", enumDirs: Boolean = false): Array"
0066   "."
0067   "        Path(path).files(enumDirs)"
0068   "files"
0069   "ls"
0070   "enumDirs"
0071   "Array"
0072   "    function find(path: Object, glob: String = "*", recurse: Boolean = true): Array {"
0073   "*"
0074   "result"
0075   "        let result = []"
0076   "        if (path is Array) {"
0077   "paths"
0078   "-hoisted-4"
0079   "            let paths = path"
0080   "            for each (path in paths) {"
0081   "-hoisted-5"
0082   "getValues"
0083   "iterator"
0084   "                result += Path(path).find(glob, recurse)"
0085   "find"
0086   "            result += Path(path).find(glob, recurse)"
0087   "        return result"
0088   "glob"
0089   "recurse"
0090   "StopIteration"
0091   "    function mkdir(path: String, permissions: Number = 0755): void"
0092   "        Path(path).makeDir({permissions: permissions})"
0093   "permissions"
0094   "makeDir"
0095   "mkdir"
0096   "    function mv(fromFile: String, toFile: String): void"
0097   "        Path(fromFile).rename(toFile)"
0098   "rename"
0099   "mv"
0100   "fromFile"
0101   "toFile"
0102   "    function pwd(): Path"
0103   "        App.dir"
0104   "pwd"
0105   "    function rm(path: Path): void {"
0106   "        if (path.isDir) {"
0107   "            throw new ArgError(path.toString() + " is a directory")"
0108   "toString"
0109   " is a directory"
0110   "        } "
0111   "        Path(path).remove()"
0112   "remove"
0113   "rm"
0114   "    function rmdir(path: Path, contents: Boolean = false): void {"
0115   "        if (contents) {"
0116   "            Path(path).removeAll()"
0117   "removeAll"
0118   "            Path(path).remove()"
0119   "rmdir"
0120   "contents"
0121   "    function tempname(directory: String? = null): File"
0122   "        FileSystem.makeTemp(directory)"
0123   "makeTemp"
0124   "tempname"
0125   "directory"
0126   "File"
0127   "block_12065_264"
0128   "-block-"
0129   "__initializer__"

==============================================================================================

MODULE:   ejs.db <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_12346_273 : Block
   LOCAL:   [local-01] var block_12721_281 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 02 fa c5 01 10 .......... debug 

    # ejs.es:12669              }

    0009: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0011: [0] 01 6c ...................... addNamespace <ejs.db> 
    0013: [0] 33 02 f4 c0 01 7a .......... debug 

    # ejs.es:12346              module ejs.db {

    0019: [0] 33 02 84 c1 01 9a 01 ....... debug 

    # ejs.es:12354                  class Database {

    0026: [0] 34 ec 09 ................... defineClass <type: 0x276,  ejs.db::Database> 
    0029: [0] 24 ......................... closeBlock 
    0030: [0] 8d 02 00 ................... openBlock <slot: 1> <0> 
    0033: [0] 33 02 88 c8 01 10 .......... debug 

    # ejs.es:12804              }

    0039: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0041: [0] 01 6c ...................... addNamespace <ejs.db> 
    0043: [0] 33 02 e2 c6 01 7a .......... debug 

    # ejs.es:12721              module ejs.db {

    0049: [0] 33 02 f0 c6 01 cc 54 ....... debug 

    # ejs.es:12728                  interface DatabaseConnector {

    0056: [0] 34 f4 09 ................... defineClass <type: 0x27a,  ejs.db::DatabaseConnector> 
    0059: [0] 24 ......................... closeBlock 
    0060: [0] 3b ......................... endCode 
    

BLOCK:      [block_12346_273-00]  block_12346_273 (Slots 0)

BLOCK:      [block_12721_281-01]  block_12721_281 (Slots 0)

CLASS:      class Database extends Object
            #  Class Details: 59 class traits, 4 instance traits, requested slot 157

FUNCTION:   [Database-26]  -constructor- const function Database(adapter: String, connectionString: String) : void

     ARG:   [arg-00]   private adapter : String
     ARG:   [arg-01]   private connectionString : String
   LOCAL:   [local-02] var adapterClass
   LOCAL:   [local-03] var e

    0000: [0] 33 02 b6 c1 01 f8 07 ....... debug 

    # ejs.es:12379                          Database.defaultDb ||= this

    0007: [0] 7e ba 02 ................... getGlobalSlot <slot: 157> 
    0010: [1] 7b fa 05 a0 02 ............. getObjName <defaultDb> <[ejs.db::Database,private]> 
    0015: [1] 39 ......................... dup 
    0016: [2] 14 02 ...................... branchTrue8 <addr: 20> 
    0018: [1] 90 ......................... pop 
    0019: [0] 57 ......................... loadThis 
    0020: [1] 7e ba 02 ................... getGlobalSlot <slot: 157> 
    0023: [2] b3 fa 05 a0 02 ............. putObjName <defaultDb> <[ejs.db::Database,private]> 
    0028: [0] 33 02 b8 c1 01 c8 08 ....... debug 

    # ejs.es:12380                          if (adapter == "sqlite3") adapter = "sqlite"

    0035: [0] 5b ......................... getLocalSlot0 
    0036: [1] 56 ba 09 ................... loadString <sqlite3> 
    0039: [2] 25 ......................... compareEq 
    0040: [1] 13 06 ...................... branchFalse8 <addr: 48> 
    0042: [0] 56 ca 09 ................... loadString <sqlite> 
    0045: [1] 94 ......................... putLocalSlot0 
    0046: [0] 3e 00 ...................... goto8 <addr: 48> 
    0048: [0] 33 02 ba c1 01 d8 09 ....... debug 

    # ejs.es:12381                          try {

    0055: [0] 33 02 bc c1 01 fc 09 ....... debug 

    # ejs.es:12382                              _name = Path(connectionString).basename

    0062: [0] 5c ......................... getLocalSlot1 
    0063: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0067: [0] 93 ......................... pushResult 
    0068: [1] 7b ec 0a fe 0a ............. getObjName <basename> <public> 
    0073: [1] 57 ......................... loadThis 
    0074: [2] b3 9e 04 a0 02 ............. putObjName <_name> <[ejs.db::Database,private]> 
    0079: [0] 33 02 be c1 01 8c 0b ....... debug 

    # ejs.es:12383                              _connection = connectionString

    0086: [0] 5c ......................... getLocalSlot1 
    0087: [1] 57 ......................... loadThis 
    0088: [2] b3 b4 03 a0 02 ............. putObjName <_connection> <[ejs.db::Database,private]> 
    0093: [0] 33 02 c0 c1 01 ea 0b ....... debug 

    # ejs.es:12384                              let adapterClass = adapter.toPascal()

    0100: [0] 5b ......................... getLocalSlot0 
    0101: [1] 1e 86 0d fe 0a 00 .......... callObjName <toPascal> <public> <argc: 0> 
    0107: [0] 93 ......................... pushResult 
    0108: [1] 96 ......................... putLocalSlot2 
    0109: [0] 33 02 c2 c1 01 98 0d ....... debug 

    # ejs.es:12385                              if (!global."ejs.db"::[adapterClass]) {

    0116: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0118: [1] 56 6c ...................... loadString <ejs.db> 
    0120: [2] 5d ......................... getLocalSlot2 
    0121: [3] 7c ......................... getObjNameExpr 
    0122: [1] 86 ......................... logicalNot 
    0123: [1] 13 16 ...................... branchFalse8 <addr: 147> 
    0125: [0] 33 02 c4 c1 01 88 0e ....... debug 

    # ejs.es:12386                                  load("ejs.db." + adapter + ".mod")

    0132: [0] 56 f6 0e ................... loadString <ejs.db.> 
    0135: [1] 5b ......................... getLocalSlot0 
    0136: [2] 00 ......................... add 
    0137: [1] 56 86 0f ................... loadString <.mod> 
    0140: [2] 00 ......................... add 
    0141: [1] 17 a8 01 02 ................ callGlobalSlot <slot: 84> <argc: 1> 
    0145: [0] 3e 00 ...................... goto8 <addr: 147> 
    0147: [0] 33 02 c6 c1 01 90 0f ....... debug 

    # ejs.es:12387                              }

    0154: [0] 33 02 c8 c1 01 b4 0f ....... debug 

    # ejs.es:12388                              _adapter = new global."ejs.db"::[adapterClass](connectionString)

    0161: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0163: [1] 56 6c ...................... loadString <ejs.db> 
    0165: [2] 5d ......................... getLocalSlot2 
    0166: [3] 7c ......................... getObjNameExpr 
    0167: [1] 89 ......................... new 
    0168: [1] 5c ......................... getLocalSlot1 
    0169: [2] 20 02 ...................... callConstructor <argc: 1> 
    0171: [1] 57 ......................... loadThis 
    0172: [2] b3 8e 02 a0 02 ............. putObjName <_adapter> <[ejs.db::Database,private]> 
    0177: [0] 3e 29 ...................... goto8 <addr: 220> 
    0179: [0] 33 02 ca c1 01 d6 10 ....... debug 

    # ejs.es:12389                          } catch (e) {

    0186: [0] 92 ......................... pushCatchArg 
    0187: [1] b6 06 02 ................... putBlockSlot <slot: 3> <1> 
    0190: [0] 33 02 cc c1 01 a4 11 ....... debug 

    # ejs.es:12390                              print(e)

    0197: [0] 7d 06 02 ................... getBlockSlot <slot: 3> <1> 
    0200: [1] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0204: [0] 33 02 ce c1 01 d6 11 ....... debug 

    # ejs.es:12391                              throw "Can't find database connector for " + adapter

    0211: [0] 56 e0 12 ................... loadString <Can't find database connector for > 
    0214: [1] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0217: [2] 00 ......................... add 
    0218: [1] c6 ......................... throw 
    0219: [1] 3c ......................... endException 
    0220: [1] be ......................... return 
    0221: [0] 33 02 d2 c1 01 b8 13 ....... debug 

    # ejs.es:12393                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch         48     179        179          220       Void

VARIABLE:   [adapter-00]  private var adapter : String
VARIABLE:   [connectionString-01]  private var connectionString : String
VARIABLE:   [adapterClass-02]  -hoisted-2 var adapterClass
VARIABLE:   [e-03]  -hoisted-3 var e
VARIABLE:   [Database-27]  [ejs.db::Database,private] static var defaultDb : Database

FUNCTION:   [Database-28]  public const function addColumn(table: String, column: String, datatype: String, options) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private datatype : String
     ARG:   [arg-03]   private options

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 97 ......................... putLocalSlot3 
    0007: [0] 33 02 e8 c1 01 ee 15 ....... debug 

    # ejs.es:12404                          _adapter.addColumn(table, column, datatype, options)

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0020: [1] 5b ......................... getLocalSlot0 
    0021: [2] 5c ......................... getLocalSlot1 
    0022: [3] 5d ......................... getLocalSlot2 
    0023: [4] 5e ......................... getLocalSlot3 
    0024: [5] 1e f0 16 84 17 08 .......... callObjName <addColumn> <> <argc: 4> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [datatype-02]  private var datatype : String
VARIABLE:   [options-03]  private var options

FUNCTION:   [Database-29]  public const function addIndex(table: String, column: String, index: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private index : String

    0000: [0] 33 02 fa c1 01 de 18 ....... debug 

    # ejs.es:12413                          _adapter.addIndex(table, column, index)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 5c ......................... getLocalSlot1 
    0015: [3] 5d ......................... getLocalSlot2 
    0016: [4] 1e c6 19 84 17 06 .......... callObjName <addIndex> <> <argc: 3> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [index-02]  private var index : String

FUNCTION:   [Database-30]  public const function changeColumn(table: String, column: String, datatype: String, options: Object) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private datatype : String
     ARG:   [arg-03]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 97 ......................... putLocalSlot3 
    0007: [0] 33 02 90 c2 01 c0 1b ....... debug 

    # ejs.es:12424                          _adapter.changeColumn(table, column, datatype, options)

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0020: [1] 5b ......................... getLocalSlot0 
    0021: [2] 5c ......................... getLocalSlot1 
    0022: [3] 5d ......................... getLocalSlot2 
    0023: [4] 5e ......................... getLocalSlot3 
    0024: [5] 1e c8 1c 84 17 08 .......... callObjName <changeColumn> <> <argc: 4> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [datatype-02]  private var datatype : String
VARIABLE:   [options-03]  private var options : Object

FUNCTION:   [Database-31]  public const function close() : Void


    0000: [0] 33 02 9e c2 01 a0 1d ....... debug 

    # ejs.es:12431                          _adapter.close()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 1e da 1d 84 17 00 .......... callObjName <close> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-32]  public const function commit() : Void


    0000: [0] 33 02 aa c2 01 a6 1e ....... debug 

    # ejs.es:12437                          _adapter.commit()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 1e e2 1e 84 17 00 .......... callObjName <commit> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-33]  public const function connect(connectionString: String) : Void

     ARG:   [arg-00]   private connectionString : String

    0000: [0] 33 02 bc c2 01 e2 1f ....... debug 

    # ejs.es:12446                          _adapter.connect(connectionString)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e c0 20 84 17 02 .......... callObjName <connect> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [connectionString-00]  private var connectionString : String

FUNCTION:   [Database-34]  public const get function connection() : String


    0000: [0] 33 02 c8 c2 01 a4 21 ....... debug 

    # ejs.es:12452                          _connection

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b b4 03 a0 02 ............. getObjName <_connection> <[ejs.db::Database,private]> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-35]  public const function createDatabase(name: String, options: Object) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 d8 c2 01 84 23 ....... debug 

    # ejs.es:12460                          _adapter.createDatabase(name, options)

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0020: [1] 5b ......................... getLocalSlot0 
    0021: [2] 5c ......................... getLocalSlot1 
    0022: [3] 1e ea 23 84 17 04 .......... callObjName <createDatabase> <> <argc: 2> 
    0028: [0] 93 ......................... pushResult 
    0029: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Database-36]  public const function createTable(table: String, columns: Array) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private columns : Array

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 ea c2 01 a6 25 ....... debug 

    # ejs.es:12469                          _adapter.createTable(table, columns)

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0020: [1] 5b ......................... getLocalSlot0 
    0021: [2] 5c ......................... getLocalSlot1 
    0022: [3] 1e 88 26 84 17 04 .......... callObjName <createTable> <> <argc: 2> 
    0028: [0] 93 ......................... pushResult 
    0029: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [columns-01]  private var columns : Array

FUNCTION:   [Database-37]  public const function dataTypeToSqlType(dataType: String) : String

     ARG:   [arg-00]   private dataType : String

    0000: [0] 33 02 fa c2 01 b4 27 ....... debug 

    # ejs.es:12477                          _adapter.dataTypeToSqlType(dataType)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e 96 28 84 17 02 .......... callObjName <dataTypeToSqlType> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [dataType-00]  private var dataType : String

FUNCTION:   [Database-38]  public const static get function defaultDatabase() : Database


    0000: [0] 33 02 86 c3 01 bc 29 ....... debug 

    # ejs.es:12483                          defaultDb

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b fa 05 a0 02 ............. getObjName <defaultDb> <[ejs.db::Database,private]> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-38]  public const static set function defaultDatabase(db: Database) : Void

     ARG:   [arg-00]   private db : Database

    0000: [0] 33 02 9a c3 01 8c 2b ....... debug 

    # ejs.es:12493                          defaultDb = db

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 57 ......................... loadThis 
    0009: [2] b3 fa 05 a0 02 ............. putObjName <defaultDb> <[ejs.db::Database,private]> 
    0014: [0] 54 ......................... loadNull 
    0015: [1] bf ......................... returnValue 
    0016: [0] 33 02 9c c3 01 b8 13 ....... debug 

    # ejs.es:12494                      }
    
VARIABLE:   [db-00]  private var db : Database

FUNCTION:   [Database-39]  public const function destroyDatabase(name: String) : Void

     ARG:   [arg-00]   private name : String

    0000: [0] 33 02 aa c3 01 b2 2c ....... debug 

    # ejs.es:12501                          _adapter.destroyDatabase(name)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e 88 2d 84 17 02 .......... callObjName <destroyDatabase> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name : String

FUNCTION:   [Database-40]  public const function destroyTable(table: String) : Void

     ARG:   [arg-00]   private table : String

    0000: [0] 33 02 b8 c3 01 8e 2e ....... debug 

    # ejs.es:12508                          _adapter.destroyTable(table)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e e0 2e 84 17 02 .......... callObjName <destroyTable> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String

FUNCTION:   [Database-41]  public const function endTransaction() : Void


    0000: [0] 33 02 c4 c3 01 ca 2f ....... debug 

    # ejs.es:12514                          _adapter.endTransaction()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 1e 96 30 84 17 00 .......... callObjName <endTransaction> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-42]  public const function getColumns(table: String) : Array

     ARG:   [arg-00]   private table : String

    0000: [0] 33 02 d6 c3 01 98 31 ....... debug 

    # ejs.es:12523                          _adapter.getColumns(table)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e e6 31 84 17 02 .......... callObjName <getColumns> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String

FUNCTION:   [Database-43]  public const function getTables() : Array


    0000: [0] 33 02 e4 c3 01 c4 32 ....... debug 

    # ejs.es:12530                          _adapter.getTables()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 1e 86 33 84 17 00 .......... callObjName <getTables> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-44]  public const function getNumRows(table: String) : Number

     ARG:   [arg-00]   private table : String

    0000: [0] 33 02 f2 c3 01 80 34 ....... debug 

    # ejs.es:12537                          _adapter.getNumRows()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 1e c4 34 84 17 00 .......... callObjName <getNumRows> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String

FUNCTION:   [Database-45]  public const get function name() : String


    0000: [0] 33 02 fe c3 01 b0 35 ....... debug 

    # ejs.es:12543                          _name

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 04 a0 02 ............. getObjName <_name> <[ejs.db::Database,private]> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-46]  public const function query(cmd: String, tag: String, trace: Boolean) : Array

     ARG:   [arg-00]   private cmd : String
     ARG:   [arg-01]   private tag : String
     ARG:   [arg-02]   private trace : Boolean

    0000: [0] 41 03 03 07 0a ............. initDefaultArgs8 <3> <5> <9> <12> 
    0005: [0] 56 88 37 ................... loadString <SQL> 
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0011: [1] 96 ......................... putLocalSlot2 
    0012: [0] 33 02 96 c4 01 90 37 ....... debug 

    # ejs.es:12555                          if (_traceAll || trace) {

    0019: [0] 57 ......................... loadThis 
    0020: [1] 7b f8 04 a0 02 ............. getObjName <_traceAll> <[ejs.db::Database,private]> 
    0025: [1] 39 ......................... dup 
    0026: [2] 14 02 ...................... branchTrue8 <addr: 30> 
    0028: [1] 90 ......................... pop 
    0029: [0] 5d ......................... getLocalSlot2 
    0030: [1] 13 14 ...................... branchFalse8 <addr: 52> 
    0032: [0] 33 02 98 c4 01 dc 37 ....... debug 

    # ejs.es:12556                              print(tag + ": " + cmd)

    0039: [0] 5c ......................... getLocalSlot1 
    0040: [1] 56 ac 38 ................... loadString <: > 
    0043: [2] 00 ......................... add 
    0044: [1] 5b ......................... getLocalSlot0 
    0045: [2] 00 ......................... add 
    0046: [1] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0050: [0] 3e 00 ...................... goto8 <addr: 52> 
    0052: [0] 33 02 9c c4 01 b2 38 ....... debug 

    # ejs.es:12558                          return _adapter.sql(cmd)

    0059: [0] 57 ......................... loadThis 
    0060: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0065: [1] 5b ......................... getLocalSlot0 
    0066: [2] 1e fc 38 84 17 02 .......... callObjName <sql> <> <argc: 1> 
    0072: [0] 93 ......................... pushResult 
    0073: [1] bf ......................... returnValue 
    
VARIABLE:   [cmd-00]  private var cmd : String
VARIABLE:   [tag-01]  private var tag : String
VARIABLE:   [trace-02]  private var trace : Boolean

FUNCTION:   [Database-47]  public const function removeColumns(table: String, columns: Array) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private columns : Array

    0000: [0] 33 02 ae c4 01 b4 3a ....... debug 

    # ejs.es:12567                          _adapter.removeColumns(table, columns)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 5c ......................... getLocalSlot1 
    0015: [3] 1e 9a 3b 84 17 04 .......... callObjName <removeColumns> <> <argc: 2> 
    0021: [0] 93 ......................... pushResult 
    0022: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [columns-01]  private var columns : Array

FUNCTION:   [Database-48]  public const function removeIndex(table: String, index: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private index : String

    0000: [0] 33 02 be c4 01 b8 3c ....... debug 

    # ejs.es:12575                          _adapter.removeIndex(table, index)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 5c ......................... getLocalSlot1 
    0015: [3] 1e 96 3d 84 17 04 .......... callObjName <removeIndex> <> <argc: 2> 
    0021: [0] 93 ......................... pushResult 
    0022: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [index-01]  private var index : String

FUNCTION:   [Database-49]  public const function renameColumn(table: String, oldColumn: String, newColumn: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private oldColumn : String
     ARG:   [arg-02]   private newColumn : String

    0000: [0] 33 02 d0 c4 01 e0 3e ....... debug 

    # ejs.es:12584                          _adapter.renameColumn(table, oldColumn, newColumn)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 5c ......................... getLocalSlot1 
    0015: [3] 5d ......................... getLocalSlot2 
    0016: [4] 1e de 3f 84 17 06 .......... callObjName <renameColumn> <> <argc: 3> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [oldColumn-01]  private var oldColumn : String
VARIABLE:   [newColumn-02]  private var newColumn : String

FUNCTION:   [Database-50]  public const function renameTable(oldTable: String, newTable: String) : Void

     ARG:   [arg-00]   private oldTable : String
     ARG:   [arg-01]   private newTable : String

    0000: [0] 33 02 e0 c4 01 ae 41 ....... debug 

    # ejs.es:12592                          _adapter.renameTable(oldTable, newTable)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 5c ......................... getLocalSlot1 
    0015: [3] 1e 98 42 84 17 04 .......... callObjName <renameTable> <> <argc: 2> 
    0021: [0] 93 ......................... pushResult 
    0022: [1] bf ......................... returnValue 
    
VARIABLE:   [oldTable-00]  private var oldTable : String
VARIABLE:   [newTable-01]  private var newTable : String

FUNCTION:   [Database-51]  public const function rollback() : Void


    0000: [0] 33 02 ee c4 01 98 43 ....... debug 

    # ejs.es:12599                          _adapter.rollback()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 1e d8 43 84 17 00 .......... callObjName <rollback> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-52]  public const function sql(cmd: String) : Array

     ARG:   [arg-00]   private cmd : String

    0000: [0] 33 02 82 c5 01 bc 44 ....... debug 

    # ejs.es:12609                          _adapter.sql(cmd)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e fc 38 84 17 02 .......... callObjName <sql> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [cmd-00]  private var cmd : String

FUNCTION:   [Database-53]  public const function sqlTypeToDataType(sqlType: String) : String

     ARG:   [arg-00]   private sqlType : String

    0000: [0] 33 02 92 c5 01 f0 45 ....... debug 

    # ejs.es:12617                          _adapter.sqlTypeToDataType(sqlType)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e d0 46 84 17 02 .......... callObjName <sqlTypeToDataType> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [sqlType-00]  private var sqlType : String

FUNCTION:   [Database-54]  public const function sqlTypeToEjsType(sqlType: String) : Type

     ARG:   [arg-00]   private sqlType : String

    0000: [0] 33 02 a2 c5 01 f6 47 ....... debug 

    # ejs.es:12625                          _adapter.sqlTypeToEjsType(sqlType)

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e d4 48 84 17 02 .......... callObjName <sqlTypeToEjsType> <> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [sqlType-00]  private var sqlType : String

FUNCTION:   [Database-55]  public const function startTransaction() : Void


    0000: [0] 33 02 ae c5 01 d4 49 ....... debug 

    # ejs.es:12631                          _adapter.startTransaction()

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 8e 02 a0 02 ............. getObjName <_adapter> <[ejs.db::Database,private]> 
    0013: [1] 1e a4 4a 84 17 00 .......... callObjName <startTransaction> <> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    

FUNCTION:   [Database-56]  public const function trace(on: Boolean) : Void

     ARG:   [arg-00]   private on : Boolean

    0000: [0] 33 02 c0 c5 01 9a 4b ....... debug 

    # ejs.es:12640                          _traceAll = on

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 57 ......................... loadThis 
    0010: [3] b3 f8 04 a0 02 ............. putObjName <_traceAll> <[ejs.db::Database,private]> 
    0015: [1] bf ......................... returnValue 
    
VARIABLE:   [on-00]  private var on : Boolean

FUNCTION:   [Database-57]  public const function transaction(code: Function) : Void

     ARG:   [arg-00]   private code : Function
   LOCAL:   [local-01] var e : Error

    0000: [0] 33 02 ce c5 01 c0 4c ....... debug 

    # ejs.es:12647                          startTransaction()

    0007: [0] 1f a4 4a fe 0a 00 .......... callScopedName <startTransaction> <public> <argc: 0> 
    0013: [0] 33 02 d0 c5 01 d8 09 ....... debug 

    # ejs.es:12648                          try {

    0020: [0] 33 02 d2 c5 01 fe 4c ....... debug 

    # ejs.es:12649                              code()

    0027: [0] 1a 00 00 00 ................ callBlockSlot <slot: 0> <0> <argc: 0> 
    0031: [0] ca ......................... finally 
    0032: [0] 3e 18 ...................... goto8 <addr: 58> 
    0034: [0] 33 02 d4 c5 01 ac 4d ....... debug 

    # ejs.es:12650                          } catch (e: Error) {

    0041: [0] 92 ......................... pushCatchArg 
    0042: [1] b6 02 02 ................... putBlockSlot <slot: 1> <1> 
    0045: [0] 33 02 d6 c5 01 84 4e ....... debug 

    # ejs.es:12651                              rollback();

    0052: [0] 1f d8 43 fe 0a 00 .......... callScopedName <rollback> <public> <argc: 0> 
    0058: [0] 33 02 d8 c5 01 bc 4e ....... debug 

    # ejs.es:12652                          } finally {

    0065: [0] 33 02 da c5 01 ec 4e ....... debug 

    # ejs.es:12653                              endTransaction()

    0072: [0] 1f 96 30 fe 0a 00 .......... callScopedName <endTransaction> <public> <argc: 0> 
    0078: [0] 3c ......................... endException 
    0079: [0] 54 ......................... loadNull 
    0080: [1] bf ......................... returnValue 
    0081: [0] 33 02 de c5 01 b8 13 ....... debug 

    # ejs.es:12655                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch         13      34         34           58       Error
1   finally       13      34         58           79       Void

VARIABLE:   [code-00]  private var code : Function
VARIABLE:   [e-01]  -hoisted-1 var e : Error

FUNCTION:   [Database-58]  public const static function quote(str: String) : String

     ARG:   [arg-00]   private str : String

    0000: [0] 33 02 f4 c5 01 da 50 ....... debug 

    # ejs.es:12666                          return str.replace(/'/g, "''")

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 55 b0 51 ................... loadRegexp </'/g> 
    0011: [2] 56 ba 51 ................... loadString <''> 
    0014: [3] 1e c0 51 fe 0a 04 .......... callObjName <replace> <public> <argc: 2> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [str-00]  private var str : String
VARIABLE:   [_adapter-00]  [ejs.db::Database,private] var _adapter : Object
VARIABLE:   [_connection-01]  [ejs.db::Database,private] var _connection : String
VARIABLE:   [_name-02]  [ejs.db::Database,private] var _name : String
VARIABLE:   [_traceAll-03]  [ejs.db::Database,private] var _traceAll : Boolean

CLASS:      class DatabaseConnector
            #  Class Details: 22 class traits, 0 instance traits, requested slot 158

FUNCTION:   [DatabaseConnector-00]  public const function addColumn(table: String, column: String, datatype: String, options: Object) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private datatype : String
     ARG:   [arg-03]   private options : Object

    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [datatype-02]  private var datatype : String
VARIABLE:   [options-03]  private var options : Object

FUNCTION:   [DatabaseConnector-01]  public const function addIndex(table: String, column: String, index: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private index : String

    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [index-02]  private var index : String

FUNCTION:   [DatabaseConnector-02]  public const function changeColumn(table: String, column: String, datatype: String, options: Object) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private datatype : String
     ARG:   [arg-03]   private options : Object

    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [datatype-02]  private var datatype : String
VARIABLE:   [options-03]  private var options : Object

FUNCTION:   [DatabaseConnector-03]  public const function close() : Void


    

FUNCTION:   [DatabaseConnector-04]  public const function commit() : Void


    

FUNCTION:   [DatabaseConnector-05]  public const function connect(connectionString: String) : Void

     ARG:   [arg-00]   private connectionString : String

    
VARIABLE:   [connectionString-00]  private var connectionString : String

FUNCTION:   [DatabaseConnector-06]  public const function createDatabase(name: String, options: Object) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private options : Object

    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [DatabaseConnector-07]  public const function createTable(table: String, columns: Array) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private columns : Array

    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [columns-01]  private var columns : Array

FUNCTION:   [DatabaseConnector-08]  public const function dataTypeToSqlType(dataType: String) : String

     ARG:   [arg-00]   private dataType : String

    
VARIABLE:   [dataType-00]  private var dataType : String

FUNCTION:   [DatabaseConnector-09]  public const function destroyDatabase(name: String) : Void

     ARG:   [arg-00]   private name : String

    
VARIABLE:   [name-00]  private var name : String

FUNCTION:   [DatabaseConnector-10]  public const function destroyTable(table: String) : Void

     ARG:   [arg-00]   private table : String

    
VARIABLE:   [table-00]  private var table : String

FUNCTION:   [DatabaseConnector-11]  public const function getColumns(table: String) : Array

     ARG:   [arg-00]   private table : String

    
VARIABLE:   [table-00]  private var table : String

FUNCTION:   [DatabaseConnector-12]  public const function getTables() : Array


    

FUNCTION:   [DatabaseConnector-13]  public const function removeColumns(table: String, columns: Array) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private columns : Array

    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [columns-01]  private var columns : Array

FUNCTION:   [DatabaseConnector-14]  public const function removeIndex(table: String, index: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private index : String

    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [index-01]  private var index : String

FUNCTION:   [DatabaseConnector-15]  public const function renameColumn(table: String, oldColumn: String, newColumn: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private oldColumn : String
     ARG:   [arg-02]   private newColumn : String

    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [oldColumn-01]  private var oldColumn : String
VARIABLE:   [newColumn-02]  private var newColumn : String

FUNCTION:   [DatabaseConnector-16]  public const function renameTable(oldTable: String, newTable: String) : Void

     ARG:   [arg-00]   private oldTable : String
     ARG:   [arg-01]   private newTable : String

    
VARIABLE:   [oldTable-00]  private var oldTable : String
VARIABLE:   [newTable-01]  private var newTable : String

FUNCTION:   [DatabaseConnector-17]  public const function rollback() : Void


    

FUNCTION:   [DatabaseConnector-18]  public const function sql(cmd: String) : Array

     ARG:   [arg-00]   private cmd : String

    
VARIABLE:   [cmd-00]  private var cmd : String

FUNCTION:   [DatabaseConnector-19]  public const function sqlTypeToDataType(sqlType: String) : String

     ARG:   [arg-00]   private sqlType : String

    
VARIABLE:   [sqlType-00]  private var sqlType : String

FUNCTION:   [DatabaseConnector-20]  public const function sqlTypeToEjsType(sqlType: String) : String

     ARG:   [arg-00]   private sqlType : String

    
VARIABLE:   [sqlType-00]  private var sqlType : String

FUNCTION:   [DatabaseConnector-21]  public const function startTransaction() : Void


    

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 185)
#
0000    public var stderr
0001    public var stdin
0002    public var stdout
0003    ejs var App: Type
0004    ejs function appInit
0005    ejs var Array: Type
0006    ejs var BinaryStream: Type
0007    ejs var Block: Type
0008    ejs var Boolean: Type
0009    ejs var ByteArray: Type
0010    ejs var Cmd: Type
0011    ejs var CmdArgs: Type
0012    public function gc
0013    public function readFile
0014    ejs var Config: Type
0015    ejs var Date: Type
0016    ejs var Emitter: Type
0017    internal-ed363076473b51ca685af450cc662b39-0 var Endpoint: Type
0018    ejs var ArgError: Type
0019    ejs var ArithmeticError: Type
0020    ejs var AssertError: Type
0021    ejs var InstructionError: Type
0022    ejs var Error: Type
0023    ejs var IOError: Type
0024    ejs var InternalError: Type
0025    ejs var MemoryError: Type
0026    ejs var OutOfBoundsError: Type
0027    ejs var ReferenceError: Type
0028    ejs var ResourceError: Type
0029    ejs var SecurityError: Type
0030    ejs var StateError: Type
0031    ejs var SyntaxError: Type
0032    ejs var TypeError: Type
0033    ejs var URIError: Type
0034    ejs var Event: Type
0035    ejs var ErrorEvent: Type
0036    ejs var File: Type
0037    ejs var FileSystem: Type
0038    ejs var Frame: Type
0039    ejs var Function: Type
0040    ejs function makeGetter
0041    ejs function clearBoundThis
0042    ejs var GC: Type
0043    public var EJSCRIPT: Boolean
0044    public var ECMA: Boolean
0045    public var ejs
0046    public var public
0047    public var internal
0048    public var iterator
0049    public var CONFIG
0050    ejs var TODO: Boolean
0051    ejs var FUTURE: Boolean
0052    ejs var ASC: Boolean
0053    ejs var DOC_ONLY: Boolean
0054    ejs var DEPRECATED: Boolean
0055    ejs var boolean
0056    ejs var double
0057    ejs var num
0058    ejs var string
0059    ejs var false: Boolean
0060    ejs var global: Object
0061    ejs var null
0062    ejs var Infinity
0063    ejs var NegativeInfinity
0064    ejs var NaN
0065    ejs var true: Boolean
0066    ejs var undefined
0067    ejs var void
0068    ejs function assert
0069    ejs function breakpoint
0070    ejs function cloneBase
0071    ejs function decodeURI
0072    ejs function dump
0073    ejs function dumpAll
0074    ejs function dumpDef
0075    ejs function encodeURI
0076    ejs function escape
0077    ejs function md5
0078    ejs function blend
0079    ejs function eval
0080    ejs function formatStack
0081    ejs function hashcode
0082    ejs function isNaN
0083    ejs function isFinite
0084    ejs function load
0085    ejs function print
0086    ejs function parse
0087    ejs function parseFloat
0088    ejs function parseInt
0089    ejs function printHash
0090    ejs function instanceOf
0091    ejs function error
0092    ejs function input
0093    ejs function output
0094    ejs var Http: Type
0095    iterator var Iterable: Type
0096    iterator var Iterator: Type
0097    iterator var StopIteration: Type
0098    ejs var JSON: Type
0099    ejs function deserialize
0100    ejs function serialize
0101    ejs var Locale: Type
0102    ejs var Logger: Type
0103    ejs var Math: Type
0104    ejs var Memory: Type
0105    ejs var Namespace: Type
0106    ejs var Null: Type
0107    ejs var Number: Type
0108    ejs var Object: Type
0109    ejs var Path: Type
0110    ejs var Promise: Type
0111    ejs var Reflect: Type
0112    ejs function typeOf
0113    ejs var RegExp: Type
0114    ejs var Socket: Type
0115    ejs var Stream: Type
0116    ejs var String: Type
0117    ejs var System: Type
0118    ejs var TextStream: Type
0119    ejs var Timer: Type
0120    ejs function setInterval
0121    ejs function setTimeout
0122    ejs var TimerEvent: Type
0123    ejs var Type: Type
0124    ejs var Uri: Type
0125    ejs function decodeUri
0126    ejs function decodeUriComponent
0127    ejs var Void: Type
0128    ejs var Worker: Type
0129    ejs.worker var self: Worker
0130    ejs.worker function exit
0131    ejs.worker function postMessage
0132    ejs.worker function onerror
0133    ejs.worker function onmessage
0134    ejs var XML: Type
0135    ejs var XMLHttp: Type
0136    ejs var XMLList: Type
0137    ejs.cjs function require
0138    public var Loader: Type
0139    public function basename
0140    public function chdir
0141    public function chmod
0142    public function cp
0143    public function dirname
0144    public function exists
0145    public function extension
0146    public function freeSpace
0147    public function isDir
0148    public function kill
0149    public function ls
0150    public function find
0151    public function mkdir
0152    public function mv
0153    public function pwd
0154    public function rm
0155    public function rmdir
0156    public function tempname
0157    ejs.db var Database: Type
0158    ejs.db var DatabaseConnector: Type

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "App" class (Num slots 52, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function App-initializer
0027    public var config: Object
0028    [ejs::App,private] var _errorStream
0029    [ejs::App,private] var _inputStream
0030    [ejs::App,private] var _outputStream
0031    internal-ed363076473b51ca685af450cc662b39-0 var defaultConfig
0032    public function args
0033    public function dir
0034    public function chdir
0035    public function exeDir
0036    public function exePath
0037    public function errorStream
0038    public function exit
0039    public function getenv
0040    public function inputStream
0041    public var logger
0042    public function name
0043    public function noexit
0044    public function outputStream
0045    public function putenv
0046    public function search
0047    public function createSearch
0048    public function serviceEvents
0049    public function sleep
0050    public function title
0051    public function version

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Array" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Array
0027    public function append
0028    public function clear
0029    public function compact
0030    public function concat
0031    public function contains
0032    public function every
0033    public function filter
0034    public function find
0035    public function findAll
0036    public function forEach
0037    public function indexOf
0038    public function insert
0039    public function join
0040    public function lastIndexOf
0041    public function length
0042    public function map
0043    public function pop
0044    public function push
0045    public function reject
0046    public function remove
0047    public function reverse
0048    public function shift
0049    public function slice
0050    public function some
0051    public function sort
0052    public function splice
0053    public function transform
0054    public function unique
0055    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "BinaryStream" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function BinaryStream
0027    -initializer- function BinaryStream-initializer
0028    public var BigEndian
0029    public var LittleEndian
0030    public function addListener
0031    public function async
0032    public function available
0033    public function close
0034    public function encoding
0035    public function endian
0036    public function flush
0037    public function read
0038    public function readBoolean
0039    public function readByte
0040    public function readDate
0041    public function readDouble
0042    public function readInteger
0043    public function readLong
0044    public function readString
0045    public function readXML
0046    public function removeListener
0047    public function room
0048    public function write
0049    public function writeByte
0050    public function writeShort
0051    public function writeDouble
0052    public function writeInteger
0053    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs::BinaryStream,private] var inbuf
0001    [ejs::BinaryStream,private] var outbuf
0002    [ejs::BinaryStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Block" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Boolean" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 64, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function ByteArray
0027    -initializer- function ByteArray-initializer
0028    public var LittleEndian
0029    public var BigEndian
0030    public function addListener
0031    public function available
0032    public function async
0033    public function close
0034    public function compact
0035    public function copyIn
0036    public function copyOut
0037    public function encoding
0038    public function endian
0039    public function flush
0040    public function length
0041    public function MD5
0042    public function read
0043    public function readBoolean
0044    public function readByte
0045    public function readDate
0046    public function readDouble
0047    public function readInteger
0048    public function readLong
0049    public function readPosition
0050    public function readShort
0051    public function readString
0052    public function removeListener
0053    public function reset
0054    public function room
0055    public function write
0056    public function writeByte
0057    public function writeShort
0058    public function writeDouble
0059    public function writeInteger
0060    public function writeLong
0061    public function writePosition
0062    public function input
0063    public function output

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Cmd" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function sh
0027    public function run
0028    public function daemon
0029    public function runx

#
#  Instance slot assignments for the "Cmd" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "CmdArgs" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function CmdArgs
0027    [ejs::CmdArgs,private] function parseTemplate
0028    [ejs::CmdArgs,private] function validate

#
#  Instance slot assignments for the "CmdArgs" class (Num prop 4, num inherited 0)
#
0000    public var args: Array
0001    public var options: Object
0002    [ejs::CmdArgs,private] var ranges: Object
0003    [ejs::CmdArgs,private] var aliases: Object

#
#  Class slot assignments for the "Config" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public var Debug: Boolean
0027    public var CPU
0028    public var OS
0029    public var Product
0030    public var Title
0031    public var Version
0032    public var LibDir
0033    public var BinDir
0034    public var ModDir

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Date" class (Num slots 87, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Date
0027    public function day
0028    public function dayOfYear
0029    public function date
0030    public function elapsed
0031    public function format
0032    public function formatUTC
0033    public function fullYear
0034    public function getDate
0035    public function getDay
0036    public function getFullYear
0037    public function getHours
0038    public function getMilliseconds
0039    public function getMinutes
0040    public function getMonth
0041    public function getSeconds
0042    public function getTime
0043    public function getTimezoneOffset
0044    public function getUTCDate
0045    public function getUTCDay
0046    public function getUTCFullYear
0047    public function getUTCHours
0048    public function getUTCMilliseconds
0049    public function getUTCMinutes
0050    public function getUTCMonth
0051    public function getUTCSeconds
0052    public function hours
0053    public function milliseconds
0054    public function minutes
0055    public function month
0056    public function nanoAge
0057    public function nextDay
0058    public function now
0059    public function parseDate
0060    public function parseUTCDate
0061    public function parse
0062    public function seconds
0063    public function setDate
0064    public function setFullYear
0065    public function setHours
0066    public function setMilliseconds
0067    public function setMinutes
0068    public function setMonth
0069    public function setSeconds
0070    public function setTime
0071    public function setUTCDate
0072    public function setUTCFullYear
0073    public function setUTCHours
0074    public function setUTCMilliseconds
0075    public function setUTCMinutes
0076    public function setUTCMonth
0077    public function setUTCSeconds
0078    public function time
0079    public function toDateString
0080    public function toISOString
0081    public function toLocaleDateString
0082    public function toLocaleTimeString
0083    public function toTimeString
0084    public function toUTCString
0085    public function UTC
0086    public function year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Emitter" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener

#
#  Instance slot assignments for the "Emitter" class (Num prop 1, num inherited 0)
#
0000    [ejs::Emitter,private] var endpoints: Object

#
#  Class slot assignments for the "Endpoint" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 4, num inherited 0)
#
0000    public var callback
0001    public var name
0002    public var active: Boolean
0003    public var again: Boolean

#
#  Class slot assignments for the "ArgError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "AssertError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InstructionError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Error" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "IOError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InternalError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "MemoryError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ReferenceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ResourceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SecurityError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SecurityError

#
#  Instance slot assignments for the "SecurityError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "StateError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SyntaxError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "TypeError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "URIError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Event" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event

#
#  Instance slot assignments for the "Event" class (Num prop 2, num inherited 0)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "ErrorEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function ErrorEvent

#
#  Instance slot assignments for the "ErrorEvent" class (Num prop 6, num inherited 2)
#
0000    public var data
0001    public var timestamp
0002    public var message
0003    public var filename
0004    public var lineno
0005    public var stack

#
#  Class slot assignments for the "File" class (Num slots 47, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function File
0027    public function addListener
0028    public function async
0029    public function canRead
0030    public function canWrite
0031    public function close
0032    public function encoding
0033    public function flush
0034    public function isOpen
0035    public function open
0036    public function options
0037    public function path
0038    public function position
0039    public function read
0040    public function readBytes
0041    public function readString
0042    public function remove
0043    public function removeListener
0044    public function size
0045    public function truncate
0046    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "FileSystem" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function FileSystem
0027    public function hasDrives
0028    public function newline
0029    public function root
0030    public function separators

#
#  Instance slot assignments for the "FileSystem" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Frame" class (Num slots 31, num inherited 31)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Frame" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Function" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function enabled
0027    public function workQuota
0028    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Http" class (Num slots 118, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Http
0027    -initializer- function Http-initializer
0028    public var Continue
0029    public var Ok
0030    public var Created
0031    public var Accepted
0032    public var NotAuthoritative
0033    public var NoContent
0034    public var Reset
0035    public var Partial
0036    public var MultipleChoice
0037    public var MovedPermanently
0038    public var MovedTemporarily
0039    public var SeeOther
0040    public var NotModified
0041    public var UseProxy
0042    public var BadRequest
0043    public var Unauthorized
0044    public var PaymentRequired
0045    public var Forbidden
0046    public var NotFound
0047    public var BadMethod
0048    public var NotAccepted
0049    public var ProxyAuth
0050    public var ClientTimeout
0051    public var Conflict
0052    public var Gone
0053    public var LengthRequired
0054    public var PrecondFailed
0055    public var EntityTooLarge
0056    public var ReqTooLong
0057    public var UnsupportedType
0058    public var ServerError
0059    public var NotImplemented
0060    public var BadGateway
0061    public var Unavailable
0062    public var GatewayTimeout
0063    public var Version
0064    public function addListener
0065    public function async
0066    public function chunkSize
0067    public function close
0068    public function connect
0069    public function certificate
0070    public function contentLength
0071    public function contentType
0072    public function date
0073    public function del
0074    public function encoding
0075    public function expires
0076    public function finalize
0077    public function flush
0078    public function followRedirects
0079    public function form
0080    public function get
0081    public function getRequestHeaders
0082    public function head
0083    public function header
0084    public function headers
0085    public function isSecure
0086    public function key
0087    public function lastModified
0088    public function method
0089    public function options
0090    public function post
0091    public function put
0092    public function read
0093    public function readString
0094    public function readLines
0095    public function readXml
0096    public function removeListener
0097    public function response
0098    public function retries
0099    public function setCredentials
0100    public function setHeader
0101    public function setHeaders
0102    public function status
0103    public function statusMessage
0104    public function success
0105    public function timeout
0106    public function trace
0107    public function upload
0108    public function uri
0109    public function wait
0110    public function write
0111    public function addHeader
0112    public function bodyLength
0113    public function code
0114    public function codeString
0115    public function available
0116    public function contentEncoding
0117    public function mimeType

#
#  Instance slot assignments for the "Http" class (Num prop 1, num inherited 0)
#
0000    [ejs::Http,private] var _response

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Iterator" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function parse
0027    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Locale" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Locale
0027    -initializer- function Locale-initializer
0028    public var textEncoding

#
#  Instance slot assignments for the "Locale" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Logger" class (Num slots 53, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Logger
0027    -initializer- function Logger-initializer
0028    public var Off
0029    public var Error
0030    public var Warn
0031    public var Info
0032    public var Config
0033    public var All
0034    public function addListener
0035    public function async
0036    public function close
0037    public function filter
0038    public function flush
0039    public function level
0040    public function match
0041    public function name
0042    public function outstream
0043    public function parent
0044    public function debug
0045    public function config
0046    public function error
0047    public function info
0048    public function read
0049    public function removeListener
0050    public function write
0051    public function warn
0052    [ejs::Logger,private] function emit

#
#  Instance slot assignments for the "Logger" class (Num prop 6, num inherited 0)
#
0000    [ejs::Logger,private] var _filter: Function
0001    [ejs::Logger,private] var _level
0002    [ejs::Logger,private] var _pattern
0003    [ejs::Logger,private] var _name
0004    [ejs::Logger,private] var _outstream: Stream
0005    [ejs::Logger,private] var _parent: Logger

#
#  Class slot assignments for the "Math" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Math-initializer
0027    public var E
0028    public var LN2
0029    public var LN10
0030    public var LOG2E
0031    public var LOG10E
0032    public var PI
0033    public var SQRT1_2
0034    public var SQRT2
0035    public function abs
0036    public function acos
0037    public function asin
0038    public function atan
0039    public function atan2
0040    public function ceil
0041    public function cos
0042    public function exp
0043    public function floor
0044    public function log10
0045    public function log
0046    public function max
0047    public function min
0048    public function pow
0049    public function random
0050    public function round
0051    public function sin
0052    public function sqrt
0053    public function tan

#
#  Instance slot assignments for the "Math" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Memory" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function allocated
0027    public function callback
0028    public function maximum
0029    public function peak
0030    public function redline
0031    public function resident
0032    public function stack
0033    public function system
0034    public function stats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Namespace" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Namespace" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Null" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Number" class (Num slots 49, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Number
0027    -initializer- function Number-initializer
0028    public var MAX_VALUE: Number
0029    public var MIN_VALUE: Number
0030    public var NaN: Number
0031    public var NEGATIVE_INFINITY: Number
0032    public var POSITIVE_INFINITY: Number
0033    public var MaxValue: Number
0034    public var MinValue: Number
0035    public function abs
0036    public function ceil
0037    public function floor
0038    public function isFinite
0039    public function isNaN
0040    public function round
0041    public function toExponential
0042    public function toFixed
0043    public function toPrecision
0044    public function byte
0045    public function integral
0046    public function max
0047    public function min
0048    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Object" class (Num slots 26, num inherited 0)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    public function create
0005    public function defineProperty
0006    public function defineProperties
0007    public function freeze
0008    iterator function get
0009    public function getOwnPropertyDescriptor
0010    public function getOwnPropertyNames
0011    public function getOwnPrototypeOf
0012    iterator function getValues
0013    public function hasOwnProperty
0014    public function isExtensible
0015    public function isFrozen
0016    public function isPrototypeOf
0017    public function isSealed
0018    public function keys
0019    public function preventExtensions
0020    public function propertyIsEnumerable
0021    public function seal
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Path" class (Num slots 85, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Path
0027    public function absolute
0028    public function accessed
0029    public function basename
0030    public function components
0031    public function contains
0032    public function copy
0033    public function created
0034    public function dirname
0035    public function endsWith
0036    public function exists
0037    public function extension
0038    public function find
0039    public function files
0040    public function hasDrive
0041    public function isAbsolute
0042    public function isDir
0043    public function isLink
0044    public function isRegular
0045    public function isRelative
0046    public function join
0047    public function joinExt
0048    public function length
0049    public function linkTarget
0050    public function makeDir
0051    public function makeLink
0052    public function makeTemp
0053    public function map
0054    public function mimeType
0055    public function modified
0056    public function name
0057    public function natural
0058    public function normalize
0059    public function open
0060    public function openTextStream
0061    public function openBinaryStream
0062    public function parent
0063    public function perms
0064    public function portable
0065    public function readBytes
0066    public function readLines
0067    public function readString
0068    public function readXML
0069    public function relative
0070    public function remove
0071    public function removeAll
0072    public function rename
0073    public function replaceExt
0074    public function resolve
0075    public function same
0076    public function separator
0077    public function size
0078    public function startsWith
0079    public function toLower
0080    public function trimEnd
0081    public function trimExt
0082    public function trimStart
0083    public function truncate
0084    public function write

#
#  Instance slot assignments for the "Path" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Promise" class (Num slots 47, num inherited 35)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener
0035    -constructor- function Promise
0036    internal-ed363076473b51ca685af450cc662b39-0 function addCallback
0037    internal-ed363076473b51ca685af450cc662b39-0 function addCancelback
0038    internal-ed363076473b51ca685af450cc662b39-0 function addErrback
0039    internal-ed363076473b51ca685af450cc662b39-0 function emitSuccess
0040    internal-ed363076473b51ca685af450cc662b39-0 function emitError
0041    internal-ed363076473b51ca685af450cc662b39-0 function emitCancel
0042    internal-ed363076473b51ca685af450cc662b39-0 function cancel
0043    internal-ed363076473b51ca685af450cc662b39-0 function then
0044    internal-ed363076473b51ca685af450cc662b39-0 function timeout
0045    internal-ed363076473b51ca685af450cc662b39-0 function wait
0046    [ejs::Promise,private] function issue

#
#  Instance slot assignments for the "Promise" class (Num prop 3, num inherited 1)
#
0000    [ejs::Emitter,private] var endpoints
0001    [ejs::Promise,private] var timer
0002    [ejs::Promise,private] var fired: Boolean

#
#  Class slot assignments for the "Reflect" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Reflect
0027    public function base
0028    public function isType
0029    public function type
0030    public function name

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [ejs::Reflect,private] var obj: Object

#
#  Class slot assignments for the "RegExp" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function RegExp
0027    public function lastIndex
0028    public function exec
0029    public function global
0030    public function ignoreCase
0031    public function multiline
0032    public function source
0033    public function matched
0034    public function replace
0035    public function split
0036    public function start
0037    public function sticky
0038    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Socket" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Socket
0027    public function addListener
0028    public function accept
0029    public function address
0030    public function async
0031    public function close
0032    public function connect
0033    public function encoding
0034    public function flush
0035    public function listen
0036    public function port
0037    public function read
0038    public function remoteAddress
0039    public function removeListener
0040    public function write

#
#  Instance slot assignments for the "Socket" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Stream" class (Num slots 7, num inherited 0)
#
0000    public function addListener
0001    public function async
0002    public function close
0003    public function flush
0004    public function read
0005    public function removeListener
0006    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "String" class (Num slots 68, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function String
0027    public function caseCompare
0028    public function caselessCompare
0029    public function charAt
0030    public function charCodeAt
0031    public function concat
0032    public function contains
0033    public function endsWith
0034    public function format
0035    public function fromCharCode
0036    public function indexOf
0037    public function isDigit
0038    public function isAlpha
0039    public function isAlphaNum
0040    public function isLower
0041    public function isSpace
0042    public function isUpper
0043    public function lastIndexOf
0044    public function length
0045    public function match
0046    public function parseJSON
0047    public function toCamel
0048    public function toPascal
0049    public function printable
0050    public function quote
0051    public function remove
0052    public function replace
0053    public function reverse
0054    public function search
0055    public function slice
0056    public function split
0057    public function startsWith
0058    public function substring
0059    public function times
0060    public function tokenize
0061    public function toLower
0062    public function toUpper
0063    public function trim
0064    public function trimStart
0065    public function trimEnd
0066    public function -
0067    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 36, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function System-initializer
0027    public var Bufsize: Number
0028    public function hostname
0029    public function ipaddr
0030    public function run
0031    public function runx
0032    public function daemon
0033    public function sh
0034    public function cmd
0035    public function exec

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TextStream" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TextStream
0027    public function addListener
0028    public function async
0029    public function available
0030    public function close
0031    public function encoding
0032    public function fill
0033    public function flush
0034    public function read
0035    public function readLine
0036    public function readLines
0037    public function readString
0038    public function removeListener
0039    public function write
0040    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs::TextStream,private] var newline: String
0001    [ejs::TextStream,private] var inbuf: ByteArray
0002    [ejs::TextStream,private] var format: String
0003    [ejs::TextStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Timer" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Timer
0027    public function drift
0028    public function period
0029    public function restart
0030    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TimerEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function TimerEvent

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 2, num inherited 2)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "Type" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Uri" class (Num slots 65, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Uri
0027    public function basename
0028    public function complete
0029    public function components
0030    public function decode
0031    public function decodeComponent
0032    public function dirname
0033    public function encode
0034    public function encodeComponent
0035    public function endsWith
0036    public function extension
0037    public function hasExtension
0038    public function hasHost
0039    public function hasPort
0040    public function hasQuery
0041    public function hasReference
0042    public function hasScheme
0043    public function host
0044    public function isAbsolute
0045    public function isDir
0046    public function isRegular
0047    public function isRelative
0048    public function join
0049    public function joinExt
0050    public function mimeType
0051    public function normalize
0052    public function path
0053    public function port
0054    public function scheme
0055    public function query
0056    public function reference
0057    public function relative
0058    public function replaceExt
0059    public function same
0060    public function startsWith
0061    public function trimEnd
0062    public function trimExt
0063    public function trimStart
0064    public function uri

#
#  Instance slot assignments for the "Uri" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Void" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Worker" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Worker
0027    public function eval
0028    public function exit
0029    public function join
0030    public function load
0031    public function preload
0032    public function preeval
0033    public function lookup
0034    public function postMessage
0035    public function terminate
0036    public function waitForMessage

#
#  Instance slot assignments for the "Worker" class (Num prop 4, num inherited 0)
#
0000    public var onclose: Function
0001    public var onmessage: Function
0002    public var onerror: Function
0003    public var name: String

#
#  Class slot assignments for the "XML" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XML
0027    public function load
0028    public function save
0029    public function length
0030    public function name

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "XMLHttp" class (Num slots 48, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLHttp
0027    -initializer- function XMLHttp-initializer
0028    public var Uninitialized
0029    public var Open
0030    public var Sent
0031    public var Receiving
0032    public var Loaded
0033    public function abort
0034    public function http
0035    public function readyState
0036    public function responseText
0037    public function responseXML
0038    public function responseBody
0039    public function status
0040    public function statusText
0041    public function getAllResponseHeaders
0042    public function getResponseHeader
0043    public function open
0044    public function send
0045    public function setRequestHeader
0046    [ejs::XMLHttp,private] function callback
0047    [ejs::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs::XMLHttp,private] var hp: Http
0001    [ejs::XMLHttp,private] var state: Number
0002    [ejs::XMLHttp,private] var response: ByteArray
0003    public var onreadystatechange: Function

#
#  Class slot assignments for the "XMLList" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLList
0027    public function length
0028    public function name

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Loader" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Loader-initializer
0027    public var mainId
0028    [Loader,private] var signatures
0029    [Loader,private] var timestamps
0030    [Loader,private] var defaultExtensions
0031    [Loader,private] var config
0032    internal-ed363076473b51ca685af450cc662b39-0 function init
0033    public function require
0034    public function load
0035    public function cached
0036    public function wrap
0037    [Loader,private] function locate
0038    public function setConfig

#
#  Instance slot assignments for the "Loader" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Database" class (Num slots 59, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Database
0027    [ejs.db::Database,private] var defaultDb: Database
0028    public function addColumn
0029    public function addIndex
0030    public function changeColumn
0031    public function close
0032    public function commit
0033    public function connect
0034    public function connection
0035    public function createDatabase
0036    public function createTable
0037    public function dataTypeToSqlType
0038    public function defaultDatabase
0039    public function destroyDatabase
0040    public function destroyTable
0041    public function endTransaction
0042    public function getColumns
0043    public function getTables
0044    public function getNumRows
0045    public function name
0046    public function query
0047    public function removeColumns
0048    public function removeIndex
0049    public function renameColumn
0050    public function renameTable
0051    public function rollback
0052    public function sql
0053    public function sqlTypeToDataType
0054    public function sqlTypeToEjsType
0055    public function startTransaction
0056    public function trace
0057    public function transaction
0058    public function quote

#
#  Instance slot assignments for the "Database" class (Num prop 4, num inherited 0)
#
0000    [ejs.db::Database,private] var _adapter: Object
0001    [ejs.db::Database,private] var _connection: String
0002    [ejs.db::Database,private] var _name: String
0003    [ejs.db::Database,private] var _traceAll: Boolean

#
#  Class slot assignments for the "DatabaseConnector" class (Num slots 22, num inherited 0)
#
0000    public function addColumn
0001    public function addIndex
0002    public function changeColumn
0003    public function close
0004    public function commit
0005    public function connect
0006    public function createDatabase
0007    public function createTable
0008    public function dataTypeToSqlType
0009    public function destroyDatabase
0010    public function destroyTable
0011    public function getColumns
0012    public function getTables
0013    public function removeColumns
0014    public function removeIndex
0015    public function renameColumn
0016    public function renameTable
0017    public function rollback
0018    public function sql
0019    public function sqlTypeToDataType
0020    public function sqlTypeToEjsType
0021    public function startTransaction

#
#  Instance slot assignments for the "DatabaseConnector" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 5498 bytes)
#
0000   ""
0001   "ejs.es"
0002   "}"
0003   "internal-ed363076473b51ca685af450cc662b39-0"
0004   "ejs.db"
0005   "module ejs.db {"
0006   "    class Database {"
0007   "        private var _adapter: Object"
0008   "_adapter"
0009   "[ejs.db::Database,private]"
0010   "Object"
0011   "        private var _connection: String"
0012   "_connection"
0013   "String"
0014   "        private var _name: String"
0015   "_name"
0016   "        private var _traceAll: Boolean"
0017   "_traceAll"
0018   "Boolean"
0019   "        private static var defaultDb: Database"
0020   "defaultDb"
0021   "Database"
0022   "        use default namespace public"
0023   "        function Database(adapter: String, connectionString: String) {"
0024   "            Database.defaultDb ||= this"
0025   "            if (adapter == "sqlite3") adapter = "sqlite""
0026   "sqlite3"
0027   "sqlite"
0028   "            try {"
0029   "                _name = Path(connectionString).basename"
0030   "basename"
0031   "public"
0032   "                _connection = connectionString"
0033   "                let adapterClass = adapter.toPascal()"
0034   "adapterClass"
0035   "-hoisted-2"
0036   "toPascal"
0037   "                if (!global."ejs.db"::[adapterClass]) {"
0038   "                    load("ejs.db." + adapter + ".mod")"
0039   "ejs.db."
0040   ".mod"
0041   "                }"
0042   "                _adapter = new global."ejs.db"::[adapterClass](connectionString)"
0043   "            } catch (e) {"
0044   "e"
0045   "-hoisted-3"
0046   "                print(e)"
0047   "                throw "Can't find database connector for " + adapter"
0048   "Can't find database connector for "
0049   "Void"
0050   "ejs"
0051   "        }"
0052   "-constructor-"
0053   "adapter"
0054   "private"
0055   "connectionString"
0056   "        function addColumn(table: String, column: String, datatype: String, options = null): Void"
0057   "            _adapter.addColumn(table, column, datatype, options)"
0058   "addColumn"
0059   ""
0060   "table"
0061   "column"
0062   "datatype"
0063   "options"
0064   "        function addIndex(table: String, column: String, index: String): Void"
0065   "            _adapter.addIndex(table, column, index)"
0066   "addIndex"
0067   "index"
0068   "        function changeColumn(table: String, column: String, datatype: String, options: Object? = null): Void"
0069   "            _adapter.changeColumn(table, column, datatype, options)"
0070   "changeColumn"
0071   "        function close(): Void"
0072   "            _adapter.close()"
0073   "close"
0074   "        function commit(): Void"
0075   "            _adapter.commit()"
0076   "commit"
0077   "        function connect(connectionString: String): Void"
0078   "            _adapter.connect(connectionString)"
0079   "connect"
0080   "        function get connection(): String"
0081   "            _connection"
0082   "connection"
0083   "        function createDatabase(name: String, options: Object? = null): Void"
0084   "            _adapter.createDatabase(name, options)"
0085   "createDatabase"
0086   "name"
0087   "        function createTable(table: String, columns: Array? = null): Void"
0088   "            _adapter.createTable(table, columns)"
0089   "createTable"
0090   "columns"
0091   "Array"
0092   "        function dataTypeToSqlType(dataType:String): String"
0093   "            _adapter.dataTypeToSqlType(dataType)"
0094   "dataTypeToSqlType"
0095   "dataType"
0096   "        static function get defaultDatabase(): Database"
0097   "            defaultDb"
0098   "defaultDatabase"
0099   "        static function set defaultDatabase(db: Database): Void {"
0100   "            defaultDb = db"
0101   "db"
0102   "        function destroyDatabase(name: String): Void"
0103   "            _adapter.destroyDatabase(name)"
0104   "destroyDatabase"
0105   "        function destroyTable(table: String): Void"
0106   "            _adapter.destroyTable(table)"
0107   "destroyTable"
0108   "        function endTransaction(): Void"
0109   "            _adapter.endTransaction()"
0110   "endTransaction"
0111   "        function getColumns(table: String): Array"
0112   "            _adapter.getColumns(table)"
0113   "getColumns"
0114   "        function getTables(): Array"
0115   "            _adapter.getTables()"
0116   "getTables"
0117   "        function getNumRows(table: String): Number"
0118   "            _adapter.getNumRows()"
0119   "getNumRows"
0120   "Number"
0121   "        function get name(): String"
0122   "            _name"
0123   "        function query(cmd: String, tag: String = "SQL", trace: Boolean = false): Array {"
0124   "SQL"
0125   "            if (_traceAll || trace) {"
0126   "                print(tag + ": " + cmd)"
0127   ": "
0128   "            return _adapter.sql(cmd)"
0129   "sql"
0130   "query"
0131   "cmd"
0132   "tag"
0133   "trace"
0134   "        function removeColumns(table: String, columns: Array): Void"
0135   "            _adapter.removeColumns(table, columns)"
0136   "removeColumns"
0137   "        function removeIndex(table: String, index: String): Void"
0138   "            _adapter.removeIndex(table, index)"
0139   "removeIndex"
0140   "        function renameColumn(table: String, oldColumn: String, newColumn: String): Void"
0141   "            _adapter.renameColumn(table, oldColumn, newColumn)"
0142   "renameColumn"
0143   "oldColumn"
0144   "newColumn"
0145   "        function renameTable(oldTable: String, newTable: String): Void"
0146   "            _adapter.renameTable(oldTable, newTable)"
0147   "renameTable"
0148   "oldTable"
0149   "newTable"
0150   "        function rollback(): Void"
0151   "            _adapter.rollback()"
0152   "rollback"
0153   "        function sql(cmd: String): Array"
0154   "            _adapter.sql(cmd)"
0155   "        function sqlTypeToDataType(sqlType: String): String"
0156   "            _adapter.sqlTypeToDataType(sqlType)"
0157   "sqlTypeToDataType"
0158   "sqlType"
0159   "        function sqlTypeToEjsType(sqlType: String): Type"
0160   "            _adapter.sqlTypeToEjsType(sqlType)"
0161   "sqlTypeToEjsType"
0162   "Type"
0163   "        function startTransaction(): Void"
0164   "            _adapter.startTransaction()"
0165   "startTransaction"
0166   "        function trace(on: Boolean): void"
0167   "            _traceAll = on"
0168   "on"
0169   "        function transaction(code: Function): Void {"
0170   "            startTransaction()"
0171   "                code()"
0172   "            } catch (e: Error) {"
0173   "-hoisted-1"
0174   "                rollback();"
0175   "            } finally {"
0176   "                endTransaction()"
0177   "Error"
0178   "transaction"
0179   "code"
0180   "Function"
0181   "        static function quote(str: String): String  {"
0182   "            return str.replace(/'/g, "''")"
0183   "/'/g"
0184   "''"
0185   "replace"
0186   "quote"
0187   "str"
0188   "constructor"
0189   "length"
0190   "prototype"
0191   "clone"
0192   "get"
0193   "iterator"
0194   "Iterator"
0195   "getValues"
0196   "hasOwnProperty"
0197   "isPrototypeOf"
0198   "propertyIsEnumerable"
0199   "toJSON"
0200   "toLocaleString"
0201   "toString"
0202   "valueOf"
0203   "block_12346_273"
0204   "-block-"
0205   "    interface DatabaseConnector {"
0206   "DatabaseConnector"
0207   "block_12721_281"
0208   "__initializer__"

==============================================================================================

MODULE:   ejs.db.mapper <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_12862_282 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 10 8a da 01 1e .......... debug 

    # ejs.es:13957              }

    0009: [0] 01 22 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0011: [0] 01 7a ...................... addNamespace <ejs.db.mapper> 
    0013: [0] 33 10 fc c8 01 96 01 ....... debug 

    # ejs.es:12862              module ejs.db.mapper {

    0020: [0] 33 10 80 c9 01 c4 01 ....... debug 

    # ejs.es:12864                  require ejs.db

    0027: [0] 01 02 ...................... addNamespace <ejs.db> 
    0029: [0] 33 10 9a c9 01 ea 01 ....... debug 

    # ejs.es:12877                  public class Record {

    0036: [0] 34 fc 09 ................... defineClass <type: 0x27e,  public::Record> 
    0039: [0] 33 10 b8 d9 01 c0 93 03 .... debug 

    # ejs.es:13916                  class Column {

    0047: [0] 34 84 0a ................... defineClass <type: 0x282,  ejs.db.mapper::Column> 
    0050: [0] 33 10 d2 d9 01 fa 97 03 .... debug 

    # ejs.es:13929                  function plural(name: String): String

    0058: [0] 33 10 da d9 01 86 99 03 .... debug 

    # ejs.es:13933                  function singular(name: String): String {

    0066: [0] 33 10 fa d9 01 ee 9e 03 .... debug 

    # ejs.es:13949                  function mapType(value: Object): String {

    0074: [0] 24 ......................... closeBlock 
    0075: [0] 3b ......................... endCode 
    

BLOCK:      [block_12862_282-00]  block_12862_282 (Slots 0)

CLASS:      class Record extends Object
            #  Class Details: 102 class traits, 3 instance traits, requested slot 159

FUNCTION:   [Record-26]  -constructor- const function Record(fields: Object) : void

     ARG:   [arg-00]   private fields : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 10 9a ca 01 c6 31 ....... debug 

    # ejs.es:12941                          initialize(fields)

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 1f 84 32 e4 2c 02 .......... callScopedName <initialize> <public> <argc: 1> 
    0021: [0] be ......................... return 
    0022: [0] 33 10 9c ca 01 9a 32 ....... debug 

    # ejs.es:12942                      }
    
VARIABLE:   [fields-00]  private var fields : Object

FUNCTION:   [Record-27]  -initializer- static function Record-initializer() : Void


    0000: [0] 33 10 9e c9 01 9e 02 ....... debug 

    # ejs.es:12879                      static var  _assocName: String        //  Name for use in associations. Lower case class name

    0007: [0] 33 10 a0 c9 01 8e 04 ....... debug 

    # ejs.es:12880                      static var  _belongsTo: Array         //  List of belonging associations

    0014: [0] 33 10 a2 c9 01 d2 05 ....... debug 

    # ejs.es:12881                      static var  _className: String        //  Model class name

    0021: [0] 33 10 a4 c9 01 ee 06 ....... debug 

    # ejs.es:12882                      static var  _columns: Object          //  List of columns in this database table

    0028: [0] 33 10 a6 c9 01 c0 08 ....... debug 

    # ejs.es:12883                      static var  _hasOne: Array            //  List of 1-1 containment associations

    0035: [0] 33 10 a8 c9 01 fe 09 ....... debug 

    # ejs.es:12884                      static var  _hasMany: Array           //  List of 1-many containment  associations

    0042: [0] 33 10 ac c9 01 c6 0b ....... debug 

    # ejs.es:12886                      static var  _db: Database             //  Hosting database

    0049: [0] 33 10 ae c9 01 e6 0c ....... debug 

    # ejs.es:12887                      static var  _foreignId: String        //  Camel case class name with "Id". (userCartId))

    0056: [0] 33 10 b0 c9 01 be 0e ....... debug 

    # ejs.es:12888                      static var  _keyName: String          //  Name of the key column (typically "id")

    0063: [0] 33 10 b2 c9 01 84 10 ....... debug 

    # ejs.es:12889                      static var  _model: Type              //  Model class

    0070: [0] 33 10 b4 c9 01 98 11 ....... debug 

    # ejs.es:12890                      static var  _tableName: String        //  Name of the database table. Plural, PascalCase

    0077: [0] 33 10 b6 c9 01 f0 12 ....... debug 

    # ejs.es:12891                      static var  _trace: Boolean           //  Trace database SQL statements

    0084: [0] 33 10 b8 c9 01 ae 14 ....... debug 

    # ejs.es:12892                      static var  _validations: Array

    0091: [0] 33 10 bc c9 01 98 15 ....... debug 

    # ejs.es:12894                      static var  _beforeFilters: Array     //  Filters that run before saving data

    0098: [0] 33 10 be c9 01 e2 16 ....... debug 

    # ejs.es:12895                      static var  _afterFilters: Array      //  Filters that run after saving data

    0105: [0] 33 10 c0 c9 01 a8 18 ....... debug 

    # ejs.es:12896                      static var  _wrapFilters: Array       //  Filters that run before and after saving data

    0112: [0] 33 10 c4 c9 01 82 1a ....... debug 

    # ejs.es:12898                      var _keyValue: Object                 //  Record key column value

    0119: [0] 33 10 c6 c9 01 aa 1b ....... debug 

    # ejs.es:12899                      var _errors: Object                   //  Error message aggregation

    0126: [0] 33 10 c8 c9 01 d2 1c ....... debug 

    # ejs.es:12900                      var _cacheAssoc: Object               //  Cached association data

    0133: [0] 33 10 cc c9 01 fe 1d ....... debug 

    # ejs.es:12902                      static var ErrorMessages = {

    0140: [0] 33 10 ce c9 01 e4 1e ....... debug 

    # ejs.es:12903                          accepted: "must be accepted",

    0147: [0] 56 00 ...................... loadString <> 
    0149: [1] 56 b8 1f ................... loadString <accepted> 
    0152: [2] 56 ca 1f ................... loadString <must be accepted> 
    0155: [3] 33 10 d0 c9 01 ec 1f ....... debug 

    # ejs.es:12904                          blank: "can't be blank",

    0162: [3] 56 00 ...................... loadString <> 
    0164: [4] 56 b6 20 ................... loadString <blank> 
    0167: [5] 56 c2 20 ................... loadString <can't be blank> 
    0170: [6] 33 10 d2 c9 01 e0 20 ....... debug 

    # ejs.es:12905                          confirmation: "doesn't match confirmation",

    0177: [6] 56 00 ...................... loadString <> 
    0179: [7] 56 d0 21 ................... loadString <confirmation> 
    0182: [8] 56 ea 21 ................... loadString <doesn't match confirmation> 
    0185: [9] 33 10 d4 c9 01 a0 22 ....... debug 

    # ejs.es:12906                          empty: "can't be empty",

    0192: [9] 56 00 ...................... loadString <> 
    0194: [10] 56 ea 22 ................... loadString <empty> 
    0197: [11] 56 f6 22 ................... loadString <can't be empty> 
    0200: [12] 33 10 d6 c9 01 94 23 ....... debug 

    # ejs.es:12907                          invalid: "is invalid",

    0207: [12] 56 00 ...................... loadString <> 
    0209: [13] 56 da 23 ................... loadString <invalid> 
    0212: [14] 56 ea 23 ................... loadString <is invalid> 
    0215: [15] 33 10 d8 c9 01 80 24 ....... debug 

    # ejs.es:12908                          missing: "is missing",

    0222: [15] 56 00 ...................... loadString <> 
    0224: [16] 56 c6 24 ................... loadString <missing> 
    0227: [17] 56 d6 24 ................... loadString <is missing> 
    0230: [18] 33 10 da c9 01 ec 24 ....... debug 

    # ejs.es:12909                          notNumber: "is not a number",

    0237: [18] 56 00 ...................... loadString <> 
    0239: [19] 56 c0 25 ................... loadString <notNumber> 
    0242: [20] 56 d4 25 ................... loadString <is not a number> 
    0245: [21] 33 10 dc c9 01 f4 25 ....... debug 

    # ejs.es:12910                          notUnique: "is not unique",

    0252: [21] 56 00 ...................... loadString <> 
    0254: [22] 56 c4 26 ................... loadString <notUnique> 
    0257: [23] 56 d8 26 ................... loadString <is not unique> 
    0260: [24] 33 10 de c9 01 f4 26 ....... debug 

    # ejs.es:12911                          taken: "already taken",

    0267: [24] 56 00 ...................... loadString <> 
    0269: [25] 56 bc 27 ................... loadString <taken> 
    0272: [26] 56 c8 27 ................... loadString <already taken> 
    0275: [27] 33 10 e0 c9 01 e4 27 ....... debug 

    # ejs.es:12912                          tooLong: "is too long",

    0282: [27] 56 00 ...................... loadString <> 
    0284: [28] 56 ac 28 ................... loadString <tooLong> 
    0287: [29] 56 bc 28 ................... loadString <is too long> 
    0290: [30] 33 10 e2 c9 01 d4 28 ....... debug 

    # ejs.es:12913                          tooShort: "is too short",

    0297: [30] 56 00 ...................... loadString <> 
    0299: [31] 56 a0 29 ................... loadString <tooShort> 
    0302: [32] 56 b2 29 ................... loadString <is too short> 
    0305: [33] 33 10 e4 c9 01 cc 29 ....... debug 

    # ejs.es:12914                          wrongLength: "wrong length",

    0312: [33] 56 00 ...................... loadString <> 
    0314: [34] 56 9e 2a ................... loadString <wrongLength> 
    0317: [35] 56 b6 2a ................... loadString <wrong length> 
    0320: [36] 33 10 e6 c9 01 d0 2a ....... debug 

    # ejs.es:12915                          wrongFormat: "wrong format",

    0327: [36] 56 00 ...................... loadString <> 
    0329: [37] 56 a2 2b ................... loadString <wrongFormat> 
    0332: [38] 56 ba 2b ................... loadString <wrong format> 
    0335: [39] 8a e4 06 1a 00 00 00 00 00 00 00 00 00 00 00 00 00  newObject <type: 0x1b2,  ejs::Object> <argc: 13> <att: 13 13 13 13 13 13 13 13 13 13 13 13 13 >
    0352: [1] 33 10 cc c9 01 fe 1d ....... debug 

    # ejs.es:12902                      static var ErrorMessages = {

    0359: [1] 57 ......................... loadThis 
    0360: [2] b3 c8 1e 22 ................ putObjName <ErrorMessages> <internal-ed363076473b51ca685af450cc662b39-0> 
    0364: [0] 33 10 f2 c9 01 d4 2b ....... debug 

    # ejs.es:12921                      _keyName = "id"

    0371: [0] 56 84 2c ................... loadString <id> 
    0374: [1] 57 ......................... loadThis 
    0375: [2] b3 f2 0f 22 ................ putObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0379: [0] 33 10 f4 c9 01 8a 2c ....... debug 

    # ejs.es:12922                      _className = Reflect(this).name

    0386: [0] 57 ......................... loadThis 
    0387: [1] 17 de 01 02 ................ callGlobalSlot <slot: 111> <argc: 1> 
    0391: [0] 93 ......................... pushResult 
    0392: [1] 7b da 2c e4 2c ............. getObjName <name> <public> 
    0397: [1] 57 ......................... loadThis 
    0398: [2] b3 d8 06 22 ................ putObjName <_className> <internal-ed363076473b51ca685af450cc662b39-0> 
    0402: [0] 33 10 f8 c9 01 f2 2c ....... debug 

    # ejs.es:12924                      _model = global[_className]

    0409: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0411: [1] 56 ba 2d ................... loadString <> 
    0414: [2] 57 ......................... loadThis 
    0415: [3] 7b d8 06 22 ................ getObjName <_className> <internal-ed363076473b51ca685af450cc662b39-0> 
    0419: [3] 7c ......................... getObjNameExpr 
    0420: [1] 57 ......................... loadThis 
    0421: [2] b3 80 11 22 ................ putObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0425: [0] 33 10 fa c9 01 bc 2d ....... debug 

    # ejs.es:12925                      _assocName = _className.toCamel()

    0432: [0] 57 ......................... loadThis 
    0433: [1] 7b d8 06 22 ................ getObjName <_className> <internal-ed363076473b51ca685af450cc662b39-0> 
    0437: [1] 1e 90 2e e4 2c 00 .......... callObjName <toCamel> <public> <argc: 0> 
    0443: [0] 93 ......................... pushResult 
    0444: [1] 57 ......................... loadThis 
    0445: [2] b3 ea 03 22 ................ putObjName <_assocName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0449: [0] 33 10 fc c9 01 a0 2e ....... debug 

    # ejs.es:12926                      _foreignId = _className.toCamel() + _keyName.toPascal()

    0456: [0] 57 ......................... loadThis 
    0457: [1] 7b d8 06 22 ................ getObjName <_className> <internal-ed363076473b51ca685af450cc662b39-0> 
    0461: [1] 1e 90 2e e4 2c 00 .......... callObjName <toCamel> <public> <argc: 0> 
    0467: [0] 93 ......................... pushResult 
    0468: [1] 57 ......................... loadThis 
    0469: [2] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0473: [2] 1e a0 2f e4 2c 00 .......... callObjName <toPascal> <public> <argc: 0> 
    0479: [1] 93 ......................... pushResult 
    0480: [2] 00 ......................... add 
    0481: [1] 57 ......................... loadThis 
    0482: [2] b3 a8 0e 22 ................ putObjName <_foreignId> <internal-ed363076473b51ca685af450cc662b39-0> 
    0486: [0] 33 10 fe c9 01 b2 2f ....... debug 

    # ejs.es:12927                      _tableName = plural(_className).toPascal()

    0493: [0] 57 ......................... loadThis 
    0494: [1] 7b d8 06 22 ................ getObjName <_className> <internal-ed363076473b51ca685af450cc662b39-0> 
    0498: [1] 17 c2 02 02 ................ callGlobalSlot <slot: 161> <argc: 1> 
    0502: [0] 93 ......................... pushResult 
    0503: [1] 1e a0 2f 00 00 ............. callObjName <toPascal> <> <argc: 0> 
    0508: [0] 93 ......................... pushResult 
    0509: [1] 57 ......................... loadThis 
    0510: [2] b3 da 12 22 ................ putObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0514: [0] 33 10 84 ca 01 98 30 ....... debug 

    # ejs.es:12930                      use default namespace public

    0521: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0523: [1] 02 ......................... addNamespaceRef 
    0524: [0] 33 10 98 ca 01 e2 30 ....... debug 

    # ejs.es:12940                      function Record(fields: Object? = null) {

    0531: [0] 33 10 a2 ca 01 fe 32 ....... debug 

    # ejs.es:12945                      function initialize(fields: Object? = null): Void {

    0538: [0] 33 10 b8 ca 01 ae 36 ....... debug 

    # ejs.es:12956                      static function afterFilter(fn, options: Object? = null): Void {

    0545: [0] 33 10 cc ca 01 9e 39 ....... debug 

    # ejs.es:12966                      static function beforeFilter(fn, options: Object? = null): Void {

    0552: [0] 33 10 e8 ca 01 f2 3b ....... debug 

    # ejs.es:12980                      static function belongsTo(owner, options: Object? = null): Void {

    0559: [0] 33 10 fa ca 01 ac 3e ....... debug 

    # ejs.es:12989                      private static function cachedRead(rec: Record, field: String, model, key: String, options: Object): Object {

    0566: [0] 33 10 8a cb 01 9a 44 ....... debug 

    # ejs.es:12997                      private static function checkFormat(thisObj: Record, field: String, value, options: Object): Void {

    0573: [0] 33 10 96 cb 01 8c 49 ....... debug 

    # ejs.es:13003                      private static function checkNumber(thisObj: Record, field: String, value, options): Void {

    0580: [0] 33 10 a2 cb 01 b4 4d ....... debug 

    # ejs.es:13009                      private static function checkPresent(thisObj: Record, field: String, value, options): Void {

    0587: [0] 33 10 b2 cb 01 8e 54 ....... debug 

    # ejs.es:13017                      private static function checkUnique(thisObj: Record, field: String, value, options): Void {

    0594: [0] 33 10 d0 cb 01 aa 5c ....... debug 

    # ejs.es:13032                      private function coerceToEjsTypes(): Void {

    0601: [0] 33 10 98 cc 01 f0 6c ....... debug 

    # ejs.es:13068                      private static function createAssociations(rec: Record, set: Array, preload, options): Void {

    0608: [0] 33 10 e0 cc 01 e2 7e ....... debug 

    # ejs.es:13104                      private static function createRecord(data: Object, options: Object = {}) {

    0615: [0] 33 10 b8 cd 01 be 92 01 .... debug 

    # ejs.es:13148                      function error(field: String, msg: String): Void {

    0623: [0] 33 10 f8 cd 01 bc 94 01 .... debug 

    # ejs.es:13180                      static function find(key: Object, options: Object = {}): Object {

    0631: [0] 33 10 9c ce 01 ae 9b 01 .... debug 

    # ejs.es:13198                      static function findAll(options: Object = {}): Array {

    0639: [0] 33 10 c6 ce 01 9c a1 01 .... debug 

    # ejs.es:13219                      static function findOneWhere(where: String): Object {

    0647: [0] 33 10 e6 ce 01 aa a4 01 .... debug 

    # ejs.es:13235                      static function findWhere(where: String, count: Number? = null): Array {

    0655: [0] 33 10 80 cf 01 a8 a8 01 .... debug 

    # ejs.es:13248                      static function getColumnNames(): Array { 

    0663: [0] 33 10 9c cf 01 b6 ac 01 .... debug 

    # ejs.es:13262                      static function getColumnTitles(): Array { 

    0671: [0] 33 10 b6 cf 01 9a ae 01 .... debug 

    # ejs.es:13275                      static function getColumnType(field: String): String {

    0679: [0] 33 10 c8 cf 01 ec b0 01 .... debug 

    # ejs.es:13284                      static function getDb(): Database {

    0687: [0] 33 10 de cf 01 ac b3 01 .... debug 

    # ejs.es:13295                      function getErrors(): Array

    0695: [0] 33 10 ea cf 01 b0 b4 01 .... debug 

    # ejs.es:13301                      static function getKeyName(): String

    0703: [0] 33 10 f6 cf 01 ca b5 01 .... debug 

    # ejs.es:13307                      static function getNumRows(): Number {

    0711: [0] 33 10 8a d0 01 da ba 01 .... debug 

    # ejs.es:13317                      private static function getSchema(): Void {

    0719: [0] 33 10 b6 d0 01 92 c6 01 .... debug 

    # ejs.es:13339                      static function getTableName(): String

    0727: [0] 33 10 d0 d0 01 b8 c7 01 .... debug 

    # ejs.es:13352                      static function hasAndBelongsToMany(model: Object, options: Object = {}): Void {

    0735: [0] 33 10 e2 d0 01 b6 ca 01 .... debug 

    # ejs.es:13361                      function hasError(field: String? = null): Boolean {

    0743: [0] 33 10 8a d1 01 98 ce 01 .... debug 

    # ejs.es:13381                      static function hasMany(model: Object, options: Object = {}): Void {

    0751: [0] 33 10 a6 d1 01 b0 d0 01 .... debug 

    # ejs.es:13395                      static function hasOne(model: Object, options: Object? = null): Void {

    0759: [0] 33 10 b6 d1 01 d6 d2 01 .... debug 

    # ejs.es:13403                      static private function innerFind(key: Object, limit: Number? = null, options: Object = {}): Array {

    0767: [0] 33 10 90 d4 01 ea 9e 02 .... debug 

    # ejs.es:13576                      private static function makeLazyReader(rec: Record, field: String, model, key: String, 

    0775: [0] 33 10 a4 d4 01 b8 a4 02 .... debug 

    # ejs.es:13586                      private static function mapSqlTypeToEjs(sqlType: String): Type {

    0783: [0] 33 10 bc d4 01 ba aa 02 .... debug 

    # ejs.es:13598                      private static function prepareValue(field: String, value: Object): String {

    0791: [0] 33 10 88 d5 01 c0 ba 02 .... debug 

    # ejs.es:13636                      private static function readRecords(key: String, options: Object): Object {

    0799: [0] 33 10 ae d5 01 aa c1 02 .... debug 

    # ejs.es:13655                      static function remove(...ids): Void {

    0807: [0] 33 10 bc d5 01 d0 c5 02 .... debug 

    # ejs.es:13662                      private function runFilters(filters): Void {

    0815: [0] 33 10 82 d6 01 c0 ca 02 .... debug 

    # ejs.es:13697                      function save(): Boolean {

    0823: [0] 33 10 f2 d6 01 da dd 02 .... debug 

    # ejs.es:13753                      function saveUpdate(fields: Object): Boolean {

    0831: [0] 33 10 8c d7 01 9a e1 02 .... debug 

    # ejs.es:13766                      static function setDb(database: Database) {

    0839: [0] 33 10 9a d7 01 d6 e2 02 .... debug 

    # ejs.es:13773                      static function setKeyName(name: String): Void {

    0847: [0] 33 10 aa d7 01 96 e4 02 .... debug 

    # ejs.es:13781                      static function setTableName(name: String): Void {

    0855: [0] 33 10 c8 d7 01 ba e7 02 .... debug 

    # ejs.es:13796                      static function sql(cmd: String, count: Number? = null): Array {

    0863: [0] 33 10 da d7 01 90 ea 02 .... debug 

    # ejs.es:13805                      static function trace(on: Boolean): void

    0871: [0] 33 10 e2 d7 01 b4 eb 02 .... debug 

    # ejs.es:13809                      static function validateFormat(fields: Object, options = null) {

    0879: [0] 33 10 f2 d7 01 f8 ee 02 .... debug 

    # ejs.es:13817                      static function validateNumber(fields: Object, options = null) {

    0887: [0] 33 10 82 d8 01 a8 f1 02 .... debug 

    # ejs.es:13825                      static function validatePresence(fields: Object, options = null) {

    0895: [0] 33 10 98 d8 01 e2 f3 02 .... debug 

    # ejs.es:13836                      function validateRecord(): Boolean {

    0903: [0] 33 10 d6 d8 01 ce 82 03 .... debug 

    # ejs.es:13867                      static function validateUnique(fields: Object, option = null)

    0911: [0] 33 10 e6 d8 01 86 85 03 .... debug 

    # ejs.es:13875                      static function wrapFilter(fn, options: Object? = null): Void {

    0919: [0] 33 10 f4 d8 01 ca 87 03 .... debug 

    # ejs.es:13882                      static function get columnNames(): Array {

    0927: [0] 33 10 fc d8 01 90 89 03 .... debug 

    # ejs.es:13886                      static function get columnTitles(): Array {

    0935: [0] 33 10 84 d9 01 dc 8a 03 .... debug 

    # ejs.es:13890                      static function get db(): Datbase {

    0943: [0] 33 10 8c d9 01 ea 8b 03 .... debug 

    # ejs.es:13894                      static function get keyName(): String {

    0951: [0] 33 10 94 d9 01 9a 8d 03 .... debug 

    # ejs.es:13898                      static function get numRows(): String {

    0959: [0] 33 10 9c d9 01 ba 8e 03 .... debug 

    # ejs.es:13902                      static function get tableName(): String {

    0967: [0] 33 10 a4 d9 01 f6 8f 03 .... debug 

    # ejs.es:13906                      function constructorOLD(fields: Object? = null): Void {

    0975: [0] be ......................... return 
    
VARIABLE:   [Record-28]  internal-ed363076473b51ca685af450cc662b39-0 static var _assocName : String
VARIABLE:   [Record-29]  internal-ed363076473b51ca685af450cc662b39-0 static var _belongsTo : Array
VARIABLE:   [Record-30]  internal-ed363076473b51ca685af450cc662b39-0 static var _className : String
VARIABLE:   [Record-31]  internal-ed363076473b51ca685af450cc662b39-0 static var _columns : Object
VARIABLE:   [Record-32]  internal-ed363076473b51ca685af450cc662b39-0 static var _hasOne : Array
VARIABLE:   [Record-33]  internal-ed363076473b51ca685af450cc662b39-0 static var _hasMany : Array
VARIABLE:   [Record-34]  internal-ed363076473b51ca685af450cc662b39-0 static var _db : Database
VARIABLE:   [Record-35]  internal-ed363076473b51ca685af450cc662b39-0 static var _foreignId : String
VARIABLE:   [Record-36]  internal-ed363076473b51ca685af450cc662b39-0 static var _keyName : String
VARIABLE:   [Record-37]  internal-ed363076473b51ca685af450cc662b39-0 static var _model : Type
VARIABLE:   [Record-38]  internal-ed363076473b51ca685af450cc662b39-0 static var _tableName : String
VARIABLE:   [Record-39]  internal-ed363076473b51ca685af450cc662b39-0 static var _trace : Boolean
VARIABLE:   [Record-40]  internal-ed363076473b51ca685af450cc662b39-0 static var _validations : Array
VARIABLE:   [Record-41]  internal-ed363076473b51ca685af450cc662b39-0 static var _beforeFilters : Array
VARIABLE:   [Record-42]  internal-ed363076473b51ca685af450cc662b39-0 static var _afterFilters : Array
VARIABLE:   [Record-43]  internal-ed363076473b51ca685af450cc662b39-0 static var _wrapFilters : Array
VARIABLE:   [Record-44]  internal-ed363076473b51ca685af450cc662b39-0 static var ErrorMessages

FUNCTION:   [Record-45]  public const function initialize(fields: Object) : Void

     ARG:   [arg-00]   private fields : Object
   LOCAL:   [local-01] var field

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 10 a4 ca 01 f6 33 ....... debug 

    # ejs.es:12946                          if (fields) for (let field in fields) {

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 13 26 ...................... branchFalse8 <addr: 55> 
    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0024: [0] 93 ......................... pushResult 
    0025: [1] 39 ......................... dup 
    0026: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0029: [1] 93 ......................... pushResult 
    0030: [2] 95 ......................... putLocalSlot1 
    0031: [1] 33 10 a6 ca 01 9a 35 ....... debug 

    # ejs.es:12947                              this."public"::[field] = fields[field]

    0038: [1] 5b ......................... getLocalSlot0 
    0039: [2] 56 ba 2d ................... loadString <> 
    0042: [3] 5c ......................... getLocalSlot1 
    0043: [4] 7c ......................... getObjNameExpr 
    0044: [2] 57 ......................... loadThis 
    0045: [3] 56 e4 2c ................... loadString <public> 
    0048: [4] 5c ......................... getLocalSlot1 
    0049: [5] b2 ......................... putObjNameExpr 
    0050: [1] 3e e5 ...................... goto8 <addr: 25> 
    0052: [1] 90 ......................... pop 
    0053: [0] 3e 00 ...................... goto8 <addr: 55> 
    0055: [0] 54 ......................... loadNull 
    0056: [1] bf ......................... returnValue 
    0057: [0] 33 10 aa ca 01 9a 32 ....... debug 

    # ejs.es:12949                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     26      29         52           52       StopIteration

VARIABLE:   [fields-00]  private var fields : Object
VARIABLE:   [field-01]  -hoisted-1 var field

FUNCTION:   [Record-46]  public const static function afterFilter(fn, options: Object) : Void

     ARG:   [arg-00]   private fn
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 ba ca 01 c0 37 ....... debug 

    # ejs.es:12957                          _afterFilters ||= []

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b 8c 18 22 ................ getObjName <_afterFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0019: [1] 39 ......................... dup 
    0020: [2] 14 04 ...................... branchTrue8 <addr: 26> 
    0022: [1] 90 ......................... pop 
    0023: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0025: [1] 89 ......................... new 
    0026: [1] 57 ......................... loadThis 
    0027: [2] b3 8c 18 22 ................ putObjName <_afterFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0031: [0] 33 10 bc ca 01 82 38 ....... debug 

    # ejs.es:12958                          _afterFilters.append([fn, options])

    0038: [0] 57 ......................... loadThis 
    0039: [1] 7b 8c 18 22 ................ getObjName <_afterFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0043: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0045: [2] 89 ......................... new 
    0046: [2] 39 ......................... dup 
    0047: [3] 5b ......................... getLocalSlot0 
    0048: [4] c5 ......................... swap 
    0049: [4] 56 ba 2d ................... loadString <> 
    0052: [5] 44 ......................... load0 
    0053: [6] b2 ......................... putObjNameExpr 
    0054: [2] 39 ......................... dup 
    0055: [3] 5c ......................... getLocalSlot1 
    0056: [4] c5 ......................... swap 
    0057: [4] 56 ba 2d ................... loadString <> 
    0060: [5] 45 ......................... load1 
    0061: [6] b2 ......................... putObjNameExpr 
    0062: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0068: [0] 54 ......................... loadNull 
    0069: [1] bf ......................... returnValue 
    0070: [0] 33 10 be ca 01 9a 32 ....... debug 

    # ejs.es:12959                      }
    
VARIABLE:   [fn-00]  private var fn
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Record-47]  public const static function beforeFilter(fn, options: Object) : Void

     ARG:   [arg-00]   private fn
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 ce ca 01 b2 3a ....... debug 

    # ejs.es:12967                          _beforeFilters ||= []

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b c4 16 22 ................ getObjName <_beforeFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0019: [1] 39 ......................... dup 
    0020: [2] 14 04 ...................... branchTrue8 <addr: 26> 
    0022: [1] 90 ......................... pop 
    0023: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0025: [1] 89 ......................... new 
    0026: [1] 57 ......................... loadThis 
    0027: [2] b3 c4 16 22 ................ putObjName <_beforeFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0031: [0] 33 10 d0 ca 01 f6 3a ....... debug 

    # ejs.es:12968                          _beforeFilters.append([fn, options])

    0038: [0] 57 ......................... loadThis 
    0039: [1] 7b c4 16 22 ................ getObjName <_beforeFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0043: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0045: [2] 89 ......................... new 
    0046: [2] 39 ......................... dup 
    0047: [3] 5b ......................... getLocalSlot0 
    0048: [4] c5 ......................... swap 
    0049: [4] 56 ba 2d ................... loadString <> 
    0052: [5] 44 ......................... load0 
    0053: [6] b2 ......................... putObjNameExpr 
    0054: [2] 39 ......................... dup 
    0055: [3] 5c ......................... getLocalSlot1 
    0056: [4] c5 ......................... swap 
    0057: [4] 56 ba 2d ................... loadString <> 
    0060: [5] 45 ......................... load1 
    0061: [6] b2 ......................... putObjNameExpr 
    0062: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0068: [0] 54 ......................... loadNull 
    0069: [1] bf ......................... returnValue 
    0070: [0] 33 10 d2 ca 01 9a 32 ....... debug 

    # ejs.es:12969                      }
    
VARIABLE:   [fn-00]  private var fn
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Record-48]  public const static function belongsTo(owner, options: Object) : Void

     ARG:   [arg-00]   private owner
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 ea ca 01 86 3d ....... debug 

    # ejs.es:12981                          _belongsTo ||= []

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b b0 05 22 ................ getObjName <_belongsTo> <internal-ed363076473b51ca685af450cc662b39-0> 
    0019: [1] 39 ......................... dup 
    0020: [2] 14 04 ...................... branchTrue8 <addr: 26> 
    0022: [1] 90 ......................... pop 
    0023: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0025: [1] 89 ......................... new 
    0026: [1] 57 ......................... loadThis 
    0027: [2] b3 b0 05 22 ................ putObjName <_belongsTo> <internal-ed363076473b51ca685af450cc662b39-0> 
    0031: [0] 33 10 ec ca 01 c2 3d ....... debug 

    # ejs.es:12982                          _belongsTo.append(owner)

    0038: [0] 57 ......................... loadThis 
    0039: [1] 7b b0 05 22 ................ getObjName <_belongsTo> <internal-ed363076473b51ca685af450cc662b39-0> 
    0043: [1] 5b ......................... getLocalSlot0 
    0044: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0050: [0] 54 ......................... loadNull 
    0051: [1] bf ......................... returnValue 
    0052: [0] 33 10 ee ca 01 9a 32 ....... debug 

    # ejs.es:12983                      }
    
VARIABLE:   [owner-00]  private var owner
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Record-49]  [Record,private] const static function cachedRead(rec: Record, field: String, model, key: String, options: Object) : Object

     ARG:   [arg-00]   private rec : Record
     ARG:   [arg-01]   private field : String
     ARG:   [arg-02]   private model
     ARG:   [arg-03]   private key : String
     ARG:   [arg-04]   private options : Object

    0000: [0] 33 10 fc ca 01 98 40 ....... debug 

    # ejs.es:12990                          rec._cacheAssoc ||= {}

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7b e6 1d 22 ................ getObjName <_cacheAssoc> <internal-ed363076473b51ca685af450cc662b39-0> 
    0012: [1] 39 ......................... dup 
    0013: [2] 14 05 ...................... branchTrue8 <addr: 20> 
    0015: [1] 90 ......................... pop 
    0016: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0020: [1] 5b ......................... getLocalSlot0 
    0021: [2] b3 e6 1d 22 ................ putObjName <_cacheAssoc> <internal-ed363076473b51ca685af450cc662b39-0> 
    0025: [0] 33 10 fe ca 01 de 40 ....... debug 

    # ejs.es:12991                          if (rec._cacheAssoc[field] == null) {

    0032: [0] 5b ......................... getLocalSlot0 
    0033: [1] 7b e6 1d 22 ................ getObjName <_cacheAssoc> <internal-ed363076473b51ca685af450cc662b39-0> 
    0037: [1] 56 ba 2d ................... loadString <> 
    0040: [2] 5c ......................... getLocalSlot1 
    0041: [3] 7c ......................... getObjNameExpr 
    0042: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0044: [2] 25 ......................... compareEq 
    0045: [1] 13 1c ...................... branchFalse8 <addr: 75> 
    0047: [0] 33 10 80 cb 01 c2 41 ....... debug 

    # ejs.es:12992                              rec._cacheAssoc[field] =  model.readRecords(key, options); 

    0054: [0] 5d ......................... getLocalSlot2 
    0055: [1] 5e ......................... getLocalSlot3 
    0056: [2] 5f ......................... getLocalSlot4 
    0057: [3] 1e da 42 00 04 ............. callObjName <readRecords> <> <argc: 2> 
    0062: [0] 93 ......................... pushResult 
    0063: [1] 5b ......................... getLocalSlot0 
    0064: [2] 7b e6 1d 22 ................ getObjName <_cacheAssoc> <internal-ed363076473b51ca685af450cc662b39-0> 
    0068: [2] 56 ba 2d ................... loadString <> 
    0071: [3] 5c ......................... getLocalSlot1 
    0072: [4] b2 ......................... putObjNameExpr 
    0073: [0] 3e 00 ...................... goto8 <addr: 75> 
    0075: [0] 33 10 84 cb 01 f2 42 ....... debug 

    # ejs.es:12994                          return rec._cacheAssoc[field]

    0082: [0] 5b ......................... getLocalSlot0 
    0083: [1] 7b e6 1d 22 ................ getObjName <_cacheAssoc> <internal-ed363076473b51ca685af450cc662b39-0> 
    0087: [1] 56 ba 2d ................... loadString <> 
    0090: [2] 5c ......................... getLocalSlot1 
    0091: [3] 7c ......................... getObjNameExpr 
    0092: [1] bf ......................... returnValue 
    
VARIABLE:   [rec-00]  private var rec : Record
VARIABLE:   [field-01]  private var field : String
VARIABLE:   [model-02]  private var model
VARIABLE:   [key-03]  private var key : String
VARIABLE:   [options-04]  private var options : Object

FUNCTION:   [Record-50]  [Record,private] const static function checkFormat(thisObj: Record, field: String, value, options: Object) : Void

     ARG:   [arg-00]   private thisObj : Record
     ARG:   [arg-01]   private field : String
     ARG:   [arg-02]   private value
     ARG:   [arg-03]   private options : Object

    0000: [0] 33 10 8c cb 01 f2 45 ....... debug 

    # ejs.es:12998                          if (! RegExp(options.format).test(value)) {

    0007: [0] 5e ......................... getLocalSlot3 
    0008: [1] 7b e2 46 ba 2d ............. getObjName <format> <> 
    0013: [1] 17 e2 01 02 ................ callGlobalSlot <slot: 113> <argc: 1> 
    0017: [0] 93 ......................... pushResult 
    0018: [1] 5d ......................... getLocalSlot2 
    0019: [2] 1e f0 46 e4 2c 02 .......... callObjName <test> <public> <argc: 1> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 86 ......................... logicalNot 
    0027: [1] 13 2c ...................... branchFalse8 <addr: 73> 
    0029: [0] 33 10 8e cb 01 fa 46 ....... debug 

    # ejs.es:12999                              thisObj._errors[field] = options.message ? options.message : ErrorMessages.wrongFormat

    0036: [0] 5e ......................... getLocalSlot3 
    0037: [1] 7b c8 48 ba 2d ............. getObjName <message> <> 
    0042: [1] 13 08 ...................... branchFalse8 <addr: 52> 
    0044: [0] 5e ......................... getLocalSlot3 
    0045: [1] 7b c8 48 ba 2d ............. getObjName <message> <> 
    0050: [1] 3e 09 ...................... goto8 <addr: 61> 
    0052: [1] 57 ......................... loadThis 
    0053: [2] 7b c8 1e 22 ................ getObjName <ErrorMessages> <internal-ed363076473b51ca685af450cc662b39-0> 
    0057: [2] 7b a2 2b 00 ................ getObjName <wrongFormat> <> 
    0061: [2] 5b ......................... getLocalSlot0 
    0062: [3] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0066: [3] 56 ba 2d ................... loadString <> 
    0069: [4] 5c ......................... getLocalSlot1 
    0070: [5] b2 ......................... putObjNameExpr 
    0071: [1] 3e 00 ...................... goto8 <addr: 73> 
    0073: [1] 54 ......................... loadNull 
    0074: [2] bf ......................... returnValue 
    0075: [0] 33 10 92 cb 01 9a 32 ....... debug 

    # ejs.es:13001                      }
    
VARIABLE:   [thisObj-00]  private var thisObj : Record
VARIABLE:   [field-01]  private var field : String
VARIABLE:   [value-02]  private var value
VARIABLE:   [options-03]  private var options : Object

FUNCTION:   [Record-51]  [Record,private] const static function checkNumber(thisObj: Record, field: String, value, options) : Void

     ARG:   [arg-00]   private thisObj : Record
     ARG:   [arg-01]   private field : String
     ARG:   [arg-02]   private value
     ARG:   [arg-03]   private options

    0000: [0] 33 10 98 cb 01 d4 4a ....... debug 

    # ejs.es:13004                          if (! RegExp(/^[0-9]+$/).test(value)) {

    0007: [0] 55 bc 4b ................... loadRegexp </^[0-9]+$/> 
    0010: [1] 17 e2 01 02 ................ callGlobalSlot <slot: 113> <argc: 1> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 5d ......................... getLocalSlot2 
    0016: [2] 1e f0 46 e4 2c 02 .......... callObjName <test> <public> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] 86 ......................... logicalNot 
    0024: [1] 13 2a ...................... branchFalse8 <addr: 68> 
    0026: [0] 33 10 9a cb 01 d2 4b ....... debug 

    # ejs.es:13005                              thisObj._errors[field] = options.message ? options.message : ErrorMessages.notNumber

    0033: [0] 5e ......................... getLocalSlot3 
    0034: [1] 7b c8 48 00 ................ getObjName <message> <> 
    0038: [1] 13 07 ...................... branchFalse8 <addr: 47> 
    0040: [0] 5e ......................... getLocalSlot3 
    0041: [1] 7b c8 48 00 ................ getObjName <message> <> 
    0045: [1] 3e 09 ...................... goto8 <addr: 56> 
    0047: [1] 57 ......................... loadThis 
    0048: [2] 7b c8 1e 22 ................ getObjName <ErrorMessages> <internal-ed363076473b51ca685af450cc662b39-0> 
    0052: [2] 7b c0 25 00 ................ getObjName <notNumber> <> 
    0056: [2] 5b ......................... getLocalSlot0 
    0057: [3] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0061: [3] 56 ba 2d ................... loadString <> 
    0064: [4] 5c ......................... getLocalSlot1 
    0065: [5] b2 ......................... putObjNameExpr 
    0066: [1] 3e 00 ...................... goto8 <addr: 68> 
    0068: [1] 54 ......................... loadNull 
    0069: [2] bf ......................... returnValue 
    0070: [0] 33 10 9e cb 01 9a 32 ....... debug 

    # ejs.es:13007                      }
    
VARIABLE:   [thisObj-00]  private var thisObj : Record
VARIABLE:   [field-01]  private var field : String
VARIABLE:   [value-02]  private var value
VARIABLE:   [options-03]  private var options

FUNCTION:   [Record-52]  [Record,private] const static function checkPresent(thisObj: Record, field: String, value, options) : Void

     ARG:   [arg-00]   private thisObj : Record
     ARG:   [arg-01]   private field : String
     ARG:   [arg-02]   private value
     ARG:   [arg-03]   private options

    0000: [0] 33 10 a4 cb 01 fe 4e ....... debug 

    # ejs.es:13010                          if (value == undefined) {

    0007: [0] 5d ......................... getLocalSlot2 
    0008: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0011: [2] 25 ......................... compareEq 
    0012: [1] 13 2a ...................... branchFalse8 <addr: 56> 
    0014: [0] 33 10 a6 cb 01 ca 4f ....... debug 

    # ejs.es:13011                              thisObj._errors[field] = options.message ? options.message : ErrorMessages.missing

    0021: [0] 5e ......................... getLocalSlot3 
    0022: [1] 7b c8 48 00 ................ getObjName <message> <> 
    0026: [1] 13 07 ...................... branchFalse8 <addr: 35> 
    0028: [0] 5e ......................... getLocalSlot3 
    0029: [1] 7b c8 48 00 ................ getObjName <message> <> 
    0033: [1] 3e 09 ...................... goto8 <addr: 44> 
    0035: [1] 57 ......................... loadThis 
    0036: [2] 7b c8 1e 22 ................ getObjName <ErrorMessages> <internal-ed363076473b51ca685af450cc662b39-0> 
    0040: [2] 7b c6 24 00 ................ getObjName <missing> <> 
    0044: [2] 5b ......................... getLocalSlot0 
    0045: [3] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0049: [3] 56 ba 2d ................... loadString <> 
    0052: [4] 5c ......................... getLocalSlot1 
    0053: [5] b2 ......................... putObjNameExpr 
    0054: [1] 3e 4d ...................... goto8 <addr: 133> 
    0056: [1] 33 10 a8 cb 01 90 51 ....... debug 

    # ejs.es:13012                          } else if (value.length == 0 || value.trim() == "" && thisObj._errors[field] == undefined) {

    0063: [1] 5d ......................... getLocalSlot2 
    0064: [2] 7b e2 52 00 ................ getObjName <length> <> 
    0068: [2] 44 ......................... load0 
    0069: [3] 25 ......................... compareEq 
    0070: [2] 39 ......................... dup 
    0071: [3] 14 1e ...................... branchTrue8 <addr: 103> 
    0073: [2] 90 ......................... pop 
    0074: [1] 5d ......................... getLocalSlot2 
    0075: [2] 1e f0 52 00 00 ............. callObjName <trim> <> <argc: 0> 
    0080: [1] 93 ......................... pushResult 
    0081: [2] 56 ba 2d ................... loadString <> 
    0084: [3] 25 ......................... compareEq 
    0085: [2] 39 ......................... dup 
    0086: [3] 13 0f ...................... branchFalse8 <addr: 103> 
    0088: [2] 90 ......................... pop 
    0089: [1] 5b ......................... getLocalSlot0 
    0090: [2] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0094: [2] 56 ba 2d ................... loadString <> 
    0097: [3] 5c ......................... getLocalSlot1 
    0098: [4] 7c ......................... getObjNameExpr 
    0099: [2] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0102: [3] 25 ......................... compareEq 
    0103: [2] 13 1c ...................... branchFalse8 <addr: 133> 
    0105: [1] 33 10 aa cb 01 fa 52 ....... debug 

    # ejs.es:13013                              thisObj._errors[field] = ErrorMessages.blank

    0112: [1] 57 ......................... loadThis 
    0113: [2] 7b c8 1e 22 ................ getObjName <ErrorMessages> <internal-ed363076473b51ca685af450cc662b39-0> 
    0117: [2] 7b b6 20 00 ................ getObjName <blank> <> 
    0121: [2] 5b ......................... getLocalSlot0 
    0122: [3] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0126: [3] 56 ba 2d ................... loadString <> 
    0129: [4] 5c ......................... getLocalSlot1 
    0130: [5] b2 ......................... putObjNameExpr 
    0131: [1] 3e 00 ...................... goto8 <addr: 133> 
    0133: [1] 54 ......................... loadNull 
    0134: [2] bf ......................... returnValue 
    0135: [0] 33 10 ae cb 01 9a 32 ....... debug 

    # ejs.es:13015                      }
    
VARIABLE:   [thisObj-00]  private var thisObj : Record
VARIABLE:   [field-01]  private var field : String
VARIABLE:   [value-02]  private var value
VARIABLE:   [options-03]  private var options

FUNCTION:   [Record-53]  [Record,private] const static function checkUnique(thisObj: Record, field: String, value, options) : Void

     ARG:   [arg-00]   private thisObj : Record
     ARG:   [arg-01]   private field : String
     ARG:   [arg-02]   private value
     ARG:   [arg-03]   private options
   LOCAL:   [local-04] var grid : Array

    0000: [0] 33 10 b4 cb 01 e0 55 ....... debug 

    # ejs.es:13018                          let grid: Array

    0007: [0] 33 10 b6 cb 01 98 56 ....... debug 

    # ejs.es:13019                          if (thisObj._keyValue) {

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 7b 96 1b 22 ................ getObjName <_keyValue> <internal-ed363076473b51ca685af450cc662b39-0> 
    0019: [1] 13 22 ...................... branchFalse8 <addr: 55> 
    0021: [0] 33 10 b8 cb 01 e2 56 ....... debug 

    # ejs.es:13020                              grid = findWhere(field + ' = "' + value + '" AND id <> ' + thisObj._keyValue)

    0028: [0] 5c ......................... getLocalSlot1 
    0029: [1] 56 9e 58 ................... loadString < = "> 
    0032: [2] 00 ......................... add 
    0033: [1] 5d ......................... getLocalSlot2 
    0034: [2] 00 ......................... add 
    0035: [1] 56 a8 58 ................... loadString <" AND id <> > 
    0038: [2] 00 ......................... add 
    0039: [1] 5b ......................... getLocalSlot0 
    0040: [2] 7b 96 1b 22 ................ getObjName <_keyValue> <internal-ed363076473b51ca685af450cc662b39-0> 
    0044: [2] 00 ......................... add 
    0045: [1] 1f c2 58 e4 2c 02 .......... callScopedName <findWhere> <public> <argc: 1> 
    0051: [0] 93 ......................... pushResult 
    0052: [1] 98 ......................... putLocalSlot4 
    0053: [0] 3e 21 ...................... goto8 <addr: 88> 
    0055: [0] 33 10 ba cb 01 d6 58 ....... debug 

    # ejs.es:13021                          } else {

    0062: [0] 33 10 bc cb 01 80 59 ....... debug 

    # ejs.es:13022                              grid = findWhere(field + ' = "' + value + '"')

    0069: [0] 5c ......................... getLocalSlot1 
    0070: [1] 56 9e 58 ................... loadString < = "> 
    0073: [2] 00 ......................... add 
    0074: [1] 5d ......................... getLocalSlot2 
    0075: [2] 00 ......................... add 
    0076: [1] 56 fe 59 ................... loadString <"> 
    0079: [2] 00 ......................... add 
    0080: [1] 1f c2 58 e4 2c 02 .......... callScopedName <findWhere> <public> <argc: 1> 
    0086: [0] 93 ......................... pushResult 
    0087: [1] 98 ......................... putLocalSlot4 
    0088: [0] 33 10 c0 cb 01 82 5a ....... debug 

    # ejs.es:13024                          if (grid.length > 0) {

    0095: [0] 5f ......................... getLocalSlot4 
    0096: [1] 7b e2 52 e4 2c ............. getObjName <length> <public> 
    0101: [1] 44 ......................... load0 
    0102: [2] 29 ......................... compareGt 
    0103: [1] 13 2a ...................... branchFalse8 <addr: 147> 
    0105: [0] 33 10 c2 cb 01 c8 5a ....... debug 

    # ejs.es:13025                              thisObj._errors[field] = options.message ? options.message : ErrorMessages.notUnique

    0112: [0] 5e ......................... getLocalSlot3 
    0113: [1] 7b c8 48 00 ................ getObjName <message> <> 
    0117: [1] 13 07 ...................... branchFalse8 <addr: 126> 
    0119: [0] 5e ......................... getLocalSlot3 
    0120: [1] 7b c8 48 00 ................ getObjName <message> <> 
    0124: [1] 3e 09 ...................... goto8 <addr: 135> 
    0126: [1] 57 ......................... loadThis 
    0127: [2] 7b c8 1e 22 ................ getObjName <ErrorMessages> <internal-ed363076473b51ca685af450cc662b39-0> 
    0131: [2] 7b c4 26 00 ................ getObjName <notUnique> <> 
    0135: [2] 5b ......................... getLocalSlot0 
    0136: [3] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0140: [3] 56 ba 2d ................... loadString <> 
    0143: [4] 5c ......................... getLocalSlot1 
    0144: [5] b2 ......................... putObjNameExpr 
    0145: [1] 3e 00 ...................... goto8 <addr: 147> 
    0147: [1] 54 ......................... loadNull 
    0148: [2] bf ......................... returnValue 
    0149: [0] 33 10 c6 cb 01 9a 32 ....... debug 

    # ejs.es:13027                      }
    
VARIABLE:   [thisObj-00]  private var thisObj : Record
VARIABLE:   [field-01]  private var field : String
VARIABLE:   [value-02]  private var value
VARIABLE:   [options-03]  private var options
VARIABLE:   [grid-04]  private var grid : Array

FUNCTION:   [Record-54]  [Record,private] const function coerceToEjsTypes() : Void

   LOCAL:   [local-00] var field : String
   LOCAL:   [local-01] var col
   LOCAL:   [local-02] var value : String

    0000: [0] 33 10 d2 cb 01 92 5d ....... debug 

    # ejs.es:13033                          for (let field: String in this) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 39 ......................... dup 
    0016: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0019: [1] 93 ......................... pushResult 
    0020: [2] 94 ......................... putLocalSlot0 
    0021: [1] 33 10 d4 cb 01 8c 5e ....... debug 

    # ejs.es:13034                              let col: Column = _columns[field]

    0028: [1] 57 ......................... loadThis 
    0029: [2] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0033: [2] 56 ba 2d ................... loadString <> 
    0036: [3] 5b ......................... getLocalSlot0 
    0037: [4] 7c ......................... getObjNameExpr 
    0038: [2] 95 ......................... putLocalSlot1 
    0039: [1] 33 10 d6 cb 01 f0 5e ....... debug 

    # ejs.es:13035                              if (col == undefined) {

    0046: [1] 5c ......................... getLocalSlot1 
    0047: [2] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0050: [3] 25 ......................... compareEq 
    0051: [2] 13 0e ...................... branchFalse8 <addr: 67> 
    0053: [1] 33 10 d8 cb 01 c0 5f ....... debug 

    # ejs.es:13036                                  continue

    0060: [1] 3d 65 f7 f7 f7 ............. goto <addr: 15> 
    0065: [1] 3e 00 ...................... goto8 <addr: 67> 
    0067: [1] 33 10 dc cb 01 fa 5f ....... debug 

    # ejs.es:13038                              if (col.ejsType == Reflect(this[field]).type) {

    0074: [1] 5c ......................... getLocalSlot1 
    0075: [2] 7b fa 60 e4 2c ............. getObjName <ejsType> <public> 
    0080: [2] 57 ......................... loadThis 
    0081: [3] 56 ba 2d ................... loadString <> 
    0084: [4] 5b ......................... getLocalSlot0 
    0085: [5] 7c ......................... getObjNameExpr 
    0086: [3] 17 de 01 02 ................ callGlobalSlot <slot: 111> <argc: 1> 
    0090: [2] 93 ......................... pushResult 
    0091: [3] 7b 8a 61 e4 2c ............. getObjName <type> <public> 
    0096: [3] 25 ......................... compareEq 
    0097: [2] 13 0e ...................... branchFalse8 <addr: 113> 
    0099: [1] 33 10 de cb 01 c0 5f ....... debug 

    # ejs.es:13039                                  continue

    0106: [1] 3d c1 01 f7 f7 ............. goto <addr: 15> 
    0111: [1] 3e 00 ...................... goto8 <addr: 113> 
    0113: [1] 33 10 e0 cb 01 94 61 ....... debug 

    # ejs.es:13040                              }

    0120: [1] 33 10 e2 cb 01 b8 61 ....... debug 

    # ejs.es:13041                              let value: String = this[field]

    0127: [1] 57 ......................... loadThis 
    0128: [2] 56 ba 2d ................... loadString <> 
    0131: [3] 5b ......................... getLocalSlot0 
    0132: [4] 7c ......................... getObjNameExpr 
    0133: [2] 96 ......................... putLocalSlot2 
    0134: [1] 33 10 e4 cb 01 98 62 ....... debug 

    # ejs.es:13042                              switch (col.ejsType) {

    0141: [1] 5c ......................... getLocalSlot1 
    0142: [2] 7b fa 60 e4 2c ............. getObjName <ejsType> <public> 
    0147: [2] 33 10 e6 cb 01 e6 62 ....... debug 

    # ejs.es:13043                              case Boolean:

    0154: [2] 39 ......................... dup 
    0155: [3] 7e 10 ...................... getGlobalSlot <slot: 8> 
    0157: [4] 26 ......................... compareStrictlyEq 
    0158: [3] 07 b0 02 f7 f7 ............. branchFalse <addr: 315> 
    0163: [2] 33 10 e8 cb 01 a2 63 ....... debug 

    # ejs.es:13044                                  if (value is String) {

    0170: [2] 5d ......................... getLocalSlot2 
    0171: [3] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0174: [4] 43 ......................... isA 
    0175: [3] 13 21 ...................... branchFalse8 <addr: 210> 
    0177: [2] 33 10 ea cb 01 f8 63 ....... debug 

    # ejs.es:13045                                      this[field] = (value.trim().toLower() == "true")

    0184: [2] 5d ......................... getLocalSlot2 
    0185: [3] 1e f0 52 e4 2c 00 .......... callObjName <trim> <public> <argc: 0> 
    0191: [2] 93 ......................... pushResult 
    0192: [3] 1e 8a 65 00 00 ............. callObjName <toLower> <> <argc: 0> 
    0197: [2] 93 ......................... pushResult 
    0198: [3] 56 9a 65 ................... loadString <true> 
    0201: [4] 25 ......................... compareEq 
    0202: [3] 57 ......................... loadThis 
    0203: [4] 56 ba 2d ................... loadString <> 
    0206: [5] 5b ......................... getLocalSlot0 
    0207: [6] b2 ......................... putObjNameExpr 
    0208: [2] 3e 38 ...................... goto8 <addr: 266> 
    0210: [2] 33 10 ec cb 01 a4 65 ....... debug 

    # ejs.es:13046                                  } else if (value is Number) {

    0217: [2] 5d ......................... getLocalSlot2 
    0218: [3] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0221: [4] 43 ......................... isA 
    0222: [3] 13 12 ...................... branchFalse8 <addr: 242> 
    0224: [2] 33 10 ee cb 01 88 66 ....... debug 

    # ejs.es:13047                                      this[field] = (value == 1)

    0231: [2] 5d ......................... getLocalSlot2 
    0232: [3] 45 ......................... load1 
    0233: [4] 25 ......................... compareEq 
    0234: [3] 57 ......................... loadThis 
    0235: [4] 56 ba 2d ................... loadString <> 
    0238: [5] 5b ......................... getLocalSlot0 
    0239: [6] b2 ......................... putObjNameExpr 
    0240: [2] 3e 18 ...................... goto8 <addr: 266> 
    0242: [2] 33 10 f0 cb 01 ee 66 ....... debug 

    # ejs.es:13048                                  } else {

    0249: [2] 33 10 f2 cb 01 a8 67 ....... debug 

    # ejs.es:13049                                      this[field] = value cast Boolean

    0256: [2] 5d ......................... getLocalSlot2 
    0257: [3] 7e 10 ...................... getGlobalSlot <slot: 8> 
    0259: [4] 22 ......................... cast 
    0260: [3] 57 ......................... loadThis 
    0261: [4] 56 ba 2d ................... loadString <> 
    0264: [5] 5b ......................... getLocalSlot0 
    0265: [6] b2 ......................... putObjNameExpr 
    0266: [2] 33 10 f4 cb 01 9a 68 ....... debug 

    # ejs.es:13050                                  }

    0273: [2] 33 10 f6 cb 01 c6 68 ....... debug 

    # ejs.es:13051                                  this[field] = (this[field]) ? true : false

    0280: [2] 57 ......................... loadThis 
    0281: [3] 56 ba 2d ................... loadString <> 
    0284: [4] 5b ......................... getLocalSlot0 
    0285: [5] 7c ......................... getObjNameExpr 
    0286: [3] 13 05 ...................... branchFalse8 <addr: 293> 
    0288: [2] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0291: [3] 3e 02 ...................... goto8 <addr: 295> 
    0293: [3] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0295: [4] 57 ......................... loadThis 
    0296: [5] 56 ba 2d ................... loadString <> 
    0299: [6] 5b ......................... getLocalSlot0 
    0300: [7] b2 ......................... putObjNameExpr 
    0301: [3] 33 10 f8 cb 01 c4 69 ....... debug 

    # ejs.es:13052                                  break

    0308: [3] 3d c2 01 f7 f7 ............. goto <addr: 410> 
    0313: [3] 3e 0d ...................... goto8 <addr: 328> 
    0315: [3] 33 10 fc cb 01 f8 69 ....... debug 

    # ejs.es:13054                              case Date:

    0322: [3] 39 ......................... dup 
    0323: [4] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0325: [5] 26 ......................... compareStrictlyEq 
    0326: [4] 13 21 ...................... branchFalse8 <addr: 361> 
    0328: [3] 33 10 fe cb 01 ae 6a ....... debug 

    # ejs.es:13055                                  this[field] = new Date(value)

    0335: [3] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0337: [4] 89 ......................... new 
    0338: [4] 5d ......................... getLocalSlot2 
    0339: [5] 20 02 ...................... callConstructor <argc: 1> 
    0341: [4] 57 ......................... loadThis 
    0342: [5] 56 ba 2d ................... loadString <> 
    0345: [6] 5b ......................... getLocalSlot0 
    0346: [7] b2 ......................... putObjNameExpr 
    0347: [3] 33 10 80 cc 01 c4 69 ....... debug 

    # ejs.es:13056                                  break

    0354: [3] 3d 66 f7 f7 f7 ............. goto <addr: 410> 
    0359: [3] 3e 0e ...................... goto8 <addr: 375> 
    0361: [3] 33 10 84 cc 01 92 6b ....... debug 

    # ejs.es:13058                              case Number:

    0368: [3] 39 ......................... dup 
    0369: [4] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0372: [5] 26 ......................... compareStrictlyEq 
    0373: [4] 13 23 ...................... branchFalse8 <addr: 410> 
    0375: [3] 33 10 86 cc 01 cc 6b ....... debug 

    # ejs.es:13059                                  this[field] = this[field] cast Number

    0382: [3] 57 ......................... loadThis 
    0383: [4] 56 ba 2d ................... loadString <> 
    0386: [5] 5b ......................... getLocalSlot0 
    0387: [6] 7c ......................... getObjNameExpr 
    0388: [4] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0391: [5] 22 ......................... cast 
    0392: [4] 57 ......................... loadThis 
    0393: [5] 56 ba 2d ................... loadString <> 
    0396: [6] 5b ......................... getLocalSlot0 
    0397: [7] b2 ......................... putObjNameExpr 
    0398: [3] 33 10 88 cc 01 c4 69 ....... debug 

    # ejs.es:13060                                  break

    0405: [3] 3d 00 f7 f7 f7 ............. goto <addr: 410> 
    0410: [3] 90 ......................... pop 
    0411: [2] 3d a3 06 f7 f7 ............. goto <addr: 15> 
    0416: [2] 90 ......................... pop 
    0417: [1] 54 ......................... loadNull 
    0418: [2] bf ......................... returnValue 
    0419: [0] 33 10 8e cc 01 9a 32 ....... debug 

    # ejs.es:13063                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     16      19        416          416       StopIteration

VARIABLE:   [field-00]  -hoisted-0 var field : String
VARIABLE:   [col-01]  -hoisted-0 var col
VARIABLE:   [value-02]  -hoisted-0 var value : String

FUNCTION:   [Record-55]  [Record,private] const static function createAssociations(rec: Record, set: Array, preload, options) : Void

     ARG:   [arg-00]   private rec : Record
     ARG:   [arg-01]   private set : Array
     ARG:   [arg-02]   private preload
     ARG:   [arg-03]   private options
   LOCAL:   [local-04] var model
   LOCAL:   [local-05] var association
   LOCAL:   [local-06] var field : String
   LOCAL:   [local-07] var f : String
   LOCAL:   [local-08] var field : String
   LOCAL:   [local-09] var f : String

    0000: [0] 33 10 9a cc 01 bc 6e ....... debug 

    # ejs.es:13069                          for each (let model in set) {

    0007: [0] 5c ......................... getLocalSlot1 
    0008: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 39 ......................... dup 
    0016: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0019: [1] 93 ......................... pushResult 
    0020: [2] 98 ......................... putLocalSlot4 
    0021: [1] 33 10 9c cc 01 ba 6f ....... debug 

    # ejs.es:13070                              if (model is Array) model = model[0]

    0028: [1] 5f ......................... getLocalSlot4 
    0029: [2] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0031: [3] 43 ......................... isA 
    0032: [2] 13 09 ...................... branchFalse8 <addr: 43> 
    0034: [1] 5f ......................... getLocalSlot4 
    0035: [2] 56 ba 2d ................... loadString <> 
    0038: [3] 44 ......................... load0 
    0039: [4] 7c ......................... getObjNameExpr 
    0040: [2] 98 ......................... putLocalSlot4 
    0041: [1] 3e 00 ...................... goto8 <addr: 43> 
    0043: [1] 33 10 a2 cc 01 a4 70 ....... debug 

    # ejs.es:13073                              if (preload == true || (preload && preload.contains(model))) {

    0050: [1] 5d ......................... getLocalSlot2 
    0051: [2] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0054: [3] 25 ......................... compareEq 
    0055: [2] 39 ......................... dup 
    0056: [3] 14 0e ...................... branchTrue8 <addr: 72> 
    0058: [2] 90 ......................... pop 
    0059: [1] 5d ......................... getLocalSlot2 
    0060: [2] 39 ......................... dup 
    0061: [3] 13 09 ...................... branchFalse8 <addr: 72> 
    0063: [2] 90 ......................... pop 
    0064: [1] 5d ......................... getLocalSlot2 
    0065: [2] 5f ......................... getLocalSlot4 
    0066: [3] 1e c2 71 00 02 ............. callObjName <contains> <> <argc: 1> 
    0071: [1] 93 ......................... pushResult 
    0072: [2] 07 c2 02 f7 f7 ............. branchFalse <addr: 238> 
    0077: [1] 33 10 ac cc 01 82 72 ....... debug 

    # ejs.es:13078                                  let association = {}

    0084: [1] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0088: [2] 99 ......................... putLocalSlot5 
    0089: [1] 33 10 ae cc 01 d4 72 ....... debug 

    # ejs.es:13079                                  if (!model._columns) model.getSchema()

    0096: [1] 5f ......................... getLocalSlot4 
    0097: [2] 7b a0 08 00 ................ getObjName <_columns> <> 
    0101: [2] 86 ......................... logicalNot 
    0102: [2] 13 08 ...................... branchFalse8 <addr: 112> 
    0104: [1] 5f ......................... getLocalSlot4 
    0105: [2] 1e ca 73 00 00 ............. callObjName <getSchema> <> <argc: 0> 
    0110: [1] 3e 00 ...................... goto8 <addr: 112> 
    0112: [1] 33 10 b0 cc 01 de 73 ....... debug 

    # ejs.es:13080                                  for (let field: String in model._columns) {

    0119: [1] 5f ......................... getLocalSlot4 
    0120: [2] 7b a0 08 00 ................ getObjName <_columns> <> 
    0124: [2] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0130: [1] 93 ......................... pushResult 
    0131: [2] 39 ......................... dup 
    0132: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0135: [2] 93 ......................... pushResult 
    0136: [3] 9a ......................... putLocalSlot6 
    0137: [2] 33 10 b2 cc 01 f8 74 ....... debug 

    # ejs.es:13081                                      let f: String = "_" + model._className + field.toPascal()

    0144: [2] 56 9c 76 ................... loadString <_> 
    0147: [3] 5f ......................... getLocalSlot4 
    0148: [4] 7b d8 06 00 ................ getObjName <_className> <> 
    0152: [4] 00 ......................... add 
    0153: [3] 61 ......................... getLocalSlot6 
    0154: [4] 1e a0 2f e4 2c 00 .......... callObjName <toPascal> <public> <argc: 0> 
    0160: [3] 93 ......................... pushResult 
    0161: [4] 00 ......................... add 
    0162: [3] 9b ......................... putLocalSlot7 
    0163: [2] 33 10 b4 cc 01 a0 76 ....... debug 

    # ejs.es:13082                                      association[field] = rec[f]

    0170: [2] 5b ......................... getLocalSlot0 
    0171: [3] 56 ba 2d ................... loadString <> 
    0174: [4] 62 ......................... getLocalSlot7 
    0175: [5] 7c ......................... getObjNameExpr 
    0176: [3] 60 ......................... getLocalSlot5 
    0177: [4] 56 ba 2d ................... loadString <> 
    0180: [5] 61 ......................... getLocalSlot6 
    0181: [6] b2 ......................... putObjNameExpr 
    0182: [2] 33 10 b6 cc 01 88 77 ....... debug 

    # ejs.es:13083                                      delete rec.public::[f]

    0189: [2] 5b ......................... getLocalSlot0 
    0190: [3] 79 e4 2c ba 2d ............. getScopedName <public> <> 
    0195: [4] 62 ......................... getLocalSlot7 
    0196: [5] 36 ......................... deleteNameExpr 
    0197: [2] 3e bc ...................... goto8 <addr: 131> 
    0199: [2] 90 ......................... pop 
    0200: [1] 33 10 b8 cc 01 9a 68 ....... debug 

    # ejs.es:13084                                  }

    0207: [1] 33 10 ba cc 01 e6 77 ....... debug 

    # ejs.es:13085                                  rec[model._assocName] = model.createRecord(association, options)

    0214: [1] 5f ......................... getLocalSlot4 
    0215: [2] 60 ......................... getLocalSlot5 
    0216: [3] 5e ......................... getLocalSlot3 
    0217: [4] 1e 90 79 00 04 ............. callObjName <createRecord> <> <argc: 2> 
    0222: [1] 93 ......................... pushResult 
    0223: [2] 5b ......................... getLocalSlot0 
    0224: [3] 56 ba 2d ................... loadString <> 
    0227: [4] 5f ......................... getLocalSlot4 
    0228: [5] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0232: [5] b2 ......................... putObjNameExpr 
    0233: [1] 3d ba 02 f7 f7 ............. goto <addr: 395> 
    0238: [1] 33 10 be cc 01 aa 79 ....... debug 

    # ejs.es:13087                              } else {

    0245: [1] 33 10 c0 cc 01 dc 79 ....... debug 

    # ejs.es:13088                                  rec[model._assocName] = makeLazyReader(rec, model._assocName, model, rec[model._foreignId])

    0252: [1] 5b ......................... getLocalSlot0 
    0253: [2] 5f ......................... getLocalSlot4 
    0254: [3] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0258: [3] 5f ......................... getLocalSlot4 
    0259: [4] 5b ......................... getLocalSlot0 
    0260: [5] 56 ba 2d ................... loadString <> 
    0263: [6] 5f ......................... getLocalSlot4 
    0264: [7] 7b a8 0e 00 ................ getObjName <_foreignId> <> 
    0268: [7] 7c ......................... getObjNameExpr 
    0269: [5] 1f bc 7b dc 43 08 .......... callScopedName <makeLazyReader> <[Record,private]> <argc: 4> 
    0275: [1] 93 ......................... pushResult 
    0276: [2] 5b ......................... getLocalSlot0 
    0277: [3] 56 ba 2d ................... loadString <> 
    0280: [4] 5f ......................... getLocalSlot4 
    0281: [5] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0285: [5] b2 ......................... putObjNameExpr 
    0286: [1] 33 10 c2 cc 01 d4 72 ....... debug 

    # ejs.es:13089                                  if (!model._columns) model.getSchema()

    0293: [1] 5f ......................... getLocalSlot4 
    0294: [2] 7b a0 08 00 ................ getObjName <_columns> <> 
    0298: [2] 86 ......................... logicalNot 
    0299: [2] 13 08 ...................... branchFalse8 <addr: 309> 
    0301: [1] 5f ......................... getLocalSlot4 
    0302: [2] 1e ca 73 00 00 ............. callObjName <getSchema> <> <argc: 0> 
    0307: [1] 3e 00 ...................... goto8 <addr: 309> 
    0309: [1] 33 10 c4 cc 01 da 7b ....... debug 

    # ejs.es:13090                                  for (let field: String  in model._columns) {

    0316: [1] 5f ......................... getLocalSlot4 
    0317: [2] 7b a0 08 00 ................ getObjName <_columns> <> 
    0321: [2] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0327: [1] 93 ......................... pushResult 
    0328: [2] 39 ......................... dup 
    0329: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0332: [2] 93 ......................... pushResult 
    0333: [3] 9c ......................... putLocalSlot8 
    0334: [2] 33 10 c6 cc 01 f8 74 ....... debug 

    # ejs.es:13091                                      let f: String = "_" + model._className + field.toPascal()

    0341: [2] 56 9c 76 ................... loadString <_> 
    0344: [3] 5f ......................... getLocalSlot4 
    0345: [4] 7b d8 06 00 ................ getObjName <_className> <> 
    0349: [4] 00 ......................... add 
    0350: [3] 63 ......................... getLocalSlot8 
    0351: [4] 1e a0 2f e4 2c 00 .......... callObjName <toPascal> <public> <argc: 0> 
    0357: [3] 93 ......................... pushResult 
    0358: [4] 00 ......................... add 
    0359: [3] 9d ......................... putLocalSlot9 
    0360: [2] 33 10 c8 cc 01 f2 7c ....... debug 

    # ejs.es:13092                                      if (rec[f]) {

    0367: [2] 5b ......................... getLocalSlot0 
    0368: [3] 56 ba 2d ................... loadString <> 
    0371: [4] 64 ......................... getLocalSlot9 
    0372: [5] 7c ......................... getObjNameExpr 
    0373: [3] 13 11 ...................... branchFalse8 <addr: 392> 
    0375: [2] 33 10 ca cc 01 be 7d ....... debug 

    # ejs.es:13093                                          delete rec.public::[f]

    0382: [2] 5b ......................... getLocalSlot0 
    0383: [3] 79 e4 2c ba 2d ............. getScopedName <public> <> 
    0388: [4] 64 ......................... getLocalSlot9 
    0389: [5] 36 ......................... deleteNameExpr 
    0390: [2] 3e 00 ...................... goto8 <addr: 392> 
    0392: [2] 3e be ...................... goto8 <addr: 328> 
    0394: [2] 90 ......................... pop 
    0395: [1] 3d 83 06 f7 f7 ............. goto <addr: 15> 
    0400: [1] 90 ......................... pop 
    0401: [0] 54 ......................... loadNull 
    0402: [1] bf ......................... returnValue 
    0403: [0] 33 10 d4 cc 01 9a 32 ....... debug 

    # ejs.es:13098                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    132     135        199          199       StopIteration
1   iteration    329     332        394          394       StopIteration
2   iteration     16      19        400          400       StopIteration

VARIABLE:   [rec-00]  private var rec : Record
VARIABLE:   [set-01]  private var set : Array
VARIABLE:   [preload-02]  private var preload
VARIABLE:   [options-03]  private var options
VARIABLE:   [model-04]  -hoisted-4 var model
VARIABLE:   [association-05]  -hoisted-5 var association
VARIABLE:   [field-06]  -hoisted-6 var field : String
VARIABLE:   [f-07]  -hoisted-6 var f : String
VARIABLE:   [field-08]  -hoisted-8 var field : String
VARIABLE:   [f-09]  -hoisted-8 var f : String

FUNCTION:   [Record-56]  [Record,private] const static function createRecord(data: Object, options: Object) : void

     ARG:   [arg-00]   private data : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var rec : Record
   LOCAL:   [local-03] var subOptions
   LOCAL:   [local-04] var model
   LOCAL:   [local-05] var model

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 10 e2 cc 01 88 80 01 .... debug 

    # ejs.es:13105                          let rec: Record = new global[_className]

    0017: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0019: [1] 56 ba 2d ................... loadString <> 
    0022: [2] 57 ......................... loadThis 
    0023: [3] 7b d8 06 22 ................ getObjName <_className> <internal-ed363076473b51ca685af450cc662b39-0> 
    0027: [3] 7c ......................... getObjNameExpr 
    0028: [1] 89 ......................... new 
    0029: [1] 20 00 ...................... callConstructor <argc: 0> 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 10 e4 cc 01 f2 80 01 .... debug 

    # ejs.es:13106                          rec.initialize(data)

    0040: [0] 5d ......................... getLocalSlot2 
    0041: [1] 5b ......................... getLocalSlot0 
    0042: [2] 1e 84 32 e4 2c 02 .......... callObjName <initialize> <public> <argc: 1> 
    0048: [0] 33 10 e6 cc 01 b4 81 01 .... debug 

    # ejs.es:13107                          rec._keyValue = data[_keyName]

    0056: [0] 5b ......................... getLocalSlot0 
    0057: [1] 56 ba 2d ................... loadString <> 
    0060: [2] 57 ......................... loadThis 
    0061: [3] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0065: [3] 7c ......................... getObjNameExpr 
    0066: [1] 5d ......................... getLocalSlot2 
    0067: [2] b3 96 1b 22 ................ putObjName <_keyValue> <internal-ed363076473b51ca685af450cc662b39-0> 
    0071: [0] 33 10 ea cc 01 8a 82 01 .... debug 

    # ejs.es:13109                          let subOptions = {}

    0079: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0083: [1] 97 ......................... putLocalSlot3 
    0084: [0] 33 10 ec cc 01 e0 82 01 .... debug 

    # ejs.es:13110                          if (options.depth) {

    0092: [0] 5c ......................... getLocalSlot1 
    0093: [1] 7b a2 83 01 ba 2d .......... getObjName <depth> <> 
    0099: [1] 13 2f ...................... branchFalse8 <addr: 148> 
    0101: [0] 33 10 ee cc 01 ae 83 01 .... debug 

    # ejs.es:13111                              subOptions.depth = options.depth

    0109: [0] 5c ......................... getLocalSlot1 
    0110: [1] 7b a2 83 01 ba 2d .......... getObjName <depth> <> 
    0116: [1] 5e ......................... getLocalSlot3 
    0117: [2] b3 a2 83 01 00 ............. putObjName <depth> <> 
    0122: [0] 33 10 f0 cc 01 90 84 01 .... debug 

    # ejs.es:13112                              subOptions.depth--

    0130: [0] 5e ......................... getLocalSlot3 
    0131: [1] 7b a2 83 01 00 ............. getObjName <depth> <> 
    0136: [1] 39 ......................... dup 
    0137: [2] 3f ff ...................... inc <255> 
    0139: [2] 5e ......................... getLocalSlot3 
    0140: [3] b3 a2 83 01 00 ............. putObjName <depth> <> 
    0145: [1] 90 ......................... pop 
    0146: [0] 3e 00 ...................... goto8 <addr: 148> 
    0148: [0] 33 10 f6 cc 01 d6 84 01 .... debug 

    # ejs.es:13115                          if (options.include) {

    0156: [0] 5c ......................... getLocalSlot1 
    0157: [1] 7b 9c 85 01 ba 2d .......... getObjName <include> <> 
    0163: [1] 13 1c ...................... branchFalse8 <addr: 193> 
    0165: [0] 33 10 f8 cc 01 ac 85 01 .... debug 

    # ejs.es:13116                              createAssociations(rec, options.include, true, subOptions)

    0173: [0] 5d ......................... getLocalSlot2 
    0174: [1] 5c ......................... getLocalSlot1 
    0175: [2] 7b 9c 85 01 ba 2d .......... getObjName <include> <> 
    0181: [2] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0184: [3] 5e ......................... getLocalSlot3 
    0185: [4] 1f a4 7e dc 43 08 .......... callScopedName <createAssociations> <[Record,private]> <argc: 4> 
    0191: [0] 3e 00 ...................... goto8 <addr: 193> 
    0193: [0] 33 10 fc cc 01 c2 86 01 .... debug 

    # ejs.es:13118                          if (options.depth != 0) {

    0201: [0] 5c ......................... getLocalSlot1 
    0202: [1] 7b a2 83 01 ba 2d .......... getObjName <depth> <> 
    0208: [1] 44 ......................... load0 
    0209: [2] 2c ......................... compareNe 
    0210: [1] 07 9a 06 f7 f7 ............. branchFalse <addr: 612> 
    0215: [0] 33 10 fe cc 01 8e 87 01 .... debug 

    # ejs.es:13119                              if (_belongsTo) {

    0223: [0] 57 ......................... loadThis 
    0224: [1] 7b b0 05 22 ................ getObjName <_belongsTo> <internal-ed363076473b51ca685af450cc662b39-0> 
    0228: [1] 13 1d ...................... branchFalse8 <addr: 259> 
    0230: [0] 33 10 80 cd 01 d2 87 01 .... debug 

    # ejs.es:13120                                  createAssociations(rec, _belongsTo, options.preload, subOptions)

    0238: [0] 5d ......................... getLocalSlot2 
    0239: [1] 57 ......................... loadThis 
    0240: [2] 7b b0 05 22 ................ getObjName <_belongsTo> <internal-ed363076473b51ca685af450cc662b39-0> 
    0244: [2] 5c ......................... getLocalSlot1 
    0245: [3] 7b d2 7e ba 2d ............. getObjName <preload> <> 
    0250: [3] 5e ......................... getLocalSlot3 
    0251: [4] 1f a4 7e dc 43 08 .......... callScopedName <createAssociations> <[Record,private]> <argc: 4> 
    0257: [0] 3e 00 ...................... goto8 <addr: 259> 
    0259: [0] 33 10 84 cd 01 fc 88 01 .... debug 

    # ejs.es:13122                              if (_hasOne) {

    0267: [0] 57 ......................... loadThis 
    0268: [1] 7b ee 09 22 ................ getObjName <_hasOne> <internal-ed363076473b51ca685af450cc662b39-0> 
    0272: [1] 07 c0 02 f7 f7 ............. branchFalse <addr: 437> 
    0277: [0] 33 10 86 cd 01 ba 89 01 .... debug 

    # ejs.es:13123                                  for each (model in _hasOne) {

    0285: [0] 57 ......................... loadThis 
    0286: [1] 7b ee 09 22 ................ getObjName <_hasOne> <internal-ed363076473b51ca685af450cc662b39-0> 
    0290: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0296: [0] 93 ......................... pushResult 
    0297: [1] 39 ......................... dup 
    0298: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0301: [1] 93 ......................... pushResult 
    0302: [2] 98 ......................... putLocalSlot4 
    0303: [1] 33 10 88 cd 01 9e 8a 01 .... debug 

    # ejs.es:13124                                      if (!rec[model._assocName]) {

    0311: [1] 5d ......................... getLocalSlot2 
    0312: [2] 56 ba 2d ................... loadString <> 
    0315: [3] 5f ......................... getLocalSlot4 
    0316: [4] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0320: [4] 7c ......................... getObjNameExpr 
    0321: [2] 86 ......................... logicalNot 
    0322: [2] 13 69 ...................... branchFalse8 <addr: 429> 
    0324: [1] 33 10 8a cd 01 8a 8b 01 .... debug 

    # ejs.es:13125                                          rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,

    0332: [1] 33 10 8c cd 01 8a 8b 01 .... debug 

    # ejs.es:13126                                          rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,

    0340: [1] 33 10 8a cd 01 8a 8b 01 .... debug 

    # ejs.es:13125                                          rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,

    0348: [1] 5d ......................... getLocalSlot2 
    0349: [2] 5f ......................... getLocalSlot4 
    0350: [3] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0354: [3] 5f ......................... getLocalSlot4 
    0355: [4] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0357: [5] 33 10 8c cd 01 d8 8c 01 .... debug 

    # ejs.es:13126                                              {conditions: rec._foreignId + " = " + data[_keyName] + " LIMIT 1"})

    0365: [5] 56 00 ...................... loadString <> 
    0367: [6] 56 a0 8e 01 ................ loadString <conditions> 
    0371: [7] 5d ......................... getLocalSlot2 
    0372: [8] 7b a8 0e 22 ................ getObjName <_foreignId> <internal-ed363076473b51ca685af450cc662b39-0> 
    0376: [8] 56 b6 8e 01 ................ loadString < = > 
    0380: [9] 00 ......................... add 
    0381: [8] 5b ......................... getLocalSlot0 
    0382: [9] 56 ba 2d ................... loadString <> 
    0385: [10] 57 ......................... loadThis 
    0386: [11] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0390: [11] 7c ......................... getObjNameExpr 
    0391: [9] 00 ......................... add 
    0392: [8] 56 be 8e 01 ................ loadString < LIMIT 1> 
    0396: [9] 00 ......................... add 
    0397: [8] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0402: [6] 1f bc 7b dc 43 0a .......... callScopedName <makeLazyReader> <[Record,private]> <argc: 5> 
    0408: [1] 93 ......................... pushResult 
    0409: [2] 33 10 8a cd 01 8a 8b 01 .... debug 

    # ejs.es:13125                                          rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,

    0417: [2] 5d ......................... getLocalSlot2 
    0418: [3] 56 ba 2d ................... loadString <> 
    0421: [4] 5f ......................... getLocalSlot4 
    0422: [5] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0426: [5] b2 ......................... putObjNameExpr 
    0427: [1] 3e 00 ...................... goto8 <addr: 429> 
    0429: [1] 3d 93 02 f7 f7 ............. goto <addr: 297> 
    0434: [1] 90 ......................... pop 
    0435: [0] 3e 00 ...................... goto8 <addr: 437> 
    0437: [0] 33 10 94 cd 01 d0 8e 01 .... debug 

    # ejs.es:13130                              if (_hasMany) {

    0445: [0] 57 ......................... loadThis 
    0446: [1] 7b b4 0b 22 ................ getObjName <_hasMany> <internal-ed363076473b51ca685af450cc662b39-0> 
    0450: [1] 07 b6 02 f7 f7 ............. branchFalse <addr: 610> 
    0455: [0] 33 10 96 cd 01 90 8f 01 .... debug 

    # ejs.es:13131                                  for each (model in _hasMany) {

    0463: [0] 57 ......................... loadThis 
    0464: [1] 7b b4 0b 22 ................ getObjName <_hasMany> <internal-ed363076473b51ca685af450cc662b39-0> 
    0468: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0474: [0] 93 ......................... pushResult 
    0475: [1] 39 ......................... dup 
    0476: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0479: [1] 93 ......................... pushResult 
    0480: [2] 99 ......................... putLocalSlot5 
    0481: [1] 33 10 98 cd 01 9e 8a 01 .... debug 

    # ejs.es:13132                                      if (!rec[model._assocName]) {

    0489: [1] 5d ......................... getLocalSlot2 
    0490: [2] 56 ba 2d ................... loadString <> 
    0493: [3] 60 ......................... getLocalSlot5 
    0494: [4] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0498: [4] 7c ......................... getObjNameExpr 
    0499: [2] 86 ......................... logicalNot 
    0500: [2] 13 64 ...................... branchFalse8 <addr: 602> 
    0502: [1] 33 10 9a cd 01 8a 8b 01 .... debug 

    # ejs.es:13133                                          rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,

    0510: [1] 33 10 9c cd 01 8a 8b 01 .... debug 

    # ejs.es:13134                                          rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,

    0518: [1] 33 10 9a cd 01 8a 8b 01 .... debug 

    # ejs.es:13133                                          rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,

    0526: [1] 5d ......................... getLocalSlot2 
    0527: [2] 60 ......................... getLocalSlot5 
    0528: [3] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0532: [3] 60 ......................... getLocalSlot5 
    0533: [4] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0535: [5] 33 10 9c cd 01 f6 8f 01 .... debug 

    # ejs.es:13134                                              {conditions: rec._foreignId + " = " + data[_keyName]})

    0543: [5] 56 00 ...................... loadString <> 
    0545: [6] 56 a0 8e 01 ................ loadString <conditions> 
    0549: [7] 5d ......................... getLocalSlot2 
    0550: [8] 7b a8 0e 22 ................ getObjName <_foreignId> <internal-ed363076473b51ca685af450cc662b39-0> 
    0554: [8] 56 b6 8e 01 ................ loadString < = > 
    0558: [9] 00 ......................... add 
    0559: [8] 5b ......................... getLocalSlot0 
    0560: [9] 56 ba 2d ................... loadString <> 
    0563: [10] 57 ......................... loadThis 
    0564: [11] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0568: [11] 7c ......................... getObjNameExpr 
    0569: [9] 00 ......................... add 
    0570: [8] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0575: [6] 1f bc 7b dc 43 0a .......... callScopedName <makeLazyReader> <[Record,private]> <argc: 5> 
    0581: [1] 93 ......................... pushResult 
    0582: [2] 33 10 9a cd 01 8a 8b 01 .... debug 

    # ejs.es:13133                                          rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,

    0590: [2] 5d ......................... getLocalSlot2 
    0591: [3] 56 ba 2d ................... loadString <> 
    0594: [4] 60 ......................... getLocalSlot5 
    0595: [5] 7b ea 03 00 ................ getObjName <_assocName> <> 
    0599: [5] b2 ......................... putObjNameExpr 
    0600: [1] 3e 00 ...................... goto8 <addr: 602> 
    0602: [1] 3d 89 02 f7 f7 ............. goto <addr: 475> 
    0607: [1] 90 ......................... pop 
    0608: [0] 3e 00 ...................... goto8 <addr: 610> 
    0610: [0] 3e 00 ...................... goto8 <addr: 612> 
    0612: [0] 33 10 a4 cd 01 a4 91 01 .... debug 

    # ejs.es:13138                          }

    0620: [0] 33 10 a6 cd 01 c0 91 01 .... debug 

    # ejs.es:13139                          rec.coerceToEjsTypes()

    0628: [0] 5d ......................... getLocalSlot2 
    0629: [1] 1e c0 6c dc 43 00 .......... callObjName <coerceToEjsTypes> <[Record,private]> <argc: 0> 
    0635: [0] 33 10 a8 cd 01 86 92 01 .... debug 

    # ejs.es:13140                          return rec

    0643: [0] 5d ......................... getLocalSlot2 
    0644: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    298     301        434          434       StopIteration
1   iteration    476     479        607          607       StopIteration

VARIABLE:   [data-00]  private var data : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [rec-02]  private var rec : Record
VARIABLE:   [subOptions-03]  private var subOptions
VARIABLE:   [model-04]  -hoisted-4 var model
VARIABLE:   [model-05]  -hoisted-5 var model

FUNCTION:   [Record-57]  public const function error(field: String, msg: String) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private msg : String

    0000: [0] 33 10 ba cd 01 b4 93 01 .... debug 

    # ejs.es:13149                          field ||= ""

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 39 ......................... dup 
    0010: [2] 14 04 ...................... branchTrue8 <addr: 16> 
    0012: [1] 90 ......................... pop 
    0013: [0] 56 ba 2d ................... loadString <> 
    0016: [1] 94 ......................... putLocalSlot0 
    0017: [0] 33 10 bc cd 01 e6 93 01 .... debug 

    # ejs.es:13150                          _errors[field] = msg

    0025: [0] 5c ......................... getLocalSlot1 
    0026: [1] 57 ......................... loadThis 
    0027: [2] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0031: [2] 56 ba 2d ................... loadString <> 
    0034: [3] 5b ......................... getLocalSlot0 
    0035: [4] b2 ......................... putObjNameExpr 
    0036: [0] 54 ......................... loadNull 
    0037: [1] bf ......................... returnValue 
    0038: [0] 33 10 be cd 01 9a 32 ....... debug 

    # ejs.es:13151                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [msg-01]  private var msg : String

FUNCTION:   [Record-58]  public const static function find(key: Object, options: Object) : Object

     ARG:   [arg-00]   private key : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var grid : Array
   LOCAL:   [local-03] var results

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 10 fa cd 01 d0 95 01 .... debug 

    # ejs.es:13181                          let grid: Array = innerFind(key, 1, options)

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 45 ......................... load1 
    0019: [2] 5c ......................... getLocalSlot1 
    0020: [3] 1f c2 96 01 dc 43 06 ....... callScopedName <innerFind> <[Record,private]> <argc: 3> 
    0027: [0] 93 ......................... pushResult 
    0028: [1] 96 ......................... putLocalSlot2 
    0029: [0] 33 10 fc cd 01 d6 96 01 .... debug 

    # ejs.es:13182                          if (grid.length >= 1) {

    0037: [0] 5d ......................... getLocalSlot2 
    0038: [1] 7b e2 52 e4 2c ............. getObjName <length> <public> 
    0043: [1] 45 ......................... load1 
    0044: [2] 28 ......................... compareGe 
    0045: [1] 13 52 ...................... branchFalse8 <addr: 129> 
    0047: [0] 33 10 fe cd 01 c4 97 01 .... debug 

    # ejs.es:13183                              let results = createRecord(grid[0], options)

    0055: [0] 5d ......................... getLocalSlot2 
    0056: [1] 56 ba 2d ................... loadString <> 
    0059: [2] 44 ......................... load0 
    0060: [3] 7c ......................... getObjNameExpr 
    0061: [1] 5c ......................... getLocalSlot1 
    0062: [2] 1f 90 79 dc 43 04 .......... callScopedName <createRecord> <[Record,private]> <argc: 2> 
    0068: [0] 93 ......................... pushResult 
    0069: [1] 97 ......................... putLocalSlot3 
    0070: [0] 33 10 80 ce 01 be 98 01 .... debug 

    # ejs.es:13184                              if (options && options.debug) {

    0078: [0] 5c ......................... getLocalSlot1 
    0079: [1] 39 ......................... dup 
    0080: [2] 13 08 ...................... branchFalse8 <addr: 90> 
    0082: [1] 90 ......................... pop 
    0083: [0] 5c ......................... getLocalSlot1 
    0084: [1] 7b 9e 99 01 ba 2d .......... getObjName <debug> <> 
    0090: [1] 13 19 ...................... branchFalse8 <addr: 117> 
    0092: [0] 33 10 82 ce 01 aa 99 01 .... debug 

    # ejs.es:13185                                  print("RESULTS: " + serialize(results))

    0100: [0] 56 a2 9a 01 ................ loadString <RESULTS: > 
    0104: [1] 5e ......................... getLocalSlot3 
    0105: [2] 17 c8 01 02 ................ callGlobalSlot <slot: 100> <argc: 1> 
    0109: [1] 93 ......................... pushResult 
    0110: [2] 00 ......................... add 
    0111: [1] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0115: [0] 3e 00 ...................... goto8 <addr: 117> 
    0117: [0] 33 10 86 ce 01 b6 9a 01 .... debug 

    # ejs.es:13187                              return results

    0125: [0] 5e ......................... getLocalSlot3 
    0126: [1] bf ......................... returnValue 
    0127: [0] 3e 00 ...................... goto8 <addr: 129> 
    0129: [0] 33 10 8a ce 01 f4 9a 01 .... debug 

    # ejs.es:13189                          return null

    0137: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0139: [1] bf ......................... returnValue 
    
VARIABLE:   [key-00]  private var key : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [grid-02]  private var grid : Array
VARIABLE:   [results-03]  -hoisted-3 var results

FUNCTION:   [Record-59]  public const static function findAll(options: Object) : Array

     ARG:   [arg-00]   private options : Object
   LOCAL:   [local-01] var grid : Array
   LOCAL:   [local-02] var i

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 94 ......................... putLocalSlot0 
    0009: [0] 33 10 9e ce 01 ac 9c 01 .... debug 

    # ejs.es:13199                          let grid: Array = innerFind(null, null, options)

    0017: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0019: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0021: [2] 5b ......................... getLocalSlot0 
    0022: [3] 1f c2 96 01 dc 43 06 ....... callScopedName <innerFind> <[Record,private]> <argc: 3> 
    0029: [0] 93 ......................... pushResult 
    0030: [1] 95 ......................... putLocalSlot1 
    0031: [0] 33 10 a2 ce 01 a6 9d 01 .... debug 

    # ejs.es:13201                          for (let i = 0; i < grid.length; i++) {

    0039: [0] 44 ......................... load0 
    0040: [1] 96 ......................... putLocalSlot2 
    0041: [0] 5d ......................... getLocalSlot2 
    0042: [1] 5c ......................... getLocalSlot1 
    0043: [2] 7b e2 52 e4 2c ............. getObjName <length> <public> 
    0048: [2] 2b ......................... compareLt 
    0049: [1] 13 2c ...................... branchFalse8 <addr: 95> 
    0051: [0] 33 10 a4 ce 01 a8 9e 01 .... debug 

    # ejs.es:13202                              grid[i] = createRecord(grid[i], options)

    0059: [0] 5c ......................... getLocalSlot1 
    0060: [1] 56 ba 2d ................... loadString <> 
    0063: [2] 5d ......................... getLocalSlot2 
    0064: [3] 7c ......................... getObjNameExpr 
    0065: [1] 5b ......................... getLocalSlot0 
    0066: [2] 1f 90 79 dc 43 04 .......... callScopedName <createRecord> <[Record,private]> <argc: 2> 
    0072: [0] 93 ......................... pushResult 
    0073: [1] 5c ......................... getLocalSlot1 
    0074: [2] 56 ba 2d ................... loadString <> 
    0077: [3] 5d ......................... getLocalSlot2 
    0078: [4] b2 ......................... putObjNameExpr 
    0079: [0] 33 10 a2 ce 01 a6 9d 01 .... debug 

    # ejs.es:13201                          for (let i = 0; i < grid.length; i++) {

    0087: [0] 5d ......................... getLocalSlot2 
    0088: [1] 39 ......................... dup 
    0089: [2] 3f 01 ...................... inc <1> 
    0091: [2] 96 ......................... putLocalSlot2 
    0092: [1] 90 ......................... pop 
    0093: [0] 3e ca ...................... goto8 <addr: 41> 
    0095: [0] 33 10 aa ce 01 9a 9f 01 .... debug 

    # ejs.es:13205                          if (options && options.debug) {

    0103: [0] 5b ......................... getLocalSlot0 
    0104: [1] 39 ......................... dup 
    0105: [2] 13 08 ...................... branchFalse8 <addr: 115> 
    0107: [1] 90 ......................... pop 
    0108: [0] 5b ......................... getLocalSlot0 
    0109: [1] 7b 9e 99 01 ba 2d .......... getObjName <debug> <> 
    0115: [1] 13 19 ...................... branchFalse8 <addr: 142> 
    0117: [0] 33 10 ac ce 01 f2 9f 01 .... debug 

    # ejs.es:13206                              print("RESULTS: " + serialize(grid))

    0125: [0] 56 a2 9a 01 ................ loadString <RESULTS: > 
    0129: [1] 5c ......................... getLocalSlot1 
    0130: [2] 17 c8 01 02 ................ callGlobalSlot <slot: 100> <argc: 1> 
    0134: [1] 93 ......................... pushResult 
    0135: [2] 00 ......................... add 
    0136: [1] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0140: [0] 3e 00 ...................... goto8 <addr: 142> 
    0142: [0] 33 10 b0 ce 01 dc a0 01 .... debug 

    # ejs.es:13208                          return grid

    0150: [0] 5c ......................... getLocalSlot1 
    0151: [1] bf ......................... returnValue 
    
VARIABLE:   [options-00]  private var options : Object
VARIABLE:   [grid-01]  private var grid : Array
VARIABLE:   [i-02]  -hoisted-2 var i

FUNCTION:   [Record-60]  public const static function findOneWhere(where: String) : Object

     ARG:   [arg-00]   private where : String
   LOCAL:   [local-01] var grid : Array

    0000: [0] 33 10 c8 ce 01 98 a2 01 .... debug 

    # ejs.es:13220                          let grid: Array = innerFind(null, 1, { conditions: [where]})

    0008: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0010: [1] 45 ......................... load1 
    0011: [2] 56 00 ...................... loadString <> 
    0013: [3] 56 a0 8e 01 ................ loadString <conditions> 
    0017: [4] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0019: [5] 89 ......................... new 
    0020: [5] 39 ......................... dup 
    0021: [6] 5b ......................... getLocalSlot0 
    0022: [7] c5 ......................... swap 
    0023: [7] 56 ba 2d ................... loadString <> 
    0026: [8] 44 ......................... load0 
    0027: [9] b2 ......................... putObjNameExpr 
    0028: [5] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0033: [3] 1f c2 96 01 dc 43 06 ....... callScopedName <innerFind> <[Record,private]> <argc: 3> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] 95 ......................... putLocalSlot1 
    0042: [0] 33 10 ca ce 01 d6 96 01 .... debug 

    # ejs.es:13221                          if (grid.length >= 1) {

    0050: [0] 5c ......................... getLocalSlot1 
    0051: [1] 7b e2 52 e4 2c ............. getObjName <length> <public> 
    0056: [1] 45 ......................... load1 
    0057: [2] 28 ......................... compareGe 
    0058: [1] 13 18 ...................... branchFalse8 <addr: 84> 
    0060: [0] 33 10 cc ce 01 aa a3 01 .... debug 

    # ejs.es:13222                              return createRecord(grid[0])

    0068: [0] 5c ......................... getLocalSlot1 
    0069: [1] 56 ba 2d ................... loadString <> 
    0072: [2] 44 ......................... load0 
    0073: [3] 7c ......................... getObjNameExpr 
    0074: [1] 1f 90 79 dc 43 02 .......... callScopedName <createRecord> <[Record,private]> <argc: 1> 
    0080: [0] 93 ......................... pushResult 
    0081: [1] bf ......................... returnValue 
    0082: [0] 3e 00 ...................... goto8 <addr: 84> 
    0084: [0] 33 10 d0 ce 01 f4 9a 01 .... debug 

    # ejs.es:13224                          return null

    0092: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0094: [1] bf ......................... returnValue 
    
VARIABLE:   [where-00]  private var where : String
VARIABLE:   [grid-01]  private var grid : Array

FUNCTION:   [Record-61]  public const static function findWhere(where: String, count: Number) : Array

     ARG:   [arg-00]   private where : String
     ARG:   [arg-01]   private count : Number
   LOCAL:   [local-02] var grid : Array
   LOCAL:   [local-03] var i

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 e8 ce 01 cc a5 01 .... debug 

    # ejs.es:13236                          let grid: Array = innerFind(null, null, { conditions: [where]})

    0015: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0017: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0019: [2] 56 00 ...................... loadString <> 
    0021: [3] 56 a0 8e 01 ................ loadString <conditions> 
    0025: [4] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0027: [5] 89 ......................... new 
    0028: [5] 39 ......................... dup 
    0029: [6] 5b ......................... getLocalSlot0 
    0030: [7] c5 ......................... swap 
    0031: [7] 56 ba 2d ................... loadString <> 
    0034: [8] 44 ......................... load0 
    0035: [9] b2 ......................... putObjNameExpr 
    0036: [5] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0041: [3] 1f c2 96 01 dc 43 06 ....... callScopedName <innerFind> <[Record,private]> <argc: 3> 
    0048: [0] 93 ......................... pushResult 
    0049: [1] 96 ......................... putLocalSlot2 
    0050: [0] 33 10 ea ce 01 e4 a6 01 .... debug 

    # ejs.es:13237                          for (i in grid.length) {

    0058: [0] 5d ......................... getLocalSlot2 
    0059: [1] 7b e2 52 e4 2c ............. getObjName <length> <public> 
    0064: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0070: [0] 93 ......................... pushResult 
    0071: [1] 39 ......................... dup 
    0072: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0075: [1] 93 ......................... pushResult 
    0076: [2] 97 ......................... putLocalSlot3 
    0077: [1] 33 10 ec ce 01 ae a7 01 .... debug 

    # ejs.es:13238                              grid[i] = createRecord(grid[i])

    0085: [1] 5d ......................... getLocalSlot2 
    0086: [2] 56 ba 2d ................... loadString <> 
    0089: [3] 5e ......................... getLocalSlot3 
    0090: [4] 7c ......................... getObjNameExpr 
    0091: [2] 1f 90 79 dc 43 02 .......... callScopedName <createRecord> <[Record,private]> <argc: 1> 
    0097: [1] 93 ......................... pushResult 
    0098: [2] 5d ......................... getLocalSlot2 
    0099: [3] 56 ba 2d ................... loadString <> 
    0102: [4] 5e ......................... getLocalSlot3 
    0103: [5] b2 ......................... putObjNameExpr 
    0104: [1] 3e dd ...................... goto8 <addr: 71> 
    0106: [1] 90 ......................... pop 
    0107: [0] 33 10 f0 ce 01 dc a0 01 .... debug 

    # ejs.es:13240                          return grid

    0115: [0] 5d ......................... getLocalSlot2 
    0116: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     72      75        106          106       StopIteration

VARIABLE:   [where-00]  private var where : String
VARIABLE:   [count-01]  private var count : Number
VARIABLE:   [grid-02]  private var grid : Array
VARIABLE:   [i-03]  -hoisted-3 var i

FUNCTION:   [Record-62]  public const static function getColumnNames() : Array

   LOCAL:   [local-00] var result : Array
   LOCAL:   [local-01] var col : String

    0000: [0] 33 10 82 cf 01 8e a9 01 .... debug 

    # ejs.es:13249                          if (!_columns) _model.getSchema()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 86 ......................... logicalNot 
    0014: [1] 13 0d ...................... branchFalse8 <addr: 29> 
    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b 80 11 22 ................ getObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0021: [1] 1e ca 73 ba 2d 00 .......... callObjName <getSchema> <> <argc: 0> 
    0027: [0] 3e 00 ...................... goto8 <addr: 29> 
    0029: [0] 33 10 84 cf 01 ea a9 01 .... debug 

    # ejs.es:13250                          let result: Array = []

    0037: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0039: [1] 89 ......................... new 
    0040: [1] 94 ......................... putLocalSlot0 
    0041: [0] 33 10 86 cf 01 be aa 01 .... debug 

    # ejs.es:13251                          for (let col: String in _columns) {

    0049: [0] 57 ......................... loadThis 
    0050: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0054: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0060: [0] 93 ......................... pushResult 
    0061: [1] 39 ......................... dup 
    0062: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0065: [1] 93 ......................... pushResult 
    0066: [2] 95 ......................... putLocalSlot1 
    0067: [1] 33 10 88 cf 01 9e ab 01 .... debug 

    # ejs.es:13252                              result.append(col)

    0075: [1] 5b ......................... getLocalSlot0 
    0076: [2] 5c ......................... getLocalSlot1 
    0077: [3] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0083: [1] 3e e8 ...................... goto8 <addr: 61> 
    0085: [1] 90 ......................... pop 
    0086: [0] 33 10 8c cf 01 e4 ab 01 .... debug 

    # ejs.es:13254                          return result

    0094: [0] 5b ......................... getLocalSlot0 
    0095: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     62      65         85           85       StopIteration

VARIABLE:   [result-00]  private var result : Array
VARIABLE:   [col-01]  -hoisted-1 var col : String

FUNCTION:   [Record-63]  public const static function getColumnTitles() : Array

   LOCAL:   [local-00] var result : Array
   LOCAL:   [local-01] var col : String

    0000: [0] 33 10 9e cf 01 8e a9 01 .... debug 

    # ejs.es:13263                          if (!_columns) _model.getSchema()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 86 ......................... logicalNot 
    0014: [1] 13 0d ...................... branchFalse8 <addr: 29> 
    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b 80 11 22 ................ getObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0021: [1] 1e ca 73 ba 2d 00 .......... callObjName <getSchema> <> <argc: 0> 
    0027: [0] 3e 00 ...................... goto8 <addr: 29> 
    0029: [0] 33 10 a0 cf 01 ea a9 01 .... debug 

    # ejs.es:13264                          let result: Array = []

    0037: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0039: [1] 89 ......................... new 
    0040: [1] 94 ......................... putLocalSlot0 
    0041: [0] 33 10 a2 cf 01 be aa 01 .... debug 

    # ejs.es:13265                          for (let col: String in _columns) {

    0049: [0] 57 ......................... loadThis 
    0050: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0054: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0060: [0] 93 ......................... pushResult 
    0061: [1] 39 ......................... dup 
    0062: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0065: [1] 93 ......................... pushResult 
    0066: [2] 95 ......................... putLocalSlot1 
    0067: [1] 33 10 a4 cf 01 9e ad 01 .... debug 

    # ejs.es:13266                              result.append(col.toPascal())

    0075: [1] 5b ......................... getLocalSlot0 
    0076: [2] 5c ......................... getLocalSlot1 
    0077: [3] 1e a0 2f e4 2c 00 .......... callObjName <toPascal> <public> <argc: 0> 
    0083: [2] 93 ......................... pushResult 
    0084: [3] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0090: [1] 3e e1 ...................... goto8 <addr: 61> 
    0092: [1] 90 ......................... pop 
    0093: [0] 33 10 a8 cf 01 e4 ab 01 .... debug 

    # ejs.es:13268                          return result

    0101: [0] 5b ......................... getLocalSlot0 
    0102: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     62      65         92           92       StopIteration

VARIABLE:   [result-00]  private var result : Array
VARIABLE:   [col-01]  -hoisted-1 var col : String

FUNCTION:   [Record-64]  public const static function getColumnType(field: String) : String

     ARG:   [arg-00]   private field : String

    0000: [0] 33 10 b8 cf 01 8e a9 01 .... debug 

    # ejs.es:13276                          if (!_columns) _model.getSchema()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 86 ......................... logicalNot 
    0014: [1] 13 0d ...................... branchFalse8 <addr: 29> 
    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b 80 11 22 ................ getObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0021: [1] 1e ca 73 ba 2d 00 .......... callObjName <getSchema> <> <argc: 0> 
    0027: [0] 3e 00 ...................... goto8 <addr: 29> 
    0029: [0] 33 10 ba cf 01 98 af 01 .... debug 

    # ejs.es:13277                          return _db.sqlTypeToDataType(_columns[field].sqlType)

    0037: [0] 57 ......................... loadThis 
    0038: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0042: [1] 57 ......................... loadThis 
    0043: [2] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0047: [2] 56 ba 2d ................... loadString <> 
    0050: [3] 5b ......................... getLocalSlot0 
    0051: [4] 7c ......................... getObjNameExpr 
    0052: [2] 7b 9c b0 01 ba 2d .......... getObjName <sqlType> <> 
    0058: [2] 1e ac b0 01 e4 2c 02 ....... callObjName <sqlTypeToDataType> <public> <argc: 1> 
    0065: [0] 93 ......................... pushResult 
    0066: [1] bf ......................... returnValue 
    
VARIABLE:   [field-00]  private var field : String

FUNCTION:   [Record-65]  public const static function getDb() : Database


    0000: [0] 33 10 ca cf 01 c4 b1 01 .... debug 

    # ejs.es:13285                          if (!_db) {

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 86 ......................... logicalNot 
    0014: [1] 13 18 ...................... branchFalse8 <addr: 40> 
    0016: [0] 33 10 cc cf 01 f4 b1 01 .... debug 

    # ejs.es:13286                              _db = Database.defaultDatabase

    0024: [0] 7e ba 02 ................... getGlobalSlot <slot: 157> 
    0027: [1] 7b d2 b2 01 e4 2c .......... getObjName <defaultDatabase> <public> 
    0033: [1] 57 ......................... loadThis 
    0034: [2] b3 cc 0c 22 ................ putObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0038: [0] 3e 00 ...................... goto8 <addr: 40> 
    0040: [0] 33 10 d0 cf 01 f2 b2 01 .... debug 

    # ejs.es:13288                          return _db

    0048: [0] 57 ......................... loadThis 
    0049: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0053: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-66]  public const function getErrors() : Array


    0000: [0] 33 10 e0 cf 01 f4 b3 01 .... debug 

    # ejs.es:13296                          _errors

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-67]  public const static function getKeyName() : String


    0000: [0] 33 10 ec cf 01 8a b5 01 .... debug 

    # ejs.es:13302                          _keyName

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-68]  public const static function getNumRows() : Number

   LOCAL:   [local-00] var cmd : String
   LOCAL:   [local-01] var grid : Array

    0000: [0] 33 10 f8 cf 01 8e a9 01 .... debug 

    # ejs.es:13308                          if (!_columns) _model.getSchema()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 86 ......................... logicalNot 
    0014: [1] 13 0d ...................... branchFalse8 <addr: 29> 
    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b 80 11 22 ................ getObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0021: [1] 1e ca 73 ba 2d 00 .......... callObjName <getSchema> <> <argc: 0> 
    0027: [0] 3e 00 ...................... goto8 <addr: 29> 
    0029: [0] 33 10 fa cf 01 a8 b6 01 .... debug 

    # ejs.es:13309                          let cmd: String = "SELECT COUNT(*) FROM " + _tableName + " WHERE " + _keyName + " <> '';"

    0037: [0] 56 fc b7 01 ................ loadString <SELECT COUNT(*) FROM > 
    0041: [1] 57 ......................... loadThis 
    0042: [2] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0046: [2] 00 ......................... add 
    0047: [1] 56 a8 b8 01 ................ loadString < WHERE > 
    0051: [2] 00 ......................... add 
    0052: [1] 57 ......................... loadThis 
    0053: [2] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0057: [2] 00 ......................... add 
    0058: [1] 56 b8 b8 01 ................ loadString < <> '';> 
    0062: [2] 00 ......................... add 
    0063: [1] 94 ......................... putLocalSlot0 
    0064: [0] 33 10 fc cf 01 c8 b8 01 .... debug 

    # ejs.es:13310                          let grid: Array = _db.query(cmd, "numRows", _trace)

    0072: [0] 57 ......................... loadThis 
    0073: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0077: [1] 5b ......................... getLocalSlot0 
    0078: [2] 56 c8 b9 01 ................ loadString <numRows> 
    0082: [3] 57 ......................... loadThis 
    0083: [4] 7b 90 14 22 ................ getObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    0087: [4] 1e d8 b9 01 e4 2c 06 ....... callObjName <query> <public> <argc: 3> 
    0094: [0] 93 ......................... pushResult 
    0095: [1] 95 ......................... putLocalSlot1 
    0096: [0] 33 10 fe cf 01 e4 b9 01 .... debug 

    # ejs.es:13311                          return grid[0]["COUNT(*)"]

    0104: [0] 5c ......................... getLocalSlot1 
    0105: [1] 56 ba 2d ................... loadString <> 
    0108: [2] 44 ......................... load0 
    0109: [3] 7c ......................... getObjNameExpr 
    0110: [1] 56 ba 2d ................... loadString <> 
    0113: [2] 56 b2 ba 01 ................ loadString <COUNT(*)> 
    0117: [3] 7c ......................... getObjNameExpr 
    0118: [1] bf ......................... returnValue 
    
VARIABLE:   [cmd-00]  private var cmd : String
VARIABLE:   [grid-01]  private var grid : Array

FUNCTION:   [Record-69]  [Record,private] const static function getSchema() : Void

   LOCAL:   [local-00] var sql : String
   LOCAL:   [local-01] var grid : Array
   LOCAL:   [local-02] var row
   LOCAL:   [local-03] var name
   LOCAL:   [local-04] var sqlType
   LOCAL:   [local-05] var ejsType

    0000: [0] 33 10 8c d0 01 c4 b1 01 .... debug 

    # ejs.es:13318                          if (!_db) {

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 86 ......................... logicalNot 
    0014: [1] 13 3c ...................... branchFalse8 <addr: 76> 
    0016: [0] 33 10 8e d0 01 f4 b1 01 .... debug 

    # ejs.es:13319                              _db = Database.defaultDatabase

    0024: [0] 7e ba 02 ................... getGlobalSlot <slot: 157> 
    0027: [1] 7b d2 b2 01 e4 2c .......... getObjName <defaultDatabase> <public> 
    0033: [1] 57 ......................... loadThis 
    0034: [2] b3 cc 0c 22 ................ putObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0038: [0] 33 10 90 d0 01 c2 bb 01 .... debug 

    # ejs.es:13320                              if (!_db) {

    0046: [0] 57 ......................... loadThis 
    0047: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0051: [1] 86 ......................... logicalNot 
    0052: [1] 13 14 ...................... branchFalse8 <addr: 74> 
    0054: [0] 33 10 92 d0 01 fa bb 01 .... debug 

    # ejs.es:13321                                  throw new Error("Can't get schema, database connection has not yet been established")

    0062: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0064: [1] 89 ......................... new 
    0065: [1] 56 ce bd 01 ................ loadString <Can't get schema, database connection has not yet been established> 
    0069: [2] 20 02 ...................... callConstructor <argc: 1> 
    0071: [1] c6 ......................... throw 
    0072: [1] 3e 00 ...................... goto8 <addr: 74> 
    0074: [1] 3e 00 ...................... goto8 <addr: 76> 
    0076: [1] 33 10 96 d0 01 a4 91 01 .... debug 

    # ejs.es:13323                          }

    0084: [1] 33 10 98 d0 01 dc be 01 .... debug 

    # ejs.es:13324                          let sql: String = 'PRAGMA table_info("' + _tableName + '");'

    0092: [1] 56 ee bf 01 ................ loadString <PRAGMA table_info("> 
    0096: [2] 57 ......................... loadThis 
    0097: [3] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0101: [3] 00 ......................... add 
    0102: [2] 56 96 c0 01 ................ loadString <");> 
    0106: [3] 00 ......................... add 
    0107: [2] 94 ......................... putLocalSlot0 
    0108: [1] 33 10 9a d0 01 9e c0 01 .... debug 

    # ejs.es:13325                          let grid: Array = _db.query(sql, "schema", _trace)

    0116: [1] 57 ......................... loadThis 
    0117: [2] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0121: [2] 5b ......................... getLocalSlot0 
    0122: [3] 56 9c c1 01 ................ loadString <schema> 
    0126: [4] 57 ......................... loadThis 
    0127: [5] 7b 90 14 22 ................ getObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    0131: [5] 1e d8 b9 01 e4 2c 06 ....... callObjName <query> <public> <argc: 3> 
    0138: [1] 93 ......................... pushResult 
    0139: [2] 95 ......................... putLocalSlot1 
    0140: [1] 33 10 9c d0 01 aa c1 01 .... debug 

    # ejs.es:13326                          _columns = {}

    0148: [1] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0152: [2] 57 ......................... loadThis 
    0153: [3] b3 a0 08 22 ................ putObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0157: [1] 33 10 9e d0 01 de c1 01 .... debug 

    # ejs.es:13327                          for each (let row in grid) {

    0165: [1] 5c ......................... getLocalSlot1 
    0166: [2] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0172: [1] 93 ......................... pushResult 
    0173: [2] 39 ......................... dup 
    0174: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0177: [2] 93 ......................... pushResult 
    0178: [3] 96 ......................... putLocalSlot2 
    0179: [2] 33 10 a0 d0 01 b8 c2 01 .... debug 

    # ejs.es:13328                              let name = row["name"]

    0187: [2] 5d ......................... getLocalSlot2 
    0188: [3] 56 ba 2d ................... loadString <> 
    0191: [4] 56 da 2c ................... loadString <name> 
    0194: [5] 7c ......................... getObjNameExpr 
    0195: [3] 97 ......................... putLocalSlot3 
    0196: [2] 33 10 a2 d0 01 86 c3 01 .... debug 

    # ejs.es:13329                              let sqlType = row["type"].toLower()

    0204: [2] 5d ......................... getLocalSlot2 
    0205: [3] 56 ba 2d ................... loadString <> 
    0208: [4] 56 8a 61 ................... loadString <type> 
    0211: [5] 7c ......................... getObjNameExpr 
    0212: [3] 1e 8a 65 00 00 ............. callObjName <toLower> <> <argc: 0> 
    0217: [2] 93 ......................... pushResult 
    0218: [3] 98 ......................... putLocalSlot4 
    0219: [2] 33 10 a4 d0 01 ee c3 01 .... debug 

    # ejs.es:13330                              let ejsType = mapSqlTypeToEjs(sqlType)

    0227: [2] 5f ......................... getLocalSlot4 
    0228: [3] 1f dc c4 01 dc 43 02 ....... callScopedName <mapSqlTypeToEjs> <[Record,private]> <argc: 1> 
    0235: [2] 93 ......................... pushResult 
    0236: [3] 99 ......................... putLocalSlot5 
    0237: [2] 33 10 a6 d0 01 fc c4 01 .... debug 

    # ejs.es:13331                              _columns[name] = new Column(name, false, ejsType, sqlType)

    0245: [2] 7e c0 02 ................... getGlobalSlot <slot: 160> 
    0248: [3] 89 ......................... new 
    0249: [3] 5e ......................... getLocalSlot3 
    0250: [4] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0252: [5] 60 ......................... getLocalSlot5 
    0253: [6] 5f ......................... getLocalSlot4 
    0254: [7] 20 08 ...................... callConstructor <argc: 4> 
    0256: [3] 57 ......................... loadThis 
    0257: [4] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0261: [4] 56 ba 2d ................... loadString <> 
    0264: [5] 5e ......................... getLocalSlot3 
    0265: [6] b2 ......................... putObjNameExpr 
    0266: [2] 3e a1 ...................... goto8 <addr: 173> 
    0268: [2] 90 ......................... pop 
    0269: [1] 54 ......................... loadNull 
    0270: [2] bf ......................... returnValue 
    0271: [0] 33 10 aa d0 01 9a 32 ....... debug 

    # ejs.es:13333                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    174     177        268          268       StopIteration

VARIABLE:   [sql-00]  private var sql : String
VARIABLE:   [grid-01]  private var grid : Array
VARIABLE:   [row-02]  -hoisted-2 var row
VARIABLE:   [name-03]  -hoisted-2 var name
VARIABLE:   [sqlType-04]  -hoisted-2 var sqlType
VARIABLE:   [ejsType-05]  -hoisted-2 var ejsType

FUNCTION:   [Record-70]  public const static function getTableName() : String


    0000: [0] 33 10 b8 d0 01 f0 c6 01 .... debug 

    # ejs.es:13340                          _tableName

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-71]  public const static function hasAndBelongsToMany(model: Object, options: Object) : Void

     ARG:   [arg-00]   private model : Object
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 10 d2 d0 01 ea c8 01 .... debug 

    # ejs.es:13353                          belongsTo(model, options)

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 5c ......................... getLocalSlot1 
    0019: [2] 1f 8c 3e e4 2c 04 .......... callScopedName <belongsTo> <public> <argc: 2> 
    0025: [0] 33 10 d4 d0 01 b6 c9 01 .... debug 

    # ejs.es:13354                          hasMany(model, options)

    0033: [0] 5b ......................... getLocalSlot0 
    0034: [1] 5c ......................... getLocalSlot1 
    0035: [2] 1f fe c9 01 e4 2c 04 ....... callScopedName <hasMany> <public> <argc: 2> 
    0042: [0] 54 ......................... loadNull 
    0043: [1] bf ......................... returnValue 
    0044: [0] 33 10 d6 d0 01 9a 32 ....... debug 

    # ejs.es:13355                      }
    
VARIABLE:   [model-00]  private var model : Object
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Record-72]  public const function hasError(field: String) : Boolean

     ARG:   [arg-00]   private field : String

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 10 e4 d0 01 ae cb 01 .... debug 

    # ejs.es:13362                          if (field) {

    0015: [0] 5b ......................... getLocalSlot0 
    0016: [1] 13 1e ...................... branchFalse8 <addr: 48> 
    0018: [0] 33 10 e6 d0 01 e0 cb 01 .... debug 

    # ejs.es:13363                              return (_errors && _errors[field])

    0026: [0] 57 ......................... loadThis 
    0027: [1] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0031: [1] 39 ......................... dup 
    0032: [2] 13 0b ...................... branchFalse8 <addr: 45> 
    0034: [1] 90 ......................... pop 
    0035: [0] 57 ......................... loadThis 
    0036: [1] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0040: [1] 56 ba 2d ................... loadString <> 
    0043: [2] 5b ......................... getLocalSlot0 
    0044: [3] 7c ......................... getObjNameExpr 
    0045: [1] bf ......................... returnValue 
    0046: [0] 3e 00 ...................... goto8 <addr: 48> 
    0048: [0] 33 10 ea d0 01 c6 cc 01 .... debug 

    # ejs.es:13365                          if (_errors) {

    0056: [0] 57 ......................... loadThis 
    0057: [1] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0061: [1] 13 17 ...................... branchFalse8 <addr: 86> 
    0063: [0] 33 10 ec d0 01 fc cc 01 .... debug 

    # ejs.es:13366                              return (_errors.length > 0)

    0071: [0] 57 ......................... loadThis 
    0072: [1] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0076: [1] 7b e2 52 f6 32 ............. getObjName <length> <ejs> 
    0081: [1] 44 ......................... load0 
    0082: [2] 29 ......................... compareGt 
    0083: [1] bf ......................... returnValue 
    0084: [0] 3e 00 ...................... goto8 <addr: 86> 
    0086: [0] 33 10 f0 d0 01 d4 cd 01 .... debug 

    # ejs.es:13368                          return false

    0094: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0096: [1] bf ......................... returnValue 
    
VARIABLE:   [field-00]  private var field : String

FUNCTION:   [Record-73]  public const static function hasMany(model: Object, options: Object) : Void

     ARG:   [arg-00]   private model : Object
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 10 8c d1 01 b2 cf 01 .... debug 

    # ejs.es:13382                          _hasMany ||= []

    0017: [0] 57 ......................... loadThis 
    0018: [1] 7b b4 0b 22 ................ getObjName <_hasMany> <internal-ed363076473b51ca685af450cc662b39-0> 
    0022: [1] 39 ......................... dup 
    0023: [2] 14 04 ...................... branchTrue8 <addr: 29> 
    0025: [1] 90 ......................... pop 
    0026: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0028: [1] 89 ......................... new 
    0029: [1] 57 ......................... loadThis 
    0030: [2] b3 b4 0b 22 ................ putObjName <_hasMany> <internal-ed363076473b51ca685af450cc662b39-0> 
    0034: [0] 33 10 8e d1 01 ea cf 01 .... debug 

    # ejs.es:13383                          _hasMany.append(model)

    0042: [0] 57 ......................... loadThis 
    0043: [1] 7b b4 0b 22 ................ getObjName <_hasMany> <internal-ed363076473b51ca685af450cc662b39-0> 
    0047: [1] 5b ......................... getLocalSlot0 
    0048: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0054: [0] 54 ......................... loadNull 
    0055: [1] bf ......................... returnValue 
    0056: [0] 33 10 90 d1 01 9a 32 ....... debug 

    # ejs.es:13384                      }
    
VARIABLE:   [model-00]  private var model : Object
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Record-74]  public const static function hasOne(model: Object, options: Object) : Void

     ARG:   [arg-00]   private model : Object
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 a8 d1 01 ce d1 01 .... debug 

    # ejs.es:13396                          _hasOne ||= []

    0015: [0] 57 ......................... loadThis 
    0016: [1] 7b ee 09 22 ................ getObjName <_hasOne> <internal-ed363076473b51ca685af450cc662b39-0> 
    0020: [1] 39 ......................... dup 
    0021: [2] 14 04 ...................... branchTrue8 <addr: 27> 
    0023: [1] 90 ......................... pop 
    0024: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0026: [1] 89 ......................... new 
    0027: [1] 57 ......................... loadThis 
    0028: [2] b3 ee 09 22 ................ putObjName <_hasOne> <internal-ed363076473b51ca685af450cc662b39-0> 
    0032: [0] 33 10 aa d1 01 84 d2 01 .... debug 

    # ejs.es:13397                          _hasOne.append(model)

    0040: [0] 57 ......................... loadThis 
    0041: [1] 7b ee 09 22 ................ getObjName <_hasOne> <internal-ed363076473b51ca685af450cc662b39-0> 
    0045: [1] 5b ......................... getLocalSlot0 
    0046: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0052: [0] 54 ......................... loadNull 
    0053: [1] bf ......................... returnValue 
    0054: [0] 33 10 ac d1 01 9a 32 ....... debug 

    # ejs.es:13398                      }
    
VARIABLE:   [model-00]  private var model : Object
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Record-75]  [Record,private] const static function innerFind(key: Object, limit: Number, options: Object) : Array

     ARG:   [arg-00]   private key : Object
     ARG:   [arg-01]   private limit : Number
     ARG:   [arg-02]   private options : Object
   LOCAL:   [local-03] var cmd : String
   LOCAL:   [local-04] var columns : Array
   LOCAL:   [local-05] var from : String
   LOCAL:   [local-06] var conditions : String
   LOCAL:   [local-07] var where : Boolean
   LOCAL:   [local-08] var results : Array
   LOCAL:   [local-09] var index : Number
   LOCAL:   [local-10] var model
   LOCAL:   [local-11] var entry
   LOCAL:   [local-12] var owner
   LOCAL:   [local-13] var owner
   LOCAL:   [local-14] var tname : String
   LOCAL:   [local-15] var parts : Array
   LOCAL:   [local-16] var whereConditions : String
   LOCAL:   [local-17] var cond
   LOCAL:   [local-18] var field
   LOCAL:   [local-19] var e

    0000: [0] 41 03 03 06 0b ............. initDefaultArgs8 <3> <5> <8> <13> 
    0005: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0007: [1] 95 ......................... putLocalSlot1 
    0008: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0012: [1] 96 ......................... putLocalSlot2 
    0013: [0] 33 10 b8 d1 01 b0 d4 01 .... debug 

    # ejs.es:13404                          let cmd: String

    0021: [0] 33 10 ba d1 01 e8 d4 01 .... debug 

    # ejs.es:13405                          let columns: Array

    0029: [0] 33 10 bc d1 01 b6 d5 01 .... debug 

    # ejs.es:13406                          let from: String

    0037: [0] 33 10 be d1 01 fa d5 01 .... debug 

    # ejs.es:13407                          let conditions: String

    0045: [0] 33 10 c0 d1 01 c0 d6 01 .... debug 

    # ejs.es:13408                          let where: Boolean

    0053: [0] 33 10 c4 d1 01 8e a9 01 .... debug 

    # ejs.es:13410                          if (!_columns) _model.getSchema()

    0061: [0] 57 ......................... loadThis 
    0062: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0066: [1] 86 ......................... logicalNot 
    0067: [1] 13 0d ...................... branchFalse8 <addr: 82> 
    0069: [0] 57 ......................... loadThis 
    0070: [1] 7b 80 11 22 ................ getObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0074: [1] 1e ca 73 ba 2d 00 .......... callObjName <getSchema> <> <argc: 0> 
    0080: [0] 3e 00 ...................... goto8 <addr: 82> 
    0082: [0] 33 10 c6 d1 01 fe d6 01 .... debug 

    # ejs.es:13411                          if (options == null) {

    0090: [0] 5d ......................... getLocalSlot2 
    0091: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0093: [2] 25 ......................... compareEq 
    0094: [1] 13 0f ...................... branchFalse8 <addr: 111> 
    0096: [0] 33 10 c8 d1 01 c4 d7 01 .... debug 

    # ejs.es:13412                              options = {}

    0104: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0108: [1] 96 ......................... putLocalSlot2 
    0109: [0] 3e 00 ...................... goto8 <addr: 111> 
    0111: [0] 33 10 ce d1 01 fe d7 01 .... debug 

    # ejs.es:13415                          if (options.noassoc) {

    0119: [0] 5d ......................... getLocalSlot2 
    0120: [1] 7b c4 d8 01 ba 2d .......... getObjName <noassoc> <> 
    0126: [1] 13 12 ...................... branchFalse8 <addr: 146> 
    0128: [0] 33 10 d0 d1 01 d4 d8 01 .... debug 

    # ejs.es:13416                              options.depth = 0

    0136: [0] 44 ......................... load0 
    0137: [1] 5d ......................... getLocalSlot2 
    0138: [2] b3 a2 83 01 ba 2d .......... putObjName <depth> <> 
    0144: [0] 3e 00 ...................... goto8 <addr: 146> 
    0146: [0] 33 10 d6 d1 01 98 d9 01 .... debug 

    # ejs.es:13419                          if (options.columns) {

    0154: [0] 5d ......................... getLocalSlot2 
    0155: [1] 7b a6 d5 01 ba 2d .......... getObjName <columns> <> 
    0161: [1] 07 90 02 f7 f7 ............. branchFalse <addr: 302> 
    0166: [0] 33 10 d8 d1 01 de d9 01 .... debug 

    # ejs.es:13420                              columns = options.columns

    0174: [0] 5d ......................... getLocalSlot2 
    0175: [1] 7b a6 d5 01 ba 2d .......... getObjName <columns> <> 
    0181: [1] 98 ......................... putLocalSlot4 
    0182: [0] 33 10 e2 d1 01 b2 da 01 .... debug 

    # ejs.es:13425                              let index: Number = columns.indexOf("id")

    0190: [0] 5f ......................... getLocalSlot4 
    0191: [1] 56 84 2c ................... loadString <id> 
    0194: [2] 1e c8 db 01 e4 2c 02 ....... callObjName <indexOf> <public> <argc: 1> 
    0201: [0] 93 ......................... pushResult 
    0202: [1] 9d ......................... putLocalSlot9 
    0203: [0] 33 10 e4 d1 01 d8 db 01 .... debug 

    # ejs.es:13426                              if (index >= 0) {

    0211: [0] 64 ......................... getLocalSlot9 
    0212: [1] 44 ......................... load0 
    0213: [2] 28 ......................... compareGe 
    0214: [1] 13 1a ...................... branchFalse8 <addr: 242> 
    0216: [0] 33 10 e6 d1 01 9c dc 01 .... debug 

    # ejs.es:13427                                  columns[index] = _tableName + ".id"

    0224: [0] 57 ......................... loadThis 
    0225: [1] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0229: [1] 56 8c dd 01 ................ loadString <.id> 
    0233: [2] 00 ......................... add 
    0234: [1] 5f ......................... getLocalSlot4 
    0235: [2] 56 ba 2d ................... loadString <> 
    0238: [3] 64 ......................... getLocalSlot9 
    0239: [4] b2 ......................... putObjNameExpr 
    0240: [0] 3e 3a ...................... goto8 <addr: 300> 
    0242: [0] 33 10 e8 d1 01 94 dd 01 .... debug 

    # ejs.es:13428                              } else if (!columns.contains(_tableName + ".id")) {

    0250: [0] 5f ......................... getLocalSlot4 
    0251: [1] 57 ......................... loadThis 
    0252: [2] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0256: [2] 56 8c dd 01 ................ loadString <.id> 
    0260: [3] 00 ......................... add 
    0261: [2] 1e c2 71 e4 2c 02 .......... callObjName <contains> <public> <argc: 1> 
    0267: [0] 93 ......................... pushResult 
    0268: [1] 86 ......................... logicalNot 
    0269: [1] 13 1d ...................... branchFalse8 <addr: 300> 
    0271: [0] 33 10 ea d1 01 9c de 01 .... debug 

    # ejs.es:13429                                  columns.insert(0, _tableName + ".id")

    0279: [0] 5f ......................... getLocalSlot4 
    0280: [1] 44 ......................... load0 
    0281: [2] 57 ......................... loadThis 
    0282: [3] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0286: [3] 56 8c dd 01 ................ loadString <.id> 
    0290: [4] 00 ......................... add 
    0291: [3] 1e 90 df 01 e4 2c 04 ....... callObjName <insert> <public> <argc: 2> 
    0298: [0] 3e 00 ...................... goto8 <addr: 300> 
    0300: [0] 3e 1e ...................... goto8 <addr: 332> 
    0302: [0] 33 10 ee d1 01 d6 58 ....... debug 

    # ejs.es:13431                          } else {

    0309: [0] 33 10 f0 d1 01 9e df 01 .... debug 

    # ejs.es:13432                              columns = ["*"]

    0317: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0319: [1] 89 ......................... new 
    0320: [1] 39 ......................... dup 
    0321: [2] 56 de df 01 ................ loadString <*> 
    0325: [3] c5 ......................... swap 
    0326: [3] 56 ba 2d ................... loadString <> 
    0329: [4] 44 ......................... load0 
    0330: [5] b2 ......................... putObjNameExpr 
    0331: [1] 98 ......................... putLocalSlot4 
    0332: [0] 33 10 f2 d1 01 a4 91 01 .... debug 

    # ejs.es:13433                          }

    0340: [0] 33 10 f6 d1 01 e2 df 01 .... debug 

    # ejs.es:13435                          conditions = ""

    0348: [0] 56 ba 2d ................... loadString <> 
    0351: [1] 9a ......................... putLocalSlot6 
    0352: [0] 33 10 f8 d1 01 9a e0 01 .... debug 

    # ejs.es:13436                          from = ""

    0360: [0] 56 ba 2d ................... loadString <> 
    0363: [1] 99 ......................... putLocalSlot5 
    0364: [0] 33 10 fa d1 01 c6 e0 01 .... debug 

    # ejs.es:13437                          where = false

    0372: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0374: [1] 9b ......................... putLocalSlot7 
    0375: [0] 33 10 fe d1 01 fa e0 01 .... debug 

    # ejs.es:13439                          if (options.from) {

    0383: [0] 5d ......................... getLocalSlot2 
    0384: [1] 7b f0 d5 01 ba 2d .......... getObjName <from> <> 
    0390: [1] 13 12 ...................... branchFalse8 <addr: 410> 
    0392: [0] 33 10 80 d2 01 ba e1 01 .... debug 

    # ejs.es:13440                              from = options.from

    0400: [0] 5d ......................... getLocalSlot2 
    0401: [1] 7b f0 d5 01 ba 2d .......... getObjName <from> <> 
    0407: [1] 99 ......................... putLocalSlot5 
    0408: [0] 3e 15 ...................... goto8 <addr: 431> 
    0410: [0] 33 10 82 d2 01 d6 58 ....... debug 

    # ejs.es:13441                          } else {

    0417: [0] 33 10 84 d2 01 82 e2 01 .... debug 

    # ejs.es:13442                              from = _tableName

    0425: [0] 57 ......................... loadThis 
    0426: [1] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0430: [1] 99 ......................... putLocalSlot5 
    0431: [0] 33 10 8a d2 01 d6 84 01 .... debug 

    # ejs.es:13445                          if (options.include) {

    0439: [0] 5d ......................... getLocalSlot2 
    0440: [1] 7b 9c 85 01 ba 2d .......... getObjName <include> <> 
    0446: [1] 07 da 03 f7 f7 ............. branchFalse <addr: 688> 
    0451: [0] 33 10 8c d2 01 de e2 01 .... debug 

    # ejs.es:13446                              let model

    0459: [0] 33 10 8e d2 01 92 e3 01 .... debug 

    # ejs.es:13447                              if (options.include is Array) {

    0467: [0] 5d ......................... getLocalSlot2 
    0468: [1] 7b 9c 85 01 ba 2d .......... getObjName <include> <> 
    0474: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0476: [2] 43 ......................... isA 
    0477: [1] 07 bc 02 f7 f7 ............. branchFalse <addr: 640> 
    0482: [0] 33 10 90 d2 01 f2 e3 01 .... debug 

    # ejs.es:13448                                  for each (entry in options.include) {

    0490: [0] 5d ......................... getLocalSlot2 
    0491: [1] 7b 9c 85 01 ba 2d .......... getObjName <include> <> 
    0497: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0503: [0] 93 ......................... pushResult 
    0504: [1] 39 ......................... dup 
    0505: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0508: [1] 93 ......................... pushResult 
    0509: [2] b8 16 ...................... putLocalSlot <slot: 11> 
    0511: [1] 33 10 92 d2 01 8a e5 01 .... debug 

    # ejs.es:13449                                      if (entry is Array) {

    0519: [1] 7f 16 ...................... getLocalSlot <slot: 11> 
    0521: [2] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0523: [3] 43 ......................... isA 
    0524: [2] 13 40 ...................... branchFalse8 <addr: 590> 
    0526: [1] 33 10 94 d2 01 e6 e5 01 .... debug 

    # ejs.es:13450                                          model = entry[0]

    0534: [1] 7f 16 ...................... getLocalSlot <slot: 11> 
    0536: [2] 56 ba 2d ................... loadString <> 
    0539: [3] 44 ......................... load0 
    0540: [4] 7c ......................... getObjNameExpr 
    0541: [2] b8 14 ...................... putLocalSlot <slot: 10> 
    0543: [1] 33 10 96 d2 01 c0 e6 01 .... debug 

    # ejs.es:13451                                          from += " LEFT OUTER JOIN " + model._tableName

    0551: [1] 60 ......................... getLocalSlot5 
    0552: [2] 56 d6 e7 01 ................ loadString < LEFT OUTER JOIN > 
    0556: [3] 7f 14 ...................... getLocalSlot <slot: 10> 
    0558: [4] 7b da 12 00 ................ getObjName <_tableName> <> 
    0562: [4] 00 ......................... add 
    0563: [3] 00 ......................... add 
    0564: [2] 99 ......................... putLocalSlot5 
    0565: [1] 33 10 98 d2 01 fa e7 01 .... debug 

    # ejs.es:13452                                          from += " ON " + entry[1]

    0573: [1] 60 ......................... getLocalSlot5 
    0574: [2] 56 e6 e8 01 ................ loadString < ON > 
    0578: [3] 7f 16 ...................... getLocalSlot <slot: 11> 
    0580: [4] 56 ba 2d ................... loadString <> 
    0583: [5] 45 ......................... load1 
    0584: [6] 7c ......................... getObjNameExpr 
    0585: [4] 00 ......................... add 
    0586: [3] 00 ......................... add 
    0587: [2] 99 ......................... putLocalSlot5 
    0588: [1] 3e 2a ...................... goto8 <addr: 632> 
    0590: [1] 33 10 9a d2 01 f0 e8 01 .... debug 

    # ejs.es:13453                                      } else {

    0598: [1] 33 10 9c d2 01 b2 e9 01 .... debug 

    # ejs.es:13454                                          model = entry

    0606: [1] 7f 16 ...................... getLocalSlot <slot: 11> 
    0608: [2] b8 14 ...................... putLocalSlot <slot: 10> 
    0610: [1] 33 10 9e d2 01 c0 e6 01 .... debug 

    # ejs.es:13455                                          from += " LEFT OUTER JOIN " + model._tableName

    0618: [1] 60 ......................... getLocalSlot5 
    0619: [2] 56 d6 e7 01 ................ loadString < LEFT OUTER JOIN > 
    0623: [3] 7f 14 ...................... getLocalSlot <slot: 10> 
    0625: [4] 7b da 12 00 ................ getObjName <_tableName> <> 
    0629: [4] 00 ......................... add 
    0630: [3] 00 ......................... add 
    0631: [2] 99 ......................... putLocalSlot5 
    0632: [1] 3d 8b 02 f7 f7 ............. goto <addr: 504> 
    0637: [1] 90 ......................... pop 
    0638: [0] 3e 2e ...................... goto8 <addr: 686> 
    0640: [0] 33 10 a4 d2 01 aa 79 ....... debug 

    # ejs.es:13458                              } else {

    0647: [0] 33 10 a6 d2 01 86 ea 01 .... debug 

    # ejs.es:13459                                  model = options.include

    0655: [0] 5d ......................... getLocalSlot2 
    0656: [1] 7b 9c 85 01 ba 2d .......... getObjName <include> <> 
    0662: [1] b8 14 ...................... putLocalSlot <slot: 10> 
    0664: [0] 33 10 a8 d2 01 de ea 01 .... debug 

    # ejs.es:13460                                  from += " LEFT OUTER JOIN " + model._tableName

    0672: [0] 60 ......................... getLocalSlot5 
    0673: [1] 56 d6 e7 01 ................ loadString < LEFT OUTER JOIN > 
    0677: [2] 7f 14 ...................... getLocalSlot <slot: 10> 
    0679: [3] 7b da 12 00 ................ getObjName <_tableName> <> 
    0683: [3] 00 ......................... add 
    0684: [2] 00 ......................... add 
    0685: [1] 99 ......................... putLocalSlot5 
    0686: [0] 3e 00 ...................... goto8 <addr: 688> 
    0688: [0] 33 10 b2 d2 01 c2 86 01 .... debug 

    # ejs.es:13465                          if (options.depth != 0) {

    0696: [0] 5d ......................... getLocalSlot2 
    0697: [1] 7b a2 83 01 ba 2d .......... getObjName <depth> <> 
    0703: [1] 44 ......................... load0 
    0704: [2] 2c ......................... compareNe 
    0705: [1] 07 92 04 f7 f7 ............. branchFalse <addr: 975> 
    0710: [0] 33 10 b4 d2 01 8e 87 01 .... debug 

    # ejs.es:13466                              if (_belongsTo) {

    0718: [0] 57 ......................... loadThis 
    0719: [1] 7b b0 05 22 ................ getObjName <_belongsTo> <internal-ed363076473b51ca685af450cc662b39-0> 
    0723: [1] 07 ea 03 f7 f7 ............. branchFalse <addr: 973> 
    0728: [0] 33 10 b6 d2 01 e4 eb 01 .... debug 

    # ejs.es:13467                                  conditions = " ON "

    0736: [0] 56 e6 e8 01 ................ loadString < ON > 
    0740: [1] 9a ......................... putLocalSlot6 
    0741: [0] 33 10 b8 d2 01 b4 ec 01 .... debug 

    # ejs.es:13468                                  for each (let owner in _belongsTo) {

    0749: [0] 57 ......................... loadThis 
    0750: [1] 7b b0 05 22 ................ getObjName <_belongsTo> <internal-ed363076473b51ca685af450cc662b39-0> 
    0754: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0760: [0] 93 ......................... pushResult 
    0761: [1] 39 ......................... dup 
    0762: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0765: [1] 93 ......................... pushResult 
    0766: [2] b8 18 ...................... putLocalSlot <slot: 12> 
    0768: [1] 33 10 ba d2 01 be ed 01 .... debug 

    # ejs.es:13469                                      from += " INNER JOIN " + owner._tableName

    0776: [1] 60 ......................... getLocalSlot5 
    0777: [2] 56 c2 ee 01 ................ loadString < INNER JOIN > 
    0781: [3] 7f 18 ...................... getLocalSlot <slot: 12> 
    0783: [4] 7b da 12 00 ................ getObjName <_tableName> <> 
    0787: [4] 00 ......................... add 
    0788: [3] 00 ......................... add 
    0789: [2] 99 ......................... putLocalSlot5 
    0790: [1] 3e e1 ...................... goto8 <addr: 761> 
    0792: [1] 90 ......................... pop 
    0793: [0] 33 10 be d2 01 b4 ec 01 .... debug 

    # ejs.es:13471                                  for each (let owner in _belongsTo) {

    0801: [0] 57 ......................... loadThis 
    0802: [1] 7b b0 05 22 ................ getObjName <_belongsTo> <internal-ed363076473b51ca685af450cc662b39-0> 
    0806: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0812: [0] 93 ......................... pushResult 
    0813: [1] 39 ......................... dup 
    0814: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0817: [1] 93 ......................... pushResult 
    0818: [2] b8 1a ...................... putLocalSlot <slot: 13> 
    0820: [1] 33 10 c0 d2 01 80 ef 01 .... debug 

    # ejs.es:13472                                      let tname: String = Reflect(owner).name

    0828: [1] 7f 1a ...................... getLocalSlot <slot: 13> 
    0830: [2] 17 de 01 02 ................ callGlobalSlot <slot: 111> <argc: 1> 
    0834: [1] 93 ......................... pushResult 
    0835: [2] 7b da 2c e4 2c ............. getObjName <name> <public> 
    0840: [2] b8 1c ...................... putLocalSlot <slot: 14> 
    0842: [1] 33 10 c2 d2 01 80 f0 01 .... debug 

    # ejs.es:13473                                      tname = tname[0].toLower() + tname.slice(1) + "Id"

    0850: [1] 7f 1c ...................... getLocalSlot <slot: 14> 
    0852: [2] 56 ba 2d ................... loadString <> 
    0855: [3] 44 ......................... load0 
    0856: [4] 7c ......................... getObjNameExpr 
    0857: [2] 1e 8a 65 00 00 ............. callObjName <toLower> <> <argc: 0> 
    0862: [1] 93 ......................... pushResult 
    0863: [2] 7f 1c ...................... getLocalSlot <slot: 14> 
    0865: [3] 45 ......................... load1 
    0866: [4] 1e 96 f1 01 e4 2c 02 ....... callObjName <slice> <public> <argc: 1> 
    0873: [2] 93 ......................... pushResult 
    0874: [3] 00 ......................... add 
    0875: [2] 56 a2 f1 01 ................ loadString <Id> 
    0879: [3] 00 ......................... add 
    0880: [2] b8 1c ...................... putLocalSlot <slot: 14> 
    0882: [1] 33 10 c4 d2 01 a8 f1 01 .... debug 

    # ejs.es:13474                                      conditions += _tableName + "." + tname + " = " + owner._tableName + "." + owner._keyName + " AND "

    0890: [1] 61 ......................... getLocalSlot6 
    0891: [2] 57 ......................... loadThis 
    0892: [3] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0896: [3] 56 9e f3 01 ................ loadString <.> 
    0900: [4] 00 ......................... add 
    0901: [3] 7f 1c ...................... getLocalSlot <slot: 14> 
    0903: [4] 00 ......................... add 
    0904: [3] 56 b6 8e 01 ................ loadString < = > 
    0908: [4] 00 ......................... add 
    0909: [3] 7f 1a ...................... getLocalSlot <slot: 13> 
    0911: [4] 7b da 12 00 ................ getObjName <_tableName> <> 
    0915: [4] 00 ......................... add 
    0916: [3] 56 9e f3 01 ................ loadString <.> 
    0920: [4] 00 ......................... add 
    0921: [3] 7f 1a ...................... getLocalSlot <slot: 13> 
    0923: [4] 7b f2 0f 00 ................ getObjName <_keyName> <> 
    0927: [4] 00 ......................... add 
    0928: [3] 56 a2 f3 01 ................ loadString < AND > 
    0932: [4] 00 ......................... add 
    0933: [3] 00 ......................... add 
    0934: [2] 9a ......................... putLocalSlot6 
    0935: [1] 3d ff 01 f7 f7 ............. goto <addr: 813> 
    0940: [1] 90 ......................... pop 
    0941: [0] 33 10 c8 d2 01 ae f3 01 .... debug 

    # ejs.es:13476                                  if (conditions == " ON ") {

    0949: [0] 61 ......................... getLocalSlot6 
    0950: [1] 56 e6 e8 01 ................ loadString < ON > 
    0954: [2] 25 ......................... compareEq 
    0955: [1] 13 0e ...................... branchFalse8 <addr: 971> 
    0957: [0] 33 10 ca d2 01 8e f4 01 .... debug 

    # ejs.es:13477                                      conditions = ""

    0965: [0] 56 ba 2d ................... loadString <> 
    0968: [1] 9a ......................... putLocalSlot6 
    0969: [0] 3e 00 ...................... goto8 <addr: 971> 
    0971: [0] 3e 00 ...................... goto8 <addr: 973> 
    0973: [0] 3e 00 ...................... goto8 <addr: 975> 
    0975: [0] 33 10 d4 d2 01 de f4 01 .... debug 

    # ejs.es:13482                          if (options.joins) {

    0983: [0] 5d ......................... getLocalSlot2 
    0984: [1] 7b a0 f5 01 ba 2d .......... getObjName <joins> <> 
    0990: [1] 07 8c 02 f7 f7 ............. branchFalse <addr: 1129> 
    0995: [0] 33 10 d6 d2 01 ac f5 01 .... debug 

    # ejs.es:13483                              if (conditions == "") {

    1003: [0] 61 ......................... getLocalSlot6 
    1004: [1] 56 ba 2d ................... loadString <> 
    1007: [2] 25 ......................... compareEq 
    1008: [1] 13 0f ...................... branchFalse8 <addr: 1025> 
    1010: [0] 33 10 d8 d2 01 e4 eb 01 .... debug 

    # ejs.es:13484                                  conditions = " ON "

    1018: [0] 56 e6 e8 01 ................ loadString < ON > 
    1022: [1] 9a ......................... putLocalSlot6 
    1023: [0] 3e 00 ...................... goto8 <addr: 1025> 
    1025: [0] 33 10 da d2 01 94 61 ....... debug 

    # ejs.es:13485                              }

    1032: [0] 33 10 dc d2 01 a0 f6 01 .... debug 

    # ejs.es:13486                              let parts: Array = options.joins.split(/ ON | on /)

    1040: [0] 5d ......................... getLocalSlot2 
    1041: [1] 7b a0 f5 01 ba 2d .......... getObjName <joins> <> 
    1047: [1] 55 a8 f7 01 ................ loadRegexp </ ON | on /> 
    1051: [2] 1e c0 f7 01 00 02 .......... callObjName <split> <> <argc: 1> 
    1057: [0] 93 ......................... pushResult 
    1058: [1] b8 1e ...................... putLocalSlot <slot: 15> 
    1060: [0] 33 10 de d2 01 cc f7 01 .... debug 

    # ejs.es:13487                              from += " " + parts[0]

    1068: [0] 60 ......................... getLocalSlot5 
    1069: [1] 56 9a f8 01 ................ loadString < > 
    1073: [2] 7f 1e ...................... getLocalSlot <slot: 15> 
    1075: [3] 56 ba 2d ................... loadString <> 
    1078: [4] 44 ......................... load0 
    1079: [5] 7c ......................... getObjNameExpr 
    1080: [3] 00 ......................... add 
    1081: [2] 00 ......................... add 
    1082: [1] 99 ......................... putLocalSlot5 
    1083: [0] 33 10 e0 d2 01 9e f8 01 .... debug 

    # ejs.es:13488                              if (parts.length > 1) {

    1091: [0] 7f 1e ...................... getLocalSlot <slot: 15> 
    1093: [1] 7b e2 52 e4 2c ............. getObjName <length> <public> 
    1098: [1] 45 ......................... load1 
    1099: [2] 29 ......................... compareGt 
    1100: [1] 13 19 ...................... branchFalse8 <addr: 1127> 
    1102: [0] 33 10 e2 d2 01 ee f8 01 .... debug 

    # ejs.es:13489                                  conditions += parts[1] + " AND "

    1110: [0] 61 ......................... getLocalSlot6 
    1111: [1] 7f 1e ...................... getLocalSlot <slot: 15> 
    1113: [2] 56 ba 2d ................... loadString <> 
    1116: [3] 45 ......................... load1 
    1117: [4] 7c ......................... getObjNameExpr 
    1118: [2] 56 a2 f3 01 ................ loadString < AND > 
    1122: [3] 00 ......................... add 
    1123: [2] 00 ......................... add 
    1124: [1] 9a ......................... putLocalSlot6 
    1125: [0] 3e 00 ...................... goto8 <addr: 1127> 
    1127: [0] 3e 00 ...................... goto8 <addr: 1129> 
    1129: [0] 33 10 e6 d2 01 a4 91 01 .... debug 

    # ejs.es:13491                          }

    1137: [0] 33 10 e8 d2 01 d8 f9 01 .... debug 

    # ejs.es:13492                          conditions = conditions.trim(" AND ")

    1145: [0] 61 ......................... getLocalSlot6 
    1146: [1] 56 a2 f3 01 ................ loadString < AND > 
    1150: [2] 1e f0 52 e4 2c 02 .......... callObjName <trim> <public> <argc: 1> 
    1156: [0] 93 ......................... pushResult 
    1157: [1] 9a ......................... putLocalSlot6 
    1158: [0] 33 10 ec d2 01 bc fa 01 .... debug 

    # ejs.es:13494                          if (options.conditions) {

    1166: [0] 5d ......................... getLocalSlot2 
    1167: [1] 7b a0 8e 01 ba 2d .......... getObjName <conditions> <> 
    1173: [1] 07 8c 06 f7 f7 ............. branchFalse <addr: 1568> 
    1178: [0] 33 10 ee d2 01 c0 fb 01 .... debug 

    # ejs.es:13495                              let whereConditions: String = " WHERE "

    1186: [0] 56 a8 b8 01 ................ loadString < WHERE > 
    1190: [1] b8 20 ...................... putLocalSlot <slot: 16> 
    1192: [0] 33 10 f0 d2 01 b0 fc 01 .... debug 

    # ejs.es:13496                              if (options.conditions is Array) {

    1200: [0] 5d ......................... getLocalSlot2 
    1201: [1] 7b a0 8e 01 ba 2d .......... getObjName <conditions> <> 
    1207: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    1209: [2] 43 ......................... isA 
    1210: [1] 13 5c ...................... branchFalse8 <addr: 1304> 
    1212: [0] 33 10 f2 d2 01 96 fd 01 .... debug 

    # ejs.es:13497                                  for each (cond in options.conditions) {

    1220: [0] 5d ......................... getLocalSlot2 
    1221: [1] 7b a0 8e 01 ba 2d .......... getObjName <conditions> <> 
    1227: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    1233: [0] 93 ......................... pushResult 
    1234: [1] 39 ......................... dup 
    1235: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    1238: [1] 93 ......................... pushResult 
    1239: [2] b8 22 ...................... putLocalSlot <slot: 17> 
    1241: [1] 33 10 f4 d2 01 b0 fe 01 .... debug 

    # ejs.es:13498                                      whereConditions += cond + " " + " AND "

    1249: [1] 7f 20 ...................... getLocalSlot <slot: 16> 
    1251: [2] 7f 22 ...................... getLocalSlot <slot: 17> 
    1253: [3] 56 9a f8 01 ................ loadString < > 
    1257: [4] 00 ......................... add 
    1258: [3] 56 a2 f3 01 ................ loadString < AND > 
    1262: [4] 00 ......................... add 
    1263: [3] 00 ......................... add 
    1264: [2] b8 20 ...................... putLocalSlot <slot: 16> 
    1266: [1] 3e de ...................... goto8 <addr: 1234> 
    1268: [1] 90 ......................... pop 
    1269: [0] 33 10 f6 d2 01 9a 68 ....... debug 

    # ejs.es:13499                                  }

    1276: [0] 33 10 f8 d2 01 b0 ff 01 .... debug 

    # ejs.es:13500                                  whereConditions = whereConditions.trim(" AND ")

    1284: [0] 7f 20 ...................... getLocalSlot <slot: 16> 
    1286: [1] 56 a2 f3 01 ................ loadString < AND > 
    1290: [2] 1e f0 52 e4 2c 02 .......... callObjName <trim> <public> <argc: 1> 
    1296: [0] 93 ......................... pushResult 
    1297: [1] b8 20 ...................... putLocalSlot <slot: 16> 
    1299: [0] 3d a6 02 f7 f7 ............. goto <addr: 1451> 
    1304: [0] 33 10 fc d2 01 b8 80 02 .... debug 

    # ejs.es:13502                              } else if (options.conditions is String) {

    1312: [0] 5d ......................... getLocalSlot2 
    1313: [1] 7b a0 8e 01 ba 2d .......... getObjName <conditions> <> 
    1319: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    1322: [2] 43 ......................... isA 
    1323: [1] 13 1b ...................... branchFalse8 <addr: 1352> 
    1325: [0] 33 10 fe d2 01 ae 81 02 .... debug 

    # ejs.es:13503                                  whereConditions += options.conditions + " " 

    1333: [0] 7f 20 ...................... getLocalSlot <slot: 16> 
    1335: [1] 5d ......................... getLocalSlot2 
    1336: [2] 7b a0 8e 01 ba 2d .......... getObjName <conditions> <> 
    1342: [2] 56 9a f8 01 ................ loadString < > 
    1346: [3] 00 ......................... add 
    1347: [2] 00 ......................... add 
    1348: [1] b8 20 ...................... putLocalSlot <slot: 16> 
    1350: [0] 3e 63 ...................... goto8 <addr: 1451> 
    1352: [0] 33 10 82 d3 01 b0 82 02 .... debug 

    # ejs.es:13505                              } else if (options.conditions is Object) {

    1360: [0] 5d ......................... getLocalSlot2 
    1361: [1] 7b a0 8e 01 ba 2d .......... getObjName <conditions> <> 
    1367: [1] 7e d8 01 ................... getGlobalSlot <slot: 108> 
    1370: [2] 43 ......................... isA 
    1371: [1] 13 4e ...................... branchFalse8 <addr: 1451> 
    1373: [0] 33 10 84 d3 01 a6 83 02 .... debug 

    # ejs.es:13506                                  for (field in options.conditions) {

    1381: [0] 5d ......................... getLocalSlot2 
    1382: [1] 7b a0 8e 01 ba 2d .......... getObjName <conditions> <> 
    1388: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    1394: [0] 93 ......................... pushResult 
    1395: [1] 39 ......................... dup 
    1396: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    1399: [1] 93 ......................... pushResult 
    1400: [2] b8 24 ...................... putLocalSlot <slot: 18> 
    1402: [1] 33 10 88 d3 01 ae 84 02 .... debug 

    # ejs.es:13508                                      whereConditions += field + " = '" + options.conditions[field] + "' " + " AND "

    1410: [1] 7f 20 ...................... getLocalSlot <slot: 16> 
    1412: [2] 7f 24 ...................... getLocalSlot <slot: 18> 
    1414: [3] 56 fc 85 02 ................ loadString < = '> 
    1418: [4] 00 ......................... add 
    1419: [3] 5d ......................... getLocalSlot2 
    1420: [4] 7b a0 8e 01 ba 2d .......... getObjName <conditions> <> 
    1426: [4] 56 ba 2d ................... loadString <> 
    1429: [5] 7f 24 ...................... getLocalSlot <slot: 18> 
    1431: [6] 7c ......................... getObjNameExpr 
    1432: [4] 00 ......................... add 
    1433: [3] 56 86 86 02 ................ loadString <' > 
    1437: [4] 00 ......................... add 
    1438: [3] 56 a2 f3 01 ................ loadString < AND > 
    1442: [4] 00 ......................... add 
    1443: [3] 00 ......................... add 
    1444: [2] b8 20 ...................... putLocalSlot <slot: 16> 
    1446: [1] 3e cb ...................... goto8 <addr: 1395> 
    1448: [1] 90 ......................... pop 
    1449: [0] 3e 00 ...................... goto8 <addr: 1451> 
    1451: [0] 33 10 8c d3 01 94 61 ....... debug 

    # ejs.es:13510                              }

    1458: [0] 33 10 8e d3 01 8c 86 02 .... debug 

    # ejs.es:13511                              whereConditions = whereConditions.trim(" AND ")

    1466: [0] 7f 20 ...................... getLocalSlot <slot: 16> 
    1468: [1] 56 a2 f3 01 ................ loadString < AND > 
    1472: [2] 1e f0 52 e4 2c 02 .......... callObjName <trim> <public> <argc: 1> 
    1478: [0] 93 ......................... pushResult 
    1479: [1] b8 20 ...................... putLocalSlot <slot: 16> 
    1481: [0] 33 10 90 d3 01 8c 87 02 .... debug 

    # ejs.es:13512                              if (whereConditions != " WHERE ") {

    1489: [0] 7f 20 ...................... getLocalSlot <slot: 16> 
    1491: [1] 56 a8 b8 01 ................ loadString < WHERE > 
    1495: [2] 2c ......................... compareNe 
    1496: [1] 13 1b ...................... branchFalse8 <addr: 1525> 
    1498: [0] 33 10 92 d3 01 f4 87 02 .... debug 

    # ejs.es:13513                                  where = true

    1506: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    1509: [1] 9b ......................... putLocalSlot7 
    1510: [0] 33 10 94 d3 01 b6 88 02 .... debug 

    # ejs.es:13514                                  conditions += whereConditions

    1518: [0] 61 ......................... getLocalSlot6 
    1519: [1] 7f 20 ...................... getLocalSlot <slot: 16> 
    1521: [2] 00 ......................... add 
    1522: [1] 9a ......................... putLocalSlot6 
    1523: [0] 3e 29 ...................... goto8 <addr: 1566> 
    1525: [0] 33 10 96 d3 01 aa 79 ....... debug 

    # ejs.es:13515                              } else {

    1532: [0] 33 10 98 d3 01 9a 89 02 .... debug 

    # ejs.es:13516                                  whereConditions = ""

    1540: [0] 56 ba 2d ................... loadString <> 
    1543: [1] b8 20 ...................... putLocalSlot <slot: 16> 
    1545: [0] 33 10 9a d3 01 ec 89 02 .... debug 

    # ejs.es:13517                                  from = from.trim(" AND ")

    1553: [0] 60 ......................... getLocalSlot5 
    1554: [1] 56 a2 f3 01 ................ loadString < AND > 
    1558: [2] 1e f0 52 e4 2c 02 .......... callObjName <trim> <public> <argc: 1> 
    1564: [0] 93 ......................... pushResult 
    1565: [1] 99 ......................... putLocalSlot5 
    1566: [0] 3e 1c ...................... goto8 <addr: 1596> 
    1568: [0] 33 10 a0 d3 01 d6 58 ....... debug 

    # ejs.es:13520                          } else {

    1575: [0] 33 10 a2 d3 01 c8 8a 02 .... debug 

    # ejs.es:13521                              from = from.trim(" AND ")

    1583: [0] 60 ......................... getLocalSlot5 
    1584: [1] 56 a2 f3 01 ................ loadString < AND > 
    1588: [2] 1e f0 52 e4 2c 02 .......... callObjName <trim> <public> <argc: 1> 
    1594: [0] 93 ......................... pushResult 
    1595: [1] 99 ......................... putLocalSlot5 
    1596: [0] 33 10 a8 d3 01 9c 8b 02 .... debug 

    # ejs.es:13524                          if (key || options.key) {

    1604: [0] 5b ......................... getLocalSlot0 
    1605: [1] 39 ......................... dup 
    1606: [2] 14 07 ...................... branchTrue8 <addr: 1615> 
    1608: [1] 90 ......................... pop 
    1609: [0] 5d ......................... getLocalSlot2 
    1610: [1] 7b 92 44 ba 2d ............. getObjName <key> <> 
    1615: [1] 13 75 ...................... branchFalse8 <addr: 1734> 
    1617: [0] 33 10 aa d3 01 e8 8b 02 .... debug 

    # ejs.es:13525                              if (!where) {

    1625: [0] 62 ......................... getLocalSlot7 
    1626: [1] 86 ......................... logicalNot 
    1627: [1] 13 1d ...................... branchFalse8 <addr: 1658> 
    1629: [0] 33 10 ac d3 01 a4 8c 02 .... debug 

    # ejs.es:13526                                  conditions += " WHERE "

    1637: [0] 61 ......................... getLocalSlot6 
    1638: [1] 56 a8 b8 01 ................ loadString < WHERE > 
    1642: [2] 00 ......................... add 
    1643: [1] 9a ......................... putLocalSlot6 
    1644: [0] 33 10 ae d3 01 f4 87 02 .... debug 

    # ejs.es:13527                                  where = true

    1652: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    1655: [1] 9b ......................... putLocalSlot7 
    1656: [0] 3e 16 ...................... goto8 <addr: 1680> 
    1658: [0] 33 10 b0 d3 01 aa 79 ....... debug 

    # ejs.es:13528                              } else {

    1665: [0] 33 10 b2 d3 01 fc 8c 02 .... debug 

    # ejs.es:13529                                  conditions += " AND "

    1673: [0] 61 ......................... getLocalSlot6 
    1674: [1] 56 a2 f3 01 ................ loadString < AND > 
    1678: [2] 00 ......................... add 
    1679: [1] 9a ......................... putLocalSlot6 
    1680: [0] 33 10 b4 d3 01 94 61 ....... debug 

    # ejs.es:13530                              }

    1687: [0] 33 10 b6 d3 01 d0 8d 02 .... debug 

    # ejs.es:13531                              conditions += (_tableName + "." + _keyName + " = ") + ((key) ? key : options.key)

    1695: [0] 61 ......................... getLocalSlot6 
    1696: [1] 57 ......................... loadThis 
    1697: [2] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    1701: [2] 56 9e f3 01 ................ loadString <.> 
    1705: [3] 00 ......................... add 
    1706: [2] 57 ......................... loadThis 
    1707: [3] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    1711: [3] 00 ......................... add 
    1712: [2] 56 b6 8e 01 ................ loadString < = > 
    1716: [3] 00 ......................... add 
    1717: [2] 5b ......................... getLocalSlot0 
    1718: [3] 13 03 ...................... branchFalse8 <addr: 1723> 
    1720: [2] 5b ......................... getLocalSlot0 
    1721: [3] 3e 06 ...................... goto8 <addr: 1729> 
    1723: [3] 5d ......................... getLocalSlot2 
    1724: [4] 7b 92 44 ba 2d ............. getObjName <key> <> 
    1729: [4] 00 ......................... add 
    1730: [3] 00 ......................... add 
    1731: [2] 9a ......................... putLocalSlot6 
    1732: [1] 3e 00 ...................... goto8 <addr: 1734> 
    1734: [1] 33 10 b8 d3 01 a4 91 01 .... debug 

    # ejs.es:13532                          }

    1742: [1] 33 10 be d3 01 94 8f 02 .... debug 

    # ejs.es:13535                          cmd = "SELECT " + Database.quote(columns) + " FROM " + from + conditions

    1750: [1] 56 be 90 02 ................ loadString <SELECT > 
    1754: [2] 7e ba 02 ................... getGlobalSlot <slot: 157> 
    1757: [3] 5f ......................... getLocalSlot4 
    1758: [4] 1e ce 90 02 e4 2c 02 ....... callObjName <quote> <public> <argc: 1> 
    1765: [2] 93 ......................... pushResult 
    1766: [3] 00 ......................... add 
    1767: [2] 56 da 90 02 ................ loadString < FROM > 
    1771: [3] 00 ......................... add 
    1772: [2] 60 ......................... getLocalSlot5 
    1773: [3] 00 ......................... add 
    1774: [2] 61 ......................... getLocalSlot6 
    1775: [3] 00 ......................... add 
    1776: [2] 97 ......................... putLocalSlot3 
    1777: [1] 33 10 c0 d3 01 e8 90 02 .... debug 

    # ejs.es:13536                          if (options.group) {

    1785: [1] 5d ......................... getLocalSlot2 
    1786: [2] 7b aa 91 02 ba 2d .......... getObjName <group> <> 
    1792: [2] 13 19 ...................... branchFalse8 <addr: 1819> 
    1794: [1] 33 10 c2 d3 01 b6 91 02 .... debug 

    # ejs.es:13537                              cmd += " GROUP BY " + options.group

    1802: [1] 5e ......................... getLocalSlot3 
    1803: [2] 56 9e 92 02 ................ loadString < GROUP BY > 
    1807: [3] 5d ......................... getLocalSlot2 
    1808: [4] 7b aa 91 02 ba 2d .......... getObjName <group> <> 
    1814: [4] 00 ......................... add 
    1815: [3] 00 ......................... add 
    1816: [2] 97 ......................... putLocalSlot3 
    1817: [1] 3e 00 ...................... goto8 <addr: 1819> 
    1819: [1] 33 10 c6 d3 01 b4 92 02 .... debug 

    # ejs.es:13539                          if (options.order) {

    1827: [1] 5d ......................... getLocalSlot2 
    1828: [2] 7b f6 92 02 ba 2d .......... getObjName <order> <> 
    1834: [2] 13 19 ...................... branchFalse8 <addr: 1861> 
    1836: [1] 33 10 c8 d3 01 82 93 02 .... debug 

    # ejs.es:13540                              cmd += " ORDER BY " + options.order

    1844: [1] 5e ......................... getLocalSlot3 
    1845: [2] 56 ea 93 02 ................ loadString < ORDER BY > 
    1849: [3] 5d ......................... getLocalSlot2 
    1850: [4] 7b f6 92 02 ba 2d .......... getObjName <order> <> 
    1856: [4] 00 ......................... add 
    1857: [3] 00 ......................... add 
    1858: [2] 97 ......................... putLocalSlot3 
    1859: [1] 3e 00 ...................... goto8 <addr: 1861> 
    1861: [1] 33 10 cc d3 01 80 94 02 .... debug 

    # ejs.es:13542                          if (limit) {

    1869: [1] 5c ......................... getLocalSlot1 
    1870: [2] 13 13 ...................... branchFalse8 <addr: 1891> 
    1872: [1] 33 10 ce d3 01 b2 94 02 .... debug 

    # ejs.es:13543                              cmd += " LIMIT " + limit

    1880: [1] 5e ......................... getLocalSlot3 
    1881: [2] 56 84 95 02 ................ loadString < LIMIT > 
    1885: [3] 5c ......................... getLocalSlot1 
    1886: [4] 00 ......................... add 
    1887: [3] 00 ......................... add 
    1888: [2] 97 ......................... putLocalSlot3 
    1889: [1] 3e 2a ...................... goto8 <addr: 1933> 
    1891: [1] 33 10 d0 d3 01 94 95 02 .... debug 

    # ejs.es:13544                          } else if (options.limit) {

    1899: [1] 5d ......................... getLocalSlot2 
    1900: [2] 7b e4 95 02 ba 2d .......... getObjName <limit> <> 
    1906: [2] 13 19 ...................... branchFalse8 <addr: 1933> 
    1908: [1] 33 10 d2 d3 01 f0 95 02 .... debug 

    # ejs.es:13545                              cmd += " LIMIT " + options.limit

    1916: [1] 5e ......................... getLocalSlot3 
    1917: [2] 56 84 95 02 ................ loadString < LIMIT > 
    1921: [3] 5d ......................... getLocalSlot2 
    1922: [4] 7b e4 95 02 ba 2d .......... getObjName <limit> <> 
    1928: [4] 00 ......................... add 
    1929: [3] 00 ......................... add 
    1930: [2] 97 ......................... putLocalSlot3 
    1931: [1] 3e 00 ...................... goto8 <addr: 1933> 
    1933: [1] 33 10 d6 d3 01 d2 96 02 .... debug 

    # ejs.es:13547                          if (options.offset) {

    1941: [1] 5d ......................... getLocalSlot2 
    1942: [2] 7b 96 97 02 ba 2d .......... getObjName <offset> <> 
    1948: [2] 13 19 ...................... branchFalse8 <addr: 1975> 
    1950: [1] 33 10 d8 d3 01 a4 97 02 .... debug 

    # ejs.es:13548                              cmd += " OFFSET " + options.offset

    1958: [1] 5e ......................... getLocalSlot3 
    1959: [2] 56 8a 98 02 ................ loadString < OFFSET > 
    1963: [3] 5d ......................... getLocalSlot2 
    1964: [4] 7b 96 97 02 ba 2d .......... getObjName <offset> <> 
    1970: [4] 00 ......................... add 
    1971: [3] 00 ......................... add 
    1972: [2] 97 ......................... putLocalSlot3 
    1973: [1] 3e 00 ...................... goto8 <addr: 1975> 
    1975: [1] 33 10 da d3 01 a4 91 01 .... debug 

    # ejs.es:13549                          }

    1983: [1] 33 10 dc d3 01 9c 98 02 .... debug 

    # ejs.es:13550                          cmd += ";"

    1991: [1] 5e ......................... getLocalSlot3 
    1992: [2] 56 ca 98 02 ................ loadString <;> 
    1996: [3] 00 ......................... add 
    1997: [2] 97 ......................... putLocalSlot3 
    1998: [1] 33 10 e0 d3 01 ce 98 02 .... debug 

    # ejs.es:13552                          if (_db == null) {

    2006: [1] 57 ......................... loadThis 
    2007: [2] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    2011: [2] 7e 7a ...................... getGlobalSlot <slot: 61> 
    2013: [3] 25 ......................... compareEq 
    2014: [2] 13 14 ...................... branchFalse8 <addr: 2036> 
    2016: [1] 33 10 e2 d3 01 8c 99 02 .... debug 

    # ejs.es:13553                              throw new Error("Database connection has not yet been established")

    2024: [1] 7e 2c ...................... getGlobalSlot <slot: 22> 
    2026: [2] 89 ......................... new 
    2027: [2] 56 b4 9a 02 ................ loadString <Database connection has not yet been established> 
    2031: [3] 20 02 ...................... callConstructor <argc: 1> 
    2033: [2] c6 ......................... throw 
    2034: [2] 3e 00 ...................... goto8 <addr: 2036> 
    2036: [2] 33 10 e4 d3 01 a4 91 01 .... debug 

    # ejs.es:13554                          }

    2044: [2] 33 10 e8 d3 01 96 9b 02 .... debug 

    # ejs.es:13556                          let results: Array

    2052: [2] 33 10 ea d3 01 d4 9b 02 .... debug 

    # ejs.es:13557                          try {

    2060: [2] 33 10 ee d3 01 f8 9b 02 .... debug 

    # ejs.es:13559                              if (_trace || 1) {

    2068: [2] 57 ......................... loadThis 
    2069: [3] 7b 90 14 22 ................ getObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    2073: [3] 39 ......................... dup 
    2074: [4] 14 02 ...................... branchTrue8 <addr: 2078> 
    2076: [3] 90 ......................... pop 
    2077: [2] 45 ......................... load1 
    2078: [3] 13 22 ...................... branchFalse8 <addr: 2114> 
    2080: [2] 33 10 f2 d3 01 be 9c 02 .... debug 

    # ejs.es:13561                                  results = _db.query(cmd, "find", _trace)

    2088: [2] 57 ......................... loadThis 
    2089: [3] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    2093: [3] 5e ......................... getLocalSlot3 
    2094: [4] 56 a4 9b 01 ................ loadString <find> 
    2098: [5] 57 ......................... loadThis 
    2099: [6] 7b 90 14 22 ................ getObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    2103: [6] 1e d8 b9 01 e4 2c 06 ....... callObjName <query> <public> <argc: 3> 
    2110: [2] 93 ......................... pushResult 
    2111: [3] 9c ......................... putLocalSlot8 
    2112: [2] 3e 27 ...................... goto8 <addr: 2153> 
    2114: [2] 33 10 f6 d3 01 aa 79 ....... debug 

    # ejs.es:13563                              } else {

    2121: [2] 33 10 f8 d3 01 be 9c 02 .... debug 

    # ejs.es:13564                                  results = _db.query(cmd, "find", _trace)

    2129: [2] 57 ......................... loadThis 
    2130: [3] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    2134: [3] 5e ......................... getLocalSlot3 
    2135: [4] 56 a4 9b 01 ................ loadString <find> 
    2139: [5] 57 ......................... loadThis 
    2140: [6] 7b 90 14 22 ................ getObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    2144: [6] 1e d8 b9 01 e4 2c 06 ....... callObjName <query> <public> <argc: 3> 
    2151: [2] 93 ......................... pushResult 
    2152: [3] 9c ......................... putLocalSlot8 
    2153: [2] 3e 19 ...................... goto8 <addr: 2180> 
    2155: [2] 33 10 fe d3 01 b8 9d 02 .... debug 

    # ejs.es:13567                          catch (e) {

    2163: [2] 92 ......................... pushCatchArg 
    2164: [3] b6 26 02 ................... putBlockSlot <slot: 19> <1> 
    2167: [2] 33 10 80 d4 01 84 9e 02 .... debug 

    # ejs.es:13568                              throw e

    2175: [2] 7d 26 02 ................... getBlockSlot <slot: 19> <1> 
    2178: [3] c6 ......................... throw 
    2179: [3] 3c ......................... endException 
    2180: [3] 33 10 84 d4 01 b4 9e 02 .... debug 

    # ejs.es:13570                          return results

    2188: [3] 63 ......................... getLocalSlot8 
    2189: [4] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    505     508        637          637       StopIteration
1   iteration    762     765        792          792       StopIteration
2   iteration    814     817        940          940       StopIteration
3   iteration   1235    1238       1268         1268       StopIteration
4   iteration   1396    1399       1448         1448       StopIteration
5   catch       2052    2155       2155         2180       Void

VARIABLE:   [key-00]  private var key : Object
VARIABLE:   [limit-01]  private var limit : Number
VARIABLE:   [options-02]  private var options : Object
VARIABLE:   [cmd-03]  private var cmd : String
VARIABLE:   [columns-04]  private var columns : Array
VARIABLE:   [from-05]  private var from : String
VARIABLE:   [conditions-06]  private var conditions : String
VARIABLE:   [where-07]  private var where : Boolean
VARIABLE:   [results-08]  private var results : Array
VARIABLE:   [index-09]  -hoisted-9 var index : Number
VARIABLE:   [model-10]  -hoisted-10 var model
VARIABLE:   [entry-11]  -hoisted-11 var entry
VARIABLE:   [owner-12]  -hoisted-12 var owner
VARIABLE:   [owner-13]  -hoisted-13 var owner
VARIABLE:   [tname-14]  -hoisted-13 var tname : String
VARIABLE:   [parts-15]  -hoisted-15 var parts : Array
VARIABLE:   [whereConditions-16]  -hoisted-16 var whereConditions : String
VARIABLE:   [cond-17]  -hoisted-17 var cond
VARIABLE:   [field-18]  -hoisted-18 var field
VARIABLE:   [e-19]  -hoisted-19 var e

FUNCTION:   [Record-76]  [Record,private] const static function makeLazyReader(rec: Record, field: String, model, key: String, options: Object) : Function

     ARG:   [arg-00]   private rec : Record
     ARG:   [arg-01]   private field : String
     ARG:   [arg-02]   private model
     ARG:   [arg-03]   private key : String
     ARG:   [arg-04]   private options : Object
   LOCAL:   [local-05] var --fun_20235--89941480-- : Function
   LOCAL:   [local-06] var lazyReader : Function

    0000: [0] 41 02 02 0f ................ initDefaultArgs8 <2> <4> <17> 
    0004: [0] 33 10 92 d4 01 aa a0 02 .... debug 

    # ejs.es:13577                              options: Object = {}): Function {

    0012: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0016: [1] 98 ......................... putLocalSlot4 
    0017: [0] 33 10 96 d4 01 8e a1 02 .... debug 

    # ejs.es:13579                          var lazyReader: Function = function(): Object {

    0025: [0] 35 0a 00 ................... defineFunction <slot: 5> <0> 
    0028: [0] 33 10 92 d4 01 aa a0 02 .... debug 

    # ejs.es:13577                              options: Object = {}): Function {

    0036: [0] 33 10 9c d4 01 a4 91 01 .... debug 

    # ejs.es:13582                          }

    0044: [0] 60 ......................... getLocalSlot5 
    0045: [1] 33 10 96 d4 01 8e a1 02 .... debug 

    # ejs.es:13579                          var lazyReader: Function = function(): Object {

    0053: [1] 9a ......................... putLocalSlot6 
    0054: [0] 33 10 9e d4 01 d2 a3 02 .... debug 

    # ejs.es:13583                          return makeGetter(lazyReader)

    0062: [0] 61 ......................... getLocalSlot6 
    0063: [1] 17 50 02 ................... callGlobalSlot <slot: 40> <argc: 1> 
    0066: [0] 93 ......................... pushResult 
    0067: [1] bf ......................... returnValue 
    
VARIABLE:   [rec-00]  private var rec : Record
VARIABLE:   [field-01]  private var field : String
VARIABLE:   [model-02]  private var model
VARIABLE:   [key-03]  private var key : String
VARIABLE:   [options-04]  private var options : Object

FUNCTION:   [--fun_20235--89941480---05]  private function --fun_20235--89941480--() : Object


    0000: [0] 33 10 9a d4 01 86 a2 02 .... debug 

    # ejs.es:13581                              return cachedRead(rec, field, model, key, options)

    0008: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0011: [1] 7d 02 02 ................... getBlockSlot <slot: 1> <1> 
    0014: [2] 7d 04 02 ................... getBlockSlot <slot: 2> <1> 
    0017: [3] 7d 06 02 ................... getBlockSlot <slot: 3> <1> 
    0020: [4] 7d 08 02 ................... getBlockSlot <slot: 4> <1> 
    0023: [5] 1f c6 43 dc 43 0a .......... callScopedName <cachedRead> <[Record,private]> <argc: 5> 
    0029: [0] 93 ......................... pushResult 
    0030: [1] bf ......................... returnValue 
    
VARIABLE:   [lazyReader-06]  private var lazyReader : Function

FUNCTION:   [Record-77]  [Record,private] const static function mapSqlTypeToEjs(sqlType: String) : Type

     ARG:   [arg-00]   private sqlType : String
   LOCAL:   [local-01] var ejsType : Type

    0000: [0] 33 10 a6 d4 01 ca a5 02 .... debug 

    # ejs.es:13587                          sqlType = sqlType.replace(/\(.*/, "")

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 55 ae a6 02 ................ loadRegexp </\(.*/> 
    0013: [2] 56 ba 2d ................... loadString <> 
    0016: [3] 1e bc a6 02 e4 2c 04 ....... callObjName <replace> <public> <argc: 2> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] 94 ......................... putLocalSlot0 
    0025: [0] 33 10 a8 d4 01 cc a6 02 .... debug 

    # ejs.es:13588                          let ejsType: Type = _db.sqlTypeToEjsType(sqlType)

    0033: [0] 57 ......................... loadThis 
    0034: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0038: [1] 5b ......................... getLocalSlot0 
    0039: [2] 1e c8 a7 02 e4 2c 02 ....... callObjName <sqlTypeToEjsType> <public> <argc: 1> 
    0046: [0] 93 ......................... pushResult 
    0047: [1] 95 ......................... putLocalSlot1 
    0048: [0] 33 10 aa d4 01 ea a7 02 .... debug 

    # ejs.es:13589                          if (ejsType == undefined) {

    0056: [0] 5c ......................... getLocalSlot1 
    0057: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0060: [2] 25 ......................... compareEq 
    0061: [1] 13 1a ...................... branchFalse8 <addr: 89> 
    0063: [0] 33 10 ac d4 01 ba a8 02 .... debug 

    # ejs.es:13590                              throw new Error("Unsupported SQL type: \"" + sqlType + "\"")

    0071: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0073: [1] 89 ......................... new 
    0074: [1] 56 d4 a9 02 ................ loadString <Unsupported SQL type: "> 
    0078: [2] 5b ......................... getLocalSlot0 
    0079: [3] 00 ......................... add 
    0080: [2] 56 fe 59 ................... loadString <"> 
    0083: [3] 00 ......................... add 
    0084: [2] 20 02 ...................... callConstructor <argc: 1> 
    0086: [1] c6 ......................... throw 
    0087: [1] 3e 00 ...................... goto8 <addr: 89> 
    0089: [1] 33 10 b0 d4 01 84 aa 02 .... debug 

    # ejs.es:13592                          return ejsType

    0097: [1] 5c ......................... getLocalSlot1 
    0098: [2] bf ......................... returnValue 
    
VARIABLE:   [sqlType-00]  private var sqlType : String
VARIABLE:   [ejsType-01]  private var ejsType : Type

FUNCTION:   [Record-78]  [Record,private] const static function prepareValue(field: String, value: Object) : String

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private value : Object
   LOCAL:   [local-02] var col

    0000: [0] 33 10 be d4 01 e4 ab 02 .... debug 

    # ejs.es:13599                          let col: Column = _columns[field]

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 56 ba 2d ................... loadString <> 
    0016: [2] 5b ......................... getLocalSlot0 
    0017: [3] 7c ......................... getObjNameExpr 
    0018: [1] 96 ......................... putLocalSlot2 
    0019: [0] 33 10 c0 d4 01 c0 ac 02 .... debug 

    # ejs.es:13600                          if (col == undefined) {

    0027: [0] 5d ......................... getLocalSlot2 
    0028: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0031: [2] 25 ......................... compareEq 
    0032: [1] 13 0e ...................... branchFalse8 <addr: 48> 
    0034: [0] 33 10 c2 d4 01 88 ad 02 .... debug 

    # ejs.es:13601                              return undefined

    0042: [0] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0045: [1] bf ......................... returnValue 
    0046: [0] 3e 00 ...................... goto8 <addr: 48> 
    0048: [0] 33 10 c6 d4 01 ca ad 02 .... debug 

    # ejs.es:13603              			if (value == undefined) {

    0056: [0] 5c ......................... getLocalSlot1 
    0057: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0060: [2] 25 ......................... compareEq 
    0061: [1] 13 1b ...................... branchFalse8 <addr: 90> 
    0063: [0] 33 10 c8 d4 01 84 ae 02 .... debug 

    # ejs.es:13604              				throw new Error("Field \"" + field + "\" is undefined")

    0071: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0073: [1] 89 ......................... new 
    0074: [1] 56 fc ae 02 ................ loadString <Field "> 
    0078: [2] 5b ......................... getLocalSlot0 
    0079: [3] 00 ......................... add 
    0080: [2] 56 8c af 02 ................ loadString <" is undefined> 
    0084: [3] 00 ......................... add 
    0085: [2] 20 02 ...................... callConstructor <argc: 1> 
    0087: [1] c6 ......................... throw 
    0088: [1] 3e 00 ...................... goto8 <addr: 90> 
    0090: [1] 33 10 cc d4 01 aa af 02 .... debug 

    # ejs.es:13606              			if (value == null) {

    0098: [1] 5c ......................... getLocalSlot1 
    0099: [2] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0101: [3] 25 ......................... compareEq 
    0102: [2] 13 1b ...................... branchFalse8 <addr: 131> 
    0104: [1] 33 10 ce d4 01 da af 02 .... debug 

    # ejs.es:13607              				throw new Error("Field \"" + field + "\" is null")

    0112: [1] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0114: [2] 89 ......................... new 
    0115: [2] 56 fc ae 02 ................ loadString <Field "> 
    0119: [3] 5b ......................... getLocalSlot0 
    0120: [4] 00 ......................... add 
    0121: [3] 56 c8 b0 02 ................ loadString <" is null> 
    0125: [4] 00 ......................... add 
    0126: [3] 20 02 ...................... callConstructor <argc: 1> 
    0128: [2] c6 ......................... throw 
    0129: [2] 3e 00 ...................... goto8 <addr: 131> 
    0131: [2] 33 10 d0 d4 01 dc b0 02 .... debug 

    # ejs.es:13608              			}

    0139: [2] 33 10 d2 d4 01 e6 b0 02 .... debug 

    # ejs.es:13609                          switch (col.ejsType) {

    0147: [2] 5d ......................... getLocalSlot2 
    0148: [3] 7b fa 60 e4 2c ............. getObjName <ejsType> <public> 
    0153: [3] 33 10 d4 d4 01 ac b1 02 .... debug 

    # ejs.es:13610                          case Boolean:

    0161: [3] 39 ......................... dup 
    0162: [4] 7e 10 ...................... getGlobalSlot <slot: 8> 
    0164: [5] 26 ......................... compareStrictlyEq 
    0165: [4] 13 63 ...................... branchFalse8 <addr: 266> 
    0167: [3] 33 10 d6 d4 01 e0 b1 02 .... debug 

    # ejs.es:13611                              if (value is String) {

    0175: [3] 5c ......................... getLocalSlot1 
    0176: [4] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0179: [5] 43 ......................... isA 
    0180: [4] 13 17 ...................... branchFalse8 <addr: 205> 
    0182: [3] 33 10 d8 d4 01 ae b2 02 .... debug 

    # ejs.es:13612                                  value = (value.toLower() == "true")

    0190: [3] 5c ......................... getLocalSlot1 
    0191: [4] 1e 8a 65 ba 2d 00 .......... callObjName <toLower> <> <argc: 0> 
    0197: [3] 93 ......................... pushResult 
    0198: [4] 56 9a 65 ................... loadString <true> 
    0201: [5] 25 ......................... compareEq 
    0202: [4] 95 ......................... putLocalSlot1 
    0203: [3] 3e 31 ...................... goto8 <addr: 254> 
    0205: [3] 33 10 da d4 01 9e b3 02 .... debug 

    # ejs.es:13613                              } else if (value is Number) {

    0213: [3] 5c ......................... getLocalSlot1 
    0214: [4] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0217: [5] 43 ......................... isA 
    0218: [4] 13 0e ...................... branchFalse8 <addr: 234> 
    0220: [3] 33 10 dc d4 01 fa b3 02 .... debug 

    # ejs.es:13614                                  value = (value == 1)

    0228: [3] 5c ......................... getLocalSlot1 
    0229: [4] 45 ......................... load1 
    0230: [5] 25 ......................... compareEq 
    0231: [4] 95 ......................... putLocalSlot1 
    0232: [3] 3e 14 ...................... goto8 <addr: 254> 
    0234: [3] 33 10 de d4 01 aa 79 ....... debug 

    # ejs.es:13615                              } else {

    0241: [3] 33 10 e0 d4 01 cc b4 02 .... debug 

    # ejs.es:13616                                  value = value cast Boolean

    0249: [3] 5c ......................... getLocalSlot1 
    0250: [4] 7e 10 ...................... getGlobalSlot <slot: 8> 
    0252: [5] 22 ......................... cast 
    0253: [4] 95 ......................... putLocalSlot1 
    0254: [3] 33 10 e4 d4 01 aa b5 02 .... debug 

    # ejs.es:13618                              return value

    0262: [3] 5c ......................... getLocalSlot1 
    0263: [4] bf ......................... returnValue 
    0264: [0] 3e 0e ...................... goto8 <addr: 280> 
    0266: [0] 33 10 e8 d4 01 e4 b5 02 .... debug 

    # ejs.es:13620                          case Date:

    0274: [0] 39 ......................... dup 
    0275: [1] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0277: [2] 26 ......................... compareStrictlyEq 
    0278: [1] 13 21 ...................... branchFalse8 <addr: 313> 
    0280: [0] 33 10 ea d4 01 92 b6 02 .... debug 

    # ejs.es:13621                              return "%Ld".format((new Date(value)).time)

    0288: [0] 56 8a b7 02 ................ loadString <%Ld> 
    0292: [1] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0294: [2] 89 ......................... new 
    0295: [2] 5c ......................... getLocalSlot1 
    0296: [3] 20 02 ...................... callConstructor <argc: 1> 
    0298: [2] 7b 92 b7 02 e4 2c .......... getObjName <time> <public> 
    0304: [2] 1e e2 46 00 02 ............. callObjName <format> <> <argc: 1> 
    0309: [0] 93 ......................... pushResult 
    0310: [1] bf ......................... returnValue 
    0311: [0] 3e 0f ...................... goto8 <addr: 328> 
    0313: [0] 33 10 ee d4 01 9c b7 02 .... debug 

    # ejs.es:13623                          case Number:

    0321: [0] 39 ......................... dup 
    0322: [1] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0325: [2] 26 ......................... compareStrictlyEq 
    0326: [1] 13 10 ...................... branchFalse8 <addr: 344> 
    0328: [0] 33 10 f0 d4 01 ce b7 02 .... debug 

    # ejs.es:13624                              return value cast Number

    0336: [0] 5c ......................... getLocalSlot1 
    0337: [1] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0340: [2] 22 ......................... cast 
    0341: [1] bf ......................... returnValue 
    0342: [0] 3e 0f ...................... goto8 <addr: 359> 
    0344: [0] 33 10 f6 d4 01 a0 b8 02 .... debug 

    # ejs.es:13627                          case String:

    0352: [0] 39 ......................... dup 
    0353: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0356: [2] 26 ......................... compareStrictlyEq 
    0357: [1] 13 15 ...................... branchFalse8 <addr: 380> 
    0359: [0] 33 10 f8 d4 01 d2 b8 02 .... debug 

    # ejs.es:13628                              return Database.quote(value)

    0367: [0] 7e ba 02 ................... getGlobalSlot <slot: 157> 
    0370: [1] 5c ......................... getLocalSlot1 
    0371: [2] 1e ce 90 02 e4 2c 02 ....... callObjName <quote> <public> <argc: 1> 
    0378: [0] 93 ......................... pushResult 
    0379: [1] bf ......................... returnValue 
    0380: [0] 90 ......................... pop 
    0381: [-1] 33 10 fc d4 01 ac b9 02 .... debug 

    # ejs.es:13630                          return Database.quote(value.toString())

    0389: [-1] 7e ba 02 ................... getGlobalSlot <slot: 157> 
    0392: [0] 5c ......................... getLocalSlot1 
    0393: [1] 1e 94 ba 02 e4 2c 00 ....... callObjName <toString> <public> <argc: 0> 
    0400: [0] 93 ......................... pushResult 
    0401: [1] 1e ce 90 02 e4 2c 02 ....... callObjName <quote> <public> <argc: 1> 
    0408: [-1] 93 ......................... pushResult 
    0409: [0] bf ......................... returnValue 
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [value-01]  private var value : Object
VARIABLE:   [col-02]  private var col

FUNCTION:   [Record-79]  [Record,private] const static function readRecords(key: String, options: Object) : Object

     ARG:   [arg-00]   private key : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var data : Array
   LOCAL:   [local-03] var result : Array
   LOCAL:   [local-04] var row

    0000: [0] 33 10 8a d5 01 e8 bb 02 .... debug 

    # ejs.es:13637                          let data: Array = innerFind(key, null, options)

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0011: [2] 5c ......................... getLocalSlot1 
    0012: [3] 1f c2 96 01 dc 43 06 ....... callScopedName <innerFind> <[Record,private]> <argc: 3> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] 96 ......................... putLocalSlot2 
    0021: [0] 33 10 8c d5 01 e0 bc 02 .... debug 

    # ejs.es:13638                          if (data.length > 1) {

    0029: [0] 5d ......................... getLocalSlot2 
    0030: [1] 7b e2 52 e4 2c ............. getObjName <length> <public> 
    0035: [1] 45 ......................... load1 
    0036: [2] 29 ......................... compareGt 
    0037: [1] 13 4a ...................... branchFalse8 <addr: 113> 
    0039: [0] 33 10 8e d5 01 a6 bd 02 .... debug 

    # ejs.es:13639                              let result: Array = new Array

    0047: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0049: [1] 89 ......................... new 
    0050: [1] 20 00 ...................... callConstructor <argc: 0> 
    0052: [1] 97 ......................... putLocalSlot3 
    0053: [0] 33 10 90 d5 01 82 be 02 .... debug 

    # ejs.es:13640                              for each (row in data) {

    0061: [0] 5d ......................... getLocalSlot2 
    0062: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0068: [0] 93 ......................... pushResult 
    0069: [1] 39 ......................... dup 
    0070: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0073: [1] 93 ......................... pushResult 
    0074: [2] 98 ......................... putLocalSlot4 
    0075: [1] 33 10 92 d5 01 d4 be 02 .... debug 

    # ejs.es:13641                                  result.append(createRecord(row))

    0083: [1] 5e ......................... getLocalSlot3 
    0084: [2] 5f ......................... getLocalSlot4 
    0085: [3] 1f 90 79 dc 43 02 .......... callScopedName <createRecord> <[Record,private]> <argc: 1> 
    0091: [2] 93 ......................... pushResult 
    0092: [3] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0098: [1] 3e e1 ...................... goto8 <addr: 69> 
    0100: [1] 90 ......................... pop 
    0101: [0] 33 10 96 d5 01 be bf 02 .... debug 

    # ejs.es:13643                              return result

    0109: [0] 5e ......................... getLocalSlot3 
    0110: [1] bf ......................... returnValue 
    0111: [0] 3e 2a ...................... goto8 <addr: 155> 
    0113: [0] 33 10 9a d5 01 fa bf 02 .... debug 

    # ejs.es:13645                          } else if (data.length == 1) {

    0121: [0] 5d ......................... getLocalSlot2 
    0122: [1] 7b e2 52 e4 2c ............. getObjName <length> <public> 
    0127: [1] 45 ......................... load1 
    0128: [2] 25 ......................... compareEq 
    0129: [1] 13 18 ...................... branchFalse8 <addr: 155> 
    0131: [0] 33 10 9c d5 01 d0 c0 02 .... debug 

    # ejs.es:13646                              return createRecord(data[0])

    0139: [0] 5d ......................... getLocalSlot2 
    0140: [1] 56 ba 2d ................... loadString <> 
    0143: [2] 44 ......................... load0 
    0144: [3] 7c ......................... getObjNameExpr 
    0145: [1] 1f 90 79 dc 43 02 .......... callScopedName <createRecord> <[Record,private]> <argc: 1> 
    0151: [0] 93 ......................... pushResult 
    0152: [1] bf ......................... returnValue 
    0153: [0] 3e 00 ...................... goto8 <addr: 155> 
    0155: [0] 33 10 a0 d5 01 f4 9a 01 .... debug 

    # ejs.es:13648                          return null

    0163: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0165: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     70      73        100          100       StopIteration

VARIABLE:   [key-00]  private var key : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [data-02]  private var data : Array
VARIABLE:   [result-03]  -hoisted-3 var result : Array
VARIABLE:   [row-04]  -hoisted-4 var row

FUNCTION:   [Record-80]  public const static function remove(ids: Array) : Void

     ARG:   [arg-00]   private ids : Array
   LOCAL:   [local-01] var key : Object
   LOCAL:   [local-02] var cmd : String

    0000: [0] 33 10 b0 d5 01 88 c2 02 .... debug 

    # ejs.es:13656                          for each (let key: Object in ids) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 39 ......................... dup 
    0017: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0020: [1] 93 ......................... pushResult 
    0021: [2] 95 ......................... putLocalSlot1 
    0022: [1] 33 10 b2 d5 01 e8 c2 02 .... debug 

    # ejs.es:13657                              let cmd: String = "DELETE FROM " + _tableName + " WHERE " + _keyName + " = " + key + ";"

    0030: [1] 56 ba c4 02 ................ loadString <DELETE FROM > 
    0034: [2] 57 ......................... loadThis 
    0035: [3] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0039: [3] 00 ......................... add 
    0040: [2] 56 a8 b8 01 ................ loadString < WHERE > 
    0044: [3] 00 ......................... add 
    0045: [2] 57 ......................... loadThis 
    0046: [3] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0050: [3] 00 ......................... add 
    0051: [2] 56 b6 8e 01 ................ loadString < = > 
    0055: [3] 00 ......................... add 
    0056: [2] 5c ......................... getLocalSlot1 
    0057: [3] 00 ......................... add 
    0058: [2] 56 ca 98 02 ................ loadString <;> 
    0062: [3] 00 ......................... add 
    0063: [2] 96 ......................... putLocalSlot2 
    0064: [1] 33 10 b4 d5 01 d4 c4 02 .... debug 

    # ejs.es:13658                              db.query(cmd, "remove", _trace)

    0072: [1] 57 ......................... loadThis 
    0073: [2] 7b b4 c5 02 e4 2c .......... getObjName <db> <public> 
    0079: [2] 5d ......................... getLocalSlot2 
    0080: [3] 56 ba c5 02 ................ loadString <remove> 
    0084: [4] 57 ......................... loadThis 
    0085: [5] 7b 90 14 22 ................ getObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    0089: [5] 1e d8 b9 01 00 06 .......... callObjName <query> <> <argc: 3> 
    0095: [1] 3e af ...................... goto8 <addr: 16> 
    0097: [1] 90 ......................... pop 
    0098: [0] 54 ......................... loadNull 
    0099: [1] bf ......................... returnValue 
    0100: [0] 33 10 b8 d5 01 9a 32 ....... debug 

    # ejs.es:13660                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     17      20         97           97       StopIteration

VARIABLE:   [ids-00]  private var ids : Array
VARIABLE:   [key-01]  -hoisted-1 var key : Object
VARIABLE:   [cmd-02]  -hoisted-1 var cmd : String

FUNCTION:   [Record-81]  [Record,private] const function runFilters(filters) : Void

     ARG:   [arg-00]   private filters
   LOCAL:   [local-01] var filter
   LOCAL:   [local-02] var fn
   LOCAL:   [local-03] var options
   LOCAL:   [local-04] var only

    0000: [0] 33 10 be d5 01 ba c6 02 .... debug 

    # ejs.es:13663                          for each (filter in filters) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 39 ......................... dup 
    0017: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0020: [1] 93 ......................... pushResult 
    0021: [2] 95 ......................... putLocalSlot1 
    0022: [1] 33 10 c0 d5 01 9e c7 02 .... debug 

    # ejs.es:13664                              let fn = filter[0]

    0030: [1] 5c ......................... getLocalSlot1 
    0031: [2] 56 ba 2d ................... loadString <> 
    0034: [3] 44 ......................... load0 
    0035: [4] 7c ......................... getObjNameExpr 
    0036: [2] 96 ......................... putLocalSlot2 
    0037: [1] 33 10 c2 d5 01 e4 c7 02 .... debug 

    # ejs.es:13665                              let options = filter[1]

    0045: [1] 5c ......................... getLocalSlot1 
    0046: [2] 56 ba 2d ................... loadString <> 
    0049: [3] 45 ......................... load1 
    0050: [4] 7c ......................... getObjNameExpr 
    0051: [2] 97 ......................... putLocalSlot3 
    0052: [1] 33 10 c4 d5 01 b4 c8 02 .... debug 

    # ejs.es:13666                              if (options) {

    0060: [1] 5e ......................... getLocalSlot3 
    0061: [2] 13 11 ...................... branchFalse8 <addr: 80> 
    0063: [1] 33 10 c6 d5 01 fc c8 02 .... debug 

    # ejs.es:13667                                  let only = options.only

    0071: [1] 5e ......................... getLocalSlot3 
    0072: [2] 7b f2 c8 02 00 ............. getObjName <only> <> 
    0077: [2] 98 ......................... putLocalSlot4 
    0078: [1] 3e 00 ...................... goto8 <addr: 80> 
    0080: [1] 33 10 ee d5 01 94 61 ....... debug 

    # ejs.es:13687                              }

    0087: [1] 33 10 f0 d5 01 d4 c9 02 .... debug 

    # ejs.es:13688                              fn.call(this)

    0095: [1] 5d ......................... getLocalSlot2 
    0096: [2] 57 ......................... loadThis 
    0097: [3] 1e 90 ca 02 00 02 .......... callObjName <call> <> <argc: 1> 
    0103: [1] 3e a7 ...................... goto8 <addr: 16> 
    0105: [1] 90 ......................... pop 
    0106: [0] 54 ......................... loadNull 
    0107: [1] bf ......................... returnValue 
    0108: [0] 33 10 f4 d5 01 9a 32 ....... debug 

    # ejs.es:13690                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     17      20        105          105       StopIteration

VARIABLE:   [filters-00]  private var filters
VARIABLE:   [filter-01]  -hoisted-1 var filter
VARIABLE:   [fn-02]  -hoisted-1 var fn
VARIABLE:   [options-03]  -hoisted-1 var options
VARIABLE:   [only-04]  -hoisted-4 var only

FUNCTION:   [Record-82]  public const function save() : Boolean

   LOCAL:   [local-00] var sql : String
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var field : String
   LOCAL:   [local-03] var field : String
   LOCAL:   [local-04] var field : String

    0000: [0] 33 10 84 d6 01 86 cb 02 .... debug 

    # ejs.es:13698                          var sql: String

    0008: [0] 33 10 86 d6 01 8e a9 01 .... debug 

    # ejs.es:13699                          if (!_columns) _model.getSchema()

    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0021: [1] 86 ......................... logicalNot 
    0022: [1] 13 0d ...................... branchFalse8 <addr: 37> 
    0024: [0] 57 ......................... loadThis 
    0025: [1] 7b 80 11 22 ................ getObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0029: [1] 1e ca 73 ba 2d 00 .......... callObjName <getSchema> <> <argc: 0> 
    0035: [0] 3e 00 ...................... goto8 <addr: 37> 
    0037: [0] 33 10 88 d6 01 be cb 02 .... debug 

    # ejs.es:13700                          if (!validateRecord()) {

    0045: [0] 1f 88 cc 02 e4 2c 00 ....... callScopedName <validateRecord> <public> <argc: 0> 
    0052: [0] 93 ......................... pushResult 
    0053: [1] 86 ......................... logicalNot 
    0054: [1] 13 0d ...................... branchFalse8 <addr: 69> 
    0056: [0] 33 10 8a d6 01 a6 cc 02 .... debug 

    # ejs.es:13701                              return false

    0064: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0066: [1] bf ......................... returnValue 
    0067: [0] 3e 00 ...................... goto8 <addr: 69> 
    0069: [0] 33 10 8c d6 01 a4 91 01 .... debug 

    # ejs.es:13702                          }

    0077: [0] 33 10 8e d6 01 e0 cc 02 .... debug 

    # ejs.es:13703                          runFilters(_beforeFilters)

    0085: [0] 57 ......................... loadThis 
    0086: [1] 7b c4 16 22 ................ getObjName <_beforeFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0090: [1] 1f 9a ca 02 dc 43 02 ....... callScopedName <runFilters> <[Record,private]> <argc: 1> 
    0097: [0] 33 10 92 d6 01 ae cd 02 .... debug 

    # ejs.es:13705                          if (_keyValue == null) {

    0105: [0] 57 ......................... loadThis 
    0106: [1] 7b 96 1b 22 ................ getObjName <_keyValue> <internal-ed363076473b51ca685af450cc662b39-0> 
    0110: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0112: [2] 25 ......................... compareEq 
    0113: [1] 07 8c 04 f7 f7 ............. branchFalse <addr: 380> 
    0118: [0] 33 10 94 d6 01 f8 cd 02 .... debug 

    # ejs.es:13706                              sql = "INSERT INTO " + _tableName + " ("

    0126: [0] 56 ea ce 02 ................ loadString <INSERT INTO > 
    0130: [1] 57 ......................... loadThis 
    0131: [2] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0135: [2] 00 ......................... add 
    0136: [1] 56 84 cf 02 ................ loadString < (> 
    0140: [2] 00 ......................... add 
    0141: [1] 94 ......................... putLocalSlot0 
    0142: [0] 33 10 96 d6 01 8a cf 02 .... debug 

    # ejs.es:13707                              for (let field: String in this) {

    0150: [0] 57 ......................... loadThis 
    0151: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0157: [0] 93 ......................... pushResult 
    0158: [1] 39 ......................... dup 
    0159: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0162: [1] 93 ......................... pushResult 
    0163: [2] 96 ......................... putLocalSlot2 
    0164: [1] 33 10 98 d6 01 ee cf 02 .... debug 

    # ejs.es:13708                                  if (_columns[field]) {

    0172: [1] 57 ......................... loadThis 
    0173: [2] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0177: [2] 56 ba 2d ................... loadString <> 
    0180: [3] 5d ......................... getLocalSlot2 
    0181: [4] 7c ......................... getObjNameExpr 
    0182: [2] 13 13 ...................... branchFalse8 <addr: 203> 
    0184: [1] 33 10 9a d6 01 c4 d0 02 .... debug 

    # ejs.es:13709                                      sql += field + ", "

    0192: [1] 5b ......................... getLocalSlot0 
    0193: [2] 5d ......................... getLocalSlot2 
    0194: [3] 56 9c d1 02 ................ loadString <, > 
    0198: [4] 00 ......................... add 
    0199: [3] 00 ......................... add 
    0200: [2] 94 ......................... putLocalSlot0 
    0201: [1] 3e 00 ...................... goto8 <addr: 203> 
    0203: [1] 3e d1 ...................... goto8 <addr: 158> 
    0205: [1] 90 ......................... pop 
    0206: [0] 33 10 9e d6 01 94 61 ....... debug 

    # ejs.es:13711                              }

    0213: [0] 33 10 a0 d6 01 a2 d1 02 .... debug 

    # ejs.es:13712                              sql = sql.trim(', ')

    0221: [0] 5b ......................... getLocalSlot0 
    0222: [1] 56 9c d1 02 ................ loadString <, > 
    0226: [2] 1e f0 52 e4 2c 02 .......... callObjName <trim> <public> <argc: 1> 
    0232: [0] 93 ......................... pushResult 
    0233: [1] 94 ......................... putLocalSlot0 
    0234: [0] 33 10 a2 d6 01 ec d1 02 .... debug 

    # ejs.es:13713                              sql += ") VALUES("

    0242: [0] 5b ......................... getLocalSlot0 
    0243: [1] 56 b2 d2 02 ................ loadString <) VALUES(> 
    0247: [2] 00 ......................... add 
    0248: [1] 94 ......................... putLocalSlot0 
    0249: [0] 33 10 a4 d6 01 8a cf 02 .... debug 

    # ejs.es:13714                              for (let field: String in this) {

    0257: [0] 57 ......................... loadThis 
    0258: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0264: [0] 93 ......................... pushResult 
    0265: [1] 39 ......................... dup 
    0266: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0269: [1] 93 ......................... pushResult 
    0270: [2] 97 ......................... putLocalSlot3 
    0271: [1] 33 10 a6 d6 01 ee cf 02 .... debug 

    # ejs.es:13715                                  if (_columns[field]) {

    0279: [1] 57 ......................... loadThis 
    0280: [2] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0284: [2] 56 ba 2d ................... loadString <> 
    0287: [3] 5e ......................... getLocalSlot3 
    0288: [4] 7c ......................... getObjNameExpr 
    0289: [2] 13 26 ...................... branchFalse8 <addr: 329> 
    0291: [1] 33 10 a8 d6 01 c6 d2 02 .... debug 

    # ejs.es:13716                                      sql += "'" + prepareValue(field, this[field]) + "', "

    0299: [1] 5b ......................... getLocalSlot0 
    0300: [2] 56 e2 d3 02 ................ loadString <'> 
    0304: [3] 5e ......................... getLocalSlot3 
    0305: [4] 57 ......................... loadThis 
    0306: [5] 56 ba 2d ................... loadString <> 
    0309: [6] 5e ......................... getLocalSlot3 
    0310: [7] 7c ......................... getObjNameExpr 
    0311: [5] 1f a6 ba 02 dc 43 04 ....... callScopedName <prepareValue> <[Record,private]> <argc: 2> 
    0318: [3] 93 ......................... pushResult 
    0319: [4] 00 ......................... add 
    0320: [3] 56 e6 d3 02 ................ loadString <', > 
    0324: [4] 00 ......................... add 
    0325: [3] 00 ......................... add 
    0326: [2] 94 ......................... putLocalSlot0 
    0327: [1] 3e 00 ...................... goto8 <addr: 329> 
    0329: [1] 3e be ...................... goto8 <addr: 265> 
    0331: [1] 90 ......................... pop 
    0332: [0] 33 10 ac d6 01 94 61 ....... debug 

    # ejs.es:13718                              }

    0339: [0] 33 10 ae d6 01 a2 d1 02 .... debug 

    # ejs.es:13719                              sql = sql.trim(', ')

    0347: [0] 5b ......................... getLocalSlot0 
    0348: [1] 56 9c d1 02 ................ loadString <, > 
    0352: [2] 1e f0 52 e4 2c 02 .......... callObjName <trim> <public> <argc: 1> 
    0358: [0] 93 ......................... pushResult 
    0359: [1] 94 ......................... putLocalSlot0 
    0360: [0] 33 10 b0 d6 01 ee d3 02 .... debug 

    # ejs.es:13720                              sql += ")"

    0368: [0] 5b ......................... getLocalSlot0 
    0369: [1] 56 a4 d4 02 ................ loadString <)> 
    0373: [2] 00 ......................... add 
    0374: [1] 94 ......................... putLocalSlot0 
    0375: [0] 3d e0 02 f7 f7 ............. goto <addr: 556> 
    0380: [0] 33 10 b4 d6 01 d6 58 ....... debug 

    # ejs.es:13722                          } else {

    0387: [0] 33 10 b6 d6 01 a8 d4 02 .... debug 

    # ejs.es:13723                              sql = "UPDATE " + _tableName + " SET "

    0395: [0] 56 96 d5 02 ................ loadString <UPDATE > 
    0399: [1] 57 ......................... loadThis 
    0400: [2] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0404: [2] 00 ......................... add 
    0405: [1] 56 a6 d5 02 ................ loadString < SET > 
    0409: [2] 00 ......................... add 
    0410: [1] 94 ......................... putLocalSlot0 
    0411: [0] 33 10 b8 d6 01 8a cf 02 .... debug 

    # ejs.es:13724                              for (let field: String in this) {

    0419: [0] 57 ......................... loadThis 
    0420: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0426: [0] 93 ......................... pushResult 
    0427: [1] 39 ......................... dup 
    0428: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0431: [1] 93 ......................... pushResult 
    0432: [2] 98 ......................... putLocalSlot4 
    0433: [1] 33 10 ba d6 01 ee cf 02 .... debug 

    # ejs.es:13725                                  if (_columns[field]) {

    0441: [1] 57 ......................... loadThis 
    0442: [2] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0446: [2] 56 ba 2d ................... loadString <> 
    0449: [3] 5f ......................... getLocalSlot4 
    0450: [4] 7c ......................... getObjNameExpr 
    0451: [2] 13 28 ...................... branchFalse8 <addr: 493> 
    0453: [1] 33 10 bc d6 01 b2 d5 02 .... debug 

    # ejs.es:13726                                      sql += field + " = '" + prepareValue(field, this[field]) + "', "

    0461: [1] 5b ......................... getLocalSlot0 
    0462: [2] 5f ......................... getLocalSlot4 
    0463: [3] 56 fc 85 02 ................ loadString < = '> 
    0467: [4] 00 ......................... add 
    0468: [3] 5f ......................... getLocalSlot4 
    0469: [4] 57 ......................... loadThis 
    0470: [5] 56 ba 2d ................... loadString <> 
    0473: [6] 5f ......................... getLocalSlot4 
    0474: [7] 7c ......................... getObjNameExpr 
    0475: [5] 1f a6 ba 02 dc 43 04 ....... callScopedName <prepareValue> <[Record,private]> <argc: 2> 
    0482: [3] 93 ......................... pushResult 
    0483: [4] 00 ......................... add 
    0484: [3] 56 e6 d3 02 ................ loadString <', > 
    0488: [4] 00 ......................... add 
    0489: [3] 00 ......................... add 
    0490: [2] 94 ......................... putLocalSlot0 
    0491: [1] 3e 00 ...................... goto8 <addr: 493> 
    0493: [1] 3e bc ...................... goto8 <addr: 427> 
    0495: [1] 90 ......................... pop 
    0496: [0] 33 10 c0 d6 01 94 61 ....... debug 

    # ejs.es:13728                              }

    0503: [0] 33 10 c2 d6 01 a2 d1 02 .... debug 

    # ejs.es:13729                              sql = sql.trim(', ')

    0511: [0] 5b ......................... getLocalSlot0 
    0512: [1] 56 9c d1 02 ................ loadString <, > 
    0516: [2] 1e f0 52 e4 2c 02 .......... callObjName <trim> <public> <argc: 1> 
    0522: [0] 93 ......................... pushResult 
    0523: [1] 94 ......................... putLocalSlot0 
    0524: [0] 33 10 c4 d6 01 e4 d6 02 .... debug 

    # ejs.es:13730                              sql += " WHERE " + _keyName + " = " +  _keyValue

    0532: [0] 5b ......................... getLocalSlot0 
    0533: [1] 56 a8 b8 01 ................ loadString < WHERE > 
    0537: [2] 57 ......................... loadThis 
    0538: [3] 7b f2 0f 22 ................ getObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0542: [3] 00 ......................... add 
    0543: [2] 56 b6 8e 01 ................ loadString < = > 
    0547: [3] 00 ......................... add 
    0548: [2] 57 ......................... loadThis 
    0549: [3] 7b 96 1b 22 ................ getObjName <_keyValue> <internal-ed363076473b51ca685af450cc662b39-0> 
    0553: [3] 00 ......................... add 
    0554: [2] 00 ......................... add 
    0555: [1] 94 ......................... putLocalSlot0 
    0556: [0] 33 10 c8 d6 01 e6 d7 02 .... debug 

    # ejs.es:13732                          if (!_keyValue) {

    0564: [0] 57 ......................... loadThis 
    0565: [1] 7b 96 1b 22 ................ getObjName <_keyValue> <internal-ed363076473b51ca685af450cc662b39-0> 
    0569: [1] 86 ......................... logicalNot 
    0570: [1] 13 11 ...................... branchFalse8 <addr: 589> 
    0572: [0] 33 10 ca d6 01 a2 d8 02 .... debug 

    # ejs.es:13733                              sql += "; SELECT last_insert_rowid();"

    0580: [0] 5b ......................... getLocalSlot0 
    0581: [1] 56 90 d9 02 ................ loadString <; SELECT last_insert_rowid();> 
    0585: [2] 00 ......................... add 
    0586: [1] 94 ......................... putLocalSlot0 
    0587: [0] 3e 16 ...................... goto8 <addr: 611> 
    0589: [0] 33 10 cc d6 01 d6 58 ....... debug 

    # ejs.es:13734                          } else {

    0596: [0] 33 10 ce d6 01 cc d9 02 .... debug 

    # ejs.es:13735                              sql += ";"

    0604: [0] 5b ......................... getLocalSlot0 
    0605: [1] 56 ca 98 02 ................ loadString <;> 
    0609: [2] 00 ......................... add 
    0610: [1] 94 ......................... putLocalSlot0 
    0611: [0] 33 10 d0 d6 01 a4 91 01 .... debug 

    # ejs.es:13736                          }

    0619: [0] 33 10 d4 d6 01 82 da 02 .... debug 

    # ejs.es:13738                          let result: Array = _db.query(sql, "save", _trace)

    0627: [0] 57 ......................... loadThis 
    0628: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0632: [1] 5b ......................... getLocalSlot0 
    0633: [2] 56 80 db 02 ................ loadString <save> 
    0637: [3] 57 ......................... loadThis 
    0638: [4] 7b 90 14 22 ................ getObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    0642: [4] 1e d8 b9 01 e4 2c 06 ....... callObjName <query> <public> <argc: 3> 
    0649: [0] 93 ......................... pushResult 
    0650: [1] 95 ......................... putLocalSlot1 
    0651: [0] 33 10 d6 d6 01 e6 d7 02 .... debug 

    # ejs.es:13739                          if (!_keyValue) {

    0659: [0] 57 ......................... loadThis 
    0660: [1] 7b 96 1b 22 ................ getObjName <_keyValue> <internal-ed363076473b51ca685af450cc662b39-0> 
    0664: [1] 86 ......................... logicalNot 
    0665: [1] 13 2a ...................... branchFalse8 <addr: 709> 
    0667: [0] 33 10 d8 d6 01 8a db 02 .... debug 

    # ejs.es:13740                              _keyValue = this["id"] = result[0]["last_insert_rowid()"] cast Number

    0675: [0] 5c ......................... getLocalSlot1 
    0676: [1] 56 ba 2d ................... loadString <> 
    0679: [2] 44 ......................... load0 
    0680: [3] 7c ......................... getObjNameExpr 
    0681: [1] 56 ba 2d ................... loadString <> 
    0684: [2] 56 b6 dc 02 ................ loadString <last_insert_rowid()> 
    0688: [3] 7c ......................... getObjNameExpr 
    0689: [1] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0692: [2] 22 ......................... cast 
    0693: [1] 39 ......................... dup 
    0694: [2] 57 ......................... loadThis 
    0695: [3] 56 ba 2d ................... loadString <> 
    0698: [4] 56 84 2c ................... loadString <id> 
    0701: [5] b2 ......................... putObjNameExpr 
    0702: [1] 57 ......................... loadThis 
    0703: [2] b3 96 1b 22 ................ putObjName <_keyValue> <internal-ed363076473b51ca685af450cc662b39-0> 
    0707: [0] 3e 00 ...................... goto8 <addr: 709> 
    0709: [0] 33 10 da d6 01 a4 91 01 .... debug 

    # ejs.es:13741                          }

    0717: [0] 33 10 dc d6 01 de dc 02 .... debug 

    # ejs.es:13742                          runFilters(_afterFilters)

    0725: [0] 57 ......................... loadThis 
    0726: [1] 7b 8c 18 22 ................ getObjName <_afterFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0730: [1] 1f 9a ca 02 dc 43 02 ....... callScopedName <runFilters> <[Record,private]> <argc: 1> 
    0737: [0] 33 10 de d6 01 aa dd 02 .... debug 

    # ejs.es:13743                          return true

    0745: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0748: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    159     162        205          205       StopIteration
1   iteration    266     269        331          331       StopIteration
2   iteration    428     431        495          495       StopIteration

VARIABLE:   [sql-00]  private var sql : String
VARIABLE:   [result-01]  private var result : Array
VARIABLE:   [field-02]  -hoisted-2 var field : String
VARIABLE:   [field-03]  -hoisted-3 var field : String
VARIABLE:   [field-04]  -hoisted-4 var field : String

FUNCTION:   [Record-83]  public const function saveUpdate(fields: Object) : Boolean

     ARG:   [arg-00]   private fields : Object
   LOCAL:   [local-01] var field

    0000: [0] 33 10 f4 d6 01 c8 de 02 .... debug 

    # ejs.es:13754                          for (field in fields) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1e 80 35 88 35 00 .......... callObjName <get> <iterator> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 39 ......................... dup 
    0017: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0020: [1] 93 ......................... pushResult 
    0021: [2] 95 ......................... putLocalSlot1 
    0022: [1] 33 10 f6 d6 01 90 df 02 .... debug 

    # ejs.es:13755                              if (this[field] != undefined) {

    0030: [1] 57 ......................... loadThis 
    0031: [2] 56 ba 2d ................... loadString <> 
    0034: [3] 5c ......................... getLocalSlot1 
    0035: [4] 7c ......................... getObjNameExpr 
    0036: [2] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0039: [3] 2c ......................... compareNe 
    0040: [2] 13 16 ...................... branchFalse8 <addr: 64> 
    0042: [1] 33 10 f8 d6 01 f0 df 02 .... debug 

    # ejs.es:13756                                  this[field] = fields[field]

    0050: [1] 5b ......................... getLocalSlot0 
    0051: [2] 56 ba 2d ................... loadString <> 
    0054: [3] 5c ......................... getLocalSlot1 
    0055: [4] 7c ......................... getObjNameExpr 
    0056: [2] 57 ......................... loadThis 
    0057: [3] 56 ba 2d ................... loadString <> 
    0060: [4] 5c ......................... getLocalSlot1 
    0061: [5] b2 ......................... putObjNameExpr 
    0062: [1] 3e 00 ...................... goto8 <addr: 64> 
    0064: [1] 3e ce ...................... goto8 <addr: 16> 
    0066: [1] 90 ......................... pop 
    0067: [0] 33 10 fe d6 01 d0 e0 02 .... debug 

    # ejs.es:13759                          return save()

    0075: [0] 1f 80 db 02 e4 2c 00 ....... callScopedName <save> <public> <argc: 0> 
    0082: [0] 93 ......................... pushResult 
    0083: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     17      20         66           66       StopIteration

VARIABLE:   [fields-00]  private var fields : Object
VARIABLE:   [field-01]  -hoisted-1 var field

FUNCTION:   [Record-84]  public const static function setDb(database: Database) : void

     ARG:   [arg-00]   private database : Database

    0000: [0] 33 10 8e d7 01 82 e2 02 .... debug 

    # ejs.es:13767                          _db = database

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 cc 0c 22 ................ putObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0014: [0] be ......................... return 
    0015: [0] 33 10 90 d7 01 9a 32 ....... debug 

    # ejs.es:13768                      }
    
VARIABLE:   [database-00]  private var database : Database

FUNCTION:   [Record-85]  public const static function setKeyName(name: String) : Void

     ARG:   [arg-00]   private name : String

    0000: [0] 33 10 9c d7 01 c8 e3 02 .... debug 

    # ejs.es:13774                          _keyName = name

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 f2 0f 22 ................ putObjName <_keyName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0014: [0] 54 ......................... loadNull 
    0015: [1] bf ......................... returnValue 
    0016: [0] 33 10 9e d7 01 9a 32 ....... debug 

    # ejs.es:13775                      }
    
VARIABLE:   [name-00]  private var name : String

FUNCTION:   [Record-86]  public const static function setTableName(name: String) : Void

     ARG:   [arg-00]   private name : String

    0000: [0] 33 10 ac d7 01 8c e5 02 .... debug 

    # ejs.es:13782                          if (_tableName != name) {

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b da 12 22 ................ getObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 2c ......................... compareNe 
    0015: [1] 13 34 ...................... branchFalse8 <addr: 69> 
    0017: [0] 33 10 ae d7 01 d8 e5 02 .... debug 

    # ejs.es:13783                              _tableName = name

    0025: [0] 5b ......................... getLocalSlot0 
    0026: [1] 57 ......................... loadThis 
    0027: [2] b3 da 12 22 ................ putObjName <_tableName> <internal-ed363076473b51ca685af450cc662b39-0> 
    0031: [0] 33 10 b0 d7 01 9c e6 02 .... debug 

    # ejs.es:13784                              if (_db) {

    0039: [0] 57 ......................... loadThis 
    0040: [1] 7b cc 0c 22 ................ getObjName <_db> <internal-ed363076473b51ca685af450cc662b39-0> 
    0044: [1] 13 15 ...................... branchFalse8 <addr: 67> 
    0046: [0] 33 10 b2 d7 01 d2 e6 02 .... debug 

    # ejs.es:13785                                  _model.getSchema()

    0054: [0] 57 ......................... loadThis 
    0055: [1] 7b 80 11 22 ................ getObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0059: [1] 1e ca 73 ba 2d 00 .......... callObjName <getSchema> <> <argc: 0> 
    0065: [0] 3e 00 ...................... goto8 <addr: 67> 
    0067: [0] 3e 00 ...................... goto8 <addr: 69> 
    0069: [0] 54 ......................... loadNull 
    0070: [1] bf ......................... returnValue 
    0071: [0] 33 10 b8 d7 01 9a 32 ....... debug 

    # ejs.es:13788                      }
    
VARIABLE:   [name-00]  private var name : String

FUNCTION:   [Record-87]  public const static function sql(cmd: String, count: Number) : Array

     ARG:   [arg-00]   private cmd : String
     ARG:   [arg-01]   private count : Number

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 ca d7 01 cc e8 02 .... debug 

    # ejs.es:13797                          cmd = "SELECT " + cmd + ";"

    0015: [0] 56 be 90 02 ................ loadString <SELECT > 
    0019: [1] 5b ......................... getLocalSlot0 
    0020: [2] 00 ......................... add 
    0021: [1] 56 ca 98 02 ................ loadString <;> 
    0025: [2] 00 ......................... add 
    0026: [1] 94 ......................... putLocalSlot0 
    0027: [0] 33 10 cc d7 01 9c e9 02 .... debug 

    # ejs.es:13798                          return db.query(cmd, "select", _trace)

    0035: [0] 57 ......................... loadThis 
    0036: [1] 7b b4 c5 02 e4 2c .......... getObjName <db> <public> 
    0042: [1] 5b ......................... getLocalSlot0 
    0043: [2] 56 82 ea 02 ................ loadString <select> 
    0047: [3] 57 ......................... loadThis 
    0048: [4] 7b 90 14 22 ................ getObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    0052: [4] 1e d8 b9 01 00 06 .......... callObjName <query> <> <argc: 3> 
    0058: [0] 93 ......................... pushResult 
    0059: [1] bf ......................... returnValue 
    
VARIABLE:   [cmd-00]  private var cmd : String
VARIABLE:   [count-01]  private var count : Number

FUNCTION:   [Record-88]  public const static function trace(on: Boolean) : Void

     ARG:   [arg-00]   private on : Boolean

    0000: [0] 33 10 dc d7 01 f2 ea 02 .... debug 

    # ejs.es:13806                          _trace = on

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 39 ......................... dup 
    0010: [2] 57 ......................... loadThis 
    0011: [3] b3 90 14 22 ................ putObjName <_trace> <internal-ed363076473b51ca685af450cc662b39-0> 
    0015: [1] bf ......................... returnValue 
    
VARIABLE:   [on-00]  private var on : Boolean

FUNCTION:   [Record-89]  public const static function validateFormat(fields: Object, options) : void

     ARG:   [arg-00]   private fields : Object
     ARG:   [arg-01]   private options

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 e4 d7 01 c6 ec 02 .... debug 

    # ejs.es:13810                          if (_validations == null) {

    0015: [0] 57 ......................... loadThis 
    0016: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0020: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0022: [2] 25 ......................... compareEq 
    0023: [1] 13 12 ...................... branchFalse8 <addr: 43> 
    0025: [0] 33 10 e6 d7 01 96 ed 02 .... debug 

    # ejs.es:13811                              _validations = []

    0033: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0035: [1] 89 ......................... new 
    0036: [1] 57 ......................... loadThis 
    0037: [2] b3 fe 14 22 ................ putObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0041: [0] 3e 00 ...................... goto8 <addr: 43> 
    0043: [0] 33 10 e8 d7 01 a4 91 01 .... debug 

    # ejs.es:13812                          }

    0051: [0] 33 10 ea d7 01 da ed 02 .... debug 

    # ejs.es:13813                          _validations.append([checkFormat, fields, options])

    0059: [0] 57 ......................... loadThis 
    0060: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0064: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0066: [2] 89 ......................... new 
    0067: [2] 39 ......................... dup 
    0068: [3] 57 ......................... loadThis 
    0069: [4] 7b d8 48 dc 43 ............. getObjName <checkFormat> <[Record,private]> 
    0074: [4] c5 ......................... swap 
    0075: [4] 56 ba 2d ................... loadString <> 
    0078: [5] 44 ......................... load0 
    0079: [6] b2 ......................... putObjNameExpr 
    0080: [2] 39 ......................... dup 
    0081: [3] 5b ......................... getLocalSlot0 
    0082: [4] c5 ......................... swap 
    0083: [4] 56 ba 2d ................... loadString <> 
    0086: [5] 45 ......................... load1 
    0087: [6] b2 ......................... putObjNameExpr 
    0088: [2] 39 ......................... dup 
    0089: [3] 5c ......................... getLocalSlot1 
    0090: [4] c5 ......................... swap 
    0091: [4] 56 ba 2d ................... loadString <> 
    0094: [5] 46 ......................... load2 
    0095: [6] b2 ......................... putObjNameExpr 
    0096: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0102: [0] be ......................... return 
    0103: [0] 33 10 ec d7 01 9a 32 ....... debug 

    # ejs.es:13814                      }
    
VARIABLE:   [fields-00]  private var fields : Object
VARIABLE:   [options-01]  private var options

FUNCTION:   [Record-90]  public const static function validateNumber(fields: Object, options) : void

     ARG:   [arg-00]   private fields : Object
     ARG:   [arg-01]   private options

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 f4 d7 01 c6 ec 02 .... debug 

    # ejs.es:13818                          if (_validations == null) {

    0015: [0] 57 ......................... loadThis 
    0016: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0020: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0022: [2] 25 ......................... compareEq 
    0023: [1] 13 12 ...................... branchFalse8 <addr: 43> 
    0025: [0] 33 10 f6 d7 01 96 ed 02 .... debug 

    # ejs.es:13819                              _validations = []

    0033: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0035: [1] 89 ......................... new 
    0036: [1] 57 ......................... loadThis 
    0037: [2] b3 fe 14 22 ................ putObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0041: [0] 3e 00 ...................... goto8 <addr: 43> 
    0043: [0] 33 10 f8 d7 01 a4 91 01 .... debug 

    # ejs.es:13820                          }

    0051: [0] 33 10 fa d7 01 8a f0 02 .... debug 

    # ejs.es:13821                          _validations.append([checkNumber, fields, options])

    0059: [0] 57 ......................... loadThis 
    0060: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0064: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0066: [2] 89 ......................... new 
    0067: [2] 39 ......................... dup 
    0068: [3] 57 ......................... loadThis 
    0069: [4] 7b 9c 4d dc 43 ............. getObjName <checkNumber> <[Record,private]> 
    0074: [4] c5 ......................... swap 
    0075: [4] 56 ba 2d ................... loadString <> 
    0078: [5] 44 ......................... load0 
    0079: [6] b2 ......................... putObjNameExpr 
    0080: [2] 39 ......................... dup 
    0081: [3] 5b ......................... getLocalSlot0 
    0082: [4] c5 ......................... swap 
    0083: [4] 56 ba 2d ................... loadString <> 
    0086: [5] 45 ......................... load1 
    0087: [6] b2 ......................... putObjNameExpr 
    0088: [2] 39 ......................... dup 
    0089: [3] 5c ......................... getLocalSlot1 
    0090: [4] c5 ......................... swap 
    0091: [4] 56 ba 2d ................... loadString <> 
    0094: [5] 46 ......................... load2 
    0095: [6] b2 ......................... putObjNameExpr 
    0096: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0102: [0] be ......................... return 
    0103: [0] 33 10 fc d7 01 9a 32 ....... debug 

    # ejs.es:13822                      }
    
VARIABLE:   [fields-00]  private var fields : Object
VARIABLE:   [options-01]  private var options

FUNCTION:   [Record-91]  public const static function validatePresence(fields: Object, options) : void

     ARG:   [arg-00]   private fields : Object
     ARG:   [arg-01]   private options

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 84 d8 01 c6 ec 02 .... debug 

    # ejs.es:13826                          if (_validations == null) {

    0015: [0] 57 ......................... loadThis 
    0016: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0020: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0022: [2] 25 ......................... compareEq 
    0023: [1] 13 12 ...................... branchFalse8 <addr: 43> 
    0025: [0] 33 10 86 d8 01 96 ed 02 .... debug 

    # ejs.es:13827                              _validations = []

    0033: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0035: [1] 89 ......................... new 
    0036: [1] 57 ......................... loadThis 
    0037: [2] b3 fe 14 22 ................ putObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0041: [0] 3e 00 ...................... goto8 <addr: 43> 
    0043: [0] 33 10 88 d8 01 a4 91 01 .... debug 

    # ejs.es:13828                          }

    0051: [0] 33 10 8a d8 01 be f2 02 .... debug 

    # ejs.es:13829                          _validations.append([checkPresent, fields, options])

    0059: [0] 57 ......................... loadThis 
    0060: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0064: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0066: [2] 89 ......................... new 
    0067: [2] 39 ......................... dup 
    0068: [3] 57 ......................... loadThis 
    0069: [4] 7b f4 53 dc 43 ............. getObjName <checkPresent> <[Record,private]> 
    0074: [4] c5 ......................... swap 
    0075: [4] 56 ba 2d ................... loadString <> 
    0078: [5] 44 ......................... load0 
    0079: [6] b2 ......................... putObjNameExpr 
    0080: [2] 39 ......................... dup 
    0081: [3] 5b ......................... getLocalSlot0 
    0082: [4] c5 ......................... swap 
    0083: [4] 56 ba 2d ................... loadString <> 
    0086: [5] 45 ......................... load1 
    0087: [6] b2 ......................... putObjNameExpr 
    0088: [2] 39 ......................... dup 
    0089: [3] 5c ......................... getLocalSlot1 
    0090: [4] c5 ......................... swap 
    0091: [4] 56 ba 2d ................... loadString <> 
    0094: [5] 46 ......................... load2 
    0095: [6] b2 ......................... putObjNameExpr 
    0096: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0102: [0] be ......................... return 
    0103: [0] 33 10 8c d8 01 9a 32 ....... debug 

    # ejs.es:13830                      }
    
VARIABLE:   [fields-00]  private var fields : Object
VARIABLE:   [options-01]  private var options

FUNCTION:   [Record-92]  public const function validateRecord() : Boolean

   LOCAL:   [local-00] var thisType
   LOCAL:   [local-01] var validation : String
   LOCAL:   [local-02] var check
   LOCAL:   [local-03] var fields
   LOCAL:   [local-04] var options
   LOCAL:   [local-05] var field

    0000: [0] 33 10 9a d8 01 8e a9 01 .... debug 

    # ejs.es:13837                          if (!_columns) _model.getSchema()

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b a0 08 22 ................ getObjName <_columns> <internal-ed363076473b51ca685af450cc662b39-0> 
    0013: [1] 86 ......................... logicalNot 
    0014: [1] 13 0d ...................... branchFalse8 <addr: 29> 
    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b 80 11 22 ................ getObjName <_model> <internal-ed363076473b51ca685af450cc662b39-0> 
    0021: [1] 1e ca 73 ba 2d 00 .......... callObjName <getSchema> <> <argc: 0> 
    0027: [0] 3e 00 ...................... goto8 <addr: 29> 
    0029: [0] 33 10 9c d8 01 bc f4 02 .... debug 

    # ejs.es:13838                          _errors = {}

    0037: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0041: [1] 57 ......................... loadThis 
    0042: [2] b3 c2 1c 22 ................ putObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0046: [0] 33 10 9e d8 01 ee f4 02 .... debug 

    # ejs.es:13839                          if (_validations) {

    0054: [0] 57 ......................... loadThis 
    0055: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0059: [1] 07 a8 03 f7 f7 ............. branchFalse <addr: 276> 
    0064: [0] 33 10 a0 d8 01 ae f5 02 .... debug 

    # ejs.es:13840                              for each (let validation: String in _validations) {

    0072: [0] 57 ......................... loadThis 
    0073: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0077: [1] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0083: [0] 93 ......................... pushResult 
    0084: [1] 39 ......................... dup 
    0085: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0088: [1] 93 ......................... pushResult 
    0089: [2] 95 ......................... putLocalSlot1 
    0090: [1] 33 10 a2 d8 01 d8 f6 02 .... debug 

    # ejs.es:13841                                  let check = validation[0]

    0098: [1] 5c ......................... getLocalSlot1 
    0099: [2] 56 ba 2d ................... loadString <> 
    0102: [3] 44 ......................... load0 
    0103: [4] 7c ......................... getObjNameExpr 
    0104: [2] 96 ......................... putLocalSlot2 
    0105: [1] 33 10 a4 d8 01 b4 f7 02 .... debug 

    # ejs.es:13842                                  let fields = validation[1]

    0113: [1] 5c ......................... getLocalSlot1 
    0114: [2] 56 ba 2d ................... loadString <> 
    0117: [3] 45 ......................... load1 
    0118: [4] 7c ......................... getObjNameExpr 
    0119: [2] 97 ......................... putLocalSlot3 
    0120: [1] 33 10 a6 d8 01 92 f8 02 .... debug 

    # ejs.es:13843                                  let options = validation[2]

    0128: [1] 5c ......................... getLocalSlot1 
    0129: [2] 56 ba 2d ................... loadString <> 
    0132: [3] 46 ......................... load2 
    0133: [4] 7c ......................... getObjNameExpr 
    0134: [2] 98 ......................... putLocalSlot4 
    0135: [1] 33 10 a8 d8 01 f2 f8 02 .... debug 

    # ejs.es:13844                                  if (fields is Array) {

    0143: [1] 5e ......................... getLocalSlot3 
    0144: [2] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0146: [3] 43 ......................... isA 
    0147: [2] 13 5b ...................... branchFalse8 <addr: 240> 
    0149: [1] 33 10 aa d8 01 c8 f9 02 .... debug 

    # ejs.es:13845                                      for each (let field in fields) {

    0157: [1] 5e ......................... getLocalSlot3 
    0158: [2] 1e a6 6f 88 35 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0164: [1] 93 ......................... pushResult 
    0165: [2] 39 ......................... dup 
    0166: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0169: [2] 93 ......................... pushResult 
    0170: [3] 99 ......................... putLocalSlot5 
    0171: [2] 33 10 ac d8 01 ba fa 02 .... debug 

    # ejs.es:13846                                          if (_errors[field]) {

    0179: [2] 57 ......................... loadThis 
    0180: [3] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0184: [3] 56 ba 2d ................... loadString <> 
    0187: [4] 60 ......................... getLocalSlot5 
    0188: [5] 7c ......................... getObjNameExpr 
    0189: [3] 13 0f ...................... branchFalse8 <addr: 206> 
    0191: [2] 33 10 ae d8 01 9e fb 02 .... debug 

    # ejs.es:13847                                              continue

    0199: [2] 3d 4f f7 f7 f7 ............. goto <addr: 165> 
    0204: [2] 3e 00 ...................... goto8 <addr: 206> 
    0206: [2] 33 10 b0 d8 01 f0 fb 02 .... debug 

    # ejs.es:13848                                          }

    0214: [2] 33 10 b2 d8 01 ac fc 02 .... debug 

    # ejs.es:13849                                          check(this, field, this[field], options)

    0222: [2] 57 ......................... loadThis 
    0223: [3] 60 ......................... getLocalSlot5 
    0224: [4] 57 ......................... loadThis 
    0225: [5] 56 ba 2d ................... loadString <> 
    0228: [6] 60 ......................... getLocalSlot5 
    0229: [7] 7c ......................... getObjNameExpr 
    0230: [5] 5f ......................... getLocalSlot4 
    0231: [6] 1a 04 00 08 ................ callBlockSlot <slot: 2> <0> <argc: 4> 
    0235: [2] 3e b8 ...................... goto8 <addr: 165> 
    0237: [2] 90 ......................... pop 
    0238: [1] 3e 1c ...................... goto8 <addr: 268> 
    0240: [1] 33 10 b6 d8 01 ee 66 ....... debug 

    # ejs.es:13851                                  } else {

    0247: [1] 33 10 b8 d8 01 b6 fd 02 .... debug 

    # ejs.es:13852                                      check(this, fields, this[fields], options)

    0255: [1] 57 ......................... loadThis 
    0256: [2] 5e ......................... getLocalSlot3 
    0257: [3] 57 ......................... loadThis 
    0258: [4] 56 ba 2d ................... loadString <> 
    0261: [5] 5e ......................... getLocalSlot3 
    0262: [6] 7c ......................... getObjNameExpr 
    0263: [4] 5f ......................... getLocalSlot4 
    0264: [5] 1a 04 00 08 ................ callBlockSlot <slot: 2> <0> <argc: 4> 
    0268: [1] 3d fb 02 f7 f7 ............. goto <addr: 84> 
    0273: [1] 90 ......................... pop 
    0274: [0] 3e 00 ...................... goto8 <addr: 276> 
    0276: [0] 33 10 be d8 01 a4 91 01 .... debug 

    # ejs.es:13855                          }

    0284: [0] 33 10 c0 d8 01 ce fe 02 .... debug 

    # ejs.es:13856                          let thisType = Reflect(this).type

    0292: [0] 57 ......................... loadThis 
    0293: [1] 17 de 01 02 ................ callGlobalSlot <slot: 111> <argc: 1> 
    0297: [0] 93 ......................... pushResult 
    0298: [1] 7b 8a 61 e4 2c ............. getObjName <type> <public> 
    0303: [1] 94 ......................... putLocalSlot0 
    0304: [0] 33 10 c2 d8 01 aa ff 02 .... debug 

    # ejs.es:13857                          if (thisType["validate"]) {

    0312: [0] 5b ......................... getLocalSlot0 
    0313: [1] 56 ba 2d ................... loadString <> 
    0316: [2] 56 fa ff 02 ................ loadString <validate> 
    0320: [3] 7c ......................... getObjNameExpr 
    0321: [1] 13 1a ...................... branchFalse8 <addr: 349> 
    0323: [0] 33 10 c4 d8 01 8c 80 03 .... debug 

    # ejs.es:13858                              thisType["validate"].call(this)

    0331: [0] 5b ......................... getLocalSlot0 
    0332: [1] 56 ba 2d ................... loadString <> 
    0335: [2] 56 fa ff 02 ................ loadString <validate> 
    0339: [3] 7c ......................... getObjNameExpr 
    0340: [1] 57 ......................... loadThis 
    0341: [2] 1e 90 ca 02 00 02 .......... callObjName <call> <> <argc: 1> 
    0347: [0] 3e 00 ...................... goto8 <addr: 349> 
    0349: [0] 33 10 c8 d8 01 ec 80 03 .... debug 

    # ejs.es:13860                          if (_errors.length == 0) {

    0357: [0] 57 ......................... loadThis 
    0358: [1] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0362: [1] 7b e2 52 f6 32 ............. getObjName <length> <ejs> 
    0367: [1] 44 ......................... load0 
    0368: [2] 25 ......................... compareEq 
    0369: [1] 13 10 ...................... branchFalse8 <addr: 387> 
    0371: [0] 33 10 ca d8 01 ba 81 03 .... debug 

    # ejs.es:13861                              coerceToEjsTypes()

    0379: [0] 1f c0 6c dc 43 00 .......... callScopedName <coerceToEjsTypes> <[Record,private]> <argc: 0> 
    0385: [0] 3e 00 ...................... goto8 <addr: 387> 
    0387: [0] 33 10 ce d8 01 80 82 03 .... debug 

    # ejs.es:13863                          return _errors.length == 0

    0395: [0] 57 ......................... loadThis 
    0396: [1] 7b c2 1c 22 ................ getObjName <_errors> <internal-ed363076473b51ca685af450cc662b39-0> 
    0400: [1] 7b e2 52 f6 32 ............. getObjName <length> <ejs> 
    0405: [1] 44 ......................... load0 
    0406: [2] 25 ......................... compareEq 
    0407: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    166     169        237          237       StopIteration
1   iteration     85      88        273          273       StopIteration

VARIABLE:   [thisType-00]  private var thisType
VARIABLE:   [validation-01]  -hoisted-1 var validation : String
VARIABLE:   [check-02]  -hoisted-1 var check
VARIABLE:   [fields-03]  -hoisted-1 var fields
VARIABLE:   [options-04]  -hoisted-1 var options
VARIABLE:   [field-05]  -hoisted-5 var field

FUNCTION:   [Record-93]  public const static function validateUnique(fields: Object, option) : void

     ARG:   [arg-00]   private fields : Object
     ARG:   [arg-01]   private option

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 d8 d8 01 da 83 03 .... debug 

    # ejs.es:13868                          _validations.append([checkUnique, fields, options])

    0015: [0] 57 ......................... loadThis 
    0016: [1] 7b fe 14 22 ................ getObjName <_validations> <internal-ed363076473b51ca685af450cc662b39-0> 
    0020: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0022: [2] 89 ......................... new 
    0023: [2] 39 ......................... dup 
    0024: [3] 57 ......................... loadThis 
    0025: [4] 7b 92 5c dc 43 ............. getObjName <checkUnique> <[Record,private]> 
    0030: [4] c5 ......................... swap 
    0031: [4] 56 ba 2d ................... loadString <> 
    0034: [5] 44 ......................... load0 
    0035: [6] b2 ......................... putObjNameExpr 
    0036: [2] 39 ......................... dup 
    0037: [3] 5b ......................... getLocalSlot0 
    0038: [4] c5 ......................... swap 
    0039: [4] 56 ba 2d ................... loadString <> 
    0042: [5] 45 ......................... load1 
    0043: [6] b2 ......................... putObjNameExpr 
    0044: [2] 39 ......................... dup 
    0045: [3] 79 8e 39 ba 2d ............. getScopedName <options> <> 
    0050: [4] c5 ......................... swap 
    0051: [4] 56 ba 2d ................... loadString <> 
    0054: [5] 46 ......................... load2 
    0055: [6] b2 ......................... putObjNameExpr 
    0056: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0062: [0] 93 ......................... pushResult 
    0063: [1] bf ......................... returnValue 
    
VARIABLE:   [fields-00]  private var fields : Object
VARIABLE:   [option-01]  private var option

FUNCTION:   [Record-94]  public const static function wrapFilter(fn, options: Object) : Void

     ARG:   [arg-00]   private fn
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 10 e8 d8 01 96 86 03 .... debug 

    # ejs.es:13876                          _wrapFilters ||= []

    0015: [0] 57 ......................... loadThis 
    0016: [1] 7b e8 19 22 ................ getObjName <_wrapFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0020: [1] 39 ......................... dup 
    0021: [2] 14 04 ...................... branchTrue8 <addr: 27> 
    0023: [1] 90 ......................... pop 
    0024: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0026: [1] 89 ......................... new 
    0027: [1] 57 ......................... loadThis 
    0028: [2] b3 e8 19 22 ................ putObjName <_wrapFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0032: [0] 33 10 ea d8 01 d6 86 03 .... debug 

    # ejs.es:13877                          _wrapFilters.append([fn, options])

    0040: [0] 57 ......................... loadThis 
    0041: [1] 7b e8 19 22 ................ getObjName <_wrapFilters> <internal-ed363076473b51ca685af450cc662b39-0> 
    0045: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0047: [2] 89 ......................... new 
    0048: [2] 39 ......................... dup 
    0049: [3] 5b ......................... getLocalSlot0 
    0050: [4] c5 ......................... swap 
    0051: [4] 56 ba 2d ................... loadString <> 
    0054: [5] 44 ......................... load0 
    0055: [6] b2 ......................... putObjNameExpr 
    0056: [2] 39 ......................... dup 
    0057: [3] 5c ......................... getLocalSlot1 
    0058: [4] c5 ......................... swap 
    0059: [4] 56 ba 2d ................... loadString <> 
    0062: [5] 45 ......................... load1 
    0063: [6] b2 ......................... putObjNameExpr 
    0064: [2] 1e e2 38 e4 2c 02 .......... callObjName <append> <public> <argc: 1> 
    0070: [0] 54 ......................... loadNull 
    0071: [1] bf ......................... returnValue 
    0072: [0] 33 10 ec d8 01 9a 32 ....... debug 

    # ejs.es:13878                      }
    
VARIABLE:   [fn-00]  private var fn
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Record-95]  public const static get function columnNames() : Array


    0000: [0] 33 10 f6 d8 01 b0 88 03 .... debug 

    # ejs.es:13883                          return getColumnNames()

    0008: [0] 1f 98 ac 01 e4 2c 00 ....... callScopedName <getColumnNames> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-96]  public const static get function columnTitles() : Array


    0000: [0] 33 10 fe d8 01 f8 89 03 .... debug 

    # ejs.es:13887                          return getColumnTitles()

    0008: [0] 1f fa ad 01 e4 2c 00 ....... callScopedName <getColumnTitles> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-97]  public const static get function db() : void


    0000: [0] 33 10 86 d9 01 b4 8b 03 .... debug 

    # ejs.es:13891                          return getDb()

    0008: [0] 1f a0 b3 01 e4 2c 00 ....... callScopedName <getDb> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-98]  public const static get function keyName() : String


    0000: [0] 33 10 8e d9 01 ca 8c 03 .... debug 

    # ejs.es:13895                          return getKeyName()

    0008: [0] 1f b4 b5 01 e4 2c 00 ....... callScopedName <getKeyName> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-99]  public const static get function numRows() : String


    0000: [0] 33 10 96 d9 01 fa 8d 03 .... debug 

    # ejs.es:13899                          return getNumRows()

    0008: [0] 1f c4 ba 01 e4 2c 00 ....... callScopedName <getNumRows> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-100]  public const static get function tableName() : String


    0000: [0] 33 10 9e d9 01 9e 8f 03 .... debug 

    # ejs.es:13903                          return getTableName()

    0008: [0] 1f 9e c7 01 e4 2c 00 ....... callScopedName <getTableName> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] bf ......................... returnValue 
    

FUNCTION:   [Record-101]  public const function constructorOLD(fields: Object) : Void

     ARG:   [arg-00]   private fields : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 10 a6 d9 01 c6 31 ....... debug 

    # ejs.es:13907                          initialize(fields)

    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 1f 84 32 e4 2c 02 .......... callScopedName <initialize> <public> <argc: 1> 
    0021: [0] 54 ......................... loadNull 
    0022: [1] bf ......................... returnValue 
    0023: [0] 33 10 a8 d9 01 9a 32 ....... debug 

    # ejs.es:13908                      }
    
VARIABLE:   [fields-00]  private var fields : Object
VARIABLE:   [_keyValue-00]  internal-ed363076473b51ca685af450cc662b39-0 var _keyValue : Object
VARIABLE:   [_errors-01]  internal-ed363076473b51ca685af450cc662b39-0 var _errors : Object
VARIABLE:   [_cacheAssoc-02]  internal-ed363076473b51ca685af450cc662b39-0 var _cacheAssoc : Object

CLASS:      class Column extends Object
            #  Class Details: 27 class traits, 2 instance traits, requested slot 160

FUNCTION:   [Column-26]  -constructor- const function Column(name: String, accessor: Boolean, ejsType: Type, sqlType: String) : void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private accessor : Boolean
     ARG:   [arg-02]   private ejsType : Type
     ARG:   [arg-03]   private sqlType : String

    0000: [0] 41 04 04 07 0a 0d .......... initDefaultArgs8 <4> <6> <9> <12> <15> 
    0006: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0011: [1] 96 ......................... putLocalSlot2 
    0012: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0014: [1] 97 ......................... putLocalSlot3 
    0015: [0] 33 10 c6 d9 01 dc 96 03 .... debug 

    # ejs.es:13923                          this.ejsType = ejsType

    0023: [0] 5d ......................... getLocalSlot2 
    0024: [1] 57 ......................... loadThis 
    0025: [2] b3 fa 60 e4 2c ............. putObjName <ejsType> <public> 
    0030: [0] 33 10 c8 d9 01 a2 97 03 .... debug 

    # ejs.es:13924                          this.sqlType = sqlType

    0038: [0] 5e ......................... getLocalSlot3 
    0039: [1] 57 ......................... loadThis 
    0040: [2] b3 9c b0 01 e4 2c .......... putObjName <sqlType> <public> 
    0046: [0] be ......................... return 
    0047: [0] 33 10 ca d9 01 9a 32 ....... debug 

    # ejs.es:13925                      }
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [accessor-01]  private var accessor : Boolean
VARIABLE:   [ejsType-02]  private var ejsType : Type
VARIABLE:   [sqlType-03]  private var sqlType : String
VARIABLE:   [ejsType-00]  public var ejsType : Object
VARIABLE:   [sqlType-01]  public var sqlType : Object

FUNCTION:   [plural-161]  ejs.db.mapper function plural(name: String) : String

     ARG:   [arg-00]   private name : String

    0000: [0] 33 10 d4 d9 01 ce 98 03 .... debug 

    # ejs.es:13930                      name + "s"

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 56 f4 98 03 ................ loadString <s> 
    0013: [2] 00 ......................... add 
    0014: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name : String

FUNCTION:   [singular-162]  ejs.db.mapper function singular(name: String) : String

     ARG:   [arg-00]   private name : String
   LOCAL:   [local-01] var s : String

    0000: [0] 33 10 dc d9 01 e2 99 03 .... debug 

    # ejs.es:13934                      var s: String = name + "s"

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 56 f4 98 03 ................ loadString <s> 
    0013: [2] 00 ......................... add 
    0014: [1] 95 ......................... putLocalSlot1 
    0015: [0] 33 10 de d9 01 a8 9a 03 .... debug 

    # ejs.es:13935                      if (name.endsWith("ies")) {

    0023: [0] 5b ......................... getLocalSlot0 
    0024: [1] 56 f0 9a 03 ................ loadString <ies> 
    0028: [2] 1e f8 9a 03 e4 2c 02 ....... callObjName <endsWith> <public> <argc: 1> 
    0035: [0] 93 ......................... pushResult 
    0036: [1] 13 1c ...................... branchFalse8 <addr: 66> 
    0038: [0] 33 10 e0 d9 01 8a 9b 03 .... debug 

    # ejs.es:13936                          return name.slice(0,-3) + "y"

    0046: [0] 5b ......................... getLocalSlot0 
    0047: [1] 44 ......................... load0 
    0048: [2] 47 ......................... load3 
    0049: [3] 88 ......................... neg 
    0050: [3] 1e 96 f1 01 e4 2c 04 ....... callObjName <slice> <public> <argc: 2> 
    0057: [0] 93 ......................... pushResult 
    0058: [1] 56 de 9b 03 ................ loadString <y> 
    0062: [2] 00 ......................... add 
    0063: [1] bf ......................... returnValue 
    0064: [0] 3e 5c ...................... goto8 <addr: 158> 
    0066: [0] 33 10 e2 d9 01 e2 9b 03 .... debug 

    # ejs.es:13937                      } else if (name.endsWith("es")) {

    0074: [0] 5b ......................... getLocalSlot0 
    0075: [1] 56 b6 9c 03 ................ loadString <es> 
    0079: [2] 1e f8 9a 03 e4 2c 02 ....... callObjName <endsWith> <public> <argc: 1> 
    0086: [0] 93 ......................... pushResult 
    0087: [1] 13 17 ...................... branchFalse8 <addr: 112> 
    0089: [0] 33 10 e4 d9 01 bc 9c 03 .... debug 

    # ejs.es:13938                          return name.slice(0,-2)

    0097: [0] 5b ......................... getLocalSlot0 
    0098: [1] 44 ......................... load0 
    0099: [2] 46 ......................... load2 
    0100: [3] 88 ......................... neg 
    0101: [3] 1e 96 f1 01 e4 2c 04 ....... callObjName <slice> <public> <argc: 2> 
    0108: [0] 93 ......................... pushResult 
    0109: [1] bf ......................... returnValue 
    0110: [0] 3e 2e ...................... goto8 <addr: 158> 
    0112: [0] 33 10 e6 d9 01 84 9d 03 .... debug 

    # ejs.es:13939                      } else if (name.endsWith("s")) {

    0120: [0] 5b ......................... getLocalSlot0 
    0121: [1] 56 f4 98 03 ................ loadString <s> 
    0125: [2] 1e f8 9a 03 e4 2c 02 ....... callObjName <endsWith> <public> <argc: 1> 
    0132: [0] 93 ......................... pushResult 
    0133: [1] 13 17 ...................... branchFalse8 <addr: 158> 
    0135: [0] 33 10 e8 d9 01 d6 9d 03 .... debug 

    # ejs.es:13940                          return name.slice(0,-1)

    0143: [0] 5b ......................... getLocalSlot0 
    0144: [1] 44 ......................... load0 
    0145: [2] 45 ......................... load1 
    0146: [3] 88 ......................... neg 
    0147: [3] 1e 96 f1 01 e4 2c 04 ....... callObjName <slice> <public> <argc: 2> 
    0154: [0] 93 ......................... pushResult 
    0155: [1] bf ......................... returnValue 
    0156: [0] 3e 00 ...................... goto8 <addr: 158> 
    0158: [0] 33 10 ec d9 01 9e 9e 03 .... debug 

    # ejs.es:13942                      return name.toPascal()

    0166: [0] 5b ......................... getLocalSlot0 
    0167: [1] 1e a0 2f e4 2c 00 .......... callObjName <toPascal> <public> <argc: 0> 
    0173: [0] 93 ......................... pushResult 
    0174: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [s-01]  private var s : String

FUNCTION:   [mapType-163]  ejs.db.mapper function mapType(value: Object) : String

     ARG:   [arg-00]   private value : Object

    0000: [0] 33 10 fc d9 01 ca 9f 03 .... debug 

    # ejs.es:13950                      if (value is Date) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0011: [2] 43 ......................... isA 
    0012: [1] 13 21 ...................... branchFalse8 <addr: 47> 
    0014: [0] 33 10 fe d9 01 84 a0 03 .... debug 

    # ejs.es:13951                          return "%Ld".format((new Date(value)).time)

    0022: [0] 56 8a b7 02 ................ loadString <%Ld> 
    0026: [1] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0028: [2] 89 ......................... new 
    0029: [2] 5b ......................... getLocalSlot0 
    0030: [3] 20 02 ...................... callConstructor <argc: 1> 
    0032: [2] 7b 92 b7 02 e4 2c .......... getObjName <time> <public> 
    0038: [2] 1e e2 46 00 02 ............. callObjName <format> <> <argc: 1> 
    0043: [0] 93 ......................... pushResult 
    0044: [1] bf ......................... returnValue 
    0045: [0] 3e 25 ...................... goto8 <addr: 84> 
    0047: [0] 33 10 80 da 01 f4 a0 03 .... debug 

    # ejs.es:13952                      } else if (value is Number) {

    0055: [0] 5b ......................... getLocalSlot0 
    0056: [1] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0059: [2] 43 ......................... isA 
    0060: [1] 13 16 ...................... branchFalse8 <addr: 84> 
    0062: [0] 33 10 82 da 01 c0 a1 03 .... debug 

    # ejs.es:13953                          return "%Ld".format(value)

    0070: [0] 56 8a b7 02 ................ loadString <%Ld> 
    0074: [1] 5b ......................... getLocalSlot0 
    0075: [2] 1e e2 46 00 02 ............. callObjName <format> <> <argc: 1> 
    0080: [0] 93 ......................... pushResult 
    0081: [1] bf ......................... returnValue 
    0082: [0] 3e 00 ...................... goto8 <addr: 84> 
    0084: [0] 33 10 86 da 01 8e a2 03 .... debug 

    # ejs.es:13955                      return value

    0092: [0] 5b ......................... getLocalSlot0 
    0093: [1] bf ......................... returnValue 
    
VARIABLE:   [value-00]  private var value : Object

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 185)
#
0000    public var stderr
0001    public var stdin
0002    public var stdout
0003    ejs var App: Type
0004    ejs function appInit
0005    ejs var Array: Type
0006    ejs var BinaryStream: Type
0007    ejs var Block: Type
0008    ejs var Boolean: Type
0009    ejs var ByteArray: Type
0010    ejs var Cmd: Type
0011    ejs var CmdArgs: Type
0012    public function gc
0013    public function readFile
0014    ejs var Config: Type
0015    ejs var Date: Type
0016    ejs var Emitter: Type
0017    internal-ed363076473b51ca685af450cc662b39-0 var Endpoint: Type
0018    ejs var ArgError: Type
0019    ejs var ArithmeticError: Type
0020    ejs var AssertError: Type
0021    ejs var InstructionError: Type
0022    ejs var Error: Type
0023    ejs var IOError: Type
0024    ejs var InternalError: Type
0025    ejs var MemoryError: Type
0026    ejs var OutOfBoundsError: Type
0027    ejs var ReferenceError: Type
0028    ejs var ResourceError: Type
0029    ejs var SecurityError: Type
0030    ejs var StateError: Type
0031    ejs var SyntaxError: Type
0032    ejs var TypeError: Type
0033    ejs var URIError: Type
0034    ejs var Event: Type
0035    ejs var ErrorEvent: Type
0036    ejs var File: Type
0037    ejs var FileSystem: Type
0038    ejs var Frame: Type
0039    ejs var Function: Type
0040    ejs function makeGetter
0041    ejs function clearBoundThis
0042    ejs var GC: Type
0043    public var EJSCRIPT: Boolean
0044    public var ECMA: Boolean
0045    public var ejs
0046    public var public
0047    public var internal
0048    public var iterator
0049    public var CONFIG
0050    ejs var TODO: Boolean
0051    ejs var FUTURE: Boolean
0052    ejs var ASC: Boolean
0053    ejs var DOC_ONLY: Boolean
0054    ejs var DEPRECATED: Boolean
0055    ejs var boolean
0056    ejs var double
0057    ejs var num
0058    ejs var string
0059    ejs var false: Boolean
0060    ejs var global: Object
0061    ejs var null
0062    ejs var Infinity
0063    ejs var NegativeInfinity
0064    ejs var NaN
0065    ejs var true: Boolean
0066    ejs var undefined
0067    ejs var void
0068    ejs function assert
0069    ejs function breakpoint
0070    ejs function cloneBase
0071    ejs function decodeURI
0072    ejs function dump
0073    ejs function dumpAll
0074    ejs function dumpDef
0075    ejs function encodeURI
0076    ejs function escape
0077    ejs function md5
0078    ejs function blend
0079    ejs function eval
0080    ejs function formatStack
0081    ejs function hashcode
0082    ejs function isNaN
0083    ejs function isFinite
0084    ejs function load
0085    ejs function print
0086    ejs function parse
0087    ejs function parseFloat
0088    ejs function parseInt
0089    ejs function printHash
0090    ejs function instanceOf
0091    ejs function error
0092    ejs function input
0093    ejs function output
0094    ejs var Http: Type
0095    iterator var Iterable: Type
0096    iterator var Iterator: Type
0097    iterator var StopIteration: Type
0098    ejs var JSON: Type
0099    ejs function deserialize
0100    ejs function serialize
0101    ejs var Locale: Type
0102    ejs var Logger: Type
0103    ejs var Math: Type
0104    ejs var Memory: Type
0105    ejs var Namespace: Type
0106    ejs var Null: Type
0107    ejs var Number: Type
0108    ejs var Object: Type
0109    ejs var Path: Type
0110    ejs var Promise: Type
0111    ejs var Reflect: Type
0112    ejs function typeOf
0113    ejs var RegExp: Type
0114    ejs var Socket: Type
0115    ejs var Stream: Type
0116    ejs var String: Type
0117    ejs var System: Type
0118    ejs var TextStream: Type
0119    ejs var Timer: Type
0120    ejs function setInterval
0121    ejs function setTimeout
0122    ejs var TimerEvent: Type
0123    ejs var Type: Type
0124    ejs var Uri: Type
0125    ejs function decodeUri
0126    ejs function decodeUriComponent
0127    ejs var Void: Type
0128    ejs var Worker: Type
0129    ejs.worker var self: Worker
0130    ejs.worker function exit
0131    ejs.worker function postMessage
0132    ejs.worker function onerror
0133    ejs.worker function onmessage
0134    ejs var XML: Type
0135    ejs var XMLHttp: Type
0136    ejs var XMLList: Type
0137    ejs.cjs function require
0138    public var Loader: Type
0139    public function basename
0140    public function chdir
0141    public function chmod
0142    public function cp
0143    public function dirname
0144    public function exists
0145    public function extension
0146    public function freeSpace
0147    public function isDir
0148    public function kill
0149    public function ls
0150    public function find
0151    public function mkdir
0152    public function mv
0153    public function pwd
0154    public function rm
0155    public function rmdir
0156    public function tempname
0157    ejs.db var Database: Type
0158    ejs.db var DatabaseConnector: Type
0159    public var Record: Type
0160    ejs.db.mapper var Column: Type
0161    ejs.db.mapper function plural
0162    ejs.db.mapper function singular
0163    ejs.db.mapper function mapType

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "App" class (Num slots 52, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function App-initializer
0027    public var config: Object
0028    [ejs::App,private] var _errorStream
0029    [ejs::App,private] var _inputStream
0030    [ejs::App,private] var _outputStream
0031    internal-ed363076473b51ca685af450cc662b39-0 var defaultConfig
0032    public function args
0033    public function dir
0034    public function chdir
0035    public function exeDir
0036    public function exePath
0037    public function errorStream
0038    public function exit
0039    public function getenv
0040    public function inputStream
0041    public var logger
0042    public function name
0043    public function noexit
0044    public function outputStream
0045    public function putenv
0046    public function search
0047    public function createSearch
0048    public function serviceEvents
0049    public function sleep
0050    public function title
0051    public function version

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Array" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Array
0027    public function append
0028    public function clear
0029    public function compact
0030    public function concat
0031    public function contains
0032    public function every
0033    public function filter
0034    public function find
0035    public function findAll
0036    public function forEach
0037    public function indexOf
0038    public function insert
0039    public function join
0040    public function lastIndexOf
0041    public function length
0042    public function map
0043    public function pop
0044    public function push
0045    public function reject
0046    public function remove
0047    public function reverse
0048    public function shift
0049    public function slice
0050    public function some
0051    public function sort
0052    public function splice
0053    public function transform
0054    public function unique
0055    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "BinaryStream" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function BinaryStream
0027    -initializer- function BinaryStream-initializer
0028    public var BigEndian
0029    public var LittleEndian
0030    public function addListener
0031    public function async
0032    public function available
0033    public function close
0034    public function encoding
0035    public function endian
0036    public function flush
0037    public function read
0038    public function readBoolean
0039    public function readByte
0040    public function readDate
0041    public function readDouble
0042    public function readInteger
0043    public function readLong
0044    public function readString
0045    public function readXML
0046    public function removeListener
0047    public function room
0048    public function write
0049    public function writeByte
0050    public function writeShort
0051    public function writeDouble
0052    public function writeInteger
0053    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs::BinaryStream,private] var inbuf
0001    [ejs::BinaryStream,private] var outbuf
0002    [ejs::BinaryStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Block" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Boolean" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 64, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function ByteArray
0027    -initializer- function ByteArray-initializer
0028    public var LittleEndian
0029    public var BigEndian
0030    public function addListener
0031    public function available
0032    public function async
0033    public function close
0034    public function compact
0035    public function copyIn
0036    public function copyOut
0037    public function encoding
0038    public function endian
0039    public function flush
0040    public function length
0041    public function MD5
0042    public function read
0043    public function readBoolean
0044    public function readByte
0045    public function readDate
0046    public function readDouble
0047    public function readInteger
0048    public function readLong
0049    public function readPosition
0050    public function readShort
0051    public function readString
0052    public function removeListener
0053    public function reset
0054    public function room
0055    public function write
0056    public function writeByte
0057    public function writeShort
0058    public function writeDouble
0059    public function writeInteger
0060    public function writeLong
0061    public function writePosition
0062    public function input
0063    public function output

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Cmd" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function sh
0027    public function run
0028    public function daemon
0029    public function runx

#
#  Instance slot assignments for the "Cmd" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "CmdArgs" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function CmdArgs
0027    [ejs::CmdArgs,private] function parseTemplate
0028    [ejs::CmdArgs,private] function validate

#
#  Instance slot assignments for the "CmdArgs" class (Num prop 4, num inherited 0)
#
0000    public var args: Array
0001    public var options: Object
0002    [ejs::CmdArgs,private] var ranges: Object
0003    [ejs::CmdArgs,private] var aliases: Object

#
#  Class slot assignments for the "Config" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public var Debug: Boolean
0027    public var CPU
0028    public var OS
0029    public var Product
0030    public var Title
0031    public var Version
0032    public var LibDir
0033    public var BinDir
0034    public var ModDir

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Date" class (Num slots 87, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Date
0027    public function day
0028    public function dayOfYear
0029    public function date
0030    public function elapsed
0031    public function format
0032    public function formatUTC
0033    public function fullYear
0034    public function getDate
0035    public function getDay
0036    public function getFullYear
0037    public function getHours
0038    public function getMilliseconds
0039    public function getMinutes
0040    public function getMonth
0041    public function getSeconds
0042    public function getTime
0043    public function getTimezoneOffset
0044    public function getUTCDate
0045    public function getUTCDay
0046    public function getUTCFullYear
0047    public function getUTCHours
0048    public function getUTCMilliseconds
0049    public function getUTCMinutes
0050    public function getUTCMonth
0051    public function getUTCSeconds
0052    public function hours
0053    public function milliseconds
0054    public function minutes
0055    public function month
0056    public function nanoAge
0057    public function nextDay
0058    public function now
0059    public function parseDate
0060    public function parseUTCDate
0061    public function parse
0062    public function seconds
0063    public function setDate
0064    public function setFullYear
0065    public function setHours
0066    public function setMilliseconds
0067    public function setMinutes
0068    public function setMonth
0069    public function setSeconds
0070    public function setTime
0071    public function setUTCDate
0072    public function setUTCFullYear
0073    public function setUTCHours
0074    public function setUTCMilliseconds
0075    public function setUTCMinutes
0076    public function setUTCMonth
0077    public function setUTCSeconds
0078    public function time
0079    public function toDateString
0080    public function toISOString
0081    public function toLocaleDateString
0082    public function toLocaleTimeString
0083    public function toTimeString
0084    public function toUTCString
0085    public function UTC
0086    public function year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Emitter" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener

#
#  Instance slot assignments for the "Emitter" class (Num prop 1, num inherited 0)
#
0000    [ejs::Emitter,private] var endpoints: Object

#
#  Class slot assignments for the "Endpoint" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 4, num inherited 0)
#
0000    public var callback
0001    public var name
0002    public var active: Boolean
0003    public var again: Boolean

#
#  Class slot assignments for the "ArgError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "AssertError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InstructionError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Error" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "IOError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InternalError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "MemoryError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ReferenceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ResourceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SecurityError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SecurityError

#
#  Instance slot assignments for the "SecurityError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "StateError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SyntaxError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "TypeError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "URIError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Event" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event

#
#  Instance slot assignments for the "Event" class (Num prop 2, num inherited 0)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "ErrorEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function ErrorEvent

#
#  Instance slot assignments for the "ErrorEvent" class (Num prop 6, num inherited 2)
#
0000    public var data
0001    public var timestamp
0002    public var message
0003    public var filename
0004    public var lineno
0005    public var stack

#
#  Class slot assignments for the "File" class (Num slots 47, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function File
0027    public function addListener
0028    public function async
0029    public function canRead
0030    public function canWrite
0031    public function close
0032    public function encoding
0033    public function flush
0034    public function isOpen
0035    public function open
0036    public function options
0037    public function path
0038    public function position
0039    public function read
0040    public function readBytes
0041    public function readString
0042    public function remove
0043    public function removeListener
0044    public function size
0045    public function truncate
0046    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "FileSystem" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function FileSystem
0027    public function hasDrives
0028    public function newline
0029    public function root
0030    public function separators

#
#  Instance slot assignments for the "FileSystem" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Frame" class (Num slots 31, num inherited 31)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Frame" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Function" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function enabled
0027    public function workQuota
0028    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Http" class (Num slots 118, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Http
0027    -initializer- function Http-initializer
0028    public var Continue
0029    public var Ok
0030    public var Created
0031    public var Accepted
0032    public var NotAuthoritative
0033    public var NoContent
0034    public var Reset
0035    public var Partial
0036    public var MultipleChoice
0037    public var MovedPermanently
0038    public var MovedTemporarily
0039    public var SeeOther
0040    public var NotModified
0041    public var UseProxy
0042    public var BadRequest
0043    public var Unauthorized
0044    public var PaymentRequired
0045    public var Forbidden
0046    public var NotFound
0047    public var BadMethod
0048    public var NotAccepted
0049    public var ProxyAuth
0050    public var ClientTimeout
0051    public var Conflict
0052    public var Gone
0053    public var LengthRequired
0054    public var PrecondFailed
0055    public var EntityTooLarge
0056    public var ReqTooLong
0057    public var UnsupportedType
0058    public var ServerError
0059    public var NotImplemented
0060    public var BadGateway
0061    public var Unavailable
0062    public var GatewayTimeout
0063    public var Version
0064    public function addListener
0065    public function async
0066    public function chunkSize
0067    public function close
0068    public function connect
0069    public function certificate
0070    public function contentLength
0071    public function contentType
0072    public function date
0073    public function del
0074    public function encoding
0075    public function expires
0076    public function finalize
0077    public function flush
0078    public function followRedirects
0079    public function form
0080    public function get
0081    public function getRequestHeaders
0082    public function head
0083    public function header
0084    public function headers
0085    public function isSecure
0086    public function key
0087    public function lastModified
0088    public function method
0089    public function options
0090    public function post
0091    public function put
0092    public function read
0093    public function readString
0094    public function readLines
0095    public function readXml
0096    public function removeListener
0097    public function response
0098    public function retries
0099    public function setCredentials
0100    public function setHeader
0101    public function setHeaders
0102    public function status
0103    public function statusMessage
0104    public function success
0105    public function timeout
0106    public function trace
0107    public function upload
0108    public function uri
0109    public function wait
0110    public function write
0111    public function addHeader
0112    public function bodyLength
0113    public function code
0114    public function codeString
0115    public function available
0116    public function contentEncoding
0117    public function mimeType

#
#  Instance slot assignments for the "Http" class (Num prop 1, num inherited 0)
#
0000    [ejs::Http,private] var _response

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Iterator" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function parse
0027    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Locale" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Locale
0027    -initializer- function Locale-initializer
0028    public var textEncoding

#
#  Instance slot assignments for the "Locale" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Logger" class (Num slots 53, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Logger
0027    -initializer- function Logger-initializer
0028    public var Off
0029    public var Error
0030    public var Warn
0031    public var Info
0032    public var Config
0033    public var All
0034    public function addListener
0035    public function async
0036    public function close
0037    public function filter
0038    public function flush
0039    public function level
0040    public function match
0041    public function name
0042    public function outstream
0043    public function parent
0044    public function debug
0045    public function config
0046    public function error
0047    public function info
0048    public function read
0049    public function removeListener
0050    public function write
0051    public function warn
0052    [ejs::Logger,private] function emit

#
#  Instance slot assignments for the "Logger" class (Num prop 6, num inherited 0)
#
0000    [ejs::Logger,private] var _filter: Function
0001    [ejs::Logger,private] var _level
0002    [ejs::Logger,private] var _pattern
0003    [ejs::Logger,private] var _name
0004    [ejs::Logger,private] var _outstream: Stream
0005    [ejs::Logger,private] var _parent: Logger

#
#  Class slot assignments for the "Math" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Math-initializer
0027    public var E
0028    public var LN2
0029    public var LN10
0030    public var LOG2E
0031    public var LOG10E
0032    public var PI
0033    public var SQRT1_2
0034    public var SQRT2
0035    public function abs
0036    public function acos
0037    public function asin
0038    public function atan
0039    public function atan2
0040    public function ceil
0041    public function cos
0042    public function exp
0043    public function floor
0044    public function log10
0045    public function log
0046    public function max
0047    public function min
0048    public function pow
0049    public function random
0050    public function round
0051    public function sin
0052    public function sqrt
0053    public function tan

#
#  Instance slot assignments for the "Math" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Memory" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function allocated
0027    public function callback
0028    public function maximum
0029    public function peak
0030    public function redline
0031    public function resident
0032    public function stack
0033    public function system
0034    public function stats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Namespace" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Namespace" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Null" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Number" class (Num slots 49, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Number
0027    -initializer- function Number-initializer
0028    public var MAX_VALUE: Number
0029    public var MIN_VALUE: Number
0030    public var NaN: Number
0031    public var NEGATIVE_INFINITY: Number
0032    public var POSITIVE_INFINITY: Number
0033    public var MaxValue: Number
0034    public var MinValue: Number
0035    public function abs
0036    public function ceil
0037    public function floor
0038    public function isFinite
0039    public function isNaN
0040    public function round
0041    public function toExponential
0042    public function toFixed
0043    public function toPrecision
0044    public function byte
0045    public function integral
0046    public function max
0047    public function min
0048    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Object" class (Num slots 26, num inherited 0)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    public function create
0005    public function defineProperty
0006    public function defineProperties
0007    public function freeze
0008    iterator function get
0009    public function getOwnPropertyDescriptor
0010    public function getOwnPropertyNames
0011    public function getOwnPrototypeOf
0012    iterator function getValues
0013    public function hasOwnProperty
0014    public function isExtensible
0015    public function isFrozen
0016    public function isPrototypeOf
0017    public function isSealed
0018    public function keys
0019    public function preventExtensions
0020    public function propertyIsEnumerable
0021    public function seal
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Path" class (Num slots 85, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Path
0027    public function absolute
0028    public function accessed
0029    public function basename
0030    public function components
0031    public function contains
0032    public function copy
0033    public function created
0034    public function dirname
0035    public function endsWith
0036    public function exists
0037    public function extension
0038    public function find
0039    public function files
0040    public function hasDrive
0041    public function isAbsolute
0042    public function isDir
0043    public function isLink
0044    public function isRegular
0045    public function isRelative
0046    public function join
0047    public function joinExt
0048    public function length
0049    public function linkTarget
0050    public function makeDir
0051    public function makeLink
0052    public function makeTemp
0053    public function map
0054    public function mimeType
0055    public function modified
0056    public function name
0057    public function natural
0058    public function normalize
0059    public function open
0060    public function openTextStream
0061    public function openBinaryStream
0062    public function parent
0063    public function perms
0064    public function portable
0065    public function readBytes
0066    public function readLines
0067    public function readString
0068    public function readXML
0069    public function relative
0070    public function remove
0071    public function removeAll
0072    public function rename
0073    public function replaceExt
0074    public function resolve
0075    public function same
0076    public function separator
0077    public function size
0078    public function startsWith
0079    public function toLower
0080    public function trimEnd
0081    public function trimExt
0082    public function trimStart
0083    public function truncate
0084    public function write

#
#  Instance slot assignments for the "Path" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Promise" class (Num slots 47, num inherited 35)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener
0035    -constructor- function Promise
0036    internal-ed363076473b51ca685af450cc662b39-0 function addCallback
0037    internal-ed363076473b51ca685af450cc662b39-0 function addCancelback
0038    internal-ed363076473b51ca685af450cc662b39-0 function addErrback
0039    internal-ed363076473b51ca685af450cc662b39-0 function emitSuccess
0040    internal-ed363076473b51ca685af450cc662b39-0 function emitError
0041    internal-ed363076473b51ca685af450cc662b39-0 function emitCancel
0042    internal-ed363076473b51ca685af450cc662b39-0 function cancel
0043    internal-ed363076473b51ca685af450cc662b39-0 function then
0044    internal-ed363076473b51ca685af450cc662b39-0 function timeout
0045    internal-ed363076473b51ca685af450cc662b39-0 function wait
0046    [ejs::Promise,private] function issue

#
#  Instance slot assignments for the "Promise" class (Num prop 3, num inherited 1)
#
0000    [ejs::Emitter,private] var endpoints
0001    [ejs::Promise,private] var timer
0002    [ejs::Promise,private] var fired: Boolean

#
#  Class slot assignments for the "Reflect" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Reflect
0027    public function base
0028    public function isType
0029    public function type
0030    public function name

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [ejs::Reflect,private] var obj: Object

#
#  Class slot assignments for the "RegExp" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function RegExp
0027    public function lastIndex
0028    public function exec
0029    public function global
0030    public function ignoreCase
0031    public function multiline
0032    public function source
0033    public function matched
0034    public function replace
0035    public function split
0036    public function start
0037    public function sticky
0038    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Socket" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Socket
0027    public function addListener
0028    public function accept
0029    public function address
0030    public function async
0031    public function close
0032    public function connect
0033    public function encoding
0034    public function flush
0035    public function listen
0036    public function port
0037    public function read
0038    public function remoteAddress
0039    public function removeListener
0040    public function write

#
#  Instance slot assignments for the "Socket" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Stream" class (Num slots 7, num inherited 0)
#
0000    public function addListener
0001    public function async
0002    public function close
0003    public function flush
0004    public function read
0005    public function removeListener
0006    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "String" class (Num slots 68, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function String
0027    public function caseCompare
0028    public function caselessCompare
0029    public function charAt
0030    public function charCodeAt
0031    public function concat
0032    public function contains
0033    public function endsWith
0034    public function format
0035    public function fromCharCode
0036    public function indexOf
0037    public function isDigit
0038    public function isAlpha
0039    public function isAlphaNum
0040    public function isLower
0041    public function isSpace
0042    public function isUpper
0043    public function lastIndexOf
0044    public function length
0045    public function match
0046    public function parseJSON
0047    public function toCamel
0048    public function toPascal
0049    public function printable
0050    public function quote
0051    public function remove
0052    public function replace
0053    public function reverse
0054    public function search
0055    public function slice
0056    public function split
0057    public function startsWith
0058    public function substring
0059    public function times
0060    public function tokenize
0061    public function toLower
0062    public function toUpper
0063    public function trim
0064    public function trimStart
0065    public function trimEnd
0066    public function -
0067    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 36, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function System-initializer
0027    public var Bufsize: Number
0028    public function hostname
0029    public function ipaddr
0030    public function run
0031    public function runx
0032    public function daemon
0033    public function sh
0034    public function cmd
0035    public function exec

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TextStream" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TextStream
0027    public function addListener
0028    public function async
0029    public function available
0030    public function close
0031    public function encoding
0032    public function fill
0033    public function flush
0034    public function read
0035    public function readLine
0036    public function readLines
0037    public function readString
0038    public function removeListener
0039    public function write
0040    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs::TextStream,private] var newline: String
0001    [ejs::TextStream,private] var inbuf: ByteArray
0002    [ejs::TextStream,private] var format: String
0003    [ejs::TextStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Timer" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Timer
0027    public function drift
0028    public function period
0029    public function restart
0030    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TimerEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function TimerEvent

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 2, num inherited 2)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "Type" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Uri" class (Num slots 65, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Uri
0027    public function basename
0028    public function complete
0029    public function components
0030    public function decode
0031    public function decodeComponent
0032    public function dirname
0033    public function encode
0034    public function encodeComponent
0035    public function endsWith
0036    public function extension
0037    public function hasExtension
0038    public function hasHost
0039    public function hasPort
0040    public function hasQuery
0041    public function hasReference
0042    public function hasScheme
0043    public function host
0044    public function isAbsolute
0045    public function isDir
0046    public function isRegular
0047    public function isRelative
0048    public function join
0049    public function joinExt
0050    public function mimeType
0051    public function normalize
0052    public function path
0053    public function port
0054    public function scheme
0055    public function query
0056    public function reference
0057    public function relative
0058    public function replaceExt
0059    public function same
0060    public function startsWith
0061    public function trimEnd
0062    public function trimExt
0063    public function trimStart
0064    public function uri

#
#  Instance slot assignments for the "Uri" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Void" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Worker" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Worker
0027    public function eval
0028    public function exit
0029    public function join
0030    public function load
0031    public function preload
0032    public function preeval
0033    public function lookup
0034    public function postMessage
0035    public function terminate
0036    public function waitForMessage

#
#  Instance slot assignments for the "Worker" class (Num prop 4, num inherited 0)
#
0000    public var onclose: Function
0001    public var onmessage: Function
0002    public var onerror: Function
0003    public var name: String

#
#  Class slot assignments for the "XML" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XML
0027    public function load
0028    public function save
0029    public function length
0030    public function name

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "XMLHttp" class (Num slots 48, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLHttp
0027    -initializer- function XMLHttp-initializer
0028    public var Uninitialized
0029    public var Open
0030    public var Sent
0031    public var Receiving
0032    public var Loaded
0033    public function abort
0034    public function http
0035    public function readyState
0036    public function responseText
0037    public function responseXML
0038    public function responseBody
0039    public function status
0040    public function statusText
0041    public function getAllResponseHeaders
0042    public function getResponseHeader
0043    public function open
0044    public function send
0045    public function setRequestHeader
0046    [ejs::XMLHttp,private] function callback
0047    [ejs::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs::XMLHttp,private] var hp: Http
0001    [ejs::XMLHttp,private] var state: Number
0002    [ejs::XMLHttp,private] var response: ByteArray
0003    public var onreadystatechange: Function

#
#  Class slot assignments for the "XMLList" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLList
0027    public function length
0028    public function name

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Loader" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Loader-initializer
0027    public var mainId
0028    [Loader,private] var signatures
0029    [Loader,private] var timestamps
0030    [Loader,private] var defaultExtensions
0031    [Loader,private] var config
0032    internal-ed363076473b51ca685af450cc662b39-0 function init
0033    public function require
0034    public function load
0035    public function cached
0036    public function wrap
0037    [Loader,private] function locate
0038    public function setConfig

#
#  Instance slot assignments for the "Loader" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Database" class (Num slots 59, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Database
0027    [ejs.db::Database,private] var defaultDb: Database
0028    public function addColumn
0029    public function addIndex
0030    public function changeColumn
0031    public function close
0032    public function commit
0033    public function connect
0034    public function connection
0035    public function createDatabase
0036    public function createTable
0037    public function dataTypeToSqlType
0038    public function defaultDatabase
0039    public function destroyDatabase
0040    public function destroyTable
0041    public function endTransaction
0042    public function getColumns
0043    public function getTables
0044    public function getNumRows
0045    public function name
0046    public function query
0047    public function removeColumns
0048    public function removeIndex
0049    public function renameColumn
0050    public function renameTable
0051    public function rollback
0052    public function sql
0053    public function sqlTypeToDataType
0054    public function sqlTypeToEjsType
0055    public function startTransaction
0056    public function trace
0057    public function transaction
0058    public function quote

#
#  Instance slot assignments for the "Database" class (Num prop 4, num inherited 0)
#
0000    [ejs.db::Database,private] var _adapter: Object
0001    [ejs.db::Database,private] var _connection: String
0002    [ejs.db::Database,private] var _name: String
0003    [ejs.db::Database,private] var _traceAll: Boolean

#
#  Class slot assignments for the "DatabaseConnector" class (Num slots 22, num inherited 0)
#
0000    public function addColumn
0001    public function addIndex
0002    public function changeColumn
0003    public function close
0004    public function commit
0005    public function connect
0006    public function createDatabase
0007    public function createTable
0008    public function dataTypeToSqlType
0009    public function destroyDatabase
0010    public function destroyTable
0011    public function getColumns
0012    public function getTables
0013    public function removeColumns
0014    public function removeIndex
0015    public function renameColumn
0016    public function renameTable
0017    public function rollback
0018    public function sql
0019    public function sqlTypeToDataType
0020    public function sqlTypeToEjsType
0021    public function startTransaction

#
#  Instance slot assignments for the "DatabaseConnector" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Record" class (Num slots 102, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Record
0027    -initializer- function Record-initializer
0028    internal-ed363076473b51ca685af450cc662b39-0 var _assocName: String
0029    internal-ed363076473b51ca685af450cc662b39-0 var _belongsTo: Array
0030    internal-ed363076473b51ca685af450cc662b39-0 var _className: String
0031    internal-ed363076473b51ca685af450cc662b39-0 var _columns: Object
0032    internal-ed363076473b51ca685af450cc662b39-0 var _hasOne: Array
0033    internal-ed363076473b51ca685af450cc662b39-0 var _hasMany: Array
0034    internal-ed363076473b51ca685af450cc662b39-0 var _db: Database
0035    internal-ed363076473b51ca685af450cc662b39-0 var _foreignId: String
0036    internal-ed363076473b51ca685af450cc662b39-0 var _keyName: String
0037    internal-ed363076473b51ca685af450cc662b39-0 var _model: Type
0038    internal-ed363076473b51ca685af450cc662b39-0 var _tableName: String
0039    internal-ed363076473b51ca685af450cc662b39-0 var _trace: Boolean
0040    internal-ed363076473b51ca685af450cc662b39-0 var _validations: Array
0041    internal-ed363076473b51ca685af450cc662b39-0 var _beforeFilters: Array
0042    internal-ed363076473b51ca685af450cc662b39-0 var _afterFilters: Array
0043    internal-ed363076473b51ca685af450cc662b39-0 var _wrapFilters: Array
0044    internal-ed363076473b51ca685af450cc662b39-0 var ErrorMessages
0045    public function initialize
0046    public function afterFilter
0047    public function beforeFilter
0048    public function belongsTo
0049    [Record,private] function cachedRead
0050    [Record,private] function checkFormat
0051    [Record,private] function checkNumber
0052    [Record,private] function checkPresent
0053    [Record,private] function checkUnique
0054    [Record,private] function coerceToEjsTypes
0055    [Record,private] function createAssociations
0056    [Record,private] function createRecord
0057    public function error
0058    public function find
0059    public function findAll
0060    public function findOneWhere
0061    public function findWhere
0062    public function getColumnNames
0063    public function getColumnTitles
0064    public function getColumnType
0065    public function getDb
0066    public function getErrors
0067    public function getKeyName
0068    public function getNumRows
0069    [Record,private] function getSchema
0070    public function getTableName
0071    public function hasAndBelongsToMany
0072    public function hasError
0073    public function hasMany
0074    public function hasOne
0075    [Record,private] function innerFind
0076    [Record,private] function makeLazyReader
0077    [Record,private] function mapSqlTypeToEjs
0078    [Record,private] function prepareValue
0079    [Record,private] function readRecords
0080    public function remove
0081    [Record,private] function runFilters
0082    public function save
0083    public function saveUpdate
0084    public function setDb
0085    public function setKeyName
0086    public function setTableName
0087    public function sql
0088    public function trace
0089    public function validateFormat
0090    public function validateNumber
0091    public function validatePresence
0092    public function validateRecord
0093    public function validateUnique
0094    public function wrapFilter
0095    public function columnNames
0096    public function columnTitles
0097    public function db
0098    public function keyName
0099    public function numRows
0100    public function tableName
0101    public function constructorOLD

#
#  Instance slot assignments for the "Record" class (Num prop 3, num inherited 0)
#
0000    internal-ed363076473b51ca685af450cc662b39-0 var _keyValue: Object
0001    internal-ed363076473b51ca685af450cc662b39-0 var _errors: Object
0002    internal-ed363076473b51ca685af450cc662b39-0 var _cacheAssoc: Object

#
#  Class slot assignments for the "Column" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Column

#
#  Instance slot assignments for the "Column" class (Num prop 2, num inherited 0)
#
0000    public var ejsType: Object
0001    public var sqlType: Object

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 26828 bytes)
#
0000   ""
0001   "ejs.db"
0002   "ejs.es"
0003   "}"
0004   "internal-ed363076473b51ca685af450cc662b39-0"
0005   "ejs.db.mapper"
0006   "module ejs.db.mapper {"
0007   "    require ejs.db"
0008   "    public class Record {"
0009   "        static var  _assocName: String        //  Name for use in associations. Lower case class name"
0010   "_assocName"
0011   "String"
0012   "        static var  _belongsTo: Array         //  List of belonging associations"
0013   "_belongsTo"
0014   "Array"
0015   "        static var  _className: String        //  Model class name"
0016   "_className"
0017   "        static var  _columns: Object          //  List of columns in this database table"
0018   "_columns"
0019   "Object"
0020   "        static var  _hasOne: Array            //  List of 1-1 containment associations"
0021   "_hasOne"
0022   "        static var  _hasMany: Array           //  List of 1-many containment  associations"
0023   "_hasMany"
0024   "        static var  _db: Database             //  Hosting database"
0025   "_db"
0026   "Database"
0027   "        static var  _foreignId: String        //  Camel case class name with "Id". (userCartId))"
0028   "_foreignId"
0029   "        static var  _keyName: String          //  Name of the key column (typically "id")"
0030   "_keyName"
0031   "        static var  _model: Type              //  Model class"
0032   "_model"
0033   "Type"
0034   "        static var  _tableName: String        //  Name of the database table. Plural, PascalCase"
0035   "_tableName"
0036   "        static var  _trace: Boolean           //  Trace database SQL statements"
0037   "_trace"
0038   "Boolean"
0039   "        static var  _validations: Array"
0040   "_validations"
0041   "        static var  _beforeFilters: Array     //  Filters that run before saving data"
0042   "_beforeFilters"
0043   "        static var  _afterFilters: Array      //  Filters that run after saving data"
0044   "_afterFilters"
0045   "        static var  _wrapFilters: Array       //  Filters that run before and after saving data"
0046   "_wrapFilters"
0047   "        var _keyValue: Object                 //  Record key column value"
0048   "_keyValue"
0049   "        var _errors: Object                   //  Error message aggregation"
0050   "_errors"
0051   "        var _cacheAssoc: Object               //  Cached association data"
0052   "_cacheAssoc"
0053   "        static var ErrorMessages = {"
0054   "ErrorMessages"
0055   "            accepted: "must be accepted","
0056   "accepted"
0057   "must be accepted"
0058   "            blank: "can't be blank","
0059   "blank"
0060   "can't be blank"
0061   "            confirmation: "doesn't match confirmation","
0062   "confirmation"
0063   "doesn't match confirmation"
0064   "            empty: "can't be empty","
0065   "empty"
0066   "can't be empty"
0067   "            invalid: "is invalid","
0068   "invalid"
0069   "is invalid"
0070   "            missing: "is missing","
0071   "missing"
0072   "is missing"
0073   "            notNumber: "is not a number","
0074   "notNumber"
0075   "is not a number"
0076   "            notUnique: "is not unique","
0077   "notUnique"
0078   "is not unique"
0079   "            taken: "already taken","
0080   "taken"
0081   "already taken"
0082   "            tooLong: "is too long","
0083   "tooLong"
0084   "is too long"
0085   "            tooShort: "is too short","
0086   "tooShort"
0087   "is too short"
0088   "            wrongLength: "wrong length","
0089   "wrongLength"
0090   "wrong length"
0091   "            wrongFormat: "wrong format","
0092   "wrongFormat"
0093   "wrong format"
0094   "        _keyName = "id""
0095   "id"
0096   "        _className = Reflect(this).name"
0097   "name"
0098   "public"
0099   "        _model = global[_className]"
0100   ""
0101   "        _assocName = _className.toCamel()"
0102   "toCamel"
0103   "        _foreignId = _className.toCamel() + _keyName.toPascal()"
0104   "toPascal"
0105   "        _tableName = plural(_className).toPascal()"
0106   "        use default namespace public"
0107   "        function Record(fields: Object? = null) {"
0108   "            initialize(fields)"
0109   "initialize"
0110   "        }"
0111   "Record"
0112   "-constructor-"
0113   "fields"
0114   "private"
0115   "ejs"
0116   "        function initialize(fields: Object? = null): Void {"
0117   "            if (fields) for (let field in fields) {"
0118   "field"
0119   "-hoisted-1"
0120   "get"
0121   "iterator"
0122   "                this."public"::[field] = fields[field]"
0123   "Void"
0124   "StopIteration"
0125   "        static function afterFilter(fn, options: Object? = null): Void {"
0126   "            _afterFilters ||= []"
0127   "            _afterFilters.append([fn, options])"
0128   "append"
0129   "afterFilter"
0130   "fn"
0131   "options"
0132   "        static function beforeFilter(fn, options: Object? = null): Void {"
0133   "            _beforeFilters ||= []"
0134   "            _beforeFilters.append([fn, options])"
0135   "beforeFilter"
0136   "        static function belongsTo(owner, options: Object? = null): Void {"
0137   "            _belongsTo ||= []"
0138   "            _belongsTo.append(owner)"
0139   "belongsTo"
0140   "owner"
0141   "        private static function cachedRead(rec: Record, field: String, model, key: String, options: Object): Object {"
0142   "            rec._cacheAssoc ||= {}"
0143   "            if (rec._cacheAssoc[field] == null) {"
0144   "                rec._cacheAssoc[field] =  model.readRecords(key, options); "
0145   "readRecords"
0146   "            return rec._cacheAssoc[field]"
0147   "cachedRead"
0148   "[Record,private]"
0149   "rec"
0150   "model"
0151   "key"
0152   "        private static function checkFormat(thisObj: Record, field: String, value, options: Object): Void {"
0153   "            if (! RegExp(options.format).test(value)) {"
0154   "format"
0155   "test"
0156   "                thisObj._errors[field] = options.message ? options.message : ErrorMessages.wrongFormat"
0157   "message"
0158   "checkFormat"
0159   "thisObj"
0160   "value"
0161   "        private static function checkNumber(thisObj: Record, field: String, value, options): Void {"
0162   "            if (! RegExp(/^[0-9]+$/).test(value)) {"
0163   "/^[0-9]+$/"
0164   "                thisObj._errors[field] = options.message ? options.message : ErrorMessages.notNumber"
0165   "checkNumber"
0166   "        private static function checkPresent(thisObj: Record, field: String, value, options): Void {"
0167   "            if (value == undefined) {"
0168   "                thisObj._errors[field] = options.message ? options.message : ErrorMessages.missing"
0169   "            } else if (value.length == 0 || value.trim() == "" && thisObj._errors[field] == undefined) {"
0170   "length"
0171   "trim"
0172   "                thisObj._errors[field] = ErrorMessages.blank"
0173   "checkPresent"
0174   "        private static function checkUnique(thisObj: Record, field: String, value, options): Void {"
0175   "grid"
0176   "            let grid: Array"
0177   "            if (thisObj._keyValue) {"
0178   "                grid = findWhere(field + ' = "' + value + '" AND id <> ' + thisObj._keyValue)"
0179   " = ""
0180   "" AND id <> "
0181   "findWhere"
0182   "            } else {"
0183   "                grid = findWhere(field + ' = "' + value + '"')"
0184   """
0185   "            if (grid.length > 0) {"
0186   "                thisObj._errors[field] = options.message ? options.message : ErrorMessages.notUnique"
0187   "checkUnique"
0188   "        private function coerceToEjsTypes(): Void {"
0189   "            for (let field: String in this) {"
0190   "-hoisted-0"
0191   "col"
0192   "                let col: Column = _columns[field]"
0193   "                if (col == undefined) {"
0194   "                    continue"
0195   "                if (col.ejsType == Reflect(this[field]).type) {"
0196   "ejsType"
0197   "type"
0198   "                }"
0199   "                let value: String = this[field]"
0200   "                switch (col.ejsType) {"
0201   "                case Boolean:"
0202   "                    if (value is String) {"
0203   "                        this[field] = (value.trim().toLower() == "true")"
0204   "toLower"
0205   "true"
0206   "                    } else if (value is Number) {"
0207   "                        this[field] = (value == 1)"
0208   "                    } else {"
0209   "                        this[field] = value cast Boolean"
0210   "                    }"
0211   "                    this[field] = (this[field]) ? true : false"
0212   "                    break"
0213   "                case Date:"
0214   "                    this[field] = new Date(value)"
0215   "                case Number:"
0216   "                    this[field] = this[field] cast Number"
0217   "coerceToEjsTypes"
0218   "Column"
0219   "        private static function createAssociations(rec: Record, set: Array, preload, options): Void {"
0220   "            for each (let model in set) {"
0221   "-hoisted-4"
0222   "getValues"
0223   "                if (model is Array) model = model[0]"
0224   "                if (preload == true || (preload && preload.contains(model))) {"
0225   "contains"
0226   "association"
0227   "-hoisted-5"
0228   "                    let association = {}"
0229   "                    if (!model._columns) model.getSchema()"
0230   "getSchema"
0231   "                    for (let field: String in model._columns) {"
0232   "-hoisted-6"
0233   "f"
0234   "                        let f: String = "_" + model._className + field.toPascal()"
0235   "_"
0236   "                        association[field] = rec[f]"
0237   "                        delete rec.public::[f]"
0238   "                    rec[model._assocName] = model.createRecord(association, options)"
0239   "createRecord"
0240   "                } else {"
0241   "                    rec[model._assocName] = makeLazyReader(rec, model._assocName, model, rec[model._foreignId])"
0242   "makeLazyReader"
0243   "                    for (let field: String  in model._columns) {"
0244   "-hoisted-8"
0245   "                        if (rec[f]) {"
0246   "                            delete rec.public::[f]"
0247   "createAssociations"
0248   "set"
0249   "preload"
0250   "        private static function createRecord(data: Object, options: Object = {}) {"
0251   "            let rec: Record = new global[_className]"
0252   "            rec.initialize(data)"
0253   "            rec._keyValue = data[_keyName]"
0254   "            let subOptions = {}"
0255   "subOptions"
0256   "            if (options.depth) {"
0257   "depth"
0258   "                subOptions.depth = options.depth"
0259   "                subOptions.depth--"
0260   "            if (options.include) {"
0261   "include"
0262   "                createAssociations(rec, options.include, true, subOptions)"
0263   "            if (options.depth != 0) {"
0264   "                if (_belongsTo) {"
0265   "                    createAssociations(rec, _belongsTo, options.preload, subOptions)"
0266   "                if (_hasOne) {"
0267   "                    for each (model in _hasOne) {"
0268   "                        if (!rec[model._assocName]) {"
0269   "                            rec[model._assocName] = makeLazyReader(rec, model._assocName, model, null,"
0270   "                                {conditions: rec._foreignId + " = " + data[_keyName] + " LIMIT 1"})"
0271   "conditions"
0272   " = "
0273   " LIMIT 1"
0274   "                if (_hasMany) {"
0275   "                    for each (model in _hasMany) {"
0276   "                                {conditions: rec._foreignId + " = " + data[_keyName]})"
0277   "            }"
0278   "            rec.coerceToEjsTypes()"
0279   "            return rec"
0280   "data"
0281   "        function error(field: String, msg: String): Void {"
0282   "            field ||= """
0283   "            _errors[field] = msg"
0284   "error"
0285   "msg"
0286   "        static function find(key: Object, options: Object = {}): Object {"
0287   "            let grid: Array = innerFind(key, 1, options)"
0288   "innerFind"
0289   "            if (grid.length >= 1) {"
0290   "results"
0291   "-hoisted-3"
0292   "                let results = createRecord(grid[0], options)"
0293   "                if (options && options.debug) {"
0294   "debug"
0295   "                    print("RESULTS: " + serialize(results))"
0296   "RESULTS: "
0297   "                return results"
0298   "            return null"
0299   "find"
0300   "        static function findAll(options: Object = {}): Array {"
0301   "            let grid: Array = innerFind(null, null, options)"
0302   "            for (let i = 0; i < grid.length; i++) {"
0303   "i"
0304   "-hoisted-2"
0305   "                grid[i] = createRecord(grid[i], options)"
0306   "            if (options && options.debug) {"
0307   "                print("RESULTS: " + serialize(grid))"
0308   "            return grid"
0309   "findAll"
0310   "        static function findOneWhere(where: String): Object {"
0311   "            let grid: Array = innerFind(null, 1, { conditions: [where]})"
0312   "                return createRecord(grid[0])"
0313   "findOneWhere"
0314   "where"
0315   "        static function findWhere(where: String, count: Number? = null): Array {"
0316   "            let grid: Array = innerFind(null, null, { conditions: [where]})"
0317   "            for (i in grid.length) {"
0318   "                grid[i] = createRecord(grid[i])"
0319   "count"
0320   "Number"
0321   "        static function getColumnNames(): Array { "
0322   "            if (!_columns) _model.getSchema()"
0323   "            let result: Array = []"
0324   "result"
0325   "            for (let col: String in _columns) {"
0326   "                result.append(col)"
0327   "            return result"
0328   "getColumnNames"
0329   "        static function getColumnTitles(): Array { "
0330   "                result.append(col.toPascal())"
0331   "getColumnTitles"
0332   "        static function getColumnType(field: String): String {"
0333   "            return _db.sqlTypeToDataType(_columns[field].sqlType)"
0334   "sqlType"
0335   "sqlTypeToDataType"
0336   "getColumnType"
0337   "        static function getDb(): Database {"
0338   "            if (!_db) {"
0339   "                _db = Database.defaultDatabase"
0340   "defaultDatabase"
0341   "            return _db"
0342   "getDb"
0343   "        function getErrors(): Array"
0344   "            _errors"
0345   "getErrors"
0346   "        static function getKeyName(): String"
0347   "            _keyName"
0348   "getKeyName"
0349   "        static function getNumRows(): Number {"
0350   "            let cmd: String = "SELECT COUNT(*) FROM " + _tableName + " WHERE " + _keyName + " <> '';""
0351   "cmd"
0352   "SELECT COUNT(*) FROM "
0353   " WHERE "
0354   " <> '';"
0355   "            let grid: Array = _db.query(cmd, "numRows", _trace)"
0356   "numRows"
0357   "query"
0358   "            return grid[0]["COUNT(*)"]"
0359   "COUNT(*)"
0360   "getNumRows"
0361   "        private static function getSchema(): Void {"
0362   "                if (!_db) {"
0363   "                    throw new Error("Can't get schema, database connection has not yet been established")"
0364   "Can't get schema, database connection has not yet been established"
0365   "sql"
0366   "            let sql: String = 'PRAGMA table_info("' + _tableName + '");'"
0367   "PRAGMA table_info(""
0368   "");"
0369   "            let grid: Array = _db.query(sql, "schema", _trace)"
0370   "schema"
0371   "            _columns = {}"
0372   "            for each (let row in grid) {"
0373   "row"
0374   "                let name = row["name"]"
0375   "                let sqlType = row["type"].toLower()"
0376   "                let ejsType = mapSqlTypeToEjs(sqlType)"
0377   "mapSqlTypeToEjs"
0378   "                _columns[name] = new Column(name, false, ejsType, sqlType)"
0379   "        static function getTableName(): String"
0380   "            _tableName"
0381   "getTableName"
0382   "        static function hasAndBelongsToMany(model: Object, options: Object = {}): Void {"
0383   "            belongsTo(model, options)"
0384   "            hasMany(model, options)"
0385   "hasMany"
0386   "hasAndBelongsToMany"
0387   "        function hasError(field: String? = null): Boolean {"
0388   "            if (field) {"
0389   "                return (_errors && _errors[field])"
0390   "            if (_errors) {"
0391   "                return (_errors.length > 0)"
0392   "            return false"
0393   "hasError"
0394   "        static function hasMany(model: Object, options: Object = {}): Void {"
0395   "            _hasMany ||= []"
0396   "            _hasMany.append(model)"
0397   "        static function hasOne(model: Object, options: Object? = null): Void {"
0398   "            _hasOne ||= []"
0399   "            _hasOne.append(model)"
0400   "hasOne"
0401   "        static private function innerFind(key: Object, limit: Number? = null, options: Object = {}): Array {"
0402   "            let cmd: String"
0403   "            let columns: Array"
0404   "columns"
0405   "            let from: String"
0406   "from"
0407   "            let conditions: String"
0408   "            let where: Boolean"
0409   "            if (options == null) {"
0410   "                options = {}"
0411   "            if (options.noassoc) {"
0412   "noassoc"
0413   "                options.depth = 0"
0414   "            if (options.columns) {"
0415   "                columns = options.columns"
0416   "                let index: Number = columns.indexOf("id")"
0417   "index"
0418   "-hoisted-9"
0419   "indexOf"
0420   "                if (index >= 0) {"
0421   "                    columns[index] = _tableName + ".id""
0422   ".id"
0423   "                } else if (!columns.contains(_tableName + ".id")) {"
0424   "                    columns.insert(0, _tableName + ".id")"
0425   "insert"
0426   "                columns = ["*"]"
0427   "*"
0428   "            conditions = """
0429   "            from = """
0430   "            where = false"
0431   "            if (options.from) {"
0432   "                from = options.from"
0433   "                from = _tableName"
0434   "-hoisted-10"
0435   "                let model"
0436   "                if (options.include is Array) {"
0437   "                    for each (entry in options.include) {"
0438   "entry"
0439   "-hoisted-11"
0440   "                        if (entry is Array) {"
0441   "                            model = entry[0]"
0442   "                            from += " LEFT OUTER JOIN " + model._tableName"
0443   " LEFT OUTER JOIN "
0444   "                            from += " ON " + entry[1]"
0445   " ON "
0446   "                        } else {"
0447   "                            model = entry"
0448   "                    model = options.include"
0449   "                    from += " LEFT OUTER JOIN " + model._tableName"
0450   "                    conditions = " ON ""
0451   "                    for each (let owner in _belongsTo) {"
0452   "-hoisted-12"
0453   "                        from += " INNER JOIN " + owner._tableName"
0454   " INNER JOIN "
0455   "-hoisted-13"
0456   "tname"
0457   "                        let tname: String = Reflect(owner).name"
0458   "                        tname = tname[0].toLower() + tname.slice(1) + "Id""
0459   "slice"
0460   "Id"
0461   "                        conditions += _tableName + "." + tname + " = " + owner._tableName + "." + owner._keyName + " AND ""
0462   "."
0463   " AND "
0464   "                    if (conditions == " ON ") {"
0465   "                        conditions = """
0466   "            if (options.joins) {"
0467   "joins"
0468   "                if (conditions == "") {"
0469   "parts"
0470   "-hoisted-15"
0471   "                let parts: Array = options.joins.split(/ ON | on /)"
0472   "/ ON | on /"
0473   "split"
0474   "                from += " " + parts[0]"
0475   " "
0476   "                if (parts.length > 1) {"
0477   "                    conditions += parts[1] + " AND ""
0478   "            conditions = conditions.trim(" AND ")"
0479   "            if (options.conditions) {"
0480   "whereConditions"
0481   "-hoisted-16"
0482   "                let whereConditions: String = " WHERE ""
0483   "                if (options.conditions is Array) {"
0484   "                    for each (cond in options.conditions) {"
0485   "cond"
0486   "-hoisted-17"
0487   "                        whereConditions += cond + " " + " AND ""
0488   "                    whereConditions = whereConditions.trim(" AND ")"
0489   "                } else if (options.conditions is String) {"
0490   "                    whereConditions += options.conditions + " " "
0491   "                } else if (options.conditions is Object) {"
0492   "                    for (field in options.conditions) {"
0493   "-hoisted-18"
0494   "                        whereConditions += field + " = '" + options.conditions[field] + "' " + " AND ""
0495   " = '"
0496   "' "
0497   "                whereConditions = whereConditions.trim(" AND ")"
0498   "                if (whereConditions != " WHERE ") {"
0499   "                    where = true"
0500   "                    conditions += whereConditions"
0501   "                    whereConditions = """
0502   "                    from = from.trim(" AND ")"
0503   "                from = from.trim(" AND ")"
0504   "            if (key || options.key) {"
0505   "                if (!where) {"
0506   "                    conditions += " WHERE ""
0507   "                    conditions += " AND ""
0508   "                conditions += (_tableName + "." + _keyName + " = ") + ((key) ? key : options.key)"
0509   "            cmd = "SELECT " + Database.quote(columns) + " FROM " + from + conditions"
0510   "SELECT "
0511   "quote"
0512   " FROM "
0513   "            if (options.group) {"
0514   "group"
0515   "                cmd += " GROUP BY " + options.group"
0516   " GROUP BY "
0517   "            if (options.order) {"
0518   "order"
0519   "                cmd += " ORDER BY " + options.order"
0520   " ORDER BY "
0521   "            if (limit) {"
0522   "                cmd += " LIMIT " + limit"
0523   " LIMIT "
0524   "            } else if (options.limit) {"
0525   "limit"
0526   "                cmd += " LIMIT " + options.limit"
0527   "            if (options.offset) {"
0528   "offset"
0529   "                cmd += " OFFSET " + options.offset"
0530   " OFFSET "
0531   "            cmd += ";""
0532   ";"
0533   "            if (_db == null) {"
0534   "                throw new Error("Database connection has not yet been established")"
0535   "Database connection has not yet been established"
0536   "            let results: Array"
0537   "            try {"
0538   "                if (_trace || 1) {"
0539   "                    results = _db.query(cmd, "find", _trace)"
0540   "            catch (e) {"
0541   "e"
0542   "-hoisted-19"
0543   "                throw e"
0544   "            return results"
0545   "        private static function makeLazyReader(rec: Record, field: String, model, key: String, "
0546   "                options: Object = {}): Function {"
0547   "            var lazyReader: Function = function(): Object {"
0548   "                return cachedRead(rec, field, model, key, options)"
0549   "--fun_20235--89941480--"
0550   "lazyReader"
0551   "            return makeGetter(lazyReader)"
0552   "Function"
0553   "        private static function mapSqlTypeToEjs(sqlType: String): Type {"
0554   "            sqlType = sqlType.replace(/\(.*/, "")"
0555   "/\(.*/"
0556   "replace"
0557   "            let ejsType: Type = _db.sqlTypeToEjsType(sqlType)"
0558   "sqlTypeToEjsType"
0559   "            if (ejsType == undefined) {"
0560   "                throw new Error("Unsupported SQL type: \"" + sqlType + "\"")"
0561   "Unsupported SQL type: ""
0562   "            return ejsType"
0563   "        private static function prepareValue(field: String, value: Object): String {"
0564   "            let col: Column = _columns[field]"
0565   "            if (col == undefined) {"
0566   "                return undefined"
0567   "			if (value == undefined) {"
0568   "				throw new Error("Field \"" + field + "\" is undefined")"
0569   "Field ""
0570   "" is undefined"
0571   "			if (value == null) {"
0572   "				throw new Error("Field \"" + field + "\" is null")"
0573   "" is null"
0574   "			}"
0575   "            switch (col.ejsType) {"
0576   "            case Boolean:"
0577   "                if (value is String) {"
0578   "                    value = (value.toLower() == "true")"
0579   "                } else if (value is Number) {"
0580   "                    value = (value == 1)"
0581   "                    value = value cast Boolean"
0582   "                return value"
0583   "            case Date:"
0584   "                return "%Ld".format((new Date(value)).time)"
0585   "%Ld"
0586   "time"
0587   "            case Number:"
0588   "                return value cast Number"
0589   "            case String:"
0590   "                return Database.quote(value)"
0591   "            return Database.quote(value.toString())"
0592   "toString"
0593   "prepareValue"
0594   "        private static function readRecords(key: String, options: Object): Object {"
0595   "            let data: Array = innerFind(key, null, options)"
0596   "            if (data.length > 1) {"
0597   "                let result: Array = new Array"
0598   "                for each (row in data) {"
0599   "                    result.append(createRecord(row))"
0600   "                return result"
0601   "            } else if (data.length == 1) {"
0602   "                return createRecord(data[0])"
0603   "        static function remove(...ids): Void {"
0604   "            for each (let key: Object in ids) {"
0605   "                let cmd: String = "DELETE FROM " + _tableName + " WHERE " + _keyName + " = " + key + ";""
0606   "DELETE FROM "
0607   "                db.query(cmd, "remove", _trace)"
0608   "db"
0609   "remove"
0610   "ids"
0611   "        private function runFilters(filters): Void {"
0612   "            for each (filter in filters) {"
0613   "filter"
0614   "                let fn = filter[0]"
0615   "                let options = filter[1]"
0616   "                if (options) {"
0617   "only"
0618   "                    let only = options.only"
0619   "                fn.call(this)"
0620   "call"
0621   "runFilters"
0622   "filters"
0623   "        function save(): Boolean {"
0624   "            var sql: String"
0625   "            if (!validateRecord()) {"
0626   "validateRecord"
0627   "                return false"
0628   "            runFilters(_beforeFilters)"
0629   "            if (_keyValue == null) {"
0630   "                sql = "INSERT INTO " + _tableName + " (""
0631   "INSERT INTO "
0632   " ("
0633   "                for (let field: String in this) {"
0634   "                    if (_columns[field]) {"
0635   "                        sql += field + ", ""
0636   ", "
0637   "                sql = sql.trim(', ')"
0638   "                sql += ") VALUES(""
0639   ") VALUES("
0640   "                        sql += "'" + prepareValue(field, this[field]) + "', ""
0641   "'"
0642   "', "
0643   "                sql += ")""
0644   ")"
0645   "                sql = "UPDATE " + _tableName + " SET ""
0646   "UPDATE "
0647   " SET "
0648   "                        sql += field + " = '" + prepareValue(field, this[field]) + "', ""
0649   "                sql += " WHERE " + _keyName + " = " +  _keyValue"
0650   "            if (!_keyValue) {"
0651   "                sql += "; SELECT last_insert_rowid();""
0652   "; SELECT last_insert_rowid();"
0653   "                sql += ";""
0654   "            let result: Array = _db.query(sql, "save", _trace)"
0655   "save"
0656   "                _keyValue = this["id"] = result[0]["last_insert_rowid()"] cast Number"
0657   "last_insert_rowid()"
0658   "            runFilters(_afterFilters)"
0659   "            return true"
0660   "        function saveUpdate(fields: Object): Boolean {"
0661   "            for (field in fields) {"
0662   "                if (this[field] != undefined) {"
0663   "                    this[field] = fields[field]"
0664   "            return save()"
0665   "saveUpdate"
0666   "        static function setDb(database: Database) {"
0667   "            _db = database"
0668   "setDb"
0669   "database"
0670   "        static function setKeyName(name: String): Void {"
0671   "            _keyName = name"
0672   "setKeyName"
0673   "        static function setTableName(name: String): Void {"
0674   "            if (_tableName != name) {"
0675   "                _tableName = name"
0676   "                if (_db) {"
0677   "                    _model.getSchema()"
0678   "setTableName"
0679   "        static function sql(cmd: String, count: Number? = null): Array {"
0680   "            cmd = "SELECT " + cmd + ";""
0681   "            return db.query(cmd, "select", _trace)"
0682   "select"
0683   "        static function trace(on: Boolean): void"
0684   "            _trace = on"
0685   "trace"
0686   "on"
0687   "        static function validateFormat(fields: Object, options = null) {"
0688   "            if (_validations == null) {"
0689   "                _validations = []"
0690   "            _validations.append([checkFormat, fields, options])"
0691   "validateFormat"
0692   "        static function validateNumber(fields: Object, options = null) {"
0693   "            _validations.append([checkNumber, fields, options])"
0694   "validateNumber"
0695   "        static function validatePresence(fields: Object, options = null) {"
0696   "            _validations.append([checkPresent, fields, options])"
0697   "validatePresence"
0698   "        function validateRecord(): Boolean {"
0699   "            _errors = {}"
0700   "            if (_validations) {"
0701   "                for each (let validation: String in _validations) {"
0702   "validation"
0703   "check"
0704   "                    let check = validation[0]"
0705   "                    let fields = validation[1]"
0706   "                    let options = validation[2]"
0707   "                    if (fields is Array) {"
0708   "                        for each (let field in fields) {"
0709   "                            if (_errors[field]) {"
0710   "                                continue"
0711   "                            }"
0712   "                            check(this, field, this[field], options)"
0713   "                        check(this, fields, this[fields], options)"
0714   "thisType"
0715   "            let thisType = Reflect(this).type"
0716   "            if (thisType["validate"]) {"
0717   "validate"
0718   "                thisType["validate"].call(this)"
0719   "            if (_errors.length == 0) {"
0720   "                coerceToEjsTypes()"
0721   "            return _errors.length == 0"
0722   "        static function validateUnique(fields: Object, option = null)"
0723   "            _validations.append([checkUnique, fields, options])"
0724   "validateUnique"
0725   "option"
0726   "        static function wrapFilter(fn, options: Object? = null): Void {"
0727   "            _wrapFilters ||= []"
0728   "            _wrapFilters.append([fn, options])"
0729   "wrapFilter"
0730   "        static function get columnNames(): Array {"
0731   "            return getColumnNames()"
0732   "columnNames"
0733   "        static function get columnTitles(): Array {"
0734   "            return getColumnTitles()"
0735   "columnTitles"
0736   "        static function get db(): Datbase {"
0737   "            return getDb()"
0738   "        static function get keyName(): String {"
0739   "            return getKeyName()"
0740   "keyName"
0741   "        static function get numRows(): String {"
0742   "            return getNumRows()"
0743   "        static function get tableName(): String {"
0744   "            return getTableName()"
0745   "tableName"
0746   "        function constructorOLD(fields: Object? = null): Void {"
0747   "constructorOLD"
0748   "Record-initializer"
0749   "-initializer-"
0750   "constructor"
0751   "prototype"
0752   "clone"
0753   "Iterator"
0754   "hasOwnProperty"
0755   "isPrototypeOf"
0756   "propertyIsEnumerable"
0757   "toJSON"
0758   "toLocaleString"
0759   "valueOf"
0760   "    class Column {"
0761   "        public var ejsType: Object "
0762   "        public var sqlType: Object "
0763   "        function Column(name: String, accessor: Boolean = false, ejsType: Type? = null, sqlType: String? = null) {"
0764   "            this.ejsType = ejsType"
0765   "            this.sqlType = sqlType"
0766   "accessor"
0767   "    function plural(name: String): String"
0768   "        name + "s""
0769   "s"
0770   "plural"
0771   "    function singular(name: String): String {"
0772   "        var s: String = name + "s""
0773   "        if (name.endsWith("ies")) {"
0774   "ies"
0775   "endsWith"
0776   "            return name.slice(0,-3) + "y""
0777   "y"
0778   "        } else if (name.endsWith("es")) {"
0779   "es"
0780   "            return name.slice(0,-2)"
0781   "        } else if (name.endsWith("s")) {"
0782   "            return name.slice(0,-1)"
0783   "        return name.toPascal()"
0784   "singular"
0785   "    function mapType(value: Object): String {"
0786   "        if (value is Date) {"
0787   "            return "%Ld".format((new Date(value)).time)"
0788   "        } else if (value is Number) {"
0789   "            return "%Ld".format(value)"
0790   "        return value"
0791   "mapType"
0792   "block_12862_282"
0793   "-block-"
0794   "__initializer__"

==============================================================================================

MODULE:   ejs.db.sqlite <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_14009_417 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 02 ba df 01 10 .......... debug 

    # ejs.es:14301              }

    0009: [0] 01 14 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0011: [0] 01 6c ...................... addNamespace <ejs.db.sqlite> 
    0013: [0] 33 02 f2 da 01 88 01 ....... debug 

    # ejs.es:14009              module ejs.db.sqlite {

    0020: [0] 33 02 80 db 01 b6 01 ....... debug 

    # ejs.es:14016                  "ejs.db" class Sqlite {

    0027: [0] 34 a4 0a ................... defineClass <type: 0x292,  ejs.db::Sqlite> 
    0030: [0] 24 ......................... closeBlock 
    0031: [0] 3b ......................... endCode 
    

BLOCK:      [block_14009_417-00]  block_14009_417 (Slots 0)

CLASS:      class Sqlite extends Object
            #  Class Details: 56 class traits, 0 instance traits, requested slot 164

FUNCTION:   [Sqlite-26]  -constructor- native const function Sqlite(connectionString: String) : void

     ARG:   [arg-00]   private connectionString : String

    
VARIABLE:   [connectionString-00]  private var connectionString : String

FUNCTION:   [Sqlite-27]  -initializer- static function Sqlite-initializer() : Void


    0000: [0] 33 02 8a db 01 ee 01 ....... debug 

    # ejs.es:14021                      static const DataTypeToSqlType: Object = {

    0007: [0] 33 02 8c db 01 86 03 ....... debug 

    # ejs.es:14022                          "binary":       "blob",

    0014: [0] 56 ce 03 ................... loadString <> 
    0017: [1] 56 d0 03 ................... loadString <binary> 
    0020: [2] 56 de 03 ................... loadString <blob> 
    0023: [3] 33 02 8e db 01 e8 03 ....... debug 

    # ejs.es:14023                          "boolean":      "tinyint",

    0030: [3] 56 ce 03 ................... loadString <> 
    0033: [4] 56 b6 04 ................... loadString <boolean> 
    0036: [5] 56 c6 04 ................... loadString <tinyint> 
    0039: [6] 33 02 90 db 01 d6 04 ....... debug 

    # ejs.es:14024                          "date":         "date",

    0046: [6] 56 ce 03 ................... loadString <> 
    0049: [7] 56 9e 05 ................... loadString <date> 
    0052: [8] 56 9e 05 ................... loadString <date> 
    0055: [9] 33 02 92 db 01 a8 05 ....... debug 

    # ejs.es:14025                          "datetime":     "datetime",

    0062: [9] 56 ce 03 ................... loadString <> 
    0065: [10] 56 f8 05 ................... loadString <datetime> 
    0068: [11] 56 f8 05 ................... loadString <datetime> 
    0071: [12] 33 02 94 db 01 8a 06 ....... debug 

    # ejs.es:14026                          "decimal":      "decimal",

    0078: [12] 56 ce 03 ................... loadString <> 
    0081: [13] 56 d8 06 ................... loadString <decimal> 
    0084: [14] 56 d8 06 ................... loadString <decimal> 
    0087: [15] 33 02 96 db 01 e8 06 ....... debug 

    # ejs.es:14027                          "float":        "float",

    0094: [15] 56 ce 03 ................... loadString <> 
    0097: [16] 56 b2 07 ................... loadString <float> 
    0100: [17] 56 b2 07 ................... loadString <float> 
    0103: [18] 33 02 98 db 01 be 07 ....... debug 

    # ejs.es:14028                          "integer":      "int",

    0110: [18] 56 ce 03 ................... loadString <> 
    0113: [19] 56 84 08 ................... loadString <integer> 
    0116: [20] 56 94 08 ................... loadString <int> 
    0119: [21] 33 02 9a db 01 9c 08 ....... debug 

    # ejs.es:14029                          "number":       "decimal",

    0126: [21] 56 ce 03 ................... loadString <> 
    0129: [22] 56 ea 08 ................... loadString <number> 
    0132: [23] 56 d8 06 ................... loadString <decimal> 
    0135: [24] 33 02 9c db 01 f8 08 ....... debug 

    # ejs.es:14030                          "string":       "varchar",

    0142: [24] 56 ce 03 ................... loadString <> 
    0145: [25] 56 c6 09 ................... loadString <string> 
    0148: [26] 56 d4 09 ................... loadString <varchar> 
    0151: [27] 33 02 9e db 01 e4 09 ....... debug 

    # ejs.es:14031                          "text":         "text",

    0158: [27] 56 ce 03 ................... loadString <> 
    0161: [28] 56 ac 0a ................... loadString <text> 
    0164: [29] 56 ac 0a ................... loadString <text> 
    0167: [30] 33 02 a0 db 01 b6 0a ....... debug 

    # ejs.es:14032                          "time":         "time",

    0174: [30] 56 ce 03 ................... loadString <> 
    0177: [31] 56 fe 0a ................... loadString <time> 
    0180: [32] 56 fe 0a ................... loadString <time> 
    0183: [33] 33 02 a2 db 01 88 0b ....... debug 

    # ejs.es:14033                          "timestamp":    "datetime",

    0190: [33] 56 ce 03 ................... loadString <> 
    0193: [34] 56 d8 0b ................... loadString <timestamp> 
    0196: [35] 56 f8 05 ................... loadString <datetime> 
    0199: [36] 8a e4 06 18 00 00 00 00 00 00 00 00 00 00 00 00  newObject <type: 0x1b2,  ejs::Object> <argc: 12> <att: 12 12 12 12 12 12 12 12 12 12 12 12 >
    0215: [1] 33 02 8a db 01 ee 01 ....... debug 

    # ejs.es:14021                      static const DataTypeToSqlType: Object = {

    0222: [1] 57 ......................... loadThis 
    0223: [2] b3 d4 02 14 ................ putObjName <DataTypeToSqlType> <internal-ed363076473b51ca685af450cc662b39-0> 
    0227: [0] 33 02 ae db 01 ec 0b ....... debug 

    # ejs.es:14039                      static const SqlTypeToDataType: Object = {

    0234: [0] 33 02 b0 db 01 f6 0c ....... debug 

    # ejs.es:14040                          "blob":         "binary",

    0241: [0] 56 ce 03 ................... loadString <> 
    0244: [1] 56 de 03 ................... loadString <blob> 
    0247: [2] 56 d0 03 ................... loadString <binary> 
    0250: [3] 33 02 b2 db 01 c2 0d ....... debug 

    # ejs.es:14041                          "tinyint":      "boolean",

    0257: [3] 56 ce 03 ................... loadString <> 
    0260: [4] 56 c6 04 ................... loadString <tinyint> 
    0263: [5] 56 b6 04 ................... loadString <boolean> 
    0266: [6] 33 02 b4 db 01 d6 04 ....... debug 

    # ejs.es:14042                          "date":         "date",

    0273: [6] 56 ce 03 ................... loadString <> 
    0276: [7] 56 9e 05 ................... loadString <date> 
    0279: [8] 56 9e 05 ................... loadString <date> 
    0282: [9] 33 02 b6 db 01 a8 05 ....... debug 

    # ejs.es:14043                          "datetime":     "datetime",

    0289: [9] 56 ce 03 ................... loadString <> 
    0292: [10] 56 f8 05 ................... loadString <datetime> 
    0295: [11] 56 f8 05 ................... loadString <datetime> 
    0298: [12] 33 02 b8 db 01 8a 06 ....... debug 

    # ejs.es:14044                          "decimal":      "decimal",

    0305: [12] 56 ce 03 ................... loadString <> 
    0308: [13] 56 d8 06 ................... loadString <decimal> 
    0311: [14] 56 d8 06 ................... loadString <decimal> 
    0314: [15] 33 02 ba db 01 e8 06 ....... debug 

    # ejs.es:14045                          "float":        "float",

    0321: [15] 56 ce 03 ................... loadString <> 
    0324: [16] 56 b2 07 ................... loadString <float> 
    0327: [17] 56 b2 07 ................... loadString <float> 
    0330: [18] 33 02 bc db 01 90 0e ....... debug 

    # ejs.es:14046                          "int":          "integer",

    0337: [18] 56 ce 03 ................... loadString <> 
    0340: [19] 56 94 08 ................... loadString <int> 
    0343: [20] 56 84 08 ................... loadString <integer> 
    0346: [21] 33 02 be db 01 de 0e ....... debug 

    # ejs.es:14047                          "varchar":      "string",

    0353: [21] 56 ce 03 ................... loadString <> 
    0356: [22] 56 d4 09 ................... loadString <varchar> 
    0359: [23] 56 c6 09 ................... loadString <string> 
    0362: [24] 33 02 c0 db 01 e4 09 ....... debug 

    # ejs.es:14048                          "text":         "text",

    0369: [24] 56 ce 03 ................... loadString <> 
    0372: [25] 56 ac 0a ................... loadString <text> 
    0375: [26] 56 ac 0a ................... loadString <text> 
    0378: [27] 33 02 c2 db 01 b6 0a ....... debug 

    # ejs.es:14049                          "time":         "time",

    0385: [27] 56 ce 03 ................... loadString <> 
    0388: [28] 56 fe 0a ................... loadString <time> 
    0391: [29] 56 fe 0a ................... loadString <time> 
    0394: [30] 8a e4 06 14 00 00 00 00 00 00 00 00 00 00  newObject <type: 0x1b2,  ejs::Object> <argc: 10> <att: 10 10 10 10 10 10 10 10 10 10 >
    0408: [1] 33 02 ae db 01 ec 0b ....... debug 

    # ejs.es:14039                      static const SqlTypeToDataType: Object = {

    0415: [1] 57 ......................... loadThis 
    0416: [2] b3 d2 0c 14 ................ putObjName <SqlTypeToDataType> <internal-ed363076473b51ca685af450cc662b39-0> 
    0420: [0] 33 02 ce db 01 aa 0f ....... debug 

    # ejs.es:14055                      static const SqlTypeToEjsType: Object = {

    0427: [0] 33 02 d0 db 01 b0 10 ....... debug 

    # ejs.es:14056                          "blob":         String,

    0434: [0] 56 ce 03 ................... loadString <> 
    0437: [1] 56 de 03 ................... loadString <blob> 
    0440: [2] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0443: [3] 33 02 d2 db 01 f8 10 ....... debug 

    # ejs.es:14057                          "date":         Date,

    0450: [3] 56 ce 03 ................... loadString <> 
    0453: [4] 56 9e 05 ................... loadString <date> 
    0456: [5] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0458: [6] 33 02 d4 db 01 bc 11 ....... debug 

    # ejs.es:14058                          "datetime":     Date,

    0465: [6] 56 ce 03 ................... loadString <> 
    0468: [7] 56 f8 05 ................... loadString <datetime> 
    0471: [8] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0473: [9] 33 02 d6 db 01 80 12 ....... debug 

    # ejs.es:14059                          "decimal":      Number,

    0480: [9] 56 ce 03 ................... loadString <> 
    0483: [10] 56 d8 06 ................... loadString <decimal> 
    0486: [11] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0489: [12] 33 02 d8 db 01 c8 12 ....... debug 

    # ejs.es:14060                          "int":          Number,

    0496: [12] 56 ce 03 ................... loadString <> 
    0499: [13] 56 94 08 ................... loadString <int> 
    0502: [14] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0505: [15] 33 02 da db 01 90 13 ....... debug 

    # ejs.es:14061                          "integer":      Number,

    0512: [15] 56 ce 03 ................... loadString <> 
    0515: [16] 56 84 08 ................... loadString <integer> 
    0518: [17] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0521: [18] 33 02 dc db 01 d8 13 ....... debug 

    # ejs.es:14062                          "float":        Number,

    0528: [18] 56 ce 03 ................... loadString <> 
    0531: [19] 56 b2 07 ................... loadString <float> 
    0534: [20] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0537: [21] 33 02 de db 01 a0 14 ....... debug 

    # ejs.es:14063                          "time":         Date,

    0544: [21] 56 ce 03 ................... loadString <> 
    0547: [22] 56 fe 0a ................... loadString <time> 
    0550: [23] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0552: [24] 33 02 e0 db 01 e4 14 ....... debug 

    # ejs.es:14064                          "tinyint":      Boolean,

    0559: [24] 56 ce 03 ................... loadString <> 
    0562: [25] 56 c6 04 ................... loadString <tinyint> 
    0565: [26] 7e 10 ...................... getGlobalSlot <slot: 8> 
    0567: [27] 33 02 e2 db 01 ae 15 ....... debug 

    # ejs.es:14065                          "text":         String,

    0574: [27] 56 ce 03 ................... loadString <> 
    0577: [28] 56 ac 0a ................... loadString <text> 
    0580: [29] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0583: [30] 33 02 e4 db 01 f6 15 ....... debug 

    # ejs.es:14066                          "varchar":      String,

    0590: [30] 56 ce 03 ................... loadString <> 
    0593: [31] 56 d4 09 ................... loadString <varchar> 
    0596: [32] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0599: [33] 8a e4 06 16 00 00 00 00 00 00 00 00 00 00 00  newObject <type: 0x1b2,  ejs::Object> <argc: 11> <att: 11 11 11 11 11 11 11 11 11 11 11 >
    0614: [1] 33 02 ce db 01 aa 0f ....... debug 

    # ejs.es:14055                      static const SqlTypeToEjsType: Object = {

    0621: [1] 57 ......................... loadThis 
    0622: [2] b3 8e 10 14 ................ putObjName <SqlTypeToEjsType> <internal-ed363076473b51ca685af450cc662b39-0> 
    0626: [0] 33 02 84 dc 01 be 16 ....... debug 

    # ejs.es:14082                      use default namespace public

    0633: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0635: [1] 02 ......................... addNamespaceRef 
    0636: [0] 33 02 9a dc 01 88 17 ....... debug 

    # ejs.es:14093                      native "ejs.db" function Sqlite(connectionString: String)

    0643: [0] 33 02 a0 dc 01 fe 18 ....... debug 

    # ejs.es:14096                      function addColumn(table: String, column: String, datatype: String, options = null): Void {

    0650: [0] 33 02 b2 dc 01 be 20 ....... debug 

    # ejs.es:14105                      function addIndex(table: String, column: String, index: String): Void

    0657: [0] 33 02 c2 dc 01 d0 23 ....... debug 

    # ejs.es:14113                      function changeColumn(table: String, column: String, datatype: String, options = null): Void {

    0664: [0] 33 02 d6 dc 01 d6 29 ....... debug 

    # ejs.es:14123                      native function close(): Void

    0671: [0] 33 02 dc dc 01 ae 2a ....... debug 

    # ejs.es:14126                      function commit(): Void {}

    0678: [0] 33 02 ea dc 01 82 2b ....... debug 

    # ejs.es:14133                      native function connect(connectionString: String): Void

    0685: [0] 33 02 f0 dc 01 92 2c ....... debug 

    # ejs.es:14136                      function createDatabase(name: String, options = null): Void {

    0692: [0] 33 02 fa dc 01 c6 2d ....... debug 

    # ejs.es:14141                      function createTable(table: String, columns: Array? = null): Void {

    0699: [0] 33 02 a4 dd 01 d8 3b ....... debug 

    # ejs.es:14162                      static function dataTypeToSqlType(dataType:String): String

    0706: [0] 33 02 ac dd 01 e4 3d ....... debug 

    # ejs.es:14166                      function destroyDatabase(name: String): Void

    0713: [0] 33 02 b4 dd 01 bc 3f ....... debug 

    # ejs.es:14170                      function destroyTable(table: String): Void

    0720: [0] 33 02 bc dd 01 bc 40 ....... debug 

    # ejs.es:14174                      function endTransaction(): Void {}

    0727: [0] 33 02 c2 dd 01 b0 41 ....... debug 

    # ejs.es:14177                      function getColumns(table: String): Array {

    0734: [0] 33 02 dc dd 01 fe 46 ....... debug 

    # ejs.es:14190                      function getNumRows(table: String): Array {

    0741: [0] 33 02 ea dd 01 a0 4b ....... debug 

    # ejs.es:14197                      function getTables(): Array {

    0748: [0] 33 02 86 de 01 b6 53 ....... debug 

    # ejs.es:14211                      function removeColumns(table: String, columns: Array): Void {

    0755: [0] 33 02 dc de 01 da 6c ....... debug 

    # ejs.es:14254                      function removeIndex(table: String, index: String): Void

    0762: [0] 33 02 ec de 01 ea 6e ....... debug 

    # ejs.es:14262                      function renameColumn(table: String, oldColumn: String, newColumn: String): Void {

    0769: [0] 33 02 f8 de 01 ae 72 ....... debug 

    # ejs.es:14268                      function renameTable(oldTable: String, newTable: String): Void

    0776: [0] 33 02 86 df 01 ac 75 ....... debug 

    # ejs.es:14275                      function rollback(): Void {}

    0783: [0] 33 02 8c df 01 88 76 ....... debug 

    # ejs.es:14278                      function query(cmd: String, tag: String = "SQL", trace: Boolean = false): Array {

    0790: [0] 33 02 a0 df 01 b0 79 ....... debug 

    # ejs.es:14288                      native function sql(cmd: String): Array

    0797: [0] 33 02 a6 df 01 90 7a ....... debug 

    # ejs.es:14291                      function sqlTypeToDataType(sqlType: String): String

    0804: [0] 33 02 ae df 01 ac 7c ....... debug 

    # ejs.es:14295                      function sqlTypeToEjsType(sqlType: String): Type

    0811: [0] 33 02 b6 df 01 b8 7e ....... debug 

    # ejs.es:14299                      function startTransaction(): Void {}

    0818: [0] be ......................... return 
    
VARIABLE:   [Sqlite-28]  internal-ed363076473b51ca685af450cc662b39-0 const static var DataTypeToSqlType : Object
VARIABLE:   [Sqlite-29]  internal-ed363076473b51ca685af450cc662b39-0 const static var SqlTypeToDataType : Object
VARIABLE:   [Sqlite-30]  internal-ed363076473b51ca685af450cc662b39-0 const static var SqlTypeToEjsType : Object

FUNCTION:   [Sqlite-31]  public const function addColumn(table: String, column: String, datatype: String, options) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private datatype : String
     ARG:   [arg-03]   private options

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 97 ......................... putLocalSlot3 
    0007: [0] 33 02 a2 dc 01 c6 1a ....... debug 

    # ejs.es:14097                          datatype = DataTypeToSqlType[datatype.toLower()]

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b d4 02 14 ................ getObjName <DataTypeToSqlType> <internal-ed363076473b51ca685af450cc662b39-0> 
    0019: [1] 56 ce 03 ................... loadString <> 
    0022: [2] 5d ......................... getLocalSlot2 
    0023: [3] 1e c0 1b d0 1b 00 .......... callObjName <toLower> <public> <argc: 0> 
    0029: [2] 93 ......................... pushResult 
    0030: [3] 7c ......................... getObjNameExpr 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 02 a4 dc 01 de 1b ....... debug 

    # ejs.es:14098                          if (datatype == undefined) {

    0039: [0] 5d ......................... getLocalSlot2 
    0040: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0043: [2] 25 ......................... compareEq 
    0044: [1] 13 0f ...................... branchFalse8 <addr: 61> 
    0046: [0] 33 02 a6 dc 01 b0 1c ....... debug 

    # ejs.es:14099                              throw "Bad Ejscript column type: " + datatype

    0053: [0] 56 ac 1d ................... loadString <Bad Ejscript column type: > 
    0056: [1] 5d ......................... getLocalSlot2 
    0057: [2] 00 ......................... add 
    0058: [1] c6 ......................... throw 
    0059: [1] 3e 00 ...................... goto8 <addr: 61> 
    0061: [1] 33 02 a8 dc 01 e2 1d ....... debug 

    # ejs.es:14100                          }

    0068: [1] 33 02 aa dc 01 fe 1d ....... debug 

    # ejs.es:14101                          query("ALTER TABLE " + table + " ADD " + column + " " + datatype)

    0075: [1] 56 9a 1f ................... loadString <ALTER TABLE > 
    0078: [2] 5b ......................... getLocalSlot0 
    0079: [3] 00 ......................... add 
    0080: [2] 56 b4 1f ................... loadString < ADD > 
    0083: [3] 00 ......................... add 
    0084: [2] 5c ......................... getLocalSlot1 
    0085: [3] 00 ......................... add 
    0086: [2] 56 c0 1f ................... loadString < > 
    0089: [3] 00 ......................... add 
    0090: [2] 5d ......................... getLocalSlot2 
    0091: [3] 00 ......................... add 
    0092: [2] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0098: [1] 54 ......................... loadNull 
    0099: [2] bf ......................... returnValue 
    0100: [0] 33 02 ac dc 01 d0 1f ....... debug 

    # ejs.es:14102                      }
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [datatype-02]  private var datatype : String
VARIABLE:   [options-03]  private var options

FUNCTION:   [Sqlite-32]  public const function addIndex(table: String, column: String, index: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private index : String

    0000: [0] 33 02 b4 dc 01 da 21 ....... debug 

    # ejs.es:14106                          query("CREATE INDEX " + index + " ON " + table + " (" + column + ");")

    0007: [0] 56 80 23 ................... loadString <CREATE INDEX > 
    0010: [1] 5d ......................... getLocalSlot2 
    0011: [2] 00 ......................... add 
    0012: [1] 56 9c 23 ................... loadString < ON > 
    0015: [2] 00 ......................... add 
    0016: [1] 5b ......................... getLocalSlot0 
    0017: [2] 00 ......................... add 
    0018: [1] 56 a6 23 ................... loadString < (> 
    0021: [2] 00 ......................... add 
    0022: [1] 5c ......................... getLocalSlot1 
    0023: [2] 00 ......................... add 
    0024: [1] 56 ac 23 ................... loadString <);> 
    0027: [2] 00 ......................... add 
    0028: [1] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0034: [0] 93 ......................... pushResult 
    0035: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [index-02]  private var index : String

FUNCTION:   [Sqlite-33]  public const function changeColumn(table: String, column: String, datatype: String, options) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private column : String
     ARG:   [arg-02]   private datatype : String
     ARG:   [arg-03]   private options

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 97 ......................... putLocalSlot3 
    0007: [0] 33 02 c4 dc 01 9e 25 ....... debug 

    # ejs.es:14114                          datatype = datatype.toLower()

    0014: [0] 5d ......................... getLocalSlot2 
    0015: [1] 1e c0 1b d0 1b 00 .......... callObjName <toLower> <public> <argc: 0> 
    0021: [0] 93 ......................... pushResult 
    0022: [1] 96 ......................... putLocalSlot2 
    0023: [0] 33 02 c6 dc 01 f2 25 ....... debug 

    # ejs.es:14115                          if (DataTypeToSqlType[datatype] == undefined) {

    0030: [0] 57 ......................... loadThis 
    0031: [1] 7b d4 02 14 ................ getObjName <DataTypeToSqlType> <internal-ed363076473b51ca685af450cc662b39-0> 
    0035: [1] 56 ce 03 ................... loadString <> 
    0038: [2] 5d ......................... getLocalSlot2 
    0039: [3] 7c ......................... getObjNameExpr 
    0040: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0043: [2] 25 ......................... compareEq 
    0044: [1] 13 0f ...................... branchFalse8 <addr: 61> 
    0046: [0] 33 02 c8 dc 01 ea 26 ....... debug 

    # ejs.es:14116                              throw "Bad column type: " + datatype

    0053: [0] 56 d4 27 ................... loadString <Bad column type: > 
    0056: [1] 5d ......................... getLocalSlot2 
    0057: [2] 00 ......................... add 
    0058: [1] c6 ......................... throw 
    0059: [1] 3e 00 ...................... goto8 <addr: 61> 
    0061: [1] 33 02 ce dc 01 f8 27 ....... debug 

    # ejs.es:14119                          throw "SQLite does not support column changes"

    0068: [1] 56 ee 28 ................... loadString <SQLite does not support column changes> 
    0071: [2] c6 ......................... throw 
    0072: [2] 54 ......................... loadNull 
    0073: [3] bf ......................... returnValue 
    0074: [0] 33 02 d0 dc 01 d0 1f ....... debug 

    # ejs.es:14120                      }
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [column-01]  private var column : String
VARIABLE:   [datatype-02]  private var datatype : String
VARIABLE:   [options-03]  private var options

FUNCTION:   [Sqlite-34]  public native const function close() : Void


    

FUNCTION:   [Sqlite-35]  public const function commit() : Void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

FUNCTION:   [Sqlite-36]  public native const function connect(connectionString: String) : Void

     ARG:   [arg-00]   private connectionString : String

    
VARIABLE:   [connectionString-00]  private var connectionString : String

FUNCTION:   [Sqlite-37]  public const function createDatabase(name: String, options) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private options

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 54 ......................... loadNull 
    0008: [1] bf ......................... returnValue 
    0009: [0] 33 02 f4 dc 01 d0 1f ....... debug 

    # ejs.es:14138                      }
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [options-01]  private var options

FUNCTION:   [Sqlite-38]  public const function createTable(table: String, columns: Array) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private columns : Array
   LOCAL:   [local-02] var cmd : String
   LOCAL:   [local-03] var colspec : String
   LOCAL:   [local-04] var spec : Array
   LOCAL:   [local-05] var column : String
   LOCAL:   [local-06] var datatype : String

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 02 fc dc 01 e6 2e ....... debug 

    # ejs.es:14142                          let cmd: String

    0014: [0] 33 02 80 dd 01 9e 2f ....... debug 

    # ejs.es:14144                          query("DROP TABLE IF EXISTS " + table + ";")

    0021: [0] 56 90 30 ................... loadString <DROP TABLE IF EXISTS > 
    0024: [1] 5b ......................... getLocalSlot0 
    0025: [2] 00 ......................... add 
    0026: [1] 56 bc 30 ................... loadString <;> 
    0029: [2] 00 ......................... add 
    0030: [1] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0036: [0] 33 02 82 dd 01 c0 30 ....... debug 

    # ejs.es:14145                          query("CREATE TABLE " + table + "(id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL);")

    0043: [0] 56 80 32 ................... loadString <CREATE TABLE > 
    0046: [1] 5b ......................... getLocalSlot0 
    0047: [2] 00 ......................... add 
    0048: [1] 56 9c 32 ................... loadString <(id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL);> 
    0051: [2] 00 ......................... add 
    0052: [1] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0058: [0] 33 02 86 dd 01 fe 32 ....... debug 

    # ejs.es:14147                          if (columns) {

    0065: [0] 5c ......................... getLocalSlot1 
    0066: [1] 07 a2 02 f7 f7 ............. branchFalse <addr: 216> 
    0071: [0] 33 02 88 dd 01 b4 33 ....... debug 

    # ejs.es:14148                              for each (let colspec: String in columns) {

    0078: [0] 5c ......................... getLocalSlot1 
    0079: [1] 1e d2 34 e6 34 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0085: [0] 93 ......................... pushResult 
    0086: [1] 39 ......................... dup 
    0087: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0090: [1] 93 ......................... pushResult 
    0091: [2] 97 ......................... putLocalSlot3 
    0092: [1] 33 02 8c dd 01 82 35 ....... debug 

    # ejs.es:14150                                  let spec: Array = colspec.split(":")

    0099: [1] 5e ......................... getLocalSlot3 
    0100: [2] 56 f4 35 ................... loadString <:> 
    0103: [3] 1e f8 35 d0 1b 02 .......... callObjName <split> <public> <argc: 1> 
    0109: [1] 93 ......................... pushResult 
    0110: [2] 98 ......................... putLocalSlot4 
    0111: [1] 33 02 8e dd 01 84 36 ....... debug 

    # ejs.es:14151                                  if (spec.length != 2) {

    0118: [1] 5f ......................... getLocalSlot4 
    0119: [2] 7b dc 36 d0 1b ............. getObjName <length> <public> 
    0124: [2] 46 ......................... load2 
    0125: [3] 2c ......................... compareNe 
    0126: [2] 13 0f ...................... branchFalse8 <addr: 143> 
    0128: [1] 33 02 90 dd 01 ea 36 ....... debug 

    # ejs.es:14152                                      throw "Bad column spec: " + spec

    0135: [1] 56 dc 37 ................... loadString <Bad column spec: > 
    0138: [2] 5f ......................... getLocalSlot4 
    0139: [3] 00 ......................... add 
    0140: [2] c6 ......................... throw 
    0141: [2] 3e 00 ...................... goto8 <addr: 143> 
    0143: [2] 33 02 92 dd 01 80 38 ....... debug 

    # ejs.es:14153                                  }

    0150: [2] 33 02 94 dd 01 ac 38 ....... debug 

    # ejs.es:14154                                  let column: String = spec[0]

    0157: [2] 5f ......................... getLocalSlot4 
    0158: [3] 56 ce 03 ................... loadString <> 
    0161: [4] 44 ......................... load0 
    0162: [5] 7c ......................... getObjNameExpr 
    0163: [3] 99 ......................... putLocalSlot5 
    0164: [2] 33 02 96 dd 01 8e 39 ....... debug 

    # ejs.es:14155                                  let datatype: String = spec[1]

    0171: [2] 5f ......................... getLocalSlot4 
    0172: [3] 56 ce 03 ................... loadString <> 
    0175: [4] 45 ......................... load1 
    0176: [5] 7c ......................... getObjNameExpr 
    0177: [3] 9a ......................... putLocalSlot6 
    0178: [2] 33 02 98 dd 01 f4 39 ....... debug 

    # ejs.es:14156                                  addColumn(table, column.trim(), datatype.trim())

    0185: [2] 5b ......................... getLocalSlot0 
    0186: [3] 60 ......................... getLocalSlot5 
    0187: [4] 1e fe 3a d0 1b 00 .......... callObjName <trim> <public> <argc: 0> 
    0193: [3] 93 ......................... pushResult 
    0194: [4] 61 ......................... getLocalSlot6 
    0195: [5] 1e fe 3a d0 1b 00 .......... callObjName <trim> <public> <argc: 0> 
    0201: [4] 93 ......................... pushResult 
    0202: [5] 1f e4 1f d0 1b 06 .......... callScopedName <addColumn> <public> <argc: 3> 
    0208: [2] 3d ff 01 f7 f7 ............. goto <addr: 86> 
    0213: [2] 90 ......................... pop 
    0214: [1] 3e 00 ...................... goto8 <addr: 216> 
    0216: [1] 54 ......................... loadNull 
    0217: [2] bf ......................... returnValue 
    0218: [0] 33 02 9e dd 01 d0 1f ....... debug 

    # ejs.es:14159                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     87      90        213          213       StopIteration

VARIABLE:   [table-00]  private var table : String
VARIABLE:   [columns-01]  private var columns : Array
VARIABLE:   [cmd-02]  private var cmd : String
VARIABLE:   [colspec-03]  -hoisted-3 var colspec : String
VARIABLE:   [spec-04]  -hoisted-3 var spec : Array
VARIABLE:   [column-05]  -hoisted-3 var column : String
VARIABLE:   [datatype-06]  -hoisted-3 var datatype : String

FUNCTION:   [Sqlite-39]  public const static function dataTypeToSqlType(dataType: String) : String

     ARG:   [arg-00]   private dataType : String

    0000: [0] 33 02 a6 dd 01 de 3c ....... debug 

    # ejs.es:14163                          DataTypeToSqlType[dataType]

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b d4 02 14 ................ getObjName <DataTypeToSqlType> <internal-ed363076473b51ca685af450cc662b39-0> 
    0012: [1] 56 ce 03 ................... loadString <> 
    0015: [2] 5b ......................... getLocalSlot0 
    0016: [3] 7c ......................... getObjNameExpr 
    0017: [1] bf ......................... returnValue 
    
VARIABLE:   [dataType-00]  private var dataType : String

FUNCTION:   [Sqlite-40]  public const function destroyDatabase(name: String) : Void

     ARG:   [arg-00]   private name : String

    0000: [0] 33 02 ae dd 01 ce 3e ....... debug 

    # ejs.es:14167                          Path(name).remove()

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0012: [0] 93 ......................... pushResult 
    0013: [1] 1e 8e 3f d0 1b 00 .......... callObjName <remove> <public> <argc: 0> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name : String

FUNCTION:   [Sqlite-41]  public const function destroyTable(table: String) : Void

     ARG:   [arg-00]   private table : String

    0000: [0] 33 02 b6 dd 01 9e 2f ....... debug 

    # ejs.es:14171                          query("DROP TABLE IF EXISTS " + table + ";")

    0007: [0] 56 90 30 ................... loadString <DROP TABLE IF EXISTS > 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 00 ......................... add 
    0012: [1] 56 bc 30 ................... loadString <;> 
    0015: [2] 00 ......................... add 
    0016: [1] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String

FUNCTION:   [Sqlite-42]  public const function endTransaction() : Void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

FUNCTION:   [Sqlite-43]  public const function getColumns(table: String) : Array

     ARG:   [arg-00]   private table : String
   LOCAL:   [local-01] var names
   LOCAL:   [local-02] var row
   LOCAL:   [local-03] var name : String

    0000: [0] 33 02 c4 dd 01 98 42 ....... debug 

    # ejs.es:14178                          grid = query('PRAGMA table_info("' + table + '");')

    0007: [0] 56 98 43 ................... loadString <PRAGMA table_info("> 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 00 ......................... add 
    0012: [1] 56 c0 43 ................... loadString <");> 
    0015: [2] 00 ......................... add 
    0016: [1] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] b4 c8 43 ce 03 ............. putScopedName <grid> <> 
    0028: [0] 33 02 c6 dd 01 d2 43 ....... debug 

    # ejs.es:14179                          let names = []

    0035: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0037: [1] 89 ......................... new 
    0038: [1] 95 ......................... putLocalSlot1 
    0039: [0] 33 02 c8 dd 01 94 44 ....... debug 

    # ejs.es:14180                          for each (let row in grid) {

    0046: [0] 79 c8 43 ce 03 ............. getScopedName <grid> <> 
    0051: [1] 1e d2 34 e6 34 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0057: [0] 93 ......................... pushResult 
    0058: [1] 39 ......................... dup 
    0059: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0062: [1] 93 ......................... pushResult 
    0063: [2] 96 ......................... putLocalSlot2 
    0064: [1] 33 02 ca dd 01 84 45 ....... debug 

    # ejs.es:14181                              let name: String = row["name"]

    0071: [1] 5d ......................... getLocalSlot2 
    0072: [2] 56 ce 03 ................... loadString <> 
    0075: [3] 56 bc 2d ................... loadString <name> 
    0078: [4] 7c ......................... getObjNameExpr 
    0079: [2] 97 ......................... putLocalSlot3 
    0080: [1] 33 02 cc dd 01 e2 45 ....... debug 

    # ejs.es:14182                              names.append(name)

    0087: [1] 5c ......................... getLocalSlot1 
    0088: [2] 5e ......................... getLocalSlot3 
    0089: [3] 1e a8 46 00 02 ............. callObjName <append> <> <argc: 1> 
    0094: [1] 3e da ...................... goto8 <addr: 58> 
    0096: [1] 90 ......................... pop 
    0097: [0] 33 02 d0 dd 01 b6 46 ....... debug 

    # ejs.es:14184                          return names

    0104: [0] 5c ......................... getLocalSlot1 
    0105: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     59      62         96           96       StopIteration

VARIABLE:   [table-00]  private var table : String
VARIABLE:   [names-01]  private var names
VARIABLE:   [row-02]  -hoisted-2 var row
VARIABLE:   [name-03]  -hoisted-2 var name : String

FUNCTION:   [Sqlite-44]  public const function getNumRows(table: String) : Array

     ARG:   [arg-00]   private table : String
   LOCAL:   [local-01] var cmd : String
   LOCAL:   [local-02] var grid : Array

    0000: [0] 33 02 de dd 01 e6 47 ....... debug 

    # ejs.es:14191                          let cmd: String = "SELECT COUNT(*) FROM " + table + ";"

    0007: [0] 56 ee 48 ................... loadString <SELECT COUNT(*) FROM > 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 00 ......................... add 
    0012: [1] 56 bc 30 ................... loadString <;> 
    0015: [2] 00 ......................... add 
    0016: [1] 95 ......................... putLocalSlot1 
    0017: [0] 33 02 e0 dd 01 9a 49 ....... debug 

    # ejs.es:14192                          let grid: Array = query(cmd, "numRows")

    0024: [0] 5c ......................... getLocalSlot1 
    0025: [1] 56 82 4a ................... loadString <numRows> 
    0028: [2] 1f c4 1f d0 1b 04 .......... callScopedName <query> <public> <argc: 2> 
    0034: [0] 93 ......................... pushResult 
    0035: [1] 96 ......................... putLocalSlot2 
    0036: [0] 33 02 e2 dd 01 92 4a ....... debug 

    # ejs.es:14193                          return grid[0]["COUNT(*)"] cast Number

    0043: [0] 5d ......................... getLocalSlot2 
    0044: [1] 56 ce 03 ................... loadString <> 
    0047: [2] 44 ......................... load0 
    0048: [3] 7c ......................... getObjNameExpr 
    0049: [1] 56 ce 03 ................... loadString <> 
    0052: [2] 56 f8 4a ................... loadString <COUNT(*)> 
    0055: [3] 7c ......................... getObjNameExpr 
    0056: [1] 7e d6 01 ................... getGlobalSlot <slot: 107> 
    0059: [2] 22 ......................... cast 
    0060: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [cmd-01]  private var cmd : String
VARIABLE:   [grid-02]  private var grid : Array

FUNCTION:   [Sqlite-45]  public const function getTables() : Array

   LOCAL:   [local-00] var cmd : String
   LOCAL:   [local-01] var grid : Array
   LOCAL:   [local-02] var result : Array
   LOCAL:   [local-03] var row : Object
   LOCAL:   [local-04] var name : String

    0000: [0] 33 02 ec dd 01 ec 4b ....... debug 

    # ejs.es:14198                          let cmd: String = "SELECT name from sqlite_master WHERE type = 'table' order by NAME;"

    0007: [0] 56 b2 4d ................... loadString <SELECT name from sqlite_master WHERE type = 'table' order by NAME;> 
    0010: [1] 94 ......................... putLocalSlot0 
    0011: [0] 33 02 ee dd 01 b8 4e ....... debug 

    # ejs.es:14199                          let grid: Array = query(cmd)

    0018: [0] 5b ......................... getLocalSlot0 
    0019: [1] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 95 ......................... putLocalSlot1 
    0027: [0] 33 02 f0 dd 01 8a 4f ....... debug 

    # ejs.es:14200                          let result: Array = new Array

    0034: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0036: [1] 89 ......................... new 
    0037: [1] 20 00 ...................... callConstructor <argc: 0> 
    0039: [1] 96 ......................... putLocalSlot2 
    0040: [0] 33 02 f2 dd 01 ec 4f ....... debug 

    # ejs.es:14201                          for each (let row: Object in grid) {

    0047: [0] 5c ......................... getLocalSlot1 
    0048: [1] 1e d2 34 e6 34 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0054: [0] 93 ......................... pushResult 
    0055: [1] 39 ......................... dup 
    0056: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0059: [1] 93 ......................... pushResult 
    0060: [2] 97 ......................... putLocalSlot3 
    0061: [1] 33 02 f4 dd 01 84 45 ....... debug 

    # ejs.es:14202                              let name: String = row["name"]

    0068: [1] 5e ......................... getLocalSlot3 
    0069: [2] 56 ce 03 ................... loadString <> 
    0072: [3] 56 bc 2d ................... loadString <name> 
    0075: [4] 7c ......................... getObjNameExpr 
    0076: [2] 98 ......................... putLocalSlot4 
    0077: [1] 33 02 f6 dd 01 ce 50 ....... debug 

    # ejs.es:14203                              if (!name.contains("sqlite_") && !name.contains("_Ejs")) {

    0084: [1] 5f ......................... getLocalSlot4 
    0085: [2] 56 e4 51 ................... loadString <sqlite_> 
    0088: [3] 1e f4 51 d0 1b 02 .......... callObjName <contains> <public> <argc: 1> 
    0094: [1] 93 ......................... pushResult 
    0095: [2] 86 ......................... logicalNot 
    0096: [2] 39 ......................... dup 
    0097: [3] 13 0d ...................... branchFalse8 <addr: 112> 
    0099: [2] 90 ......................... pop 
    0100: [1] 5f ......................... getLocalSlot4 
    0101: [2] 56 86 52 ................... loadString <_Ejs> 
    0104: [3] 1e f4 51 d0 1b 02 .......... callObjName <contains> <public> <argc: 1> 
    0110: [1] 93 ......................... pushResult 
    0111: [2] 86 ......................... logicalNot 
    0112: [2] 13 18 ...................... branchFalse8 <addr: 138> 
    0114: [1] 33 02 f8 dd 01 90 52 ....... debug 

    # ejs.es:14204                                  result.append(row["name"])

    0121: [1] 5d ......................... getLocalSlot2 
    0122: [2] 5e ......................... getLocalSlot3 
    0123: [3] 56 ce 03 ................... loadString <> 
    0126: [4] 56 bc 2d ................... loadString <name> 
    0129: [5] 7c ......................... getObjNameExpr 
    0130: [3] 1e a8 46 d0 1b 02 .......... callObjName <append> <public> <argc: 1> 
    0136: [1] 3e 00 ...................... goto8 <addr: 138> 
    0138: [1] 3e ab ...................... goto8 <addr: 55> 
    0140: [1] 90 ......................... pop 
    0141: [0] 33 02 fe dd 01 ee 52 ....... debug 

    # ejs.es:14207                          return result

    0148: [0] 5d ......................... getLocalSlot2 
    0149: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     56      59        140          140       StopIteration

VARIABLE:   [cmd-00]  private var cmd : String
VARIABLE:   [grid-01]  private var grid : Array
VARIABLE:   [result-02]  private var result : Array
VARIABLE:   [row-03]  -hoisted-3 var row : Object
VARIABLE:   [name-04]  -hoisted-3 var name : String

FUNCTION:   [Sqlite-46]  public const function removeColumns(table: String, columns: Array) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private columns : Array
   LOCAL:   [local-02] var column
   LOCAL:   [local-03] var row
   LOCAL:   [local-04] var name : String
   LOCAL:   [local-05] var k

    0000: [0] 33 02 8e de 01 c2 54 ....... debug 

    # ejs.es:14215                          backup = "_backup_" + table

    0007: [0] 56 92 55 ................... loadString <_backup_> 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 00 ......................... add 
    0012: [1] b4 a4 55 ce 03 ............. putScopedName <backup> <> 
    0017: [0] 33 02 90 de 01 b2 55 ....... debug 

    # ejs.es:14216                          keep = getColumns(table)

    0024: [0] 5b ......................... getLocalSlot0 
    0025: [1] 1f e8 46 d0 1b 02 .......... callScopedName <getColumns> <public> <argc: 1> 
    0031: [0] 93 ......................... pushResult 
    0032: [1] b4 fc 55 ce 03 ............. putScopedName <keep> <> 
    0037: [0] 33 02 92 de 01 86 56 ....... debug 

    # ejs.es:14217                          for each (column in columns) {

    0044: [0] 5c ......................... getLocalSlot1 
    0045: [1] 1e d2 34 e6 34 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0051: [0] 93 ......................... pushResult 
    0052: [1] 39 ......................... dup 
    0053: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0056: [1] 93 ......................... pushResult 
    0057: [2] 96 ......................... putLocalSlot2 
    0058: [1] 33 02 94 de 01 dc 56 ....... debug 

    # ejs.es:14218                              if ((index = keep.indexOf(column)) < 0) {

    0065: [1] 79 fc 55 ce 03 ............. getScopedName <keep> <> 
    0070: [2] 5d ......................... getLocalSlot2 
    0071: [3] 1e d0 57 00 02 ............. callObjName <indexOf> <> <argc: 1> 
    0076: [1] 93 ......................... pushResult 
    0077: [2] 39 ......................... dup 
    0078: [3] b4 c4 23 ce 03 ............. putScopedName <index> <> 
    0083: [2] 44 ......................... load0 
    0084: [3] 2b ......................... compareLt 
    0085: [2] 13 15 ...................... branchFalse8 <addr: 108> 
    0087: [1] 33 02 96 de 01 e0 57 ....... debug 

    # ejs.es:14219                                  throw "Column \"" + column + "\" does not exist in " + table

    0094: [1] 56 82 59 ................... loadString <Column "> 
    0097: [2] 5d ......................... getLocalSlot2 
    0098: [3] 00 ......................... add 
    0099: [2] 56 94 59 ................... loadString <" does not exist in > 
    0102: [3] 00 ......................... add 
    0103: [2] 5b ......................... getLocalSlot0 
    0104: [3] 00 ......................... add 
    0105: [2] c6 ......................... throw 
    0106: [2] 3e 00 ...................... goto8 <addr: 108> 
    0108: [2] 33 02 98 de 01 be 59 ....... debug 

    # ejs.es:14220                              } 

    0115: [2] 33 02 9a de 01 e4 59 ....... debug 

    # ejs.es:14221                              keep.remove(index)

    0122: [2] 79 fc 55 ce 03 ............. getScopedName <keep> <> 
    0127: [3] 79 c4 23 ce 03 ............. getScopedName <index> <> 
    0132: [4] 1e 8e 3f 00 02 ............. callObjName <remove> <> <argc: 1> 
    0137: [2] 3e a9 ...................... goto8 <addr: 52> 
    0139: [2] 90 ......................... pop 
    0140: [1] 33 02 9c de 01 e2 1d ....... debug 

    # ejs.es:14222                          }

    0147: [1] 33 02 a2 de 01 aa 5a ....... debug 

    # ejs.es:14225                          schema = 'PRAGMA table_info("' + table + '");'

    0154: [1] 56 98 43 ................... loadString <PRAGMA table_info("> 
    0157: [2] 5b ......................... getLocalSlot0 
    0158: [3] 00 ......................... add 
    0159: [2] 56 c0 43 ................... loadString <");> 
    0162: [3] 00 ......................... add 
    0163: [2] b4 a0 5b ce 03 ............. putScopedName <schema> <> 
    0168: [1] 33 02 a4 de 01 ae 5b ....... debug 

    # ejs.es:14226                          grid = query(schema)

    0175: [1] 79 a0 5b ce 03 ............. getScopedName <schema> <> 
    0180: [2] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0186: [1] 93 ......................... pushResult 
    0187: [2] b4 c8 43 ce 03 ............. putScopedName <grid> <> 
    0192: [1] 33 02 a6 de 01 f0 5b ....... debug 

    # ejs.es:14227                          types = {}

    0199: [1] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0203: [2] b4 9e 5c ce 03 ............. putScopedName <types> <> 
    0208: [1] 33 02 a8 de 01 94 44 ....... debug 

    # ejs.es:14228                          for each (let row in grid) {

    0215: [1] 79 c8 43 ce 03 ............. getScopedName <grid> <> 
    0220: [2] 1e d2 34 e6 34 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0226: [1] 93 ......................... pushResult 
    0227: [2] 39 ......................... dup 
    0228: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0231: [2] 93 ......................... pushResult 
    0232: [3] 97 ......................... putLocalSlot3 
    0233: [2] 33 02 aa de 01 84 45 ....... debug 

    # ejs.es:14229                              let name: String = row["name"]

    0240: [2] 5e ......................... getLocalSlot3 
    0241: [3] 56 ce 03 ................... loadString <> 
    0244: [4] 56 bc 2d ................... loadString <name> 
    0247: [5] 7c ......................... getObjNameExpr 
    0248: [3] 98 ......................... putLocalSlot4 
    0249: [2] 33 02 ac de 01 aa 5c ....... debug 

    # ejs.es:14230                              types[name] = row["type"]

    0256: [2] 5e ......................... getLocalSlot3 
    0257: [3] 56 ce 03 ................... loadString <> 
    0260: [4] 56 fe 5c ................... loadString <type> 
    0263: [5] 7c ......................... getObjNameExpr 
    0264: [3] 79 9e 5c ce 03 ............. getScopedName <types> <> 
    0269: [4] 56 ce 03 ................... loadString <> 
    0272: [5] 5f ......................... getLocalSlot4 
    0273: [6] b2 ......................... putObjNameExpr 
    0274: [2] 3e cf ...................... goto8 <addr: 227> 
    0276: [2] 90 ......................... pop 
    0277: [1] 33 02 ae de 01 e2 1d ....... debug 

    # ejs.es:14231                          }

    0284: [1] 33 02 b2 de 01 88 5d ....... debug 

    # ejs.es:14233                          columnSpec = []

    0291: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0293: [2] 89 ......................... new 
    0294: [2] b4 c0 5d ce 03 ............. putScopedName <columnSpec> <> 
    0299: [1] 33 02 b4 de 01 d6 5d ....... debug 

    # ejs.es:14234                          for each (k in keep) {

    0306: [1] 79 fc 55 ce 03 ............. getScopedName <keep> <> 
    0311: [2] 1e d2 34 e6 34 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0317: [1] 93 ......................... pushResult 
    0318: [2] 39 ......................... dup 
    0319: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0322: [2] 93 ......................... pushResult 
    0323: [3] 99 ......................... putLocalSlot5 
    0324: [2] 33 02 b6 de 01 b6 5e ....... debug 

    # ejs.es:14235                              if (k == "id") {

    0331: [2] 60 ......................... getLocalSlot5 
    0332: [3] 56 f8 5e ................... loadString <id> 
    0335: [4] 25 ......................... compareEq 
    0336: [3] 13 18 ...................... branchFalse8 <addr: 362> 
    0338: [2] 33 02 b8 de 01 fe 5e ....... debug 

    # ejs.es:14236                                  columnSpec.append(k + " INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL")

    0345: [2] 79 c0 5d ce 03 ............. getScopedName <columnSpec> <> 
    0350: [3] 60 ......................... getLocalSlot5 
    0351: [4] 56 b0 60 ................... loadString < INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL> 
    0354: [5] 00 ......................... add 
    0355: [4] 1e a8 46 00 02 ............. callObjName <append> <> <argc: 1> 
    0360: [2] 3e 28 ...................... goto8 <addr: 402> 
    0362: [2] 33 02 ba de 01 88 61 ....... debug 

    # ejs.es:14237                              } else {

    0369: [2] 33 02 bc de 01 ba 61 ....... debug 

    # ejs.es:14238                                  columnSpec.append(k + " " + types[k])

    0376: [2] 79 c0 5d ce 03 ............. getScopedName <columnSpec> <> 
    0381: [3] 60 ......................... getLocalSlot5 
    0382: [4] 56 c0 1f ................... loadString < > 
    0385: [5] 00 ......................... add 
    0386: [4] 79 9e 5c ce 03 ............. getScopedName <types> <> 
    0391: [5] 56 ce 03 ................... loadString <> 
    0394: [6] 60 ......................... getLocalSlot5 
    0395: [7] 7c ......................... getObjNameExpr 
    0396: [5] 00 ......................... add 
    0397: [4] 1e a8 46 00 02 ............. callObjName <append> <> <argc: 1> 
    0402: [2] 3e aa ...................... goto8 <addr: 318> 
    0404: [2] 90 ......................... pop 
    0405: [1] 33 02 c0 de 01 e2 1d ....... debug 

    # ejs.es:14240                          }

    0412: [1] 33 02 c4 de 01 ae 62 ....... debug 

    # ejs.es:14242                          cmd = "BEGIN TRANSACTION;

    0419: [1] 33 02 d0 de 01 fa 62 ....... debug 

    # ejs.es:14248                              DROP TABLE " + backup + ";

    0426: [1] 33 02 ce de 01 d0 63 ....... debug 

    # ejs.es:14247                              INSERT INTO " + table + " SELECT " + keep + " FROM " + backup + ";

    0433: [1] 33 02 cc de 01 f6 64 ....... debug 

    # ejs.es:14246                              CREATE TABLE " + table + "(" + columnSpec + ");

    0440: [1] 33 02 ca de 01 f6 65 ....... debug 

    # ejs.es:14245                              DROP TABLE " + table + ";

    0447: [1] 33 02 c8 de 01 ca 66 ....... debug 

    # ejs.es:14244                              INSERT INTO " + backup + " SELECT " + keep + " FROM " + table + ";

    0454: [1] 33 02 c6 de 01 f0 67 ....... debug 

    # ejs.es:14243                              CREATE TEMPORARY TABLE " + backup + "(" + columnSpec + ");

    0461: [1] 33 02 c4 de 01 ae 62 ....... debug 

    # ejs.es:14242                          cmd = "BEGIN TRANSACTION;

    0468: [1] 56 86 69 ................... loadString <BEGIN TRANSACTION;
                CREATE TEMPORARY TABLE > 
    0471: [2] 33 02 c6 de 01 f0 67 ....... debug 

    # ejs.es:14243                              CREATE TEMPORARY TABLE " + backup + "(" + columnSpec + ");

    0478: [2] 79 a4 55 ce 03 ............. getScopedName <backup> <> 
    0483: [3] 00 ......................... add 
    0484: [2] 56 fc 69 ................... loadString <(> 
    0487: [3] 00 ......................... add 
    0488: [2] 79 c0 5d ce 03 ............. getScopedName <columnSpec> <> 
    0493: [3] 00 ......................... add 
    0494: [2] 56 80 6a ................... loadString <);
                INSERT INTO > 
    0497: [3] 00 ......................... add 
    0498: [2] 33 02 c8 de 01 ca 66 ....... debug 

    # ejs.es:14244                              INSERT INTO " + backup + " SELECT " + keep + " FROM " + table + ";

    0505: [2] 79 a4 55 ce 03 ............. getScopedName <backup> <> 
    0510: [3] 00 ......................... add 
    0511: [2] 56 c0 6a ................... loadString < SELECT > 
    0514: [3] 00 ......................... add 
    0515: [2] 79 fc 55 ce 03 ............. getScopedName <keep> <> 
    0520: [3] 00 ......................... add 
    0521: [2] 56 d2 6a ................... loadString < FROM > 
    0524: [3] 00 ......................... add 
    0525: [2] 5b ......................... getLocalSlot0 
    0526: [3] 00 ......................... add 
    0527: [2] 56 e0 6a ................... loadString <;
                DROP TABLE > 
    0530: [3] 00 ......................... add 
    0531: [2] 33 02 ca de 01 f6 65 ....... debug 

    # ejs.es:14245                              DROP TABLE " + table + ";

    0538: [2] 5b ......................... getLocalSlot0 
    0539: [3] 00 ......................... add 
    0540: [2] 56 9c 6b ................... loadString <;
                CREATE TABLE > 
    0543: [3] 00 ......................... add 
    0544: [2] 33 02 cc de 01 f6 64 ....... debug 

    # ejs.es:14246                              CREATE TABLE " + table + "(" + columnSpec + ");

    0551: [2] 5b ......................... getLocalSlot0 
    0552: [3] 00 ......................... add 
    0553: [2] 56 fc 69 ................... loadString <(> 
    0556: [3] 00 ......................... add 
    0557: [2] 79 c0 5d ce 03 ............. getScopedName <columnSpec> <> 
    0562: [3] 00 ......................... add 
    0563: [2] 56 80 6a ................... loadString <);
                INSERT INTO > 
    0566: [3] 00 ......................... add 
    0567: [2] 33 02 ce de 01 d0 63 ....... debug 

    # ejs.es:14247                              INSERT INTO " + table + " SELECT " + keep + " FROM " + backup + ";

    0574: [2] 5b ......................... getLocalSlot0 
    0575: [3] 00 ......................... add 
    0576: [2] 56 c0 6a ................... loadString < SELECT > 
    0579: [3] 00 ......................... add 
    0580: [2] 79 fc 55 ce 03 ............. getScopedName <keep> <> 
    0585: [3] 00 ......................... add 
    0586: [2] 56 d2 6a ................... loadString < FROM > 
    0589: [3] 00 ......................... add 
    0590: [2] 79 a4 55 ce 03 ............. getScopedName <backup> <> 
    0595: [3] 00 ......................... add 
    0596: [2] 56 e0 6a ................... loadString <;
                DROP TABLE > 
    0599: [3] 00 ......................... add 
    0600: [2] 33 02 d0 de 01 fa 62 ....... debug 

    # ejs.es:14248                              DROP TABLE " + backup + ";

    0607: [2] 79 a4 55 ce 03 ............. getScopedName <backup> <> 
    0612: [3] 00 ......................... add 
    0613: [2] 56 dc 6b ................... loadString <;
                COMMIT;> 
    0616: [3] 00 ......................... add 
    0617: [2] 33 02 c4 de 01 ae 62 ....... debug 

    # ejs.es:14242                          cmd = "BEGIN TRANSACTION;

    0624: [2] b4 de 2e ce 03 ............. putScopedName <cmd> <> 
    0629: [1] 33 02 d4 de 01 90 6c ....... debug 

    # ejs.es:14250                          query(cmd)

    0636: [1] 79 de 2e ce 03 ............. getScopedName <cmd> <> 
    0641: [2] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0647: [1] 54 ......................... loadNull 
    0648: [2] bf ......................... returnValue 
    0649: [0] 33 02 d6 de 01 d0 1f ....... debug 

    # ejs.es:14251                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     53      56        139          139       StopIteration
1   iteration    228     231        276          276       StopIteration
2   iteration    319     322        404          404       StopIteration

VARIABLE:   [table-00]  private var table : String
VARIABLE:   [columns-01]  private var columns : Array
VARIABLE:   [column-02]  -hoisted-2 var column
VARIABLE:   [row-03]  -hoisted-3 var row
VARIABLE:   [name-04]  -hoisted-3 var name : String
VARIABLE:   [k-05]  -hoisted-5 var k

FUNCTION:   [Sqlite-47]  public const function removeIndex(table: String, index: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private index : String

    0000: [0] 33 02 de de 01 dc 6d ....... debug 

    # ejs.es:14255                          query("DROP INDEX " + index + ";")

    0007: [0] 56 ba 6e ................... loadString <DROP INDEX > 
    0010: [1] 5c ......................... getLocalSlot1 
    0011: [2] 00 ......................... add 
    0012: [1] 56 bc 30 ................... loadString <;> 
    0015: [2] 00 ......................... add 
    0016: [1] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [index-01]  private var index : String

FUNCTION:   [Sqlite-48]  public const function renameColumn(table: String, oldColumn: String, newColumn: String) : Void

     ARG:   [arg-00]   private table : String
     ARG:   [arg-01]   private oldColumn : String
     ARG:   [arg-02]   private newColumn : String

    0000: [0] 33 02 ee de 01 a0 70 ....... debug 

    # ejs.es:14263                          throw "SQLite does not support renaming columns"

    0007: [0] 56 9a 71 ................... loadString <SQLite does not support renaming columns> 
    0010: [1] c6 ......................... throw 
    0011: [1] 54 ......................... loadNull 
    0012: [2] bf ......................... returnValue 
    0013: [0] 33 02 f2 de 01 d0 1f ....... debug 

    # ejs.es:14265                      }
    
VARIABLE:   [table-00]  private var table : String
VARIABLE:   [oldColumn-01]  private var oldColumn : String
VARIABLE:   [newColumn-02]  private var newColumn : String

FUNCTION:   [Sqlite-49]  public const function renameTable(oldTable: String, newTable: String) : Void

     ARG:   [arg-00]   private oldTable : String
     ARG:   [arg-01]   private newTable : String

    0000: [0] 33 02 fa de 01 bc 73 ....... debug 

    # ejs.es:14269                          query("ALTER TABLE " + oldTable + " RENAME TO " + newTable + ";")

    0007: [0] 56 9a 1f ................... loadString <ALTER TABLE > 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 00 ......................... add 
    0012: [1] 56 d8 74 ................... loadString < RENAME TO > 
    0015: [2] 00 ......................... add 
    0016: [1] 5c ......................... getLocalSlot1 
    0017: [2] 00 ......................... add 
    0018: [1] 56 bc 30 ................... loadString <;> 
    0021: [2] 00 ......................... add 
    0022: [1] 1f c4 1f d0 1b 02 .......... callScopedName <query> <public> <argc: 1> 
    0028: [0] 93 ......................... pushResult 
    0029: [1] bf ......................... returnValue 
    
VARIABLE:   [oldTable-00]  private var oldTable : String
VARIABLE:   [newTable-01]  private var newTable : String

FUNCTION:   [Sqlite-50]  public const function rollback() : Void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

FUNCTION:   [Sqlite-51]  public const function query(cmd: String, tag: String, trace: Boolean) : Array

     ARG:   [arg-00]   private cmd : String
     ARG:   [arg-01]   private tag : String
     ARG:   [arg-02]   private trace : Boolean

    0000: [0] 41 03 03 07 0a ............. initDefaultArgs8 <3> <5> <9> <12> 
    0005: [0] 56 bc 77 ................... loadString <SQL> 
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0011: [1] 96 ......................... putLocalSlot2 
    0012: [0] 33 02 92 df 01 c4 77 ....... debug 

    # ejs.es:14281                          if (trace) {

    0019: [0] 5d ......................... getLocalSlot2 
    0020: [1] 13 14 ...................... branchFalse8 <addr: 42> 
    0022: [0] 33 02 94 df 01 f6 77 ....... debug 

    # ejs.es:14282                              print(tag + ": " + cmd)

    0029: [0] 5c ......................... getLocalSlot1 
    0030: [1] 56 c6 78 ................... loadString <: > 
    0033: [2] 00 ......................... add 
    0034: [1] 5b ......................... getLocalSlot0 
    0035: [2] 00 ......................... add 
    0036: [1] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0040: [0] 3e 00 ...................... goto8 <addr: 42> 
    0042: [0] 33 02 98 df 01 cc 78 ....... debug 

    # ejs.es:14284                          return sql(cmd)

    0049: [0] 5b ......................... getLocalSlot0 
    0050: [1] 1f 84 79 d0 1b 02 .......... callScopedName <sql> <public> <argc: 1> 
    0056: [0] 93 ......................... pushResult 
    0057: [1] bf ......................... returnValue 
    
VARIABLE:   [cmd-00]  private var cmd : String
VARIABLE:   [tag-01]  private var tag : String
VARIABLE:   [trace-02]  private var trace : Boolean

FUNCTION:   [Sqlite-52]  public native const function sql(cmd: String) : Array

     ARG:   [arg-00]   private cmd : String

    
VARIABLE:   [cmd-00]  private var cmd : String

FUNCTION:   [Sqlite-53]  public const function sqlTypeToDataType(sqlType: String) : String

     ARG:   [arg-00]   private sqlType : String

    0000: [0] 33 02 a8 df 01 88 7b ....... debug 

    # ejs.es:14292                          "ejs.db"::Sqlite.SqlTypeToDataType[sqlType]

    0007: [0] 7e c8 02 ................... getGlobalSlot <slot: 164> 
    0010: [1] 7b d2 0c 14 ................ getObjName <SqlTypeToDataType> <internal-ed363076473b51ca685af450cc662b39-0> 
    0014: [1] 56 ce 03 ................... loadString <> 
    0017: [2] 5b ......................... getLocalSlot0 
    0018: [3] 7c ......................... getObjNameExpr 
    0019: [1] bf ......................... returnValue 
    
VARIABLE:   [sqlType-00]  private var sqlType : String

FUNCTION:   [Sqlite-54]  public const function sqlTypeToEjsType(sqlType: String) : Type

     ARG:   [arg-00]   private sqlType : String

    0000: [0] 33 02 b0 df 01 9e 7d ....... debug 

    # ejs.es:14296                          "ejs.db"::Sqlite.SqlTypeToEjsType[sqlType]

    0007: [0] 7e c8 02 ................... getGlobalSlot <slot: 164> 
    0010: [1] 7b 8e 10 14 ................ getObjName <SqlTypeToEjsType> <internal-ed363076473b51ca685af450cc662b39-0> 
    0014: [1] 56 ce 03 ................... loadString <> 
    0017: [2] 5b ......................... getLocalSlot0 
    0018: [3] 7c ......................... getObjNameExpr 
    0019: [1] bf ......................... returnValue 
    
VARIABLE:   [sqlType-00]  private var sqlType : String

FUNCTION:   [Sqlite-55]  public const function startTransaction() : Void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 185)
#
0000    public var stderr
0001    public var stdin
0002    public var stdout
0003    ejs var App: Type
0004    ejs function appInit
0005    ejs var Array: Type
0006    ejs var BinaryStream: Type
0007    ejs var Block: Type
0008    ejs var Boolean: Type
0009    ejs var ByteArray: Type
0010    ejs var Cmd: Type
0011    ejs var CmdArgs: Type
0012    public function gc
0013    public function readFile
0014    ejs var Config: Type
0015    ejs var Date: Type
0016    ejs var Emitter: Type
0017    internal-ed363076473b51ca685af450cc662b39-0 var Endpoint: Type
0018    ejs var ArgError: Type
0019    ejs var ArithmeticError: Type
0020    ejs var AssertError: Type
0021    ejs var InstructionError: Type
0022    ejs var Error: Type
0023    ejs var IOError: Type
0024    ejs var InternalError: Type
0025    ejs var MemoryError: Type
0026    ejs var OutOfBoundsError: Type
0027    ejs var ReferenceError: Type
0028    ejs var ResourceError: Type
0029    ejs var SecurityError: Type
0030    ejs var StateError: Type
0031    ejs var SyntaxError: Type
0032    ejs var TypeError: Type
0033    ejs var URIError: Type
0034    ejs var Event: Type
0035    ejs var ErrorEvent: Type
0036    ejs var File: Type
0037    ejs var FileSystem: Type
0038    ejs var Frame: Type
0039    ejs var Function: Type
0040    ejs function makeGetter
0041    ejs function clearBoundThis
0042    ejs var GC: Type
0043    public var EJSCRIPT: Boolean
0044    public var ECMA: Boolean
0045    public var ejs
0046    public var public
0047    public var internal
0048    public var iterator
0049    public var CONFIG
0050    ejs var TODO: Boolean
0051    ejs var FUTURE: Boolean
0052    ejs var ASC: Boolean
0053    ejs var DOC_ONLY: Boolean
0054    ejs var DEPRECATED: Boolean
0055    ejs var boolean
0056    ejs var double
0057    ejs var num
0058    ejs var string
0059    ejs var false: Boolean
0060    ejs var global: Object
0061    ejs var null
0062    ejs var Infinity
0063    ejs var NegativeInfinity
0064    ejs var NaN
0065    ejs var true: Boolean
0066    ejs var undefined
0067    ejs var void
0068    ejs function assert
0069    ejs function breakpoint
0070    ejs function cloneBase
0071    ejs function decodeURI
0072    ejs function dump
0073    ejs function dumpAll
0074    ejs function dumpDef
0075    ejs function encodeURI
0076    ejs function escape
0077    ejs function md5
0078    ejs function blend
0079    ejs function eval
0080    ejs function formatStack
0081    ejs function hashcode
0082    ejs function isNaN
0083    ejs function isFinite
0084    ejs function load
0085    ejs function print
0086    ejs function parse
0087    ejs function parseFloat
0088    ejs function parseInt
0089    ejs function printHash
0090    ejs function instanceOf
0091    ejs function error
0092    ejs function input
0093    ejs function output
0094    ejs var Http: Type
0095    iterator var Iterable: Type
0096    iterator var Iterator: Type
0097    iterator var StopIteration: Type
0098    ejs var JSON: Type
0099    ejs function deserialize
0100    ejs function serialize
0101    ejs var Locale: Type
0102    ejs var Logger: Type
0103    ejs var Math: Type
0104    ejs var Memory: Type
0105    ejs var Namespace: Type
0106    ejs var Null: Type
0107    ejs var Number: Type
0108    ejs var Object: Type
0109    ejs var Path: Type
0110    ejs var Promise: Type
0111    ejs var Reflect: Type
0112    ejs function typeOf
0113    ejs var RegExp: Type
0114    ejs var Socket: Type
0115    ejs var Stream: Type
0116    ejs var String: Type
0117    ejs var System: Type
0118    ejs var TextStream: Type
0119    ejs var Timer: Type
0120    ejs function setInterval
0121    ejs function setTimeout
0122    ejs var TimerEvent: Type
0123    ejs var Type: Type
0124    ejs var Uri: Type
0125    ejs function decodeUri
0126    ejs function decodeUriComponent
0127    ejs var Void: Type
0128    ejs var Worker: Type
0129    ejs.worker var self: Worker
0130    ejs.worker function exit
0131    ejs.worker function postMessage
0132    ejs.worker function onerror
0133    ejs.worker function onmessage
0134    ejs var XML: Type
0135    ejs var XMLHttp: Type
0136    ejs var XMLList: Type
0137    ejs.cjs function require
0138    public var Loader: Type
0139    public function basename
0140    public function chdir
0141    public function chmod
0142    public function cp
0143    public function dirname
0144    public function exists
0145    public function extension
0146    public function freeSpace
0147    public function isDir
0148    public function kill
0149    public function ls
0150    public function find
0151    public function mkdir
0152    public function mv
0153    public function pwd
0154    public function rm
0155    public function rmdir
0156    public function tempname
0157    ejs.db var Database: Type
0158    ejs.db var DatabaseConnector: Type
0159    public var Record: Type
0160    ejs.db.mapper var Column: Type
0161    ejs.db.mapper function plural
0162    ejs.db.mapper function singular
0163    ejs.db.mapper function mapType
0164    ejs.db var Sqlite: Type

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "App" class (Num slots 52, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function App-initializer
0027    public var config: Object
0028    [ejs::App,private] var _errorStream
0029    [ejs::App,private] var _inputStream
0030    [ejs::App,private] var _outputStream
0031    internal-ed363076473b51ca685af450cc662b39-0 var defaultConfig
0032    public function args
0033    public function dir
0034    public function chdir
0035    public function exeDir
0036    public function exePath
0037    public function errorStream
0038    public function exit
0039    public function getenv
0040    public function inputStream
0041    public var logger
0042    public function name
0043    public function noexit
0044    public function outputStream
0045    public function putenv
0046    public function search
0047    public function createSearch
0048    public function serviceEvents
0049    public function sleep
0050    public function title
0051    public function version

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Array" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Array
0027    public function append
0028    public function clear
0029    public function compact
0030    public function concat
0031    public function contains
0032    public function every
0033    public function filter
0034    public function find
0035    public function findAll
0036    public function forEach
0037    public function indexOf
0038    public function insert
0039    public function join
0040    public function lastIndexOf
0041    public function length
0042    public function map
0043    public function pop
0044    public function push
0045    public function reject
0046    public function remove
0047    public function reverse
0048    public function shift
0049    public function slice
0050    public function some
0051    public function sort
0052    public function splice
0053    public function transform
0054    public function unique
0055    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "BinaryStream" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function BinaryStream
0027    -initializer- function BinaryStream-initializer
0028    public var BigEndian
0029    public var LittleEndian
0030    public function addListener
0031    public function async
0032    public function available
0033    public function close
0034    public function encoding
0035    public function endian
0036    public function flush
0037    public function read
0038    public function readBoolean
0039    public function readByte
0040    public function readDate
0041    public function readDouble
0042    public function readInteger
0043    public function readLong
0044    public function readString
0045    public function readXML
0046    public function removeListener
0047    public function room
0048    public function write
0049    public function writeByte
0050    public function writeShort
0051    public function writeDouble
0052    public function writeInteger
0053    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs::BinaryStream,private] var inbuf
0001    [ejs::BinaryStream,private] var outbuf
0002    [ejs::BinaryStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Block" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Boolean" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 64, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function ByteArray
0027    -initializer- function ByteArray-initializer
0028    public var LittleEndian
0029    public var BigEndian
0030    public function addListener
0031    public function available
0032    public function async
0033    public function close
0034    public function compact
0035    public function copyIn
0036    public function copyOut
0037    public function encoding
0038    public function endian
0039    public function flush
0040    public function length
0041    public function MD5
0042    public function read
0043    public function readBoolean
0044    public function readByte
0045    public function readDate
0046    public function readDouble
0047    public function readInteger
0048    public function readLong
0049    public function readPosition
0050    public function readShort
0051    public function readString
0052    public function removeListener
0053    public function reset
0054    public function room
0055    public function write
0056    public function writeByte
0057    public function writeShort
0058    public function writeDouble
0059    public function writeInteger
0060    public function writeLong
0061    public function writePosition
0062    public function input
0063    public function output

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Cmd" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function sh
0027    public function run
0028    public function daemon
0029    public function runx

#
#  Instance slot assignments for the "Cmd" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "CmdArgs" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function CmdArgs
0027    [ejs::CmdArgs,private] function parseTemplate
0028    [ejs::CmdArgs,private] function validate

#
#  Instance slot assignments for the "CmdArgs" class (Num prop 4, num inherited 0)
#
0000    public var args: Array
0001    public var options: Object
0002    [ejs::CmdArgs,private] var ranges: Object
0003    [ejs::CmdArgs,private] var aliases: Object

#
#  Class slot assignments for the "Config" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public var Debug: Boolean
0027    public var CPU
0028    public var OS
0029    public var Product
0030    public var Title
0031    public var Version
0032    public var LibDir
0033    public var BinDir
0034    public var ModDir

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Date" class (Num slots 87, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Date
0027    public function day
0028    public function dayOfYear
0029    public function date
0030    public function elapsed
0031    public function format
0032    public function formatUTC
0033    public function fullYear
0034    public function getDate
0035    public function getDay
0036    public function getFullYear
0037    public function getHours
0038    public function getMilliseconds
0039    public function getMinutes
0040    public function getMonth
0041    public function getSeconds
0042    public function getTime
0043    public function getTimezoneOffset
0044    public function getUTCDate
0045    public function getUTCDay
0046    public function getUTCFullYear
0047    public function getUTCHours
0048    public function getUTCMilliseconds
0049    public function getUTCMinutes
0050    public function getUTCMonth
0051    public function getUTCSeconds
0052    public function hours
0053    public function milliseconds
0054    public function minutes
0055    public function month
0056    public function nanoAge
0057    public function nextDay
0058    public function now
0059    public function parseDate
0060    public function parseUTCDate
0061    public function parse
0062    public function seconds
0063    public function setDate
0064    public function setFullYear
0065    public function setHours
0066    public function setMilliseconds
0067    public function setMinutes
0068    public function setMonth
0069    public function setSeconds
0070    public function setTime
0071    public function setUTCDate
0072    public function setUTCFullYear
0073    public function setUTCHours
0074    public function setUTCMilliseconds
0075    public function setUTCMinutes
0076    public function setUTCMonth
0077    public function setUTCSeconds
0078    public function time
0079    public function toDateString
0080    public function toISOString
0081    public function toLocaleDateString
0082    public function toLocaleTimeString
0083    public function toTimeString
0084    public function toUTCString
0085    public function UTC
0086    public function year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Emitter" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener

#
#  Instance slot assignments for the "Emitter" class (Num prop 1, num inherited 0)
#
0000    [ejs::Emitter,private] var endpoints: Object

#
#  Class slot assignments for the "Endpoint" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 4, num inherited 0)
#
0000    public var callback
0001    public var name
0002    public var active: Boolean
0003    public var again: Boolean

#
#  Class slot assignments for the "ArgError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "AssertError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InstructionError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Error" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "IOError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InternalError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "MemoryError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ReferenceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ResourceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SecurityError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SecurityError

#
#  Instance slot assignments for the "SecurityError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "StateError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SyntaxError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "TypeError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "URIError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Event" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event

#
#  Instance slot assignments for the "Event" class (Num prop 2, num inherited 0)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "ErrorEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function ErrorEvent

#
#  Instance slot assignments for the "ErrorEvent" class (Num prop 6, num inherited 2)
#
0000    public var data
0001    public var timestamp
0002    public var message
0003    public var filename
0004    public var lineno
0005    public var stack

#
#  Class slot assignments for the "File" class (Num slots 47, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function File
0027    public function addListener
0028    public function async
0029    public function canRead
0030    public function canWrite
0031    public function close
0032    public function encoding
0033    public function flush
0034    public function isOpen
0035    public function open
0036    public function options
0037    public function path
0038    public function position
0039    public function read
0040    public function readBytes
0041    public function readString
0042    public function remove
0043    public function removeListener
0044    public function size
0045    public function truncate
0046    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "FileSystem" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function FileSystem
0027    public function hasDrives
0028    public function newline
0029    public function root
0030    public function separators

#
#  Instance slot assignments for the "FileSystem" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Frame" class (Num slots 31, num inherited 31)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Frame" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Function" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function enabled
0027    public function workQuota
0028    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Http" class (Num slots 118, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Http
0027    -initializer- function Http-initializer
0028    public var Continue
0029    public var Ok
0030    public var Created
0031    public var Accepted
0032    public var NotAuthoritative
0033    public var NoContent
0034    public var Reset
0035    public var Partial
0036    public var MultipleChoice
0037    public var MovedPermanently
0038    public var MovedTemporarily
0039    public var SeeOther
0040    public var NotModified
0041    public var UseProxy
0042    public var BadRequest
0043    public var Unauthorized
0044    public var PaymentRequired
0045    public var Forbidden
0046    public var NotFound
0047    public var BadMethod
0048    public var NotAccepted
0049    public var ProxyAuth
0050    public var ClientTimeout
0051    public var Conflict
0052    public var Gone
0053    public var LengthRequired
0054    public var PrecondFailed
0055    public var EntityTooLarge
0056    public var ReqTooLong
0057    public var UnsupportedType
0058    public var ServerError
0059    public var NotImplemented
0060    public var BadGateway
0061    public var Unavailable
0062    public var GatewayTimeout
0063    public var Version
0064    public function addListener
0065    public function async
0066    public function chunkSize
0067    public function close
0068    public function connect
0069    public function certificate
0070    public function contentLength
0071    public function contentType
0072    public function date
0073    public function del
0074    public function encoding
0075    public function expires
0076    public function finalize
0077    public function flush
0078    public function followRedirects
0079    public function form
0080    public function get
0081    public function getRequestHeaders
0082    public function head
0083    public function header
0084    public function headers
0085    public function isSecure
0086    public function key
0087    public function lastModified
0088    public function method
0089    public function options
0090    public function post
0091    public function put
0092    public function read
0093    public function readString
0094    public function readLines
0095    public function readXml
0096    public function removeListener
0097    public function response
0098    public function retries
0099    public function setCredentials
0100    public function setHeader
0101    public function setHeaders
0102    public function status
0103    public function statusMessage
0104    public function success
0105    public function timeout
0106    public function trace
0107    public function upload
0108    public function uri
0109    public function wait
0110    public function write
0111    public function addHeader
0112    public function bodyLength
0113    public function code
0114    public function codeString
0115    public function available
0116    public function contentEncoding
0117    public function mimeType

#
#  Instance slot assignments for the "Http" class (Num prop 1, num inherited 0)
#
0000    [ejs::Http,private] var _response

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Iterator" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function parse
0027    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Locale" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Locale
0027    -initializer- function Locale-initializer
0028    public var textEncoding

#
#  Instance slot assignments for the "Locale" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Logger" class (Num slots 53, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Logger
0027    -initializer- function Logger-initializer
0028    public var Off
0029    public var Error
0030    public var Warn
0031    public var Info
0032    public var Config
0033    public var All
0034    public function addListener
0035    public function async
0036    public function close
0037    public function filter
0038    public function flush
0039    public function level
0040    public function match
0041    public function name
0042    public function outstream
0043    public function parent
0044    public function debug
0045    public function config
0046    public function error
0047    public function info
0048    public function read
0049    public function removeListener
0050    public function write
0051    public function warn
0052    [ejs::Logger,private] function emit

#
#  Instance slot assignments for the "Logger" class (Num prop 6, num inherited 0)
#
0000    [ejs::Logger,private] var _filter: Function
0001    [ejs::Logger,private] var _level
0002    [ejs::Logger,private] var _pattern
0003    [ejs::Logger,private] var _name
0004    [ejs::Logger,private] var _outstream: Stream
0005    [ejs::Logger,private] var _parent: Logger

#
#  Class slot assignments for the "Math" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Math-initializer
0027    public var E
0028    public var LN2
0029    public var LN10
0030    public var LOG2E
0031    public var LOG10E
0032    public var PI
0033    public var SQRT1_2
0034    public var SQRT2
0035    public function abs
0036    public function acos
0037    public function asin
0038    public function atan
0039    public function atan2
0040    public function ceil
0041    public function cos
0042    public function exp
0043    public function floor
0044    public function log10
0045    public function log
0046    public function max
0047    public function min
0048    public function pow
0049    public function random
0050    public function round
0051    public function sin
0052    public function sqrt
0053    public function tan

#
#  Instance slot assignments for the "Math" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Memory" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function allocated
0027    public function callback
0028    public function maximum
0029    public function peak
0030    public function redline
0031    public function resident
0032    public function stack
0033    public function system
0034    public function stats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Namespace" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Namespace" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Null" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Number" class (Num slots 49, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Number
0027    -initializer- function Number-initializer
0028    public var MAX_VALUE: Number
0029    public var MIN_VALUE: Number
0030    public var NaN: Number
0031    public var NEGATIVE_INFINITY: Number
0032    public var POSITIVE_INFINITY: Number
0033    public var MaxValue: Number
0034    public var MinValue: Number
0035    public function abs
0036    public function ceil
0037    public function floor
0038    public function isFinite
0039    public function isNaN
0040    public function round
0041    public function toExponential
0042    public function toFixed
0043    public function toPrecision
0044    public function byte
0045    public function integral
0046    public function max
0047    public function min
0048    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Object" class (Num slots 26, num inherited 0)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    public function create
0005    public function defineProperty
0006    public function defineProperties
0007    public function freeze
0008    iterator function get
0009    public function getOwnPropertyDescriptor
0010    public function getOwnPropertyNames
0011    public function getOwnPrototypeOf
0012    iterator function getValues
0013    public function hasOwnProperty
0014    public function isExtensible
0015    public function isFrozen
0016    public function isPrototypeOf
0017    public function isSealed
0018    public function keys
0019    public function preventExtensions
0020    public function propertyIsEnumerable
0021    public function seal
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Path" class (Num slots 85, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Path
0027    public function absolute
0028    public function accessed
0029    public function basename
0030    public function components
0031    public function contains
0032    public function copy
0033    public function created
0034    public function dirname
0035    public function endsWith
0036    public function exists
0037    public function extension
0038    public function find
0039    public function files
0040    public function hasDrive
0041    public function isAbsolute
0042    public function isDir
0043    public function isLink
0044    public function isRegular
0045    public function isRelative
0046    public function join
0047    public function joinExt
0048    public function length
0049    public function linkTarget
0050    public function makeDir
0051    public function makeLink
0052    public function makeTemp
0053    public function map
0054    public function mimeType
0055    public function modified
0056    public function name
0057    public function natural
0058    public function normalize
0059    public function open
0060    public function openTextStream
0061    public function openBinaryStream
0062    public function parent
0063    public function perms
0064    public function portable
0065    public function readBytes
0066    public function readLines
0067    public function readString
0068    public function readXML
0069    public function relative
0070    public function remove
0071    public function removeAll
0072    public function rename
0073    public function replaceExt
0074    public function resolve
0075    public function same
0076    public function separator
0077    public function size
0078    public function startsWith
0079    public function toLower
0080    public function trimEnd
0081    public function trimExt
0082    public function trimStart
0083    public function truncate
0084    public function write

#
#  Instance slot assignments for the "Path" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Promise" class (Num slots 47, num inherited 35)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener
0035    -constructor- function Promise
0036    internal-ed363076473b51ca685af450cc662b39-0 function addCallback
0037    internal-ed363076473b51ca685af450cc662b39-0 function addCancelback
0038    internal-ed363076473b51ca685af450cc662b39-0 function addErrback
0039    internal-ed363076473b51ca685af450cc662b39-0 function emitSuccess
0040    internal-ed363076473b51ca685af450cc662b39-0 function emitError
0041    internal-ed363076473b51ca685af450cc662b39-0 function emitCancel
0042    internal-ed363076473b51ca685af450cc662b39-0 function cancel
0043    internal-ed363076473b51ca685af450cc662b39-0 function then
0044    internal-ed363076473b51ca685af450cc662b39-0 function timeout
0045    internal-ed363076473b51ca685af450cc662b39-0 function wait
0046    [ejs::Promise,private] function issue

#
#  Instance slot assignments for the "Promise" class (Num prop 3, num inherited 1)
#
0000    [ejs::Emitter,private] var endpoints
0001    [ejs::Promise,private] var timer
0002    [ejs::Promise,private] var fired: Boolean

#
#  Class slot assignments for the "Reflect" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Reflect
0027    public function base
0028    public function isType
0029    public function type
0030    public function name

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [ejs::Reflect,private] var obj: Object

#
#  Class slot assignments for the "RegExp" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function RegExp
0027    public function lastIndex
0028    public function exec
0029    public function global
0030    public function ignoreCase
0031    public function multiline
0032    public function source
0033    public function matched
0034    public function replace
0035    public function split
0036    public function start
0037    public function sticky
0038    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Socket" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Socket
0027    public function addListener
0028    public function accept
0029    public function address
0030    public function async
0031    public function close
0032    public function connect
0033    public function encoding
0034    public function flush
0035    public function listen
0036    public function port
0037    public function read
0038    public function remoteAddress
0039    public function removeListener
0040    public function write

#
#  Instance slot assignments for the "Socket" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Stream" class (Num slots 7, num inherited 0)
#
0000    public function addListener
0001    public function async
0002    public function close
0003    public function flush
0004    public function read
0005    public function removeListener
0006    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "String" class (Num slots 68, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function String
0027    public function caseCompare
0028    public function caselessCompare
0029    public function charAt
0030    public function charCodeAt
0031    public function concat
0032    public function contains
0033    public function endsWith
0034    public function format
0035    public function fromCharCode
0036    public function indexOf
0037    public function isDigit
0038    public function isAlpha
0039    public function isAlphaNum
0040    public function isLower
0041    public function isSpace
0042    public function isUpper
0043    public function lastIndexOf
0044    public function length
0045    public function match
0046    public function parseJSON
0047    public function toCamel
0048    public function toPascal
0049    public function printable
0050    public function quote
0051    public function remove
0052    public function replace
0053    public function reverse
0054    public function search
0055    public function slice
0056    public function split
0057    public function startsWith
0058    public function substring
0059    public function times
0060    public function tokenize
0061    public function toLower
0062    public function toUpper
0063    public function trim
0064    public function trimStart
0065    public function trimEnd
0066    public function -
0067    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 36, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function System-initializer
0027    public var Bufsize: Number
0028    public function hostname
0029    public function ipaddr
0030    public function run
0031    public function runx
0032    public function daemon
0033    public function sh
0034    public function cmd
0035    public function exec

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TextStream" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TextStream
0027    public function addListener
0028    public function async
0029    public function available
0030    public function close
0031    public function encoding
0032    public function fill
0033    public function flush
0034    public function read
0035    public function readLine
0036    public function readLines
0037    public function readString
0038    public function removeListener
0039    public function write
0040    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs::TextStream,private] var newline: String
0001    [ejs::TextStream,private] var inbuf: ByteArray
0002    [ejs::TextStream,private] var format: String
0003    [ejs::TextStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Timer" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Timer
0027    public function drift
0028    public function period
0029    public function restart
0030    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TimerEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function TimerEvent

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 2, num inherited 2)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "Type" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Uri" class (Num slots 65, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Uri
0027    public function basename
0028    public function complete
0029    public function components
0030    public function decode
0031    public function decodeComponent
0032    public function dirname
0033    public function encode
0034    public function encodeComponent
0035    public function endsWith
0036    public function extension
0037    public function hasExtension
0038    public function hasHost
0039    public function hasPort
0040    public function hasQuery
0041    public function hasReference
0042    public function hasScheme
0043    public function host
0044    public function isAbsolute
0045    public function isDir
0046    public function isRegular
0047    public function isRelative
0048    public function join
0049    public function joinExt
0050    public function mimeType
0051    public function normalize
0052    public function path
0053    public function port
0054    public function scheme
0055    public function query
0056    public function reference
0057    public function relative
0058    public function replaceExt
0059    public function same
0060    public function startsWith
0061    public function trimEnd
0062    public function trimExt
0063    public function trimStart
0064    public function uri

#
#  Instance slot assignments for the "Uri" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Void" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Worker" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Worker
0027    public function eval
0028    public function exit
0029    public function join
0030    public function load
0031    public function preload
0032    public function preeval
0033    public function lookup
0034    public function postMessage
0035    public function terminate
0036    public function waitForMessage

#
#  Instance slot assignments for the "Worker" class (Num prop 4, num inherited 0)
#
0000    public var onclose: Function
0001    public var onmessage: Function
0002    public var onerror: Function
0003    public var name: String

#
#  Class slot assignments for the "XML" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XML
0027    public function load
0028    public function save
0029    public function length
0030    public function name

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "XMLHttp" class (Num slots 48, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLHttp
0027    -initializer- function XMLHttp-initializer
0028    public var Uninitialized
0029    public var Open
0030    public var Sent
0031    public var Receiving
0032    public var Loaded
0033    public function abort
0034    public function http
0035    public function readyState
0036    public function responseText
0037    public function responseXML
0038    public function responseBody
0039    public function status
0040    public function statusText
0041    public function getAllResponseHeaders
0042    public function getResponseHeader
0043    public function open
0044    public function send
0045    public function setRequestHeader
0046    [ejs::XMLHttp,private] function callback
0047    [ejs::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs::XMLHttp,private] var hp: Http
0001    [ejs::XMLHttp,private] var state: Number
0002    [ejs::XMLHttp,private] var response: ByteArray
0003    public var onreadystatechange: Function

#
#  Class slot assignments for the "XMLList" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLList
0027    public function length
0028    public function name

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Loader" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Loader-initializer
0027    public var mainId
0028    [Loader,private] var signatures
0029    [Loader,private] var timestamps
0030    [Loader,private] var defaultExtensions
0031    [Loader,private] var config
0032    internal-ed363076473b51ca685af450cc662b39-0 function init
0033    public function require
0034    public function load
0035    public function cached
0036    public function wrap
0037    [Loader,private] function locate
0038    public function setConfig

#
#  Instance slot assignments for the "Loader" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Database" class (Num slots 59, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Database
0027    [ejs.db::Database,private] var defaultDb: Database
0028    public function addColumn
0029    public function addIndex
0030    public function changeColumn
0031    public function close
0032    public function commit
0033    public function connect
0034    public function connection
0035    public function createDatabase
0036    public function createTable
0037    public function dataTypeToSqlType
0038    public function defaultDatabase
0039    public function destroyDatabase
0040    public function destroyTable
0041    public function endTransaction
0042    public function getColumns
0043    public function getTables
0044    public function getNumRows
0045    public function name
0046    public function query
0047    public function removeColumns
0048    public function removeIndex
0049    public function renameColumn
0050    public function renameTable
0051    public function rollback
0052    public function sql
0053    public function sqlTypeToDataType
0054    public function sqlTypeToEjsType
0055    public function startTransaction
0056    public function trace
0057    public function transaction
0058    public function quote

#
#  Instance slot assignments for the "Database" class (Num prop 4, num inherited 0)
#
0000    [ejs.db::Database,private] var _adapter: Object
0001    [ejs.db::Database,private] var _connection: String
0002    [ejs.db::Database,private] var _name: String
0003    [ejs.db::Database,private] var _traceAll: Boolean

#
#  Class slot assignments for the "DatabaseConnector" class (Num slots 22, num inherited 0)
#
0000    public function addColumn
0001    public function addIndex
0002    public function changeColumn
0003    public function close
0004    public function commit
0005    public function connect
0006    public function createDatabase
0007    public function createTable
0008    public function dataTypeToSqlType
0009    public function destroyDatabase
0010    public function destroyTable
0011    public function getColumns
0012    public function getTables
0013    public function removeColumns
0014    public function removeIndex
0015    public function renameColumn
0016    public function renameTable
0017    public function rollback
0018    public function sql
0019    public function sqlTypeToDataType
0020    public function sqlTypeToEjsType
0021    public function startTransaction

#
#  Instance slot assignments for the "DatabaseConnector" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Record" class (Num slots 102, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Record
0027    -initializer- function Record-initializer
0028    internal-ed363076473b51ca685af450cc662b39-0 var _assocName: String
0029    internal-ed363076473b51ca685af450cc662b39-0 var _belongsTo: Array
0030    internal-ed363076473b51ca685af450cc662b39-0 var _className: String
0031    internal-ed363076473b51ca685af450cc662b39-0 var _columns: Object
0032    internal-ed363076473b51ca685af450cc662b39-0 var _hasOne: Array
0033    internal-ed363076473b51ca685af450cc662b39-0 var _hasMany: Array
0034    internal-ed363076473b51ca685af450cc662b39-0 var _db: Database
0035    internal-ed363076473b51ca685af450cc662b39-0 var _foreignId: String
0036    internal-ed363076473b51ca685af450cc662b39-0 var _keyName: String
0037    internal-ed363076473b51ca685af450cc662b39-0 var _model: Type
0038    internal-ed363076473b51ca685af450cc662b39-0 var _tableName: String
0039    internal-ed363076473b51ca685af450cc662b39-0 var _trace: Boolean
0040    internal-ed363076473b51ca685af450cc662b39-0 var _validations: Array
0041    internal-ed363076473b51ca685af450cc662b39-0 var _beforeFilters: Array
0042    internal-ed363076473b51ca685af450cc662b39-0 var _afterFilters: Array
0043    internal-ed363076473b51ca685af450cc662b39-0 var _wrapFilters: Array
0044    internal-ed363076473b51ca685af450cc662b39-0 var ErrorMessages
0045    public function initialize
0046    public function afterFilter
0047    public function beforeFilter
0048    public function belongsTo
0049    [Record,private] function cachedRead
0050    [Record,private] function checkFormat
0051    [Record,private] function checkNumber
0052    [Record,private] function checkPresent
0053    [Record,private] function checkUnique
0054    [Record,private] function coerceToEjsTypes
0055    [Record,private] function createAssociations
0056    [Record,private] function createRecord
0057    public function error
0058    public function find
0059    public function findAll
0060    public function findOneWhere
0061    public function findWhere
0062    public function getColumnNames
0063    public function getColumnTitles
0064    public function getColumnType
0065    public function getDb
0066    public function getErrors
0067    public function getKeyName
0068    public function getNumRows
0069    [Record,private] function getSchema
0070    public function getTableName
0071    public function hasAndBelongsToMany
0072    public function hasError
0073    public function hasMany
0074    public function hasOne
0075    [Record,private] function innerFind
0076    [Record,private] function makeLazyReader
0077    [Record,private] function mapSqlTypeToEjs
0078    [Record,private] function prepareValue
0079    [Record,private] function readRecords
0080    public function remove
0081    [Record,private] function runFilters
0082    public function save
0083    public function saveUpdate
0084    public function setDb
0085    public function setKeyName
0086    public function setTableName
0087    public function sql
0088    public function trace
0089    public function validateFormat
0090    public function validateNumber
0091    public function validatePresence
0092    public function validateRecord
0093    public function validateUnique
0094    public function wrapFilter
0095    public function columnNames
0096    public function columnTitles
0097    public function db
0098    public function keyName
0099    public function numRows
0100    public function tableName
0101    public function constructorOLD

#
#  Instance slot assignments for the "Record" class (Num prop 3, num inherited 0)
#
0000    internal-ed363076473b51ca685af450cc662b39-0 var _keyValue: Object
0001    internal-ed363076473b51ca685af450cc662b39-0 var _errors: Object
0002    internal-ed363076473b51ca685af450cc662b39-0 var _cacheAssoc: Object

#
#  Class slot assignments for the "Column" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Column

#
#  Instance slot assignments for the "Column" class (Num prop 2, num inherited 0)
#
0000    public var ejsType: Object
0001    public var sqlType: Object

#
#  Class slot assignments for the "Sqlite" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Sqlite
0027    -initializer- function Sqlite-initializer
0028    internal-ed363076473b51ca685af450cc662b39-0 var DataTypeToSqlType: Object
0029    internal-ed363076473b51ca685af450cc662b39-0 var SqlTypeToDataType: Object
0030    internal-ed363076473b51ca685af450cc662b39-0 var SqlTypeToEjsType: Object
0031    public function addColumn
0032    public function addIndex
0033    public function changeColumn
0034    public function close
0035    public function commit
0036    public function connect
0037    public function createDatabase
0038    public function createTable
0039    public function dataTypeToSqlType
0040    public function destroyDatabase
0041    public function destroyTable
0042    public function endTransaction
0043    public function getColumns
0044    public function getNumRows
0045    public function getTables
0046    public function removeColumns
0047    public function removeIndex
0048    public function renameColumn
0049    public function renameTable
0050    public function rollback
0051    public function query
0052    public function sql
0053    public function sqlTypeToDataType
0054    public function sqlTypeToEjsType
0055    public function startTransaction

#
#  Instance slot assignments for the "Sqlite" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 8380 bytes)
#
0000   ""
0001   "ejs.es"
0002   "}"
0003   "internal-ed363076473b51ca685af450cc662b39-0"
0004   "ejs.db.sqlite"
0005   "module ejs.db.sqlite {"
0006   "    "ejs.db" class Sqlite {"
0007   "        static const DataTypeToSqlType: Object = {"
0008   "DataTypeToSqlType"
0009   "Object"
0010   "            "binary":       "blob","
0011   ""
0012   "binary"
0013   "blob"
0014   "            "boolean":      "tinyint","
0015   "boolean"
0016   "tinyint"
0017   "            "date":         "date","
0018   "date"
0019   "            "datetime":     "datetime","
0020   "datetime"
0021   "            "decimal":      "decimal","
0022   "decimal"
0023   "            "float":        "float","
0024   "float"
0025   "            "integer":      "int","
0026   "integer"
0027   "int"
0028   "            "number":       "decimal","
0029   "number"
0030   "            "string":       "varchar","
0031   "string"
0032   "varchar"
0033   "            "text":         "text","
0034   "text"
0035   "            "time":         "time","
0036   "time"
0037   "            "timestamp":    "datetime","
0038   "timestamp"
0039   "        static const SqlTypeToDataType: Object = {"
0040   "SqlTypeToDataType"
0041   "            "blob":         "binary","
0042   "            "tinyint":      "boolean","
0043   "            "int":          "integer","
0044   "            "varchar":      "string","
0045   "        static const SqlTypeToEjsType: Object = {"
0046   "SqlTypeToEjsType"
0047   "            "blob":         String,"
0048   "            "date":         Date,"
0049   "            "datetime":     Date,"
0050   "            "decimal":      Number,"
0051   "            "int":          Number,"
0052   "            "integer":      Number,"
0053   "            "float":        Number,"
0054   "            "time":         Date,"
0055   "            "tinyint":      Boolean,"
0056   "            "text":         String,"
0057   "            "varchar":      String,"
0058   "        use default namespace public"
0059   "        native "ejs.db" function Sqlite(connectionString: String)"
0060   "Sqlite"
0061   "-constructor-"
0062   "connectionString"
0063   "private"
0064   "String"
0065   "ejs"
0066   "        function addColumn(table: String, column: String, datatype: String, options = null): Void {"
0067   "            datatype = DataTypeToSqlType[datatype.toLower()]"
0068   "toLower"
0069   "public"
0070   "            if (datatype == undefined) {"
0071   "                throw "Bad Ejscript column type: " + datatype"
0072   "Bad Ejscript column type: "
0073   "            }"
0074   "            query("ALTER TABLE " + table + " ADD " + column + " " + datatype)"
0075   "ALTER TABLE "
0076   " ADD "
0077   " "
0078   "query"
0079   "        }"
0080   "addColumn"
0081   "table"
0082   "column"
0083   "datatype"
0084   "options"
0085   "Void"
0086   "        function addIndex(table: String, column: String, index: String): Void"
0087   "            query("CREATE INDEX " + index + " ON " + table + " (" + column + ");")"
0088   "CREATE INDEX "
0089   " ON "
0090   " ("
0091   ");"
0092   "addIndex"
0093   "index"
0094   "        function changeColumn(table: String, column: String, datatype: String, options = null): Void {"
0095   "            datatype = datatype.toLower()"
0096   "            if (DataTypeToSqlType[datatype] == undefined) {"
0097   "                throw "Bad column type: " + datatype"
0098   "Bad column type: "
0099   "            throw "SQLite does not support column changes""
0100   "SQLite does not support column changes"
0101   "changeColumn"
0102   "        native function close(): Void"
0103   "close"
0104   "        function commit(): Void {}"
0105   "commit"
0106   "        native function connect(connectionString: String): Void"
0107   "connect"
0108   "        function createDatabase(name: String, options = null): Void {"
0109   "createDatabase"
0110   "name"
0111   "        function createTable(table: String, columns: Array? = null): Void {"
0112   "cmd"
0113   "            let cmd: String"
0114   "            query("DROP TABLE IF EXISTS " + table + ";")"
0115   "DROP TABLE IF EXISTS "
0116   ";"
0117   "            query("CREATE TABLE " + table + "(id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL);")"
0118   "CREATE TABLE "
0119   "(id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL);"
0120   "            if (columns) {"
0121   "                for each (let colspec: String in columns) {"
0122   "colspec"
0123   "-hoisted-3"
0124   "getValues"
0125   "iterator"
0126   "spec"
0127   "                    let spec: Array = colspec.split(":")"
0128   ":"
0129   "split"
0130   "                    if (spec.length != 2) {"
0131   "length"
0132   "                        throw "Bad column spec: " + spec"
0133   "Bad column spec: "
0134   "                    }"
0135   "                    let column: String = spec[0]"
0136   "                    let datatype: String = spec[1]"
0137   "                    addColumn(table, column.trim(), datatype.trim())"
0138   "trim"
0139   "createTable"
0140   "columns"
0141   "Array"
0142   "StopIteration"
0143   "        static function dataTypeToSqlType(dataType:String): String"
0144   "            DataTypeToSqlType[dataType]"
0145   "dataTypeToSqlType"
0146   "dataType"
0147   "        function destroyDatabase(name: String): Void"
0148   "            Path(name).remove()"
0149   "remove"
0150   "destroyDatabase"
0151   "        function destroyTable(table: String): Void"
0152   "destroyTable"
0153   "        function endTransaction(): Void {}"
0154   "endTransaction"
0155   "        function getColumns(table: String): Array {"
0156   "            grid = query('PRAGMA table_info("' + table + '");')"
0157   "PRAGMA table_info(""
0158   "");"
0159   "grid"
0160   "            let names = []"
0161   "names"
0162   "            for each (let row in grid) {"
0163   "row"
0164   "-hoisted-2"
0165   "                let name: String = row["name"]"
0166   "                names.append(name)"
0167   "append"
0168   "            return names"
0169   "getColumns"
0170   "        function getNumRows(table: String): Array {"
0171   "            let cmd: String = "SELECT COUNT(*) FROM " + table + ";""
0172   "SELECT COUNT(*) FROM "
0173   "            let grid: Array = query(cmd, "numRows")"
0174   "numRows"
0175   "            return grid[0]["COUNT(*)"] cast Number"
0176   "COUNT(*)"
0177   "getNumRows"
0178   "        function getTables(): Array {"
0179   "            let cmd: String = "SELECT name from sqlite_master WHERE type = 'table' order by NAME;""
0180   "SELECT name from sqlite_master WHERE type = 'table' order by NAME;"
0181   "            let grid: Array = query(cmd)"
0182   "            let result: Array = new Array"
0183   "result"
0184   "            for each (let row: Object in grid) {"
0185   "                if (!name.contains("sqlite_") && !name.contains("_Ejs")) {"
0186   "sqlite_"
0187   "contains"
0188   "_Ejs"
0189   "                    result.append(row["name"])"
0190   "            return result"
0191   "getTables"
0192   "        function removeColumns(table: String, columns: Array): Void {"
0193   "            backup = "_backup_" + table"
0194   "_backup_"
0195   "backup"
0196   "            keep = getColumns(table)"
0197   "keep"
0198   "            for each (column in columns) {"
0199   "                if ((index = keep.indexOf(column)) < 0) {"
0200   "indexOf"
0201   "                    throw "Column \"" + column + "\" does not exist in " + table"
0202   "Column ""
0203   "" does not exist in "
0204   "                } "
0205   "                keep.remove(index)"
0206   "            schema = 'PRAGMA table_info("' + table + '");'"
0207   "schema"
0208   "            grid = query(schema)"
0209   "            types = {}"
0210   "types"
0211   "                types[name] = row["type"]"
0212   "type"
0213   "            columnSpec = []"
0214   "columnSpec"
0215   "            for each (k in keep) {"
0216   "k"
0217   "-hoisted-5"
0218   "                if (k == "id") {"
0219   "id"
0220   "                    columnSpec.append(k + " INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL")"
0221   " INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL"
0222   "                } else {"
0223   "                    columnSpec.append(k + " " + types[k])"
0224   "            cmd = "BEGIN TRANSACTION;"
0225   "                DROP TABLE " + backup + ";"
0226   "                INSERT INTO " + table + " SELECT " + keep + " FROM " + backup + ";"
0227   "                CREATE TABLE " + table + "(" + columnSpec + ");"
0228   "                DROP TABLE " + table + ";"
0229   "                INSERT INTO " + backup + " SELECT " + keep + " FROM " + table + ";"
0230   "                CREATE TEMPORARY TABLE " + backup + "(" + columnSpec + ");"
0231   "BEGIN TRANSACTION;
                CREATE TEMPORARY TABLE "
0232   "("
0233   ");
                INSERT INTO "
0234   " SELECT "
0235   " FROM "
0236   ";
                DROP TABLE "
0237   ";
                CREATE TABLE "
0238   ";
                COMMIT;"
0239   "            query(cmd)"
0240   "removeColumns"
0241   "        function removeIndex(table: String, index: String): Void"
0242   "            query("DROP INDEX " + index + ";")"
0243   "DROP INDEX "
0244   "removeIndex"
0245   "        function renameColumn(table: String, oldColumn: String, newColumn: String): Void {"
0246   "            throw "SQLite does not support renaming columns""
0247   "SQLite does not support renaming columns"
0248   "renameColumn"
0249   "oldColumn"
0250   "newColumn"
0251   "        function renameTable(oldTable: String, newTable: String): Void"
0252   "            query("ALTER TABLE " + oldTable + " RENAME TO " + newTable + ";")"
0253   " RENAME TO "
0254   "renameTable"
0255   "oldTable"
0256   "newTable"
0257   "        function rollback(): Void {}"
0258   "rollback"
0259   "        function query(cmd: String, tag: String = "SQL", trace: Boolean = false): Array {"
0260   "SQL"
0261   "            if (trace) {"
0262   "                print(tag + ": " + cmd)"
0263   ": "
0264   "            return sql(cmd)"
0265   "sql"
0266   "tag"
0267   "trace"
0268   "Boolean"
0269   "        native function sql(cmd: String): Array"
0270   "        function sqlTypeToDataType(sqlType: String): String"
0271   "            "ejs.db"::Sqlite.SqlTypeToDataType[sqlType]"
0272   "sqlTypeToDataType"
0273   "sqlType"
0274   "        function sqlTypeToEjsType(sqlType: String): Type"
0275   "            "ejs.db"::Sqlite.SqlTypeToEjsType[sqlType]"
0276   "sqlTypeToEjsType"
0277   "Type"
0278   "        function startTransaction(): Void {}"
0279   "startTransaction"
0280   "ejs.db"
0281   "Sqlite-initializer"
0282   "-initializer-"
0283   "constructor"
0284   "Function"
0285   "Number"
0286   "prototype"
0287   "clone"
0288   "get"
0289   "Iterator"
0290   "hasOwnProperty"
0291   "isPrototypeOf"
0292   "propertyIsEnumerable"
0293   "toJSON"
0294   "toLocaleString"
0295   "toString"
0296   "valueOf"
0297   "block_14009_417"
0298   "-block-"
0299   "__initializer__"

==============================================================================================

MODULE:   ejs.web <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_14351_433 : Block
   LOCAL:   [local-01] var block_14789_470 : Block
   LOCAL:   [local-02] var block_15333_547 : Block
   LOCAL:   [local-03] var block_15502_548 : Block
   LOCAL:   [local-04] var block_15709_563 : Block
   LOCAL:   [local-05] var block_16284_576 : Block
   LOCAL:   [local-06] var block_16672_605 : Block
   LOCAL:   [local-07] var block_16770_606 : Block
   LOCAL:   [local-08] var block_16828_607 : Block
   LOCAL:   [local-09] var block_16940_612 : Block
   LOCAL:   [local-10] var block_17902_662 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 12 a6 e6 01 20 .......... debug 

    # ejs.es:14739              }

    0009: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0011: [0] 01 7c ...................... addNamespace <ejs.web> 
    0013: [0] 33 12 9e e0 01 8c 01 ....... debug 

    # ejs.es:14351              module ejs.web {

    0020: [0] 33 12 a8 e0 01 ae 01 ....... debug 

    # ejs.es:14356                  namespace action = "action"

    0027: [0] 53 ee 01 ................... loadNamespace <action> 
    0030: [1] b7 ca 02 ................... putGlobalSlot <slot: 165> 
    0033: [0] 33 12 b6 e0 01 90 02 ....... debug 

    # ejs.es:14363                  class Controller {

    0040: [0] 34 b4 0a ................... defineClass <type: 0x29a,  ejs.web::Controller> 
    0043: [0] 24 ......................... closeBlock 
    0044: [0] 8d 02 00 ................... openBlock <slot: 1> <0> 
    0047: [0] 33 12 e2 ee 01 20 .......... debug 

    # ejs.es:15281              }

    0053: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0055: [0] 01 7c ...................... addNamespace <ejs.web> 
    0057: [0] 33 12 8a e7 01 8c 01 ....... debug 

    # ejs.es:14789              module ejs.web {

    0064: [0] 33 12 9c e7 01 94 8c 01 .... debug 

    # ejs.es:14798              	public class HtmlConnector {

    0072: [0] 34 bc 0a ................... defineClass <type: 0x29e,  public::HtmlConnector> 
    0075: [0] 24 ......................... closeBlock 
    0076: [0] 8d 04 00 ................... openBlock <slot: 2> <0> 
    0079: [0] 33 12 ba f1 01 20 .......... debug 

    # ejs.es:15453              }

    0085: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0087: [0] 01 7c ...................... addNamespace <ejs.web> 
    0089: [0] 33 12 ca ef 01 8c 01 ....... debug 

    # ejs.es:15333              module ejs.web {

    0096: [0] 33 12 ce ef 01 de b7 03 .... debug 

    # ejs.es:15335                  dynamic class HttpServer {

    0104: [0] 34 c4 0a ................... defineClass <type: 0x2a2,  ejs.web::HttpServer> 
    0107: [0] 24 ......................... closeBlock 
    0108: [0] 8d 06 00 ................... openBlock <slot: 3> <0> 
    0111: [0] 33 12 d4 f4 01 20 .......... debug 

    # ejs.es:15658              }

    0117: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0119: [0] 01 7c ...................... addNamespace <ejs.web> 
    0121: [0] 33 12 9c f2 01 8c 01 ....... debug 

    # ejs.es:15502              module ejs.web {

    0128: [0] 33 12 a0 f2 01 c0 c7 03 .... debug 

    # ejs.es:15504                  require ejs.cjs

    0136: [0] 01 02 ...................... addNamespace <ejs.cjs> 
    0138: [0] 33 12 ae f2 01 e8 c7 03 .... debug 

    # ejs.es:15511                  public class Mvc {

    0146: [0] 34 cc 0a ................... defineClass <type: 0x2a6,  public::Mvc> 
    0149: [0] 24 ......................... closeBlock 
    0150: [0] 8d 08 00 ................... openBlock <slot: 4> <0> 
    0153: [0] 33 12 d6 fd 01 20 .......... debug 

    # ejs.es:16235              }

    0159: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0161: [0] 01 7c ...................... addNamespace <ejs.web> 
    0163: [0] 33 12 ba f5 01 8c 01 ....... debug 

    # ejs.es:15709              module ejs.web {

    0170: [0] 33 12 d4 f5 01 80 84 04 .... debug 

    # ejs.es:15722                  dynamic enumerable class Request implements Stream {

    0178: [0] 34 d4 0a ................... defineClass <type: 0x2aa,  ejs.web::Request> 
    0181: [0] 24 ......................... closeBlock 
    0182: [0] 8d 0a 00 ................... openBlock <slot: 5> <0> 
    0185: [0] 33 12 de 83 02 20 .......... debug 

    # ejs.es:16623              }

    0191: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0193: [0] 01 7c ...................... addNamespace <ejs.web> 
    0195: [0] 33 12 b8 fe 01 8c 01 ....... debug 

    # ejs.es:16284              module ejs.web {

    0202: [0] 33 12 ca fe 01 84 f4 04 .... debug 

    # ejs.es:16293                  class Router {

    0210: [0] 34 dc 0a ................... defineClass <type: 0x2ae,  ejs.web::Router> 
    0213: [0] 33 12 80 82 02 96 ce 05 .... debug 

    # ejs.es:16512                  dynamic class Route {

    0221: [0] 34 e4 0a ................... defineClass <type: 0x2b2,  ejs.web::Route> 
    0224: [0] 24 ......................... closeBlock 
    0225: [0] 8d 0c 00 ................... openBlock <slot: 6> <0> 
    0228: [0] 33 12 a0 85 02 20 .......... debug 

    # ejs.es:16720              }

    0234: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0236: [0] 01 7c ...................... addNamespace <ejs.web> 
    0238: [0] 33 12 c0 84 02 8c 01 ....... debug 

    # ejs.es:16672              module ejs.web {

    0245: [0] 33 12 d2 84 02 94 e6 05 .... debug 

    # ejs.es:16681                  var session: Object

    0253: [0] 33 12 e0 84 02 c4 e6 05 .... debug 

    # ejs.es:16688                  class Session { 

    0261: [0] 34 f4 0a ................... defineClass <type: 0x2ba,  ejs.web::Session> 
    0264: [0] 24 ......................... closeBlock 
    0265: [0] 8d 0e 00 ................... openBlock <slot: 7> <0> 
    0268: [0] 33 12 d0 86 02 20 .......... debug 

    # ejs.es:16808              }

    0274: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0276: [0] 01 7c ...................... addNamespace <ejs.web> 
    0278: [0] 33 12 84 86 02 8c 01 ....... debug 

    # ejs.es:16770              module ejs.web {

    0285: [0] 33 12 96 86 02 e2 eb 05 .... debug 

    # ejs.es:16779                  class UploadFile {

    0293: [0] 34 fc 0a ................... defineClass <type: 0x2be,  ejs.web::UploadFile> 
    0296: [0] 24 ......................... closeBlock 
    0297: [0] 8d 10 00 ................... openBlock <slot: 8> <0> 
    0300: [0] 33 12 b4 88 02 20 .......... debug 

    # ejs.es:16922              }

    0306: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0308: [0] 01 7c ...................... addNamespace <ejs.web> 
    0310: [0] 33 12 f8 86 02 8c 01 ....... debug 

    # ejs.es:16828              module ejs.web {

    0317: [0] 33 12 88 87 02 ca ee 05 .... debug 

    # ejs.es:16836                  function parseCookies(cookieHeader: String): Object {

    0325: [0] 33 12 fc 87 02 d2 f5 05 .... debug 

    # ejs.es:16894                  function escapeHtml(s: String): String

    0333: [0] 33 12 90 88 02 de f8 05 .... debug 

    # ejs.es:16904                  function html(...args): String {

    0341: [0] 33 12 b0 88 02 a4 fb 05 .... debug 

    # ejs.es:16920                  function unescapeHtml(s: String): String

    0349: [0] 24 ......................... closeBlock 
    0350: [0] 8d 12 00 ................... openBlock <slot: 9> <0> 
    0353: [0] 33 12 f6 96 02 20 .......... debug 

    # ejs.es:17851              }

    0359: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0361: [0] 01 7c ...................... addNamespace <ejs.web> 
    0363: [0] 33 12 d8 88 02 8c 01 ....... debug 

    # ejs.es:16940              module ejs.web {

    0370: [0] 33 12 dc 88 02 bc fe 05 .... debug 

    # ejs.es:16942                  require ejs.web

    0378: [0] 01 7c ...................... addNamespace <ejs.web> 
    0380: [0] 33 12 f0 88 02 e4 fe 05 .... debug 

    # ejs.es:16952                  dynamic class View {

    0388: [0] 34 a4 0b ................... defineClass <type: 0x2d2,  ejs.web::View> 
    0391: [0] 24 ......................... closeBlock 
    0392: [0] 8d 14 00 ................... openBlock <slot: 10> <0> 
    0395: [0] 33 12 e0 9a 02 20 .......... debug 

    # ejs.es:18096              }

    0401: [0] 01 24 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0403: [0] 01 7c ...................... addNamespace <ejs.web> 
    0405: [0] 33 12 dc 97 02 8c 01 ....... debug 

    # ejs.es:17902              module ejs.web {

    0412: [0] 33 12 ec 97 02 bc ea 07 .... debug 

    # ejs.es:17910                  class Web {

    0420: [0] 34 ac 0b ................... defineClass <type: 0x2d6,  ejs.web::Web> 
    0423: [0] 24 ......................... closeBlock 
    0424: [0] 3b ......................... endCode 
    

BLOCK:      [block_14351_433-00]  block_14351_433 (Slots 0)

BLOCK:      [block_14789_470-01]  block_14789_470 (Slots 0)

BLOCK:      [block_15333_547-02]  block_15333_547 (Slots 0)

BLOCK:      [block_15502_548-03]  block_15502_548 (Slots 0)

BLOCK:      [block_15709_563-04]  block_15709_563 (Slots 0)

BLOCK:      [block_16284_576-05]  block_16284_576 (Slots 0)

BLOCK:      [block_16672_605-06]  block_16672_605 (Slots 0)

BLOCK:      [block_16770_606-07]  block_16770_606 (Slots 0)

BLOCK:      [block_16828_607-08]  block_16828_607 (Slots 0)

BLOCK:      [block_16940_612-09]  block_16940_612 (Slots 0)

BLOCK:      [block_17902_662-10]  block_17902_662 (Slots 0)
VARIABLE:   [action-165]  ejs.web var action : Namespace

CLASS:      class Controller extends Object
            #  Class Details: 50 class traits, 14 instance traits, requested slot 166

FUNCTION:   [Controller-26]  -constructor- const function Controller(r) : void

     ARG:   [arg-00]   private r

    0000: [0] 33 12 a0 e1 01 dc 0f ....... debug 

    # ejs.es:14416                          request = r || _initRequest

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 39 ......................... dup 
    0009: [2] 14 07 ...................... branchTrue8 <addr: 18> 
    0011: [1] 90 ......................... pop 
    0012: [0] 57 ......................... loadThis 
    0013: [1] 7b ee 0e b4 09 ............. getObjName <_initRequest> <[ejs.web::Controller,private]> 
    0018: [1] 57 ......................... loadThis 
    0019: [2] b3 88 07 7c ................ putObjName <request> <ejs.web> 
    0023: [0] 33 12 a2 e1 01 ac 10 ....... debug 

    # ejs.es:14417                          if (request) {

    0030: [0] 57 ......................... loadThis 
    0031: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0035: [1] 13 79 ...................... branchFalse8 <addr: 158> 
    0037: [0] 33 12 a4 e1 01 e2 10 ....... debug 

    # ejs.es:14418                              log = request.logger

    0044: [0] 57 ......................... loadThis 
    0045: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0049: [1] 7b ac 11 ba 11 ............. getObjName <logger> <> 
    0054: [1] 57 ......................... loadThis 
    0055: [2] b3 e6 05 7c ................ putObjName <log> <ejs.web> 
    0059: [0] 33 12 a6 e1 01 bc 11 ....... debug 

    # ejs.es:14419                              params = request.params

    0066: [0] 57 ......................... loadThis 
    0067: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0071: [1] 7b b2 06 c4 08 ............. getObjName <params> <public> 
    0076: [1] 57 ......................... loadThis 
    0077: [2] b3 b2 06 7c ................ putObjName <params> <ejs.web> 
    0081: [0] 33 12 aa e1 01 8c 12 ....... debug 

    # ejs.es:14421                              controllerName = Reflect(this).name.trim("Controller")

    0088: [0] 57 ......................... loadThis 
    0089: [1] 17 de 01 02 ................ callGlobalSlot <slot: 111> <argc: 1> 
    0093: [0] 93 ......................... pushResult 
    0094: [1] 7b 9a 13 c4 08 ............. getObjName <name> <public> 
    0099: [1] 56 a4 13 ................... loadString <Controller> 
    0102: [2] 1e ba 13 00 02 ............. callObjName <trim> <> <argc: 1> 
    0107: [0] 93 ......................... pushResult 
    0108: [1] 57 ......................... loadThis 
    0109: [2] b3 b4 04 7c ................ putObjName <controllerName> <ejs.web> 
    0113: [0] 33 12 ac e1 01 c4 13 ....... debug 

    # ejs.es:14422                              if (request.config.database) {

    0120: [0] 57 ......................... loadThis 
    0121: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0125: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0130: [1] 7b b0 14 00 ................ getObjName <database> <> 
    0134: [1] 13 14 ...................... branchFalse8 <addr: 156> 
    0136: [0] 33 12 ae e1 01 c2 14 ....... debug 

    # ejs.es:14423                                  openDatabase(request)

    0143: [0] 57 ......................... loadThis 
    0144: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0148: [1] 1f 96 15 b4 09 02 .......... callScopedName <openDatabase> <[ejs.web::Controller,private]> <argc: 1> 
    0154: [0] 3e 00 ...................... goto8 <addr: 156> 
    0156: [0] 3e 00 ...................... goto8 <addr: 158> 
    0158: [0] be ......................... return 
    0159: [0] 33 12 b4 e1 01 b0 15 ....... debug 

    # ejs.es:14426                      }
    
VARIABLE:   [r-00]  private var r
VARIABLE:   [Controller-27]  [ejs.web::Controller,private] static var _initRequest

FUNCTION:   [Controller-28]  ejs.web const static function create(request) : Controller

     ARG:   [arg-00]   private request
   LOCAL:   [local-01] var cname : String
   LOCAL:   [local-02] var uname
   LOCAL:   [local-03] var c

    0000: [0] 33 12 c6 e1 01 fe 16 ....... debug 

    # ejs.es:14435                          let cname: String = request.params["controller"]

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7b b2 06 c4 08 ............. getObjName <params> <public> 
    0013: [1] 56 ba 11 ................... loadString <> 
    0016: [2] 56 f8 17 ................... loadString <controller> 
    0019: [3] 7c ......................... getObjNameExpr 
    0020: [1] 95 ......................... putLocalSlot1 
    0021: [0] 33 12 c8 e1 01 8e 18 ....... debug 

    # ejs.es:14436                          if (!cname) {

    0028: [0] 5c ......................... getLocalSlot1 
    0029: [1] 86 ......................... logicalNot 
    0030: [1] 13 13 ...................... branchFalse8 <addr: 51> 
    0032: [0] 33 12 ca e1 01 c2 18 ....... debug 

    # ejs.es:14437                              throw "Can't run app, controller " + cname + " is not loaded"

    0039: [0] 56 de 19 ................... loadString <Can't run app, controller > 
    0042: [1] 5c ......................... getLocalSlot1 
    0043: [2] 00 ......................... add 
    0044: [1] 56 94 1a ................... loadString < is not loaded> 
    0047: [2] 00 ......................... add 
    0048: [1] c6 ......................... throw 
    0049: [1] 3e 00 ...................... goto8 <addr: 51> 
    0051: [1] 33 12 cc e1 01 b2 1a ....... debug 

    # ejs.es:14438                          }

    0058: [1] 33 12 ce e1 01 ce 1a ....... debug 

    # ejs.es:14439                          _initRequest = request

    0065: [1] 5b ......................... getLocalSlot0 
    0066: [2] 57 ......................... loadThis 
    0067: [3] b3 ee 0e b4 09 ............. putObjName <_initRequest> <[ejs.web::Controller,private]> 
    0072: [1] 33 12 d0 e1 01 94 1b ....... debug 

    # ejs.es:14440                          let uname = cname.toPascal() + "Controller"

    0079: [1] 5c ......................... getLocalSlot1 
    0080: [2] 1e 90 1c c4 08 00 .......... callObjName <toPascal> <public> <argc: 0> 
    0086: [1] 93 ......................... pushResult 
    0087: [2] 56 a4 13 ................... loadString <Controller> 
    0090: [3] 00 ......................... add 
    0091: [2] 96 ......................... putLocalSlot2 
    0092: [1] 33 12 d2 e1 01 a2 1c ....... debug 

    # ejs.es:14441                          let c = new global[uname]()

    0099: [1] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0101: [2] 56 ba 11 ................... loadString <> 
    0104: [3] 5d ......................... getLocalSlot2 
    0105: [4] 7c ......................... getObjNameExpr 
    0106: [2] 89 ......................... new 
    0107: [2] 20 00 ...................... callConstructor <argc: 0> 
    0109: [2] 97 ......................... putLocalSlot3 
    0110: [1] 33 12 d4 e1 01 f6 1c ....... debug 

    # ejs.es:14442                          _initRequest = null

    0117: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0119: [2] 57 ......................... loadThis 
    0120: [3] b3 ee 0e b4 09 ............. putObjName <_initRequest> <[ejs.web::Controller,private]> 
    0125: [1] 33 12 d6 e1 01 b6 1d ....... debug 

    # ejs.es:14443                          return c

    0132: [1] 5e ......................... getLocalSlot3 
    0133: [2] bf ......................... returnValue 
    
VARIABLE:   [request-00]  private var request
VARIABLE:   [cname-01]  private var cname : String
VARIABLE:   [uname-02]  private var uname
VARIABLE:   [c-03]  private var c

FUNCTION:   [Controller-29]  [ejs.web::Controller,private] const function openDatabase(request) : void

     ARG:   [arg-00]   private request
   LOCAL:   [local-01] var deploymentMode
   LOCAL:   [local-02] var dbconfig
   LOCAL:   [local-03] var klass
   LOCAL:   [local-04] var adapter
   LOCAL:   [local-05] var profile
   LOCAL:   [local-06] var db

    0000: [0] 33 12 f6 e1 01 ea 1e ....... debug 

    # ejs.es:14459                          let deploymentMode = request.config.mode

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0013: [1] 7b d4 1f 00 ................ getObjName <mode> <> 
    0017: [1] 95 ......................... putLocalSlot1 
    0018: [0] 33 12 f8 e1 01 de 1f ....... debug 

    # ejs.es:14460                          let dbconfig = request.config.database

    0025: [0] 5b ......................... getLocalSlot0 
    0026: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0031: [1] 7b b0 14 00 ................ getObjName <database> <> 
    0035: [1] 96 ......................... putLocalSlot2 
    0036: [0] 33 12 fa e1 01 d6 20 ....... debug 

    # ejs.es:14461                          let klass = dbconfig["class"]

    0043: [0] 5d ......................... getLocalSlot2 
    0044: [1] 56 ba 11 ................... loadString <> 
    0047: [2] 56 b6 21 ................... loadString <class> 
    0050: [3] 7c ......................... getObjNameExpr 
    0051: [1] 97 ......................... putLocalSlot3 
    0052: [0] 33 12 fc e1 01 c2 21 ....... debug 

    # ejs.es:14462                          let adapter = dbconfig.adapter

    0059: [0] 5d ......................... getLocalSlot2 
    0060: [1] 7b 98 22 00 ................ getObjName <adapter> <> 
    0064: [1] 98 ......................... putLocalSlot4 
    0065: [0] 33 12 fe e1 01 a8 22 ....... debug 

    # ejs.es:14463                          let profile = dbconfig[deploymentMode]

    0072: [0] 5d ......................... getLocalSlot2 
    0073: [1] 56 ba 11 ................... loadString <> 
    0076: [2] 5c ......................... getLocalSlot1 
    0077: [3] 7c ......................... getObjNameExpr 
    0078: [1] 99 ......................... putLocalSlot5 
    0079: [0] 33 12 80 e2 01 9e 23 ....... debug 

    # ejs.es:14464                          if (klass && dbconfig.adapter && profile.name) {

    0086: [0] 5e ......................... getLocalSlot3 
    0087: [1] 39 ......................... dup 
    0088: [2] 13 06 ...................... branchFalse8 <addr: 96> 
    0090: [1] 90 ......................... pop 
    0091: [0] 5d ......................... getLocalSlot2 
    0092: [1] 7b 98 22 00 ................ getObjName <adapter> <> 
    0096: [1] 39 ......................... dup 
    0097: [2] 13 06 ...................... branchFalse8 <addr: 105> 
    0099: [1] 90 ......................... pop 
    0100: [0] 60 ......................... getLocalSlot5 
    0101: [1] 7b 9a 13 00 ................ getObjName <name> <> 
    0105: [1] 13 4a ...................... branchFalse8 <addr: 181> 
    0107: [0] 33 12 82 e2 01 b4 24 ....... debug 

    # ejs.es:14465                              let db = new global[klass](dbconfig.adapter, request.dir.join(profile.name))

    0114: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0116: [1] 56 ba 11 ................... loadString <> 
    0119: [2] 5e ......................... getLocalSlot3 
    0120: [3] 7c ......................... getObjNameExpr 
    0121: [1] 89 ......................... new 
    0122: [1] 5d ......................... getLocalSlot2 
    0123: [2] 7b 98 22 00 ................ getObjName <adapter> <> 
    0127: [2] 5b ......................... getLocalSlot0 
    0128: [3] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0133: [3] 60 ......................... getLocalSlot5 
    0134: [4] 7b 9a 13 00 ................ getObjName <name> <> 
    0138: [4] 1e f6 25 00 02 ............. callObjName <join> <> <argc: 1> 
    0143: [2] 93 ......................... pushResult 
    0144: [3] 20 04 ...................... callConstructor <argc: 2> 
    0146: [1] 9a ......................... putLocalSlot6 
    0147: [0] 33 12 84 e2 01 80 26 ....... debug 

    # ejs.es:14466                              if (profile.trace) {

    0154: [0] 60 ......................... getLocalSlot5 
    0155: [1] 7b ca 26 00 ................ getObjName <trace> <> 
    0159: [1] 13 12 ...................... branchFalse8 <addr: 179> 
    0161: [0] 33 12 86 e2 01 d6 26 ....... debug 

    # ejs.es:14467                                  db.trace(true)

    0168: [0] 61 ......................... getLocalSlot6 
    0169: [1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0172: [2] 1e ca 26 00 02 ............. callObjName <trace> <> <argc: 1> 
    0177: [0] 3e 00 ...................... goto8 <addr: 179> 
    0179: [0] 3e 00 ...................... goto8 <addr: 181> 
    0181: [0] be ......................... return 
    0182: [0] 33 12 8c e2 01 b0 15 ....... debug 

    # ejs.es:14470                      }
    
VARIABLE:   [request-00]  private var request
VARIABLE:   [deploymentMode-01]  private var deploymentMode
VARIABLE:   [dbconfig-02]  private var dbconfig
VARIABLE:   [klass-03]  private var klass
VARIABLE:   [adapter-04]  private var adapter
VARIABLE:   [profile-05]  private var profile
VARIABLE:   [db-06]  -hoisted-6 var db

FUNCTION:   [Controller-30]  ejs.web const function run(request) : Void

     ARG:   [arg-00]   private request

    0000: [0] 33 12 9a e2 01 fa 27 ....... debug 

    # ejs.es:14477                          actionName = params.action || "index"

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b b2 06 7c ................ getObjName <params> <ejs.web> 
    0012: [1] 7b ee 01 ba 11 ............. getObjName <action> <> 
    0017: [1] 39 ......................... dup 
    0018: [2] 14 04 ...................... branchTrue8 <addr: 24> 
    0020: [1] 90 ......................... pop 
    0021: [0] 56 de 28 ................... loadString <index> 
    0024: [1] 57 ......................... loadThis 
    0025: [2] b3 88 03 7c ................ putObjName <actionName> <ejs.web> 
    0029: [0] 33 12 9c e2 01 ea 28 ....... debug 

    # ejs.es:14478                          params.action = actionName

    0036: [0] 57 ......................... loadThis 
    0037: [1] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0041: [1] 57 ......................... loadThis 
    0042: [2] 7b b2 06 7c ................ getObjName <params> <ejs.web> 
    0046: [2] b3 ee 01 ba 11 ............. putObjName <action> <> 
    0051: [0] 33 12 9e e2 01 b8 29 ....... debug 

    # ejs.es:14479                          use namespace action

    0058: [0] 7e ca 02 ................... getGlobalSlot <slot: 165> 
    0061: [1] 02 ......................... addNamespaceRef 
    0062: [0] 33 12 a0 e2 01 fa 29 ....... debug 

    # ejs.es:14480                          if (!this[actionName]) {

    0069: [0] 57 ......................... loadThis 
    0070: [1] 56 ba 11 ................... loadString <> 
    0073: [2] 57 ......................... loadThis 
    0074: [3] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0078: [3] 7c ......................... getObjNameExpr 
    0079: [1] 86 ......................... logicalNot 
    0080: [1] 13 11 ...................... branchFalse8 <addr: 99> 
    0082: [0] 33 12 a2 e2 01 c4 2a ....... debug 

    # ejs.es:14481                              actionName = "missing"

    0089: [0] 56 92 2b ................... loadString <missing> 
    0092: [1] 57 ......................... loadThis 
    0093: [2] b3 88 03 7c ................ putObjName <actionName> <ejs.web> 
    0097: [0] 3e 00 ...................... goto8 <addr: 99> 
    0099: [0] 33 12 a4 e2 01 b2 1a ....... debug 

    # ejs.es:14482                          }

    0106: [0] 33 12 a6 e2 01 a2 2b ....... debug 

    # ejs.es:14483                          flashBefore()

    0113: [0] 1f d6 2b b4 09 00 .......... callScopedName <flashBefore> <[ejs.web::Controller,private]> <argc: 0> 
    0119: [0] 33 12 a8 e2 01 ee 2b ....... debug 

    # ejs.es:14484                          runFilters(_beforeFilters)

    0126: [0] 57 ......................... loadThis 
    0127: [1] 7b b4 0c b4 09 ............. getObjName <_beforeFilters> <[ejs.web::Controller,private]> 
    0132: [1] 1f bc 2c b4 09 02 .......... callScopedName <runFilters> <[ejs.web::Controller,private]> <argc: 1> 
    0138: [0] 33 12 aa e2 01 d2 2c ....... debug 

    # ejs.es:14485                          if (!redirected) {

    0145: [0] 57 ......................... loadThis 
    0146: [1] 7b d0 0a b4 09 ............. getObjName <redirected> <[ejs.web::Controller,private]> 
    0151: [1] 86 ......................... logicalNot 
    0152: [1] 13 47 ...................... branchFalse8 <addr: 225> 
    0154: [0] 33 12 ae e2 01 90 2d ....... debug 

    # ejs.es:14487                              this[actionName]()

    0161: [0] 50 ......................... loadGlobal 
    0162: [1] 57 ......................... loadThis 
    0163: [2] 56 ba 11 ................... loadString <> 
    0166: [3] 57 ......................... loadThis 
    0167: [4] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0171: [4] 7c ......................... getObjNameExpr 
    0172: [2] 16 00 ...................... call <argc: 0> 
    0174: [0] 33 12 b0 e2 01 d6 2d ....... debug 

    # ejs.es:14488                              if (!rendered)

    0181: [0] 57 ......................... loadThis 
    0182: [1] 7b a2 09 b4 09 ............. getObjName <rendered> <[ejs.web::Controller,private]> 
    0187: [1] 86 ......................... logicalNot 
    0188: [1] 13 0e ...................... branchFalse8 <addr: 204> 
    0190: [0] 33 12 b2 e2 01 94 2e ....... debug 

    # ejs.es:14489                                  renderView()

    0197: [0] 1f d6 2e 7c 00 ............. callScopedName <renderView> <ejs.web> <argc: 0> 
    0202: [0] 3e 00 ...................... goto8 <addr: 204> 
    0204: [0] 33 12 b4 e2 01 ec 2e ....... debug 

    # ejs.es:14490                              runFilters(_afterFilters)

    0211: [0] 57 ......................... loadThis 
    0212: [1] 7b b8 0b b4 09 ............. getObjName <_afterFilters> <[ejs.web::Controller,private]> 
    0217: [1] 1f bc 2c b4 09 02 .......... callScopedName <runFilters> <[ejs.web::Controller,private]> <argc: 1> 
    0223: [0] 3e 00 ...................... goto8 <addr: 225> 
    0225: [0] 33 12 b6 e2 01 b2 1a ....... debug 

    # ejs.es:14491                          }

    0232: [0] 33 12 b8 e2 01 c0 2f ....... debug 

    # ejs.es:14492                          flashAfter()

    0239: [0] 1f f2 2f b4 09 00 .......... callScopedName <flashAfter> <[ejs.web::Controller,private]> <argc: 0> 
    0245: [0] 54 ......................... loadNull 
    0246: [1] bf ......................... returnValue 
    0247: [0] 33 12 ba e2 01 b0 15 ....... debug 

    # ejs.es:14493                      }
    
VARIABLE:   [request-00]  private var request

FUNCTION:   [Controller-31]  [ejs.web::Controller,private] const function flashBefore() : void


    0000: [0] 33 12 c6 e2 01 ec 30 ....... debug 

    # ejs.es:14499                          lastFlash = null

    0007: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 f8 0d b4 09 ............. putObjName <lastFlash> <[ejs.web::Controller,private]> 
    0015: [0] 33 12 c8 e2 01 a6 31 ....... debug 

    # ejs.es:14500                          if (session) {

    0022: [0] 7e da 02 ................... getGlobalSlot <slot: 173> 
    0025: [1] 13 19 ...................... branchFalse8 <addr: 52> 
    0027: [0] 33 12 ca e2 01 dc 31 ....... debug 

    # ejs.es:14501                              flash = session["__flash__"]

    0034: [0] 7e da 02 ................... getGlobalSlot <slot: 173> 
    0037: [1] 56 ba 11 ................... loadString <> 
    0040: [2] 56 b6 32 ................... loadString <__flash__> 
    0043: [3] 7c ......................... getObjNameExpr 
    0044: [1] 57 ......................... loadThis 
    0045: [2] b3 b8 08 c4 08 ............. putObjName <flash> <public> 
    0050: [0] 3e 00 ...................... goto8 <addr: 52> 
    0052: [0] 33 12 ce e2 01 ca 32 ....... debug 

    # ejs.es:14503                          if (!flash) {

    0059: [0] 57 ......................... loadThis 
    0060: [1] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0065: [1] 86 ......................... logicalNot 
    0066: [1] 13 13 ...................... branchFalse8 <addr: 87> 
    0068: [0] 33 12 d0 e2 01 fe 32 ....... debug 

    # ejs.es:14504                              flash = {}

    0075: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0079: [1] 57 ......................... loadThis 
    0080: [2] b3 b8 08 c4 08 ............. putObjName <flash> <public> 
    0085: [0] 3e 4a ...................... goto8 <addr: 161> 
    0087: [0] 33 12 d2 e2 01 b4 33 ....... debug 

    # ejs.es:14505                          } else {

    0094: [0] 33 12 d4 e2 01 de 33 ....... debug 

    # ejs.es:14506                              if (session) {

    0101: [0] 7e da 02 ................... getGlobalSlot <slot: 173> 
    0104: [1] 13 16 ...................... branchFalse8 <addr: 128> 
    0106: [0] 33 12 d6 e2 01 9c 34 ....... debug 

    # ejs.es:14507                                  session["__flash__"] = undefined

    0113: [0] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0116: [1] 7e da 02 ................... getGlobalSlot <slot: 173> 
    0119: [2] 56 ba 11 ................... loadString <> 
    0122: [3] 56 b6 32 ................... loadString <__flash__> 
    0125: [4] b2 ......................... putObjNameExpr 
    0126: [0] 3e 00 ...................... goto8 <addr: 128> 
    0128: [0] 33 12 d8 e2 01 86 35 ....... debug 

    # ejs.es:14508                              }

    0135: [0] 33 12 da e2 01 aa 35 ....... debug 

    # ejs.es:14509                              lastFlash = flash.clone()

    0142: [0] 57 ......................... loadThis 
    0143: [1] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0148: [1] 1e fe 35 c4 08 00 .......... callObjName <clone> <public> <argc: 0> 
    0154: [0] 93 ......................... pushResult 
    0155: [1] 57 ......................... loadThis 
    0156: [2] b3 f8 0d b4 09 ............. putObjName <lastFlash> <[ejs.web::Controller,private]> 
    0161: [0] be ......................... return 
    0162: [0] 33 12 de e2 01 b0 15 ....... debug 

    # ejs.es:14511                      }
    

FUNCTION:   [Controller-32]  [ejs.web::Controller,private] const function flashAfter() : void

   LOCAL:   [local-00] var item
   LOCAL:   [local-01] var old

    0000: [0] 33 12 ea e2 01 da 36 ....... debug 

    # ejs.es:14517                          if (lastFlash) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b f8 0d b4 09 ............. getObjName <lastFlash> <[ejs.web::Controller,private]> 
    0013: [1] 13 70 ...................... branchFalse8 <addr: 127> 
    0015: [0] 33 12 ec e2 01 94 37 ....... debug 

    # ejs.es:14518                              for (item in flash) {

    0022: [0] 57 ......................... loadThis 
    0023: [1] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0028: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0034: [0] 93 ......................... pushResult 
    0035: [1] 39 ......................... dup 
    0036: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0039: [1] 93 ......................... pushResult 
    0040: [2] 94 ......................... putLocalSlot0 
    0041: [1] 33 12 ee e2 01 9a 38 ....... debug 

    # ejs.es:14519                                  for each (old in lastFlash) {

    0048: [1] 57 ......................... loadThis 
    0049: [2] 7b f8 0d b4 09 ............. getObjName <lastFlash> <[ejs.web::Controller,private]> 
    0054: [2] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0060: [1] 93 ......................... pushResult 
    0061: [2] 39 ......................... dup 
    0062: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0065: [2] 93 ......................... pushResult 
    0066: [3] 95 ......................... putLocalSlot1 
    0067: [2] 33 12 f0 e2 01 b0 39 ....... debug 

    # ejs.es:14520                                      if (hashcode(flash[item]) == hashcode(old)) {

    0074: [2] 57 ......................... loadThis 
    0075: [3] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0080: [3] 56 ba 11 ................... loadString <> 
    0083: [4] 5b ......................... getLocalSlot0 
    0084: [5] 7c ......................... getObjNameExpr 
    0085: [3] 17 a2 01 02 ................ callGlobalSlot <slot: 81> <argc: 1> 
    0089: [2] 93 ......................... pushResult 
    0090: [3] 5c ......................... getLocalSlot1 
    0091: [4] 17 a2 01 02 ................ callGlobalSlot <slot: 81> <argc: 1> 
    0095: [3] 93 ......................... pushResult 
    0096: [4] 25 ......................... compareEq 
    0097: [3] 13 14 ...................... branchFalse8 <addr: 119> 
    0099: [2] 33 12 f2 e2 01 bc 3a ....... debug 

    # ejs.es:14521                                          delete flash[item]

    0106: [2] 57 ......................... loadThis 
    0107: [3] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0112: [3] 56 ba 11 ................... loadString <> 
    0115: [4] 5b ......................... getLocalSlot0 
    0116: [5] 36 ......................... deleteNameExpr 
    0117: [2] 3e 00 ...................... goto8 <addr: 119> 
    0119: [2] 3e c4 ...................... goto8 <addr: 61> 
    0121: [2] 90 ......................... pop 
    0122: [1] 3e a7 ...................... goto8 <addr: 35> 
    0124: [1] 90 ......................... pop 
    0125: [0] 3e 00 ...................... goto8 <addr: 127> 
    0127: [0] 33 12 fc e2 01 9a 3b ....... debug 

    # ejs.es:14526                          if (flash && flash.length > 0) {

    0134: [0] 57 ......................... loadThis 
    0135: [1] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0140: [1] 39 ......................... dup 
    0141: [2] 13 0e ...................... branchFalse8 <addr: 157> 
    0143: [1] 90 ......................... pop 
    0144: [0] 57 ......................... loadThis 
    0145: [1] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0150: [1] 7b f4 3b ee 1d ............. getObjName <length> <ejs> 
    0155: [1] 44 ......................... load0 
    0156: [2] 29 ......................... compareGt 
    0157: [1] 13 27 ...................... branchFalse8 <addr: 198> 
    0159: [0] 33 12 fe e2 01 de 33 ....... debug 

    # ejs.es:14527                              if (session) {

    0166: [0] 7e da 02 ................... getGlobalSlot <slot: 173> 
    0169: [1] 13 19 ...................... branchFalse8 <addr: 196> 
    0171: [0] 33 12 80 e3 01 82 3c ....... debug 

    # ejs.es:14528                                  session["__flash__"] = flash

    0178: [0] 57 ......................... loadThis 
    0179: [1] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0184: [1] 7e da 02 ................... getGlobalSlot <slot: 173> 
    0187: [2] 56 ba 11 ................... loadString <> 
    0190: [3] 56 b6 32 ................... loadString <__flash__> 
    0193: [4] b2 ......................... putObjNameExpr 
    0194: [0] 3e 00 ...................... goto8 <addr: 196> 
    0196: [0] 3e 00 ...................... goto8 <addr: 198> 
    0198: [0] be ......................... return 
    0199: [0] 33 12 86 e3 01 b0 15 ....... debug 

    # ejs.es:14531                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     62      65        121          121       StopIteration
1   iteration     36      39        124          124       StopIteration

VARIABLE:   [item-00]  -hoisted-0 var item
VARIABLE:   [old-01]  -hoisted-1 var old

FUNCTION:   [Controller-33]  ejs.web const function resetFilters() : Void


    0000: [0] 33 12 8e e3 01 d0 3d ....... debug 

    # ejs.es:14535                          _beforeFilters = null

    0007: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 b4 0c b4 09 ............. putObjName <_beforeFilters> <[ejs.web::Controller,private]> 
    0015: [0] 33 12 90 e3 01 94 3e ....... debug 

    # ejs.es:14536                          _afterFilters = null

    0022: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0024: [1] 57 ......................... loadThis 
    0025: [2] b3 b8 0b b4 09 ............. putObjName <_afterFilters> <[ejs.web::Controller,private]> 
    0030: [0] 33 12 92 e3 01 d6 3e ....... debug 

    # ejs.es:14537                          _wrapFilters = null

    0037: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0039: [1] 57 ......................... loadThis 
    0040: [2] b3 a2 0d b4 09 ............. putObjName <_wrapFilters> <[ejs.web::Controller,private]> 
    0045: [0] 54 ......................... loadNull 
    0046: [1] bf ......................... returnValue 
    0047: [0] 33 12 94 e3 01 b0 15 ....... debug 

    # ejs.es:14538                      }
    

FUNCTION:   [Controller-34]  ejs.web const function beforeFilter(fn, options: Object) : Void

     ARG:   [arg-00]   private fn
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 12 9c e3 01 b6 40 ....... debug 

    # ejs.es:14542                          _beforeFilters ||= []

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b b4 0c b4 09 ............. getObjName <_beforeFilters> <[ejs.web::Controller,private]> 
    0020: [1] 39 ......................... dup 
    0021: [2] 14 04 ...................... branchTrue8 <addr: 27> 
    0023: [1] 90 ......................... pop 
    0024: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0026: [1] 89 ......................... new 
    0027: [1] 57 ......................... loadThis 
    0028: [2] b3 b4 0c b4 09 ............. putObjName <_beforeFilters> <[ejs.web::Controller,private]> 
    0033: [0] 33 12 9e e3 01 fa 40 ....... debug 

    # ejs.es:14543                          _beforeFilters.append([fn, options])

    0040: [0] 57 ......................... loadThis 
    0041: [1] 7b b4 0c b4 09 ............. getObjName <_beforeFilters> <[ejs.web::Controller,private]> 
    0046: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0048: [2] 89 ......................... new 
    0049: [2] 39 ......................... dup 
    0050: [3] 5b ......................... getLocalSlot0 
    0051: [4] c5 ......................... swap 
    0052: [4] 56 ba 11 ................... loadString <> 
    0055: [5] 44 ......................... load0 
    0056: [6] b2 ......................... putObjNameExpr 
    0057: [2] 39 ......................... dup 
    0058: [3] 5c ......................... getLocalSlot1 
    0059: [4] c5 ......................... swap 
    0060: [4] 56 ba 11 ................... loadString <> 
    0063: [5] 45 ......................... load1 
    0064: [6] b2 ......................... putObjNameExpr 
    0065: [2] 1e dc 41 c4 08 02 .......... callObjName <append> <public> <argc: 1> 
    0071: [0] 54 ......................... loadNull 
    0072: [1] bf ......................... returnValue 
    0073: [0] 33 12 a0 e3 01 b0 15 ....... debug 

    # ejs.es:14544                      }
    
VARIABLE:   [fn-00]  private var fn
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Controller-35]  ejs.web const function afterFilter(fn, options: Object) : Void

     ARG:   [arg-00]   private fn
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 12 a8 e3 01 9e 43 ....... debug 

    # ejs.es:14548                          _afterFilters ||= []

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b b8 0b b4 09 ............. getObjName <_afterFilters> <[ejs.web::Controller,private]> 
    0020: [1] 39 ......................... dup 
    0021: [2] 14 04 ...................... branchTrue8 <addr: 27> 
    0023: [1] 90 ......................... pop 
    0024: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0026: [1] 89 ......................... new 
    0027: [1] 57 ......................... loadThis 
    0028: [2] b3 b8 0b b4 09 ............. putObjName <_afterFilters> <[ejs.web::Controller,private]> 
    0033: [0] 33 12 aa e3 01 e0 43 ....... debug 

    # ejs.es:14549                          _afterFilters.append([fn, options])

    0040: [0] 57 ......................... loadThis 
    0041: [1] 7b b8 0b b4 09 ............. getObjName <_afterFilters> <[ejs.web::Controller,private]> 
    0046: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0048: [2] 89 ......................... new 
    0049: [2] 39 ......................... dup 
    0050: [3] 5b ......................... getLocalSlot0 
    0051: [4] c5 ......................... swap 
    0052: [4] 56 ba 11 ................... loadString <> 
    0055: [5] 44 ......................... load0 
    0056: [6] b2 ......................... putObjNameExpr 
    0057: [2] 39 ......................... dup 
    0058: [3] 5c ......................... getLocalSlot1 
    0059: [4] c5 ......................... swap 
    0060: [4] 56 ba 11 ................... loadString <> 
    0063: [5] 45 ......................... load1 
    0064: [6] b2 ......................... putObjNameExpr 
    0065: [2] 1e dc 41 c4 08 02 .......... callObjName <append> <public> <argc: 1> 
    0071: [0] 54 ......................... loadNull 
    0072: [1] bf ......................... returnValue 
    0073: [0] 33 12 ac e3 01 b0 15 ....... debug 

    # ejs.es:14550                      }
    
VARIABLE:   [fn-00]  private var fn
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Controller-36]  ejs.web const function wrapFilter(fn, options: Object) : Void

     ARG:   [arg-00]   private fn
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 12 b4 e3 01 da 45 ....... debug 

    # ejs.es:14554                          _wrapFilters ||= []

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b a2 0d b4 09 ............. getObjName <_wrapFilters> <[ejs.web::Controller,private]> 
    0020: [1] 39 ......................... dup 
    0021: [2] 14 04 ...................... branchTrue8 <addr: 27> 
    0023: [1] 90 ......................... pop 
    0024: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0026: [1] 89 ......................... new 
    0027: [1] 57 ......................... loadThis 
    0028: [2] b3 a2 0d b4 09 ............. putObjName <_wrapFilters> <[ejs.web::Controller,private]> 
    0033: [0] 33 12 b6 e3 01 9a 46 ....... debug 

    # ejs.es:14555                          _wrapFilters.append([fn, options])

    0040: [0] 57 ......................... loadThis 
    0041: [1] 7b a2 0d b4 09 ............. getObjName <_wrapFilters> <[ejs.web::Controller,private]> 
    0046: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0048: [2] 89 ......................... new 
    0049: [2] 39 ......................... dup 
    0050: [3] 5b ......................... getLocalSlot0 
    0051: [4] c5 ......................... swap 
    0052: [4] 56 ba 11 ................... loadString <> 
    0055: [5] 44 ......................... load0 
    0056: [6] b2 ......................... putObjNameExpr 
    0057: [2] 39 ......................... dup 
    0058: [3] 5c ......................... getLocalSlot1 
    0059: [4] c5 ......................... swap 
    0060: [4] 56 ba 11 ................... loadString <> 
    0063: [5] 45 ......................... load1 
    0064: [6] b2 ......................... putObjNameExpr 
    0065: [2] 1e dc 41 c4 08 02 .......... callObjName <append> <public> <argc: 1> 
    0071: [0] 54 ......................... loadNull 
    0072: [1] bf ......................... returnValue 
    0073: [0] 33 12 b8 e3 01 b0 15 ....... debug 

    # ejs.es:14556                      }
    
VARIABLE:   [fn-00]  private var fn
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [Controller-37]  [ejs.web::Controller,private] const function runFilters(filters: Array) : Void

     ARG:   [arg-00]   private filters : Array
   LOCAL:   [local-01] var filter
   LOCAL:   [local-02] var fn
   LOCAL:   [local-03] var options

    0000: [0] 33 12 c4 e3 01 86 48 ....... debug 

    # ejs.es:14562                          for each (filter in filters) {

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0014: [0] 93 ......................... pushResult 
    0015: [1] 39 ......................... dup 
    0016: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0019: [1] 93 ......................... pushResult 
    0020: [2] 95 ......................... putLocalSlot1 
    0021: [1] 33 12 c6 e3 01 ea 48 ....... debug 

    # ejs.es:14563                              let fn = filter[0]

    0028: [1] 5c ......................... getLocalSlot1 
    0029: [2] 56 ba 11 ................... loadString <> 
    0032: [3] 44 ......................... load0 
    0033: [4] 7c ......................... getObjNameExpr 
    0034: [2] 96 ......................... putLocalSlot2 
    0035: [1] 33 12 c8 e3 01 b0 49 ....... debug 

    # ejs.es:14564                              let options = filter[1]

    0042: [1] 5c ......................... getLocalSlot1 
    0043: [2] 56 ba 11 ................... loadString <> 
    0046: [3] 45 ......................... load1 
    0047: [4] 7c ......................... getObjNameExpr 
    0048: [2] 97 ......................... putLocalSlot3 
    0049: [1] 33 12 ca e3 01 80 4a ....... debug 

    # ejs.es:14565                              if (options) {

    0056: [1] 5e ......................... getLocalSlot3 
    0057: [2] 07 a0 04 f7 f7 ............. branchFalse <addr: 334> 
    0062: [1] 33 12 cc e3 01 be 4a ....... debug 

    # ejs.es:14566                                  only = options.only

    0069: [1] 5e ......................... getLocalSlot3 
    0070: [2] 7b 8e 4b 00 ................ getObjName <only> <> 
    0074: [2] b4 8e 4b ba 11 ............. putScopedName <only> <> 
    0079: [1] 33 12 ce e3 01 98 4b ....... debug 

    # ejs.es:14567                                  if (only) {

    0086: [1] 79 8e 4b ba 11 ............. getScopedName <only> <> 
    0091: [2] 13 65 ...................... branchFalse8 <addr: 194> 
    0093: [1] 33 12 d0 e3 01 d8 4b ....... debug 

    # ejs.es:14568                                      if (only is String && actionName != only) {

    0100: [1] 79 8e 4b ba 11 ............. getScopedName <only> <> 
    0105: [2] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0108: [3] 43 ......................... isA 
    0109: [2] 39 ......................... dup 
    0110: [3] 13 0c ...................... branchFalse8 <addr: 124> 
    0112: [2] 90 ......................... pop 
    0113: [1] 57 ......................... loadThis 
    0114: [2] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0118: [2] 79 8e 4b ba 11 ............. getScopedName <only> <> 
    0123: [3] 2c ......................... compareNe 
    0124: [2] 13 0e ...................... branchFalse8 <addr: 140> 
    0126: [1] 33 12 d2 e3 01 e0 4c ....... debug 

    # ejs.es:14569                                          continue

    0133: [1] 3d f7 01 f7 f7 ............. goto <addr: 15> 
    0138: [1] 3e 00 ...................... goto8 <addr: 140> 
    0140: [1] 33 12 d6 e3 01 aa 4d ....... debug 

    # ejs.es:14571                                      if (only is Array && !only.contains(actionName)) {

    0147: [1] 79 8e 4b ba 11 ............. getScopedName <only> <> 
    0152: [2] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0154: [3] 43 ......................... isA 
    0155: [2] 39 ......................... dup 
    0156: [3] 13 12 ...................... branchFalse8 <addr: 176> 
    0158: [2] 90 ......................... pop 
    0159: [1] 79 8e 4b ba 11 ............. getScopedName <only> <> 
    0164: [2] 57 ......................... loadThis 
    0165: [3] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0169: [3] 1e c0 4e 00 02 ............. callObjName <contains> <> <argc: 1> 
    0174: [1] 93 ......................... pushResult 
    0175: [2] 86 ......................... logicalNot 
    0176: [2] 13 0e ...................... branchFalse8 <addr: 192> 
    0178: [1] 33 12 d8 e3 01 e0 4c ....... debug 

    # ejs.es:14572                                          continue

    0185: [1] 3d df 02 f7 f7 ............. goto <addr: 15> 
    0190: [1] 3e 00 ...................... goto8 <addr: 192> 
    0192: [1] 3e 00 ...................... goto8 <addr: 194> 
    0194: [1] 33 12 dc e3 01 d2 4e ....... debug 

    # ejs.es:14574                                  } 

    0201: [1] 33 12 de e3 01 80 4f ....... debug 

    # ejs.es:14575                                  except = options.except

    0208: [1] 5e ......................... getLocalSlot3 
    0209: [2] 7b d8 4f 00 ................ getObjName <except> <> 
    0213: [2] b4 d8 4f ba 11 ............. putScopedName <except> <> 
    0218: [1] 33 12 e0 e3 01 e6 4f ....... debug 

    # ejs.es:14576                                  if (except) {

    0225: [1] 79 d8 4f ba 11 ............. getScopedName <except> <> 
    0230: [2] 13 64 ...................... branchFalse8 <addr: 332> 
    0232: [1] 33 12 e2 e3 01 aa 50 ....... debug 

    # ejs.es:14577                                      if (except is String && actionName == except) {

    0239: [1] 79 d8 4f ba 11 ............. getScopedName <except> <> 
    0244: [2] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0247: [3] 43 ......................... isA 
    0248: [2] 39 ......................... dup 
    0249: [3] 13 0c ...................... branchFalse8 <addr: 263> 
    0251: [2] 90 ......................... pop 
    0252: [1] 57 ......................... loadThis 
    0253: [2] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0257: [2] 79 d8 4f ba 11 ............. getScopedName <except> <> 
    0262: [3] 25 ......................... compareEq 
    0263: [2] 13 0e ...................... branchFalse8 <addr: 279> 
    0265: [1] 33 12 e4 e3 01 e0 4c ....... debug 

    # ejs.es:14578                                          continue

    0272: [1] 3d 8d 04 f7 f7 ............. goto <addr: 15> 
    0277: [1] 3e 00 ...................... goto8 <addr: 279> 
    0279: [1] 33 12 e8 e3 01 ba 51 ....... debug 

    # ejs.es:14580                                      if (except is Array && except.contains(actionName)) {

    0286: [1] 79 d8 4f ba 11 ............. getScopedName <except> <> 
    0291: [2] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0293: [3] 43 ......................... isA 
    0294: [2] 39 ......................... dup 
    0295: [3] 13 11 ...................... branchFalse8 <addr: 314> 
    0297: [2] 90 ......................... pop 
    0298: [1] 79 d8 4f ba 11 ............. getScopedName <except> <> 
    0303: [2] 57 ......................... loadThis 
    0304: [3] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0308: [3] 1e c0 4e 00 02 ............. callObjName <contains> <> <argc: 1> 
    0313: [1] 93 ......................... pushResult 
    0314: [2] 13 0e ...................... branchFalse8 <addr: 330> 
    0316: [1] 33 12 ea e3 01 e0 4c ....... debug 

    # ejs.es:14581                                          continue

    0323: [1] 3d f3 04 f7 f7 ............. goto <addr: 15> 
    0328: [1] 3e 00 ...................... goto8 <addr: 330> 
    0330: [1] 3e 00 ...................... goto8 <addr: 332> 
    0332: [1] 3e 00 ...................... goto8 <addr: 334> 
    0334: [1] 33 12 f0 e3 01 86 35 ....... debug 

    # ejs.es:14584                              }

    0341: [1] 33 12 f2 e3 01 d6 52 ....... debug 

    # ejs.es:14585                              fn.call(this)

    0348: [1] 5d ......................... getLocalSlot2 
    0349: [2] 57 ......................... loadThis 
    0350: [3] 1e 92 53 00 02 ............. callObjName <call> <> <argc: 1> 
    0355: [1] 3d b3 05 f7 f7 ............. goto <addr: 15> 
    0360: [1] 90 ......................... pop 
    0361: [0] 54 ......................... loadNull 
    0362: [1] bf ......................... returnValue 
    0363: [0] 33 12 f6 e3 01 b0 15 ....... debug 

    # ejs.es:14587                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     16      19        360          360       StopIteration

VARIABLE:   [filters-00]  private var filters : Array
VARIABLE:   [filter-01]  -hoisted-1 var filter
VARIABLE:   [fn-02]  -hoisted-1 var fn
VARIABLE:   [options-03]  -hoisted-1 var options

FUNCTION:   [Controller-38]  ejs.web const function loadView(path: Path, name: String) : void

     ARG:   [arg-00]   private path : Path
     ARG:   [arg-01]   private name : String
   LOCAL:   [local-02] var cached
   LOCAL:   [local-03] var layout
   LOCAL:   [local-04] var code

    0000: [0] 33 12 82 e4 01 a6 54 ....... debug 

    # ejs.es:14593                          let cached = Loader.cached(path, request.dir.join(request.config.directories.cache))

    0007: [0] 7e 94 02 ................... getGlobalSlot <slot: 138> 
    0010: [1] 5b ......................... getLocalSlot0 
    0011: [2] 57 ......................... loadThis 
    0012: [3] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0016: [3] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0021: [3] 57 ......................... loadThis 
    0022: [4] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0026: [4] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0031: [4] 7b e8 55 00 ................ getObjName <directories> <> 
    0035: [4] 7b 80 56 00 ................ getObjName <cache> <> 
    0039: [4] 1e f6 25 00 02 ............. callObjName <join> <> <argc: 1> 
    0044: [2] 93 ......................... pushResult 
    0045: [3] 1e 98 54 c4 08 04 .......... callObjName <cached> <public> <argc: 2> 
    0051: [0] 93 ......................... pushResult 
    0052: [1] 96 ......................... putLocalSlot2 
    0053: [0] 33 12 84 e4 01 8c 56 ....... debug 

    # ejs.es:14594                          if (cached && cached.exists && cached.modified >= path.modified) {

    0060: [0] 5d ......................... getLocalSlot2 
    0061: [1] 39 ......................... dup 
    0062: [2] 13 06 ...................... branchFalse8 <addr: 70> 
    0064: [1] 90 ......................... pop 
    0065: [0] 5d ......................... getLocalSlot2 
    0066: [1] 7b aa 57 00 ................ getObjName <exists> <> 
    0070: [1] 39 ......................... dup 
    0071: [2] 13 0d ...................... branchFalse8 <addr: 86> 
    0073: [1] 90 ......................... pop 
    0074: [0] 5d ......................... getLocalSlot2 
    0075: [1] 7b b8 57 00 ................ getObjName <modified> <> 
    0079: [1] 5b ......................... getLocalSlot0 
    0080: [2] 7b b8 57 c4 08 ............. getObjName <modified> <public> 
    0085: [2] 28 ......................... compareGe 
    0086: [1] 13 11 ...................... branchFalse8 <addr: 105> 
    0088: [0] 33 12 86 e4 01 ca 57 ....... debug 

    # ejs.es:14595                              load(cached)

    0095: [0] 5d ......................... getLocalSlot2 
    0096: [1] 17 a8 01 02 ................ callGlobalSlot <slot: 84> <argc: 1> 
    0100: [0] 3d fe 01 f7 f7 ............. goto <addr: 232> 
    0105: [0] 33 12 88 e4 01 b4 33 ....... debug 

    # ejs.es:14596                          } else {

    0112: [0] 33 12 8a e4 01 84 58 ....... debug 

    # ejs.es:14597                              if (!global.TemplateParser) {

    0119: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0121: [1] 7b e0 58 ba 11 ............. getObjName <TemplateParser> <> 
    0126: [1] 86 ......................... logicalNot 
    0127: [1] 13 10 ...................... branchFalse8 <addr: 145> 
    0129: [0] 33 12 8c e4 01 fe 58 ....... debug 

    # ejs.es:14598                                  load("ejs.web.template.mod")

    0136: [0] 56 e0 59 ................... loadString <ejs.web.template.mod> 
    0139: [1] 17 a8 01 02 ................ callGlobalSlot <slot: 84> <argc: 1> 
    0143: [0] 3e 00 ...................... goto8 <addr: 145> 
    0145: [0] 33 12 8e e4 01 86 35 ....... debug 

    # ejs.es:14599                              }

    0152: [0] 33 12 92 e4 01 ae 5a ....... debug 

    # ejs.es:14601                              let layout = request.dir.join("views/layouts/default.ejs")

    0159: [0] 57 ......................... loadThis 
    0160: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0164: [1] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0169: [1] 56 c4 5b ................... loadString <views/layouts/default.ejs> 
    0172: [2] 1e f6 25 00 02 ............. callObjName <join> <> <argc: 1> 
    0177: [0] 93 ......................... pushResult 
    0178: [1] 97 ......................... putLocalSlot3 
    0179: [0] 33 12 94 e4 01 f8 5b ....... debug 

    # ejs.es:14602                              let code = TemplateParser().buildView(name, path.readString(), { layout: layout })

    0186: [0] 17 ee 02 00 ................ callGlobalSlot <slot: 183> <argc: 0> 
    0190: [0] 93 ......................... pushResult 
    0191: [1] 5c ......................... getLocalSlot1 
    0192: [2] 5b ......................... getLocalSlot0 
    0193: [3] 1e c8 5d c4 08 00 .......... callObjName <readString> <public> <argc: 0> 
    0199: [2] 93 ......................... pushResult 
    0200: [3] 56 00 ...................... loadString <> 
    0202: [4] 56 8a 5a ................... loadString <layout> 
    0205: [5] 5e ......................... getLocalSlot3 
    0206: [6] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0211: [4] 1e de 5d c4 08 06 .......... callObjName <buildView> <public> <argc: 3> 
    0217: [0] 93 ......................... pushResult 
    0218: [1] 98 ......................... putLocalSlot4 
    0219: [0] 33 12 96 e4 01 f2 5d ....... debug 

    # ejs.es:14603                              eval(code, cached)

    0226: [0] 5f ......................... getLocalSlot4 
    0227: [1] 5d ......................... getLocalSlot2 
    0228: [2] 17 9e 01 04 ................ callGlobalSlot <slot: 79> <argc: 2> 
    0232: [0] be ......................... return 
    0233: [0] 33 12 9a e4 01 b0 15 ....... debug 

    # ejs.es:14605                      }
    
VARIABLE:   [path-00]  private var path : Path
VARIABLE:   [name-01]  private var name : String
VARIABLE:   [cached-02]  private var cached
VARIABLE:   [layout-03]  -hoisted-3 var layout
VARIABLE:   [code-04]  -hoisted-3 var code

FUNCTION:   [Controller-39]  ejs.web const function renderError(msg: String, status: Number) : Void

     ARG:   [arg-00]   private msg : String
     ARG:   [arg-01]   private status : Number

    0000: [0] 41 03 03 07 10 ............. initDefaultArgs8 <3> <5> <9> <18> 
    0005: [0] 56 ba 11 ................... loadString <> 
    0008: [1] 94 ......................... putLocalSlot0 
    0009: [0] 7e bc 01 ................... getGlobalSlot <slot: 94> 
    0012: [1] 7b 92 60 c4 08 ............. getObjName <ServerError> <public> 
    0017: [1] 95 ......................... putLocalSlot1 
    0018: [0] 33 12 a6 e4 01 aa 60 ....... debug 

    # ejs.es:14611                          request.writeError(msg, status)

    0025: [0] 57 ......................... loadThis 
    0026: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0030: [1] 5b ......................... getLocalSlot0 
    0031: [2] 5c ......................... getLocalSlot1 
    0032: [3] 1e 82 61 c4 08 04 .......... callObjName <writeError> <public> <argc: 2> 
    0038: [0] 33 12 a8 e4 01 98 61 ....... debug 

    # ejs.es:14612                          rendered = true

    0045: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0048: [1] 57 ......................... loadThis 
    0049: [2] b3 a2 09 b4 09 ............. putObjName <rendered> <[ejs.web::Controller,private]> 
    0054: [0] 54 ......................... loadNull 
    0055: [1] bf ......................... returnValue 
    0056: [0] 33 12 aa e4 01 b0 15 ....... debug 

    # ejs.es:14613                      }
    
VARIABLE:   [msg-00]  private var msg : String
VARIABLE:   [status-01]  private var status : Number

FUNCTION:   [Controller-40]  ejs.web const function redirect(uri: Uri, status: Number) : Void

     ARG:   [arg-00]   private uri : Uri
     ARG:   [arg-01]   private status : Number

    0000: [0] 41 02 02 0b ................ initDefaultArgs8 <2> <4> <13> 
    0004: [0] 7e bc 01 ................... getGlobalSlot <slot: 94> 
    0007: [1] 7b b4 63 c4 08 ............. getObjName <MovedTemporarily> <public> 
    0012: [1] 95 ......................... putLocalSlot1 
    0013: [0] 33 12 ba e4 01 d6 63 ....... debug 

    # ejs.es:14621                          request.redirect(uri, status)

    0020: [0] 57 ......................... loadThis 
    0021: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0025: [1] 5b ......................... getLocalSlot0 
    0026: [2] 5c ......................... getLocalSlot1 
    0027: [3] 1e aa 64 c4 08 04 .......... callObjName <redirect> <public> <argc: 2> 
    0033: [0] 33 12 bc e4 01 bc 64 ....... debug 

    # ejs.es:14622                          redirected = true

    0040: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0043: [1] 57 ......................... loadThis 
    0044: [2] b3 d0 0a b4 09 ............. putObjName <redirected> <[ejs.web::Controller,private]> 
    0049: [0] 54 ......................... loadNull 
    0050: [1] bf ......................... returnValue 
    0051: [0] 33 12 be e4 01 b0 15 ....... debug 

    # ejs.es:14623                      }
    
VARIABLE:   [uri-00]  private var uri : Uri
VARIABLE:   [status-01]  private var status : Number

FUNCTION:   [Controller-41]  ejs.web const function render(args: Array) : Void

     ARG:   [arg-00]   private args : Array

    0000: [0] 33 12 ca e4 01 98 61 ....... debug 

    # ejs.es:14629                          rendered = true

    0007: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] b3 a2 09 b4 09 ............. putObjName <rendered> <[ejs.web::Controller,private]> 
    0016: [0] 33 12 cc e4 01 dc 65 ....... debug 

    # ejs.es:14630                          request.write(args)

    0023: [0] 57 ......................... loadThis 
    0024: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0028: [1] 5b ......................... getLocalSlot0 
    0029: [2] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0035: [0] 54 ......................... loadNull 
    0036: [1] bf ......................... returnValue 
    0037: [0] 33 12 ce e4 01 b0 15 ....... debug 

    # ejs.es:14631                      }
    
VARIABLE:   [args-00]  private var args : Array

FUNCTION:   [Controller-42]  ejs.web const function renderFile(filename: String) : Void

     ARG:   [arg-00]   private filename : String
   LOCAL:   [local-01] var file : File
   LOCAL:   [local-02] var e : Error

    0000: [0] 33 12 da e4 01 98 61 ....... debug 

    # ejs.es:14637                          rendered = true

    0007: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] b3 a2 09 b4 09 ............. putObjName <rendered> <[ejs.web::Controller,private]> 
    0016: [0] 33 12 dc e4 01 ae 67 ....... debug 

    # ejs.es:14638                          let file: File = new File(filename)

    0023: [0] 7e 48 ...................... getGlobalSlot <slot: 36> 
    0025: [1] 89 ......................... new 
    0026: [1] 5b ......................... getLocalSlot0 
    0027: [2] 20 02 ...................... callConstructor <argc: 1> 
    0029: [1] 95 ......................... putLocalSlot1 
    0030: [0] 33 12 de e4 01 98 68 ....... debug 

    # ejs.es:14639                          try {

    0037: [0] 33 12 e0 e4 01 bc 68 ....... debug 

    # ejs.es:14640                              file.open()

    0044: [0] 5c ......................... getLocalSlot1 
    0045: [1] 1e f4 68 c4 08 00 .......... callObjName <open> <public> <argc: 0> 
    0051: [0] 33 12 e2 e4 01 fe 68 ....... debug 

    # ejs.es:14641                              while (data = file.read(4096)) {

    0058: [0] 5c ......................... getLocalSlot1 
    0059: [1] 51 80 40 ................... loadInt <4096> 
    0062: [2] 1e e0 69 c4 08 02 .......... callObjName <read> <public> <argc: 1> 
    0068: [0] 93 ......................... pushResult 
    0069: [1] 39 ......................... dup 
    0070: [2] b4 ea 69 ba 11 ............. putScopedName <data> <> 
    0075: [1] 13 19 ...................... branchFalse8 <addr: 102> 
    0077: [0] 33 12 e4 e4 01 f4 69 ....... debug 

    # ejs.es:14642                                  request.write(data)

    0084: [0] 57 ......................... loadThis 
    0085: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0089: [1] 79 ea 69 ba 11 ............. getScopedName <data> <> 
    0094: [2] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0100: [0] 3e d4 ...................... goto8 <addr: 58> 
    0102: [0] 33 12 e6 e4 01 86 35 ....... debug 

    # ejs.es:14643                              }

    0109: [0] 33 12 e8 e4 01 c4 6a ....... debug 

    # ejs.es:14644                              file.close()

    0116: [0] 5c ......................... getLocalSlot1 
    0117: [1] 1e fe 6a c4 08 00 .......... callObjName <close> <public> <argc: 0> 
    0123: [0] 3e 2b ...................... goto8 <addr: 168> 
    0125: [0] 33 12 ea e4 01 8a 6b ....... debug 

    # ejs.es:14645                          } catch (e: Error) {

    0132: [0] 92 ......................... pushCatchArg 
    0133: [1] b6 04 02 ................... putBlockSlot <slot: 2> <1> 
    0136: [0] 33 12 ec e4 01 e6 6b ....... debug 

    # ejs.es:14646                              reportError(Http.ServerError, "Can't read file: " + filename, e)

    0143: [0] 7e bc 01 ................... getGlobalSlot <slot: 94> 
    0146: [1] 7b 92 60 c4 08 ............. getObjName <ServerError> <public> 
    0151: [1] 56 88 6d ................... loadString <Can't read file: > 
    0154: [2] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0157: [3] 00 ......................... add 
    0158: [2] 7d 04 02 ................... getBlockSlot <slot: 2> <1> 
    0161: [3] 1f ac 6d ba 11 06 .......... callScopedName <reportError> <> <argc: 3> 
    0167: [0] 3c ......................... endException 
    0168: [0] 54 ......................... loadNull 
    0169: [1] bf ......................... returnValue 
    0170: [0] 33 12 f0 e4 01 b0 15 ....... debug 

    # ejs.es:14648                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch         30     125        125          168       Error

VARIABLE:   [filename-00]  private var filename : String
VARIABLE:   [file-01]  private var file : File
VARIABLE:   [e-02]  -hoisted-2 var e : Error

FUNCTION:   [Controller-43]  ejs.web const function renderPartial(path: Path) : Void

     ARG:   [arg-00]   private path : Path
   LOCAL:   [local-01] var name
   LOCAL:   [local-02] var viewClass : String
   LOCAL:   [local-03] var path
   LOCAL:   [local-04] var name
   LOCAL:   [local-05] var n : String

    0000: [0] 33 12 fe e4 01 ea 6e ....... debug 

    # ejs.es:14655                          let name = path.replace("/", "_") + "View"

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 56 d8 6f ................... loadString </> 
    0011: [2] 56 dc 6f ................... loadString <_> 
    0014: [3] 1e e0 6f ba 11 04 .......... callObjName <replace> <> <argc: 2> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] 56 e0 07 ................... loadString <View> 
    0024: [2] 00 ......................... add 
    0025: [1] 95 ......................... putLocalSlot1 
    0026: [0] 33 12 80 e5 01 f0 6f ....... debug 

    # ejs.es:14656                          let viewClass: String = name.toPascal()

    0033: [0] 5c ......................... getLocalSlot1 
    0034: [1] 1e 90 1c 00 00 ............. callObjName <toPascal> <> <argc: 0> 
    0039: [0] 93 ......................... pushResult 
    0040: [1] 96 ......................... putLocalSlot2 
    0041: [0] 33 12 82 e5 01 ec 70 ....... debug 

    # ejs.es:14657                          if (!global[viewClass]) {

    0048: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0050: [1] 56 ba 11 ................... loadString <> 
    0053: [2] 5d ......................... getLocalSlot2 
    0054: [3] 7c ......................... getObjNameExpr 
    0055: [1] 86 ......................... logicalNot 
    0056: [1] 13 50 ...................... branchFalse8 <addr: 138> 
    0058: [0] 33 12 86 e5 01 b8 71 ....... debug 

    # ejs.es:14659                              let path = request.dir.join("views", controllerName, actionName + ".ejs")

    0065: [0] 57 ......................... loadThis 
    0066: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0070: [1] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0075: [1] 56 ec 72 ................... loadString <views> 
    0078: [2] 57 ......................... loadThis 
    0079: [3] 7b b4 04 7c ................ getObjName <controllerName> <ejs.web> 
    0083: [3] 57 ......................... loadThis 
    0084: [4] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0088: [4] 56 f8 72 ................... loadString <.ejs> 
    0091: [5] 00 ......................... add 
    0092: [4] 1e f6 25 00 06 ............. callObjName <join> <> <argc: 3> 
    0097: [0] 93 ......................... pushResult 
    0098: [1] 97 ......................... putLocalSlot3 
    0099: [0] 33 12 88 e5 01 82 73 ....... debug 

    # ejs.es:14660                              let name = controllerName + "_" + actionName

    0106: [0] 57 ......................... loadThis 
    0107: [1] 7b b4 04 7c ................ getObjName <controllerName> <ejs.web> 
    0111: [1] 56 dc 6f ................... loadString <_> 
    0114: [2] 00 ......................... add 
    0115: [1] 57 ......................... loadThis 
    0116: [2] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0120: [2] 00 ......................... add 
    0121: [1] 98 ......................... putLocalSlot4 
    0122: [0] 33 12 8a e5 01 fc 73 ....... debug 

    # ejs.es:14661                              loadView(path, name)

    0129: [0] 5e ......................... getLocalSlot3 
    0130: [1] 5f ......................... getLocalSlot4 
    0131: [2] 1f b8 5e 7c 04 ............. callScopedName <loadView> <ejs.web> <argc: 2> 
    0136: [0] 3e 00 ...................... goto8 <addr: 138> 
    0138: [0] 33 12 8c e5 01 b2 1a ....... debug 

    # ejs.es:14662                          }

    0145: [0] 33 12 8e e5 01 c6 74 ....... debug 

    # ejs.es:14663                          view = new global[viewClass](request)

    0152: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0154: [1] 56 ba 11 ................... loadString <> 
    0157: [2] 5d ......................... getLocalSlot2 
    0158: [3] 7c ......................... getObjNameExpr 
    0159: [1] 89 ......................... new 
    0160: [1] 57 ......................... loadThis 
    0161: [2] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0165: [2] 20 02 ...................... callConstructor <argc: 1> 
    0167: [1] 57 ......................... loadThis 
    0168: [2] b3 d6 07 7c ................ putObjName <view> <ejs.web> 
    0172: [0] 33 12 90 e5 01 aa 75 ....... debug 

    # ejs.es:14664                          for (let n: String in this) {

    0179: [0] 57 ......................... loadThis 
    0180: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0186: [0] 93 ......................... pushResult 
    0187: [1] 39 ......................... dup 
    0188: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0191: [1] 93 ......................... pushResult 
    0192: [2] 99 ......................... putLocalSlot5 
    0193: [1] 33 12 92 e5 01 98 76 ....... debug 

    # ejs.es:14665                              view.public::[n] = this[n]

    0200: [1] 57 ......................... loadThis 
    0201: [2] 56 ba 11 ................... loadString <> 
    0204: [3] 60 ......................... getLocalSlot5 
    0205: [4] 7c ......................... getObjNameExpr 
    0206: [2] 57 ......................... loadThis 
    0207: [3] 7b d6 07 7c ................ getObjName <view> <ejs.web> 
    0211: [3] 79 c4 08 ba 11 ............. getScopedName <public> <> 
    0216: [4] 60 ......................... getLocalSlot5 
    0217: [5] b2 ......................... putObjNameExpr 
    0218: [1] 3e df ...................... goto8 <addr: 187> 
    0220: [1] 90 ......................... pop 
    0221: [0] 33 12 94 e5 01 b2 1a ....... debug 

    # ejs.es:14666                          }

    0228: [0] 33 12 98 e5 01 ee 76 ....... debug 

    # ejs.es:14668                          view.render(request)

    0235: [0] 57 ......................... loadThis 
    0236: [1] 7b d6 07 7c ................ getObjName <view> <ejs.web> 
    0240: [1] 57 ......................... loadThis 
    0241: [2] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0245: [2] 1e a8 66 c4 08 02 .......... callObjName <render> <public> <argc: 1> 
    0251: [0] 54 ......................... loadNull 
    0252: [1] bf ......................... returnValue 
    0253: [0] 33 12 9a e5 01 b0 15 ....... debug 

    # ejs.es:14669                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    188     191        220          220       StopIteration

VARIABLE:   [path-00]  private var path : Path
VARIABLE:   [name-01]  private var name
VARIABLE:   [viewClass-02]  private var viewClass : String
VARIABLE:   [path-03]  -hoisted-3 var path
VARIABLE:   [name-04]  -hoisted-3 var name
VARIABLE:   [n-05]  -hoisted-5 var n : String

FUNCTION:   [Controller-44]  ejs.web const function renderView(viewName: String) : Void

     ARG:   [arg-00]   private viewName : String
   LOCAL:   [local-01] var path
   LOCAL:   [local-02] var viewClass : String
   LOCAL:   [local-03] var n : String

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 12 a6 e5 01 c8 78 ....... debug 

    # ejs.es:14675                          if (rendered) {

    0014: [0] 57 ......................... loadThis 
    0015: [1] 7b a2 09 b4 09 ............. getObjName <rendered> <[ejs.web::Controller,private]> 
    0020: [1] 13 1a ...................... branchFalse8 <addr: 48> 
    0022: [0] 33 12 a8 e5 01 80 79 ....... debug 

    # ejs.es:14676                              throw new Error("renderView invoked but render has already been called")

    0029: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0031: [1] 89 ......................... new 
    0032: [1] 56 b2 7a ................... loadString <renderView invoked but render has already been called> 
    0035: [2] 20 02 ...................... callConstructor <argc: 1> 
    0037: [1] c6 ......................... throw 
    0038: [1] 33 12 aa e5 01 9e 7b ....... debug 

    # ejs.es:14677                              return

    0045: [1] be ......................... return 
    0046: [0] 3e 00 ...................... goto8 <addr: 48> 
    0048: [0] 33 12 ac e5 01 b2 1a ....... debug 

    # ejs.es:14678                          }

    0055: [0] 33 12 ae e5 01 98 61 ....... debug 

    # ejs.es:14679                          rendered = true

    0062: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0065: [1] 57 ......................... loadThis 
    0066: [2] b3 a2 09 b4 09 ............. putObjName <rendered> <[ejs.web::Controller,private]> 
    0071: [0] 33 12 b0 e5 01 cc 7b ....... debug 

    # ejs.es:14680                          viewName = controllerName + "_" + (viewName || actionName)

    0078: [0] 57 ......................... loadThis 
    0079: [1] 7b b4 04 7c ................ getObjName <controllerName> <ejs.web> 
    0083: [1] 56 dc 6f ................... loadString <_> 
    0086: [2] 00 ......................... add 
    0087: [1] 5b ......................... getLocalSlot0 
    0088: [2] 39 ......................... dup 
    0089: [3] 14 06 ...................... branchTrue8 <addr: 97> 
    0091: [2] 90 ......................... pop 
    0092: [1] 57 ......................... loadThis 
    0093: [2] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0097: [2] 00 ......................... add 
    0098: [1] 94 ......................... putLocalSlot0 
    0099: [0] 33 12 b2 e5 01 da 7c ....... debug 

    # ejs.es:14681                          let path = request.dir.join("views", controllerName, actionName).joinExt(request.config.extensions.ejs)

    0106: [0] 57 ......................... loadThis 
    0107: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0111: [1] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0116: [1] 56 ec 72 ................... loadString <views> 
    0119: [2] 57 ......................... loadThis 
    0120: [3] 7b b4 04 7c ................ getObjName <controllerName> <ejs.web> 
    0124: [3] 57 ......................... loadThis 
    0125: [4] 7b 88 03 7c ................ getObjName <actionName> <ejs.web> 
    0129: [4] 1e f6 25 00 06 ............. callObjName <join> <> <argc: 3> 
    0134: [0] 93 ......................... pushResult 
    0135: [1] 57 ......................... loadThis 
    0136: [2] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0140: [2] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0145: [2] 7b c2 7e 00 ................ getObjName <extensions> <> 
    0149: [2] 7b ee 1d 00 ................ getObjName <ejs> <> 
    0153: [2] 1e d8 7e 00 02 ............. callObjName <joinExt> <> <argc: 1> 
    0158: [0] 93 ......................... pushResult 
    0159: [1] 95 ......................... putLocalSlot1 
    0160: [0] 33 12 b4 e5 01 e8 7e ....... debug 

    # ejs.es:14682                          loadView(path, viewName)

    0167: [0] 5c ......................... getLocalSlot1 
    0168: [1] 5b ......................... getLocalSlot0 
    0169: [2] 1f b8 5e 7c 04 ............. callScopedName <loadView> <ejs.web> <argc: 2> 
    0174: [0] 33 12 b6 e5 01 b2 7f ....... debug 

    # ejs.es:14683                          let viewClass: String = viewName + "View"

    0181: [0] 5b ......................... getLocalSlot0 
    0182: [1] 56 e0 07 ................... loadString <View> 
    0185: [2] 00 ......................... add 
    0186: [1] 96 ......................... putLocalSlot2 
    0187: [0] 33 12 b8 e5 01 ec 70 ....... debug 

    # ejs.es:14684                          if (!global[viewClass]) {

    0194: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0196: [1] 56 ba 11 ................... loadString <> 
    0199: [2] 5d ......................... getLocalSlot2 
    0200: [3] 7c ......................... getObjNameExpr 
    0201: [1] 86 ......................... logicalNot 
    0202: [1] 13 11 ...................... branchFalse8 <addr: 221> 
    0204: [0] 33 12 ba e5 01 9e 80 01 .... debug 

    # ejs.es:14685                              loadView(path, viewName)

    0212: [0] 5c ......................... getLocalSlot1 
    0213: [1] 5b ......................... getLocalSlot0 
    0214: [2] 1f b8 5e 7c 04 ............. callScopedName <loadView> <ejs.web> <argc: 2> 
    0219: [0] 3e 00 ...................... goto8 <addr: 221> 
    0221: [0] 33 12 bc e5 01 b2 1a ....... debug 

    # ejs.es:14686                          }

    0228: [0] 33 12 be e5 01 c6 74 ....... debug 

    # ejs.es:14687                          view = new global[viewClass](request)

    0235: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0237: [1] 56 ba 11 ................... loadString <> 
    0240: [2] 5d ......................... getLocalSlot2 
    0241: [3] 7c ......................... getObjNameExpr 
    0242: [1] 89 ......................... new 
    0243: [1] 57 ......................... loadThis 
    0244: [2] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0248: [2] 20 02 ...................... callConstructor <argc: 1> 
    0250: [1] 57 ......................... loadThis 
    0251: [2] b3 d6 07 7c ................ putObjName <view> <ejs.web> 
    0255: [0] 33 12 c0 e5 01 aa 75 ....... debug 

    # ejs.es:14688                          for (let n: String in this) {

    0262: [0] 57 ......................... loadThis 
    0263: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0269: [0] 93 ......................... pushResult 
    0270: [1] 39 ......................... dup 
    0271: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0274: [1] 93 ......................... pushResult 
    0275: [2] 97 ......................... putLocalSlot3 
    0276: [1] 33 12 c2 e5 01 98 76 ....... debug 

    # ejs.es:14689                              view.public::[n] = this[n]

    0283: [1] 57 ......................... loadThis 
    0284: [2] 56 ba 11 ................... loadString <> 
    0287: [3] 5e ......................... getLocalSlot3 
    0288: [4] 7c ......................... getObjNameExpr 
    0289: [2] 57 ......................... loadThis 
    0290: [3] 7b d6 07 7c ................ getObjName <view> <ejs.web> 
    0294: [3] 79 c4 08 ba 11 ............. getScopedName <public> <> 
    0299: [4] 5e ......................... getLocalSlot3 
    0300: [5] b2 ......................... putObjNameExpr 
    0301: [1] 3e df ...................... goto8 <addr: 270> 
    0303: [1] 90 ......................... pop 
    0304: [0] 33 12 c4 e5 01 b2 1a ....... debug 

    # ejs.es:14690                          }

    0311: [0] 33 12 c8 e5 01 ee 76 ....... debug 

    # ejs.es:14692                          view.render(request)

    0318: [0] 57 ......................... loadThis 
    0319: [1] 7b d6 07 7c ................ getObjName <view> <ejs.web> 
    0323: [1] 57 ......................... loadThis 
    0324: [2] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0328: [2] 1e a8 66 c4 08 02 .......... callObjName <render> <public> <argc: 1> 
    0334: [0] 54 ......................... loadNull 
    0335: [1] bf ......................... returnValue 
    0336: [0] 33 12 ca e5 01 b0 15 ....... debug 

    # ejs.es:14693                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    271     274        303          303       StopIteration

VARIABLE:   [viewName-00]  private var viewName : String
VARIABLE:   [path-01]  private var path
VARIABLE:   [viewClass-02]  private var viewClass : String
VARIABLE:   [n-03]  -hoisted-3 var n : String

FUNCTION:   [Controller-45]  ejs.web const function error(msg: String) : Void

     ARG:   [arg-00]   private msg : String

    0000: [0] 33 12 d8 e5 01 d6 81 01 .... debug 

    # ejs.es:14700                          flash["error"] = msg

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 39 ......................... dup 
    0010: [2] 57 ......................... loadThis 
    0011: [3] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0016: [3] 56 ba 11 ................... loadString <> 
    0019: [4] 56 98 82 01 ................ loadString <error> 
    0023: [5] b2 ......................... putObjNameExpr 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [msg-00]  private var msg : String

FUNCTION:   [Controller-46]  ejs.web const function inform(msg: String) : Void

     ARG:   [arg-00]   private msg : String

    0000: [0] 33 12 e6 e5 01 fa 82 01 .... debug 

    # ejs.es:14707                          flash["inform"] = msg

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 39 ......................... dup 
    0010: [2] 57 ......................... loadThis 
    0011: [3] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0016: [3] 56 ba 11 ................... loadString <> 
    0019: [4] 56 be 83 01 ................ loadString <inform> 
    0023: [5] b2 ......................... putObjNameExpr 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [msg-00]  private var msg : String

FUNCTION:   [Controller-47]  ejs.web const function warn(msg: String) : Void

     ARG:   [arg-00]   private msg : String

    0000: [0] 33 12 f6 e5 01 9e 84 01 .... debug 

    # ejs.es:14715                          flash["warn"] = msg

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 39 ......................... dup 
    0010: [2] 57 ......................... loadThis 
    0011: [3] 7b b8 08 c4 08 ............. getObjName <flash> <public> 
    0016: [3] 56 ba 11 ................... loadString <> 
    0019: [4] 56 de 84 01 ................ loadString <warn> 
    0023: [5] b2 ......................... putObjNameExpr 
    0024: [1] bf ......................... returnValue 
    
VARIABLE:   [msg-00]  private var msg : String

FUNCTION:   [Controller-48]  ejs.web const function makeUri(parts: Object) : Uri

     ARG:   [arg-00]   private parts : Object

    0000: [0] 33 12 92 e6 01 c2 85 01 .... debug 

    # ejs.es:14729                          request.makeUri(parts)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    0021: [0] 93 ......................... pushResult 
    0022: [1] bf ......................... returnValue 
    
VARIABLE:   [parts-00]  private var parts : Object

FUNCTION:   [Controller-49]  action const function missing() : Void


    0000: [0] 33 12 9e e6 01 98 61 ....... debug 

    # ejs.es:14735                          rendered = true

    0007: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0010: [1] 57 ......................... loadThis 
    0011: [2] b3 a2 09 b4 09 ............. putObjName <rendered> <[ejs.web::Controller,private]> 
    0016: [0] 33 12 a0 e6 01 f8 86 01 .... debug 

    # ejs.es:14736                          throw "Missing Action: \"" + params.action + "\" could not be found for controller \"" + controllerName + "\""

    0024: [0] 56 ee 88 01 ................ loadString <Missing Action: "> 
    0028: [1] 57 ......................... loadThis 
    0029: [2] 7b b2 06 7c ................ getObjName <params> <ejs.web> 
    0033: [2] 7b ee 01 ba 11 ............. getObjName <action> <> 
    0038: [2] 00 ......................... add 
    0039: [1] 56 92 89 01 ................ loadString <" could not be found for controller "> 
    0043: [2] 00 ......................... add 
    0044: [1] 57 ......................... loadThis 
    0045: [2] 7b b4 04 7c ................ getObjName <controllerName> <ejs.web> 
    0049: [2] 00 ......................... add 
    0050: [1] 56 de 89 01 ................ loadString <"> 
    0054: [2] 00 ......................... add 
    0055: [1] c6 ......................... throw 
    0056: [1] 54 ......................... loadNull 
    0057: [2] bf ......................... returnValue 
    0058: [0] 33 12 a2 e6 01 b0 15 ....... debug 

    # ejs.es:14737                      }
    
VARIABLE:   [actionName-00]  ejs.web var actionName : String
VARIABLE:   [controllerName-01]  ejs.web var controllerName : String
VARIABLE:   [deploymentMode-02]  ejs.web var deploymentMode : String
VARIABLE:   [log-03]  ejs.web var log : Logger
VARIABLE:   [params-04]  ejs.web var params : Object
VARIABLE:   [request-05]  ejs.web var request
VARIABLE:   [view-06]  ejs.web var view
VARIABLE:   [flash-07]  public var flash : Object
VARIABLE:   [rendered-08]  [ejs.web::Controller,private] var rendered : Boolean
VARIABLE:   [redirected-09]  [ejs.web::Controller,private] var redirected : Boolean
VARIABLE:   [_afterFilters-10]  [ejs.web::Controller,private] var _afterFilters : Array
VARIABLE:   [_beforeFilters-11]  [ejs.web::Controller,private] var _beforeFilters : Array
VARIABLE:   [_wrapFilters-12]  [ejs.web::Controller,private] var _wrapFilters : Array
VARIABLE:   [lastFlash-13]  [ejs.web::Controller,private] var lastFlash

CLASS:      class HtmlConnector extends Object
            #  Class Details: 57 class traits, 3 instance traits, requested slot 167

FUNCTION:   [HtmlConnector-26]  -constructor- const function HtmlConnector(request, view) : void

     ARG:   [arg-00]   private request
     ARG:   [arg-01]   private view

    0000: [0] 44 ......................... load0 
    0001: [1] 57 ......................... loadThis 
    0002: [2] b3 9e 8d 01 ac 8d 01 ....... putObjName <nextId> <[HtmlConnector,private]> 
    0009: [0] 33 12 ae e7 01 c4 8f 01 .... debug 

    # ejs.es:14807                          this.request = request

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 57 ......................... loadThis 
    0019: [2] b3 88 07 ac 8d 01 .......... putObjName <request> <[HtmlConnector,private]> 
    0025: [0] 33 12 b0 e7 01 8a 90 01 .... debug 

    # ejs.es:14808                          this.view = view

    0033: [0] 5c ......................... getLocalSlot1 
    0034: [1] 57 ......................... loadThis 
    0035: [2] b3 d6 07 ac 8d 01 .......... putObjName <view> <[HtmlConnector,private]> 
    0041: [0] be ......................... return 
    0042: [0] 33 12 b2 e7 01 b0 15 ....... debug 

    # ejs.es:14809                      }
    
VARIABLE:   [request-00]  private var request
VARIABLE:   [view-01]  private var view

FUNCTION:   [HtmlConnector-27]  ejs.web const function aform(record: Object, options: Object) : Void

     ARG:   [arg-00]   private record : Object
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 e0 e7 01 ea 91 01 .... debug 

    # ejs.es:14832                          options.id ||= "form"

    0017: [0] 5c ......................... getLocalSlot1 
    0018: [1] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0024: [1] 39 ......................... dup 
    0025: [2] 14 05 ...................... branchTrue8 <addr: 32> 
    0027: [1] 90 ......................... pop 
    0028: [0] 56 b4 92 01 ................ loadString <form> 
    0032: [1] 5c ......................... getLocalSlot1 
    0033: [2] b3 ae 92 01 ba 11 .......... putObjName <id> <> 
    0039: [0] 33 12 e2 e7 01 be 92 01 .... debug 

    # ejs.es:14833                          onsubmit = ""

    0047: [0] 56 ba 11 ................... loadString <> 
    0050: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0056: [0] 33 12 e4 e7 01 84 93 01 .... debug 

    # ejs.es:14834                          if (options.condition) {

    0064: [0] 5c ......................... getLocalSlot1 
    0065: [1] 7b ce 93 01 ba 11 .......... getObjName <condition> <> 
    0071: [1] 13 23 ...................... branchFalse8 <addr: 108> 
    0073: [0] 33 12 e6 e7 01 e2 93 01 .... debug 

    # ejs.es:14835                              onsubmit += options.condition + ' && '

    0081: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0087: [1] 5c ......................... getLocalSlot1 
    0088: [2] 7b ce 93 01 ba 11 .......... getObjName <condition> <> 
    0094: [2] 56 d0 94 01 ................ loadString < && > 
    0098: [3] 00 ......................... add 
    0099: [2] 00 ......................... add 
    0100: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0106: [0] 3e 00 ...................... goto8 <addr: 108> 
    0108: [0] 33 12 ea e7 01 da 94 01 .... debug 

    # ejs.es:14837                          if (options.confirm) {

    0116: [0] 5c ......................... getLocalSlot1 
    0117: [1] 7b a0 95 01 ba 11 .......... getObjName <confirm> <> 
    0123: [1] 13 28 ...................... branchFalse8 <addr: 165> 
    0125: [0] 33 12 ec e7 01 b0 95 01 .... debug 

    # ejs.es:14838                              onsubmit += 'confirm("' + options.confirm + '"); && '

    0133: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0139: [1] 56 bc 96 01 ................ loadString <confirm("> 
    0143: [2] 5c ......................... getLocalSlot1 
    0144: [3] 7b a0 95 01 ba 11 .......... getObjName <confirm> <> 
    0150: [3] 00 ......................... add 
    0151: [2] 56 d0 96 01 ................ loadString <"); && > 
    0155: [3] 00 ......................... add 
    0156: [2] 00 ......................... add 
    0157: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0163: [0] 3e 00 ...................... goto8 <addr: 165> 
    0165: [0] 33 12 ee e7 01 b2 1a ....... debug 

    # ejs.es:14839                          }

    0172: [0] 33 12 f0 e7 01 e0 96 01 .... debug 

    # ejs.es:14840                          onsubmit = '$.ajax({ ' +

    0180: [0] 33 12 f4 e7 01 aa 97 01 .... debug 

    # ejs.es:14842                              'type: "' + options.method + '", '

    0188: [0] 33 12 f2 e7 01 90 98 01 .... debug 

    # ejs.es:14841                              'uri: "' + options.uri + '", ' + 

    0196: [0] 33 12 f0 e7 01 e0 96 01 .... debug 

    # ejs.es:14840                          onsubmit = '$.ajax({ ' +

    0204: [0] 56 f4 98 01 ................ loadString <$.ajax({ > 
    0208: [1] 33 12 f2 e7 01 90 98 01 .... debug 

    # ejs.es:14841                              'uri: "' + options.uri + '", ' + 

    0216: [1] 56 88 99 01 ................ loadString <uri: "> 
    0220: [2] 00 ......................... add 
    0221: [1] 5c ......................... getLocalSlot1 
    0222: [2] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0227: [2] 00 ......................... add 
    0228: [1] 56 96 99 01 ................ loadString <", > 
    0232: [2] 00 ......................... add 
    0233: [1] 33 12 f4 e7 01 aa 97 01 .... debug 

    # ejs.es:14842                              'type: "' + options.method + '", '

    0241: [1] 56 9e 99 01 ................ loadString <type: "> 
    0245: [2] 00 ......................... add 
    0246: [1] 5c ......................... getLocalSlot1 
    0247: [2] 7b ae 99 01 ba 11 .......... getObjName <method> <> 
    0253: [2] 00 ......................... add 
    0254: [1] 56 96 99 01 ................ loadString <", > 
    0258: [2] 00 ......................... add 
    0259: [1] 33 12 f0 e7 01 e0 96 01 .... debug 

    # ejs.es:14840                          onsubmit = '$.ajax({ ' +

    0267: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0273: [0] 33 12 f8 e7 01 bc 99 01 .... debug 

    # ejs.es:14844                          if (options.query) {

    0281: [0] 5c ......................... getLocalSlot1 
    0282: [1] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    0288: [1] 13 28 ...................... branchFalse8 <addr: 330> 
    0290: [0] 33 12 fa e7 01 8a 9a 01 .... debug 

    # ejs.es:14845                              onsubmit += 'data: ' + options.query + ', '

    0298: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0304: [1] 56 82 9b 01 ................ loadString <data: > 
    0308: [2] 5c ......................... getLocalSlot1 
    0309: [3] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    0315: [3] 00 ......................... add 
    0316: [2] 56 90 9b 01 ................ loadString <, > 
    0320: [3] 00 ......................... add 
    0321: [2] 00 ......................... add 
    0322: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0328: [0] 3e 2d ...................... goto8 <addr: 375> 
    0330: [0] 33 12 fc e7 01 b4 33 ....... debug 

    # ejs.es:14846                          } else {

    0337: [0] 33 12 fe e7 01 96 9b 01 .... debug 

    # ejs.es:14847                              onsubmit += 'data: $("#' + options.id + '").serialize(), '

    0345: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0351: [1] 56 ac 9c 01 ................ loadString <data: $("#> 
    0355: [2] 5c ......................... getLocalSlot1 
    0356: [3] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0362: [3] 00 ......................... add 
    0363: [2] 56 c2 9c 01 ................ loadString <").serialize(), > 
    0367: [3] 00 ......................... add 
    0368: [2] 00 ......................... add 
    0369: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0375: [0] 33 12 84 e8 01 e4 9c 01 .... debug 

    # ejs.es:14850                          if (options.update) {

    0383: [0] 5c ......................... getLocalSlot1 
    0384: [1] 7b a8 9d 01 ba 11 .......... getObjName <update> <> 
    0390: [1] 07 bc 02 f7 f7 ............. branchFalse <addr: 553> 
    0395: [0] 33 12 86 e8 01 b6 9d 01 .... debug 

    # ejs.es:14851                              if (options.success) {

    0403: [0] 5c ......................... getLocalSlot1 
    0404: [1] 7b 84 9e 01 ba 11 .......... getObjName <success> <> 
    0410: [1] 13 5d ...................... branchFalse8 <addr: 505> 
    0412: [0] 33 12 8a e8 01 94 9e 01 .... debug 

    # ejs.es:14853                                      options.success + '; }, '

    0420: [0] 33 12 88 e8 01 f8 9e 01 .... debug 

    # ejs.es:14852                                  onsubmit += 'success: function(data) { $("#' + options.update + '").html(data).hide("slow"); ' + 

    0428: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0434: [1] 33 12 8a e8 01 94 9e 01 .... debug 

    # ejs.es:14853                                      options.success + '; }, '

    0442: [1] 33 12 88 e8 01 f8 9e 01 .... debug 

    # ejs.es:14852                                  onsubmit += 'success: function(data) { $("#' + options.update + '").html(data).hide("slow"); ' + 

    0450: [1] 56 e4 a0 01 ................ loadString <success: function(data) { $("#> 
    0454: [2] 5c ......................... getLocalSlot1 
    0455: [3] 7b a8 9d 01 ba 11 .......... getObjName <update> <> 
    0461: [3] 00 ......................... add 
    0462: [2] 56 a2 a1 01 ................ loadString <").html(data).hide("slow"); > 
    0466: [3] 00 ......................... add 
    0467: [2] 33 12 8a e8 01 94 9e 01 .... debug 

    # ejs.es:14853                                      options.success + '; }, '

    0475: [2] 5c ......................... getLocalSlot1 
    0476: [3] 7b 84 9e 01 ba 11 .......... getObjName <success> <> 
    0482: [3] 00 ......................... add 
    0483: [2] 56 dc a1 01 ................ loadString <; }, > 
    0487: [3] 00 ......................... add 
    0488: [2] 00 ......................... add 
    0489: [1] 33 12 88 e8 01 f8 9e 01 .... debug 

    # ejs.es:14852                                  onsubmit += 'success: function(data) { $("#' + options.update + '").html(data).hide("slow"); ' + 

    0497: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0503: [0] 3e 2e ...................... goto8 <addr: 551> 
    0505: [0] 33 12 8c e8 01 e8 a1 01 .... debug 

    # ejs.es:14854                              } else {

    0513: [0] 33 12 8e e8 01 9a a2 01 .... debug 

    # ejs.es:14855                                  onsubmit += 'success: function(data) { $("#' + options.update + '").html(data).hide("slow"); }, '

    0521: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0527: [1] 56 e4 a0 01 ................ loadString <success: function(data) { $("#> 
    0531: [2] 5c ......................... getLocalSlot1 
    0532: [3] 7b a8 9d 01 ba 11 .......... getObjName <update> <> 
    0538: [3] 00 ......................... add 
    0539: [2] 56 86 a4 01 ................ loadString <").html(data).hide("slow"); }, > 
    0543: [3] 00 ......................... add 
    0544: [2] 00 ......................... add 
    0545: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0551: [0] 3e 39 ...................... goto8 <addr: 610> 
    0553: [0] 33 12 92 e8 01 c6 a4 01 .... debug 

    # ejs.es:14857                          } else if (options.success) {

    0561: [0] 5c ......................... getLocalSlot1 
    0562: [1] 7b 84 9e 01 ba 11 .......... getObjName <success> <> 
    0568: [1] 13 28 ...................... branchFalse8 <addr: 610> 
    0570: [0] 33 12 94 e8 01 9a a5 01 .... debug 

    # ejs.es:14858                              onsubmit += 'success: function(data) { ' + options.success + '; } '

    0578: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0584: [1] 56 c2 a6 01 ................ loadString <success: function(data) { > 
    0588: [2] 5c ......................... getLocalSlot1 
    0589: [3] 7b 84 9e 01 ba 11 .......... getObjName <success> <> 
    0595: [3] 00 ......................... add 
    0596: [2] 56 f8 a6 01 ................ loadString <; } > 
    0600: [3] 00 ......................... add 
    0601: [2] 00 ......................... add 
    0602: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0608: [0] 3e 00 ...................... goto8 <addr: 610> 
    0610: [0] 33 12 98 e8 01 82 a7 01 .... debug 

    # ejs.es:14860                          if (options.error) {

    0618: [0] 5c ......................... getLocalSlot1 
    0619: [1] 7b 98 82 01 ba 11 .......... getObjName <error> <> 
    0625: [1] 13 28 ...................... branchFalse8 <addr: 667> 
    0627: [0] 33 12 9a e8 01 c4 a7 01 .... debug 

    # ejs.es:14861                              onsubmit += 'error: function(data) { ' + options.error + '; }, '

    0635: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0641: [1] 56 e6 a8 01 ................ loadString <error: function(data) { > 
    0645: [2] 5c ......................... getLocalSlot1 
    0646: [3] 7b 98 82 01 ba 11 .......... getObjName <error> <> 
    0652: [3] 00 ......................... add 
    0653: [2] 56 dc a1 01 ................ loadString <; }, > 
    0657: [3] 00 ......................... add 
    0658: [2] 00 ......................... add 
    0659: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0665: [0] 3e 00 ...................... goto8 <addr: 667> 
    0667: [0] 33 12 9c e8 01 b2 1a ....... debug 

    # ejs.es:14862                          }

    0674: [0] 33 12 9e e8 01 98 a9 01 .... debug 

    # ejs.es:14863                          onsubmit += '}); return false;'

    0682: [0] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0688: [1] 56 f0 a9 01 ................ loadString <}); return false;> 
    0692: [2] 00 ......................... add 
    0693: [1] b4 f2 92 01 ba 11 .......... putScopedName <onsubmit> <> 
    0699: [0] 33 12 a0 e8 01 94 aa 01 .... debug 

    # ejs.es:14864                          write('<form action="' + "/User/list" + '"' + getOptions(options) + "onsubmit='" + onsubmit + "' >")

    0707: [0] 56 f6 ab 01 ................ loadString <<form action="> 
    0711: [1] 56 94 ac 01 ................ loadString </User/list> 
    0715: [2] 00 ......................... add 
    0716: [1] 56 de 89 01 ................ loadString <"> 
    0720: [2] 00 ......................... add 
    0721: [1] 5c ......................... getLocalSlot1 
    0722: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0730: [1] 93 ......................... pushResult 
    0731: [2] 00 ......................... add 
    0732: [1] 56 c0 ac 01 ................ loadString <onsubmit='> 
    0736: [2] 00 ......................... add 
    0737: [1] 79 f2 92 01 ba 11 .......... getScopedName <onsubmit> <> 
    0743: [2] 00 ......................... add 
    0744: [1] 56 d6 ac 01 ................ loadString <' >> 
    0748: [2] 00 ......................... add 
    0749: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0756: [0] 54 ......................... loadNull 
    0757: [1] bf ......................... returnValue 
    0758: [0] 33 12 a2 e8 01 b0 15 ....... debug 

    # ejs.es:14865                      }
    
VARIABLE:   [record-00]  private var record : Object
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-28]  ejs.web const function alink(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 bc e8 01 e8 ad 01 .... debug 

    # ejs.es:14878                          options.id ||= "alink"

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0015: [1] 39 ......................... dup 
    0016: [2] 14 05 ...................... branchTrue8 <addr: 23> 
    0018: [1] 90 ......................... pop 
    0019: [0] 56 ae ae 01 ................ loadString <alink> 
    0023: [1] 5c ......................... getLocalSlot1 
    0024: [2] b3 ae 92 01 ba 11 .......... putObjName <id> <> 
    0030: [0] 33 12 be e8 01 ba ae 01 .... debug 

    # ejs.es:14879                          onclick = ""

    0038: [0] 56 ba 11 ................... loadString <> 
    0041: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0047: [0] 33 12 c0 e8 01 84 93 01 .... debug 

    # ejs.es:14880                          if (options.condition) {

    0055: [0] 5c ......................... getLocalSlot1 
    0056: [1] 7b ce 93 01 ba 11 .......... getObjName <condition> <> 
    0062: [1] 13 23 ...................... branchFalse8 <addr: 99> 
    0064: [0] 33 12 c2 e8 01 fc ae 01 .... debug 

    # ejs.es:14881                              onclick += options.condition + ' && '

    0072: [0] 79 ec ae 01 ba 11 .......... getScopedName <onclick> <> 
    0078: [1] 5c ......................... getLocalSlot1 
    0079: [2] 7b ce 93 01 ba 11 .......... getObjName <condition> <> 
    0085: [2] 56 d0 94 01 ................ loadString < && > 
    0089: [3] 00 ......................... add 
    0090: [2] 00 ......................... add 
    0091: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0097: [0] 3e 00 ...................... goto8 <addr: 99> 
    0099: [0] 33 12 c6 e8 01 da 94 01 .... debug 

    # ejs.es:14883                          if (options.confirm) {

    0107: [0] 5c ......................... getLocalSlot1 
    0108: [1] 7b a0 95 01 ba 11 .......... getObjName <confirm> <> 
    0114: [1] 13 28 ...................... branchFalse8 <addr: 156> 
    0116: [0] 33 12 c8 e8 01 e8 af 01 .... debug 

    # ejs.es:14884                              onclick += 'confirm("' + options.confirm + '"); && '

    0124: [0] 79 ec ae 01 ba 11 .......... getScopedName <onclick> <> 
    0130: [1] 56 bc 96 01 ................ loadString <confirm("> 
    0134: [2] 5c ......................... getLocalSlot1 
    0135: [3] 7b a0 95 01 ba 11 .......... getObjName <confirm> <> 
    0141: [3] 00 ......................... add 
    0142: [2] 56 d0 96 01 ................ loadString <"); && > 
    0146: [3] 00 ......................... add 
    0147: [2] 00 ......................... add 
    0148: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0154: [0] 3e 00 ...................... goto8 <addr: 156> 
    0156: [0] 33 12 ca e8 01 b2 1a ....... debug 

    # ejs.es:14885                          }

    0163: [0] 33 12 cc e8 01 f2 b0 01 .... debug 

    # ejs.es:14886                          onclick = '$.ajax({ ' +

    0171: [0] 33 12 d0 e8 01 aa 97 01 .... debug 

    # ejs.es:14888                              'type: "' + options.method + '", '

    0179: [0] 33 12 ce e8 01 ba b1 01 .... debug 

    # ejs.es:14887                              'uri: "' + options.action + '", ' + 

    0187: [0] 33 12 cc e8 01 f2 b0 01 .... debug 

    # ejs.es:14886                          onclick = '$.ajax({ ' +

    0195: [0] 56 f4 98 01 ................ loadString <$.ajax({ > 
    0199: [1] 33 12 ce e8 01 ba b1 01 .... debug 

    # ejs.es:14887                              'uri: "' + options.action + '", ' + 

    0207: [1] 56 88 99 01 ................ loadString <uri: "> 
    0211: [2] 00 ......................... add 
    0212: [1] 5c ......................... getLocalSlot1 
    0213: [2] 7b ee 01 ba 11 ............. getObjName <action> <> 
    0218: [2] 00 ......................... add 
    0219: [1] 56 96 99 01 ................ loadString <", > 
    0223: [2] 00 ......................... add 
    0224: [1] 33 12 d0 e8 01 aa 97 01 .... debug 

    # ejs.es:14888                              'type: "' + options.method + '", '

    0232: [1] 56 9e 99 01 ................ loadString <type: "> 
    0236: [2] 00 ......................... add 
    0237: [1] 5c ......................... getLocalSlot1 
    0238: [2] 7b ae 99 01 ba 11 .......... getObjName <method> <> 
    0244: [2] 00 ......................... add 
    0245: [1] 56 96 99 01 ................ loadString <", > 
    0249: [2] 00 ......................... add 
    0250: [1] 33 12 cc e8 01 f2 b0 01 .... debug 

    # ejs.es:14886                          onclick = '$.ajax({ ' +

    0258: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0264: [0] 33 12 d4 e8 01 bc 99 01 .... debug 

    # ejs.es:14890                          if (options.query) {

    0272: [0] 5c ......................... getLocalSlot1 
    0273: [1] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    0279: [1] 13 1c ...................... branchFalse8 <addr: 309> 
    0281: [0] 33 12 d6 e8 01 a4 b2 01 .... debug 

    # ejs.es:14891                              'data: ' + options.query + ', '

    0289: [0] 56 82 9b 01 ................ loadString <data: > 
    0293: [1] 5c ......................... getLocalSlot1 
    0294: [2] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    0300: [2] 00 ......................... add 
    0301: [1] 56 90 9b 01 ................ loadString <, > 
    0305: [2] 00 ......................... add 
    0306: [1] 90 ......................... pop 
    0307: [0] 3e 00 ...................... goto8 <addr: 309> 
    0309: [0] 33 12 dc e8 01 e4 9c 01 .... debug 

    # ejs.es:14894                          if (options.update) {

    0317: [0] 5c ......................... getLocalSlot1 
    0318: [1] 7b a8 9d 01 ba 11 .......... getObjName <update> <> 
    0324: [1] 07 bc 02 f7 f7 ............. branchFalse <addr: 487> 
    0329: [0] 33 12 de e8 01 b6 9d 01 .... debug 

    # ejs.es:14895                              if (options.success) {

    0337: [0] 5c ......................... getLocalSlot1 
    0338: [1] 7b 84 9e 01 ba 11 .......... getObjName <success> <> 
    0344: [1] 13 5d ...................... branchFalse8 <addr: 439> 
    0346: [0] 33 12 e2 e8 01 94 9e 01 .... debug 

    # ejs.es:14897                                      options.success + '; }, '

    0354: [0] 33 12 e0 e8 01 84 b3 01 .... debug 

    # ejs.es:14896                                  onclick += 'success: function(data) { $("#' + options.update + '").html(data); ' + 

    0362: [0] 79 ec ae 01 ba 11 .......... getScopedName <onclick> <> 
    0368: [1] 33 12 e2 e8 01 94 9e 01 .... debug 

    # ejs.es:14897                                      options.success + '; }, '

    0376: [1] 33 12 e0 e8 01 84 b3 01 .... debug 

    # ejs.es:14896                                  onclick += 'success: function(data) { $("#' + options.update + '").html(data); ' + 

    0384: [1] 56 e4 a0 01 ................ loadString <success: function(data) { $("#> 
    0388: [2] 5c ......................... getLocalSlot1 
    0389: [3] 7b a8 9d 01 ba 11 .......... getObjName <update> <> 
    0395: [3] 00 ......................... add 
    0396: [2] 56 d4 b4 01 ................ loadString <").html(data); > 
    0400: [3] 00 ......................... add 
    0401: [2] 33 12 e2 e8 01 94 9e 01 .... debug 

    # ejs.es:14897                                      options.success + '; }, '

    0409: [2] 5c ......................... getLocalSlot1 
    0410: [3] 7b 84 9e 01 ba 11 .......... getObjName <success> <> 
    0416: [3] 00 ......................... add 
    0417: [2] 56 dc a1 01 ................ loadString <; }, > 
    0421: [3] 00 ......................... add 
    0422: [2] 00 ......................... add 
    0423: [1] 33 12 e0 e8 01 84 b3 01 .... debug 

    # ejs.es:14896                                  onclick += 'success: function(data) { $("#' + options.update + '").html(data); ' + 

    0431: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0437: [0] 3e 2e ...................... goto8 <addr: 485> 
    0439: [0] 33 12 e4 e8 01 e8 a1 01 .... debug 

    # ejs.es:14898                              } else {

    0447: [0] 33 12 e6 e8 01 f4 b4 01 .... debug 

    # ejs.es:14899                                  onclick += 'success: function(data) { $("#' + options.update + '").html(data); }, '

    0455: [0] 79 ec ae 01 ba 11 .......... getScopedName <onclick> <> 
    0461: [1] 56 e4 a0 01 ................ loadString <success: function(data) { $("#> 
    0465: [2] 5c ......................... getLocalSlot1 
    0466: [3] 7b a8 9d 01 ba 11 .......... getObjName <update> <> 
    0472: [3] 00 ......................... add 
    0473: [2] 56 c4 b6 01 ................ loadString <").html(data); }, > 
    0477: [3] 00 ......................... add 
    0478: [2] 00 ......................... add 
    0479: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0485: [0] 3e 39 ...................... goto8 <addr: 544> 
    0487: [0] 33 12 ea e8 01 c6 a4 01 .... debug 

    # ejs.es:14901                          } else if (options.success) {

    0495: [0] 5c ......................... getLocalSlot1 
    0496: [1] 7b 84 9e 01 ba 11 .......... getObjName <success> <> 
    0502: [1] 13 28 ...................... branchFalse8 <addr: 544> 
    0504: [0] 33 12 ec e8 01 ea b6 01 .... debug 

    # ejs.es:14902                              onclick += 'success: function(data) { ' + options.success + '; } '

    0512: [0] 79 ec ae 01 ba 11 .......... getScopedName <onclick> <> 
    0518: [1] 56 c2 a6 01 ................ loadString <success: function(data) { > 
    0522: [2] 5c ......................... getLocalSlot1 
    0523: [3] 7b 84 9e 01 ba 11 .......... getObjName <success> <> 
    0529: [3] 00 ......................... add 
    0530: [2] 56 f8 a6 01 ................ loadString <; } > 
    0534: [3] 00 ......................... add 
    0535: [2] 00 ......................... add 
    0536: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0542: [0] 3e 00 ...................... goto8 <addr: 544> 
    0544: [0] 33 12 f0 e8 01 82 a7 01 .... debug 

    # ejs.es:14904                          if (options.error) {

    0552: [0] 5c ......................... getLocalSlot1 
    0553: [1] 7b 98 82 01 ba 11 .......... getObjName <error> <> 
    0559: [1] 13 28 ...................... branchFalse8 <addr: 601> 
    0561: [0] 33 12 f2 e8 01 90 b8 01 .... debug 

    # ejs.es:14905                              onclick += 'error: function(data) { ' + options.error + '; }, '

    0569: [0] 79 ec ae 01 ba 11 .......... getScopedName <onclick> <> 
    0575: [1] 56 e6 a8 01 ................ loadString <error: function(data) { > 
    0579: [2] 5c ......................... getLocalSlot1 
    0580: [3] 7b 98 82 01 ba 11 .......... getObjName <error> <> 
    0586: [3] 00 ......................... add 
    0587: [2] 56 dc a1 01 ................ loadString <; }, > 
    0591: [3] 00 ......................... add 
    0592: [2] 00 ......................... add 
    0593: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0599: [0] 3e 00 ...................... goto8 <addr: 601> 
    0601: [0] 33 12 f4 e8 01 b2 1a ....... debug 

    # ejs.es:14906                          }

    0608: [0] 33 12 f6 e8 01 b0 b9 01 .... debug 

    # ejs.es:14907                          onclick += '}); return false;'

    0616: [0] 79 ec ae 01 ba 11 .......... getScopedName <onclick> <> 
    0622: [1] 56 f0 a9 01 ................ loadString <}); return false;> 
    0626: [2] 00 ......................... add 
    0627: [1] b4 ec ae 01 ba 11 .......... putScopedName <onclick> <> 
    0633: [0] 33 12 f8 e8 01 86 ba 01 .... debug 

    # ejs.es:14908                          options.uri ||= request.makeUri(options)

    0641: [0] 5c ......................... getLocalSlot1 
    0642: [1] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0647: [1] 39 ......................... dup 
    0648: [2] 14 11 ...................... branchTrue8 <addr: 667> 
    0650: [1] 90 ......................... pop 
    0651: [0] 57 ......................... loadThis 
    0652: [1] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    0658: [1] 5c ......................... getLocalSlot1 
    0659: [2] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    0666: [0] 93 ......................... pushResult 
    0667: [1] 5c ......................... getLocalSlot1 
    0668: [2] b3 f8 64 ba 11 ............. putObjName <uri> <> 
    0673: [0] 33 12 fa e8 01 f0 ba 01 .... debug 

    # ejs.es:14909                          write('<a href="' + options.uri + '"' + getOptions(options) + "onclick='" + onclick + "' >" + text + '</a>')

    0681: [0] 56 e2 bc 01 ................ loadString <<a href="> 
    0685: [1] 5c ......................... getLocalSlot1 
    0686: [2] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0691: [2] 00 ......................... add 
    0692: [1] 56 de 89 01 ................ loadString <"> 
    0696: [2] 00 ......................... add 
    0697: [1] 5c ......................... getLocalSlot1 
    0698: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0706: [1] 93 ......................... pushResult 
    0707: [2] 00 ......................... add 
    0708: [1] 56 f6 bc 01 ................ loadString <onclick='> 
    0712: [2] 00 ......................... add 
    0713: [1] 79 ec ae 01 ba 11 .......... getScopedName <onclick> <> 
    0719: [2] 00 ......................... add 
    0720: [1] 56 d6 ac 01 ................ loadString <' >> 
    0724: [2] 00 ......................... add 
    0725: [1] 5b ......................... getLocalSlot0 
    0726: [2] 00 ......................... add 
    0727: [1] 56 8a bd 01 ................ loadString <</a>> 
    0731: [2] 00 ......................... add 
    0732: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0739: [0] 54 ......................... loadNull 
    0740: [1] bf ......................... returnValue 
    0741: [0] 33 12 fc e8 01 94 bd 01 .... debug 

    # ejs.es:14910              		}
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-29]  ejs.web const function button(value: String, buttonName: String, options: Object) : Void

     ARG:   [arg-00]   private value : String
     ARG:   [arg-01]   private buttonName : String
     ARG:   [arg-02]   private options : Object

    0000: [0] 33 12 82 e9 01 c2 be 01 .... debug 

    # ejs.es:14913                          write('<input name="' + buttonName + '" type="submit" value="' + value + '"' + getOptions(options) + ' />')

    0008: [0] 56 b2 c0 01 ................ loadString <<input name="> 
    0012: [1] 5c ......................... getLocalSlot1 
    0013: [2] 00 ......................... add 
    0014: [1] 56 ce c0 01 ................ loadString <" type="submit" value="> 
    0018: [2] 00 ......................... add 
    0019: [1] 5b ......................... getLocalSlot0 
    0020: [2] 00 ......................... add 
    0021: [1] 56 de 89 01 ................ loadString <"> 
    0025: [2] 00 ......................... add 
    0026: [1] 5d ......................... getLocalSlot2 
    0027: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0035: [1] 93 ......................... pushResult 
    0036: [2] 00 ......................... add 
    0037: [1] 56 fe c0 01 ................ loadString < />> 
    0041: [2] 00 ......................... add 
    0042: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0049: [0] 54 ......................... loadNull 
    0050: [1] bf ......................... returnValue 
    0051: [0] 33 12 84 e9 01 b0 15 ....... debug 

    # ejs.es:14914                      }
    
VARIABLE:   [value-00]  private var value : String
VARIABLE:   [buttonName-01]  private var buttonName : String
VARIABLE:   [options-02]  private var options : Object

FUNCTION:   [HtmlConnector-30]  ejs.web const function buttonLink(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 8a e9 01 86 ba 01 .... debug 

    # ejs.es:14917                          options.uri ||= request.makeUri(options)

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0014: [1] 39 ......................... dup 
    0015: [2] 14 11 ...................... branchTrue8 <addr: 34> 
    0017: [1] 90 ......................... pop 
    0018: [0] 57 ......................... loadThis 
    0019: [1] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    0025: [1] 5c ......................... getLocalSlot1 
    0026: [2] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 5c ......................... getLocalSlot1 
    0035: [2] b3 f8 64 ba 11 ............. putObjName <uri> <> 
    0040: [0] 33 12 8c e9 01 b0 c2 01 .... debug 

    # ejs.es:14918              			write('<button onclick="window.location=\'' + options.uri + '\';">' + text + '</button></a>')

    0048: [0] 56 f2 c3 01 ................ loadString <<button onclick="window.location='> 
    0052: [1] 5c ......................... getLocalSlot1 
    0053: [2] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0058: [2] 00 ......................... add 
    0059: [1] 56 b8 c4 01 ................ loadString <';">> 
    0063: [2] 00 ......................... add 
    0064: [1] 5b ......................... getLocalSlot0 
    0065: [2] 00 ......................... add 
    0066: [1] 56 c2 c4 01 ................ loadString <</button></a>> 
    0070: [2] 00 ......................... add 
    0071: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0078: [0] 54 ......................... loadNull 
    0079: [1] bf ......................... returnValue 
    0080: [0] 33 12 8e e9 01 b0 15 ....... debug 

    # ejs.es:14919                      }
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-31]  ejs.web const function chart(initialData: Array, options: Object) : Void

     ARG:   [arg-00]   private initialData : Array
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 96 e9 01 f0 c5 01 .... debug 

    # ejs.es:14923                          throw 'HtmlConnector control "chart" not implemented.'

    0008: [0] 56 f6 c6 01 ................ loadString <HtmlConnector control "chart" not implemented.> 
    0012: [1] c6 ......................... throw 
    0013: [1] 54 ......................... loadNull 
    0014: [2] bf ......................... returnValue 
    0015: [0] 33 12 98 e9 01 94 bd 01 .... debug 

    # ejs.es:14924              		}
    
VARIABLE:   [initialData-00]  private var initialData : Array
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-32]  ejs.web const function checkbox(field: String, choice: String, submitValue: String, options: Object) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private choice : String
     ARG:   [arg-02]   private submitValue : String
     ARG:   [arg-03]   private options : Object
   LOCAL:   [local-04] var checked

    0000: [0] 33 12 9e e9 01 ca c9 01 .... debug 

    # ejs.es:14927                          let checked = (choice == submitValue) ? ' checked="yes" ' : ''

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 5d ......................... getLocalSlot2 
    0010: [2] 25 ......................... compareEq 
    0011: [1] 13 06 ...................... branchFalse8 <addr: 19> 
    0013: [0] 56 e0 ca 01 ................ loadString < checked="yes" > 
    0017: [1] 3e 03 ...................... goto8 <addr: 22> 
    0019: [1] 56 ba 11 ................... loadString <> 
    0022: [2] 98 ......................... putLocalSlot4 
    0023: [1] 33 12 a0 e9 01 80 cb 01 .... debug 

    # ejs.es:14928                          write('<input name="' + field + '" type="checkbox" "' + getOptions(options) + checked + 

    0031: [1] 33 12 a2 e9 01 80 cb 01 .... debug 

    # ejs.es:14929                          write('<input name="' + field + '" type="checkbox" "' + getOptions(options) + checked + 

    0039: [1] 33 12 a0 e9 01 80 cb 01 .... debug 

    # ejs.es:14928                          write('<input name="' + field + '" type="checkbox" "' + getOptions(options) + checked + 

    0047: [1] 33 12 a2 e9 01 ca cc 01 .... debug 

    # ejs.es:14929                              '" value="' + submitValue + '" />')

    0055: [1] 33 12 a0 e9 01 80 cb 01 .... debug 

    # ejs.es:14928                          write('<input name="' + field + '" type="checkbox" "' + getOptions(options) + checked + 

    0063: [1] 56 b2 c0 01 ................ loadString <<input name="> 
    0067: [2] 5b ......................... getLocalSlot0 
    0068: [3] 00 ......................... add 
    0069: [2] 56 b2 cd 01 ................ loadString <" type="checkbox" "> 
    0073: [3] 00 ......................... add 
    0074: [2] 5e ......................... getLocalSlot3 
    0075: [3] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0083: [2] 93 ......................... pushResult 
    0084: [3] 00 ......................... add 
    0085: [2] 5f ......................... getLocalSlot4 
    0086: [3] 00 ......................... add 
    0087: [2] 33 12 a2 e9 01 ca cc 01 .... debug 

    # ejs.es:14929                              '" value="' + submitValue + '" />')

    0095: [2] 56 da cd 01 ................ loadString <" value="> 
    0099: [3] 00 ......................... add 
    0100: [2] 5d ......................... getLocalSlot2 
    0101: [3] 00 ......................... add 
    0102: [2] 56 ee cd 01 ................ loadString <" />> 
    0106: [3] 00 ......................... add 
    0107: [2] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0114: [1] 33 12 a4 e9 01 f8 cd 01 .... debug 

    # ejs.es:14930                          write('<input name="' + field + '" type="hidden" "' + getOptions(options) + '" value="" />')

    0122: [1] 56 b2 c0 01 ................ loadString <<input name="> 
    0126: [2] 5b ......................... getLocalSlot0 
    0127: [3] 00 ......................... add 
    0128: [2] 56 ca cf 01 ................ loadString <" type="hidden" "> 
    0132: [3] 00 ......................... add 
    0133: [2] 5e ......................... getLocalSlot3 
    0134: [3] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0142: [2] 93 ......................... pushResult 
    0143: [3] 00 ......................... add 
    0144: [2] 56 ee cf 01 ................ loadString <" value="" />> 
    0148: [3] 00 ......................... add 
    0149: [2] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0156: [1] 54 ......................... loadNull 
    0157: [2] bf ......................... returnValue 
    0158: [0] 33 12 a6 e9 01 b0 15 ....... debug 

    # ejs.es:14931                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [choice-01]  private var choice : String
VARIABLE:   [submitValue-02]  private var submitValue : String
VARIABLE:   [options-03]  private var options : Object
VARIABLE:   [checked-04]  private var checked

FUNCTION:   [HtmlConnector-33]  ejs.web const function endform() : Void


    0000: [0] 33 12 ac e9 01 88 d1 01 .... debug 

    # ejs.es:14934                          write('</form>')

    0008: [0] 56 c2 d1 01 ................ loadString <</form>> 
    0012: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0019: [0] 54 ......................... loadNull 
    0020: [1] bf ......................... returnValue 
    0021: [0] 33 12 ae e9 01 b0 15 ....... debug 

    # ejs.es:14935                      }
    

FUNCTION:   [HtmlConnector-34]  ejs.web const function flash(kind: String, msg: String, options: Object) : Void

     ARG:   [arg-00]   private kind : String
     ARG:   [arg-01]   private msg : String
     ARG:   [arg-02]   private options : Object

    0000: [0] 33 12 b4 e9 01 ec d2 01 .... debug 

    # ejs.es:14938                          write('<div' + getOptions(options) + '>' + msg + '</div>\r\n')

    0008: [0] 56 82 d4 01 ................ loadString <<div> 
    0012: [1] 5d ......................... getLocalSlot2 
    0013: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0021: [1] 93 ......................... pushResult 
    0022: [2] 00 ......................... add 
    0023: [1] 56 8c d4 01 ................ loadString <>> 
    0027: [2] 00 ......................... add 
    0028: [1] 5c ......................... getLocalSlot1 
    0029: [2] 00 ......................... add 
    0030: [1] 56 90 d4 01 ................ loadString <</div>
> 
    0034: [2] 00 ......................... add 
    0035: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0042: [0] 33 12 b6 e9 01 a2 d4 01 .... debug 

    # ejs.es:14939                          if (kind == "inform") {

    0050: [0] 5b ......................... getLocalSlot0 
    0051: [1] 56 be 83 01 ................ loadString <inform> 
    0055: [2] 25 ......................... compareEq 
    0056: [1] 13 1d ...................... branchFalse8 <addr: 87> 
    0058: [0] 33 12 bc e9 01 ea d4 01 .... debug 

    # ejs.es:14942                              write('<script>$(document).ready(function() {

    0066: [0] 33 12 b8 e9 01 ea d4 01 .... debug 

    # ejs.es:14940                              write('<script>$(document).ready(function() {

    0074: [0] 56 e6 d5 01 ................ loadString <<script>$(document).ready(function() {
                        $("div.-ejs-flashInform").animate({opacity: 1.0}, 2000).hide("slow");});
                    </script>> 
    0078: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0085: [0] 3e 00 ...................... goto8 <addr: 87> 
    0087: [0] 54 ......................... loadNull 
    0088: [1] bf ......................... returnValue 
    0089: [0] 33 12 c0 e9 01 94 bd 01 .... debug 

    # ejs.es:14944              		}
    
VARIABLE:   [kind-00]  private var kind : String
VARIABLE:   [msg-01]  private var msg : String
VARIABLE:   [options-02]  private var options : Object

FUNCTION:   [HtmlConnector-35]  ejs.web const function form(record: Object, options: Object) : Void

     ARG:   [arg-00]   private record : Object
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 c6 e9 01 86 ba 01 .... debug 

    # ejs.es:14947                          options.uri ||= request.makeUri(options)

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0014: [1] 39 ......................... dup 
    0015: [2] 14 11 ...................... branchTrue8 <addr: 34> 
    0017: [1] 90 ......................... pop 
    0018: [0] 57 ......................... loadThis 
    0019: [1] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    0025: [1] 5c ......................... getLocalSlot1 
    0026: [2] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 5c ......................... getLocalSlot1 
    0035: [2] b3 f8 64 ba 11 ............. putObjName <uri> <> 
    0040: [0] 33 12 c8 e9 01 ae d9 01 .... debug 

    # ejs.es:14948                          write('<form method="post" action="' + options.uri + '"' + getOptions(options) + 

    0048: [0] 33 12 ca e9 01 ae d9 01 .... debug 

    # ejs.es:14949                          write('<form method="post" action="' + options.uri + '"' + getOptions(options) + 

    0056: [0] 33 12 c8 e9 01 ae d9 01 .... debug 

    # ejs.es:14948                          write('<form method="post" action="' + options.uri + '"' + getOptions(options) + 

    0064: [0] 56 ea da 01 ................ loadString <<form method="post" action="> 
    0068: [1] 5c ......................... getLocalSlot1 
    0069: [2] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0074: [2] 00 ......................... add 
    0075: [1] 56 de 89 01 ................ loadString <"> 
    0079: [2] 00 ......................... add 
    0080: [1] 5c ......................... getLocalSlot1 
    0081: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0089: [1] 93 ......................... pushResult 
    0090: [2] 00 ......................... add 
    0091: [1] 33 12 ca e9 01 a4 db 01 .... debug 

    # ejs.es:14949                              ' xonsubmit="ejs.fixCheckboxes();">')

    0099: [1] 56 90 dc 01 ................ loadString < xonsubmit="ejs.fixCheckboxes();">> 
    0103: [2] 00 ......................... add 
    0104: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0111: [0] 54 ......................... loadNull 
    0112: [1] bf ......................... returnValue 
    0113: [0] 33 12 cc e9 01 b0 15 ....... debug 

    # ejs.es:14950                      }
    
VARIABLE:   [record-00]  private var record : Object
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-36]  ejs.web const function image(src: String, options: Object) : Void

     ARG:   [arg-00]   private src : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 d2 e9 01 d0 dd 01 .... debug 

    # ejs.es:14953              			write('<img src="' + src + '"' + getOptions(options) + '/>')

    0008: [0] 56 d0 de 01 ................ loadString <<img src="> 
    0012: [1] 5b ......................... getLocalSlot0 
    0013: [2] 00 ......................... add 
    0014: [1] 56 de 89 01 ................ loadString <"> 
    0018: [2] 00 ......................... add 
    0019: [1] 5c ......................... getLocalSlot1 
    0020: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0028: [1] 93 ......................... pushResult 
    0029: [2] 00 ......................... add 
    0030: [1] 56 e6 de 01 ................ loadString </>> 
    0034: [2] 00 ......................... add 
    0035: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0042: [0] 54 ......................... loadNull 
    0043: [1] bf ......................... returnValue 
    0044: [0] 33 12 d4 e9 01 b0 15 ....... debug 

    # ejs.es:14954                      }
    
VARIABLE:   [src-00]  private var src : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-37]  ejs.web const function imageLink(src: String, options: Object) : Void

     ARG:   [arg-00]   private src : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 da e9 01 86 ba 01 .... debug 

    # ejs.es:14957                          options.uri ||= request.makeUri(options)

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0014: [1] 39 ......................... dup 
    0015: [2] 14 11 ...................... branchTrue8 <addr: 34> 
    0017: [1] 90 ......................... pop 
    0018: [0] 57 ......................... loadThis 
    0019: [1] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    0025: [1] 5c ......................... getLocalSlot1 
    0026: [2] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 5c ......................... getLocalSlot1 
    0035: [2] b3 f8 64 ba 11 ............. putObjName <uri> <> 
    0040: [0] 54 ......................... loadNull 
    0041: [1] bf ......................... returnValue 
    0042: [0] 33 12 de e9 01 b0 15 ....... debug 

    # ejs.es:14959                      }
    
VARIABLE:   [src-00]  private var src : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-38]  ejs.web const function label(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 e4 e9 01 92 e1 01 .... debug 

    # ejs.es:14962                          write('<span ' + getOptions(options) + ' type="' + getTextKind(options) + '">' +  text + '</span>')

    0008: [0] 56 f2 e2 01 ................ loadString <<span > 
    0012: [1] 5c ......................... getLocalSlot1 
    0013: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0021: [1] 93 ......................... pushResult 
    0022: [2] 00 ......................... add 
    0023: [1] 56 80 e3 01 ................ loadString < type="> 
    0027: [2] 00 ......................... add 
    0028: [1] 5c ......................... getLocalSlot1 
    0029: [2] 1f 90 e3 01 ac 8d 01 02 .... callScopedName <getTextKind> <[HtmlConnector,private]> <argc: 1> 
    0037: [1] 93 ......................... pushResult 
    0038: [2] 00 ......................... add 
    0039: [1] 56 a8 e3 01 ................ loadString <">> 
    0043: [2] 00 ......................... add 
    0044: [1] 5b ......................... getLocalSlot0 
    0045: [2] 00 ......................... add 
    0046: [1] 56 ae e3 01 ................ loadString <</span>> 
    0050: [2] 00 ......................... add 
    0051: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0058: [0] 54 ......................... loadNull 
    0059: [1] bf ......................... returnValue 
    0060: [0] 33 12 e6 e9 01 b0 15 ....... debug 

    # ejs.es:14963                      }
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-39]  ejs.web const function link(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 ec e9 01 86 ba 01 .... debug 

    # ejs.es:14966                          options.uri ||= request.makeUri(options)

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0014: [1] 39 ......................... dup 
    0015: [2] 14 11 ...................... branchTrue8 <addr: 34> 
    0017: [1] 90 ......................... pop 
    0018: [0] 57 ......................... loadThis 
    0019: [1] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    0025: [1] 5c ......................... getLocalSlot1 
    0026: [2] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 5c ......................... getLocalSlot1 
    0035: [2] b3 f8 64 ba 11 ............. putObjName <uri> <> 
    0040: [0] 33 12 ee e9 01 b8 e4 01 .... debug 

    # ejs.es:14967              			write('<a href="' + options.uri + '"' + getOptions(options) + '>' + text + '</a>')

    0048: [0] 56 e2 bc 01 ................ loadString <<a href="> 
    0052: [1] 5c ......................... getLocalSlot1 
    0053: [2] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0058: [2] 00 ......................... add 
    0059: [1] 56 de 89 01 ................ loadString <"> 
    0063: [2] 00 ......................... add 
    0064: [1] 5c ......................... getLocalSlot1 
    0065: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0073: [1] 93 ......................... pushResult 
    0074: [2] 00 ......................... add 
    0075: [1] 56 8c d4 01 ................ loadString <>> 
    0079: [2] 00 ......................... add 
    0080: [1] 5b ......................... getLocalSlot0 
    0081: [2] 00 ......................... add 
    0082: [1] 56 8a bd 01 ................ loadString <</a>> 
    0086: [2] 00 ......................... add 
    0087: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0094: [0] 54 ......................... loadNull 
    0095: [1] bf ......................... returnValue 
    0096: [0] 33 12 f0 e9 01 94 bd 01 .... debug 

    # ejs.es:14968              		}
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-40]  ejs.web const function extlink(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 f6 e9 01 86 ba 01 .... debug 

    # ejs.es:14971                          options.uri ||= request.makeUri(options)

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 7b f8 64 ba 11 ............. getObjName <uri> <> 
    0014: [1] 39 ......................... dup 
    0015: [2] 14 11 ...................... branchTrue8 <addr: 34> 
    0017: [1] 90 ......................... pop 
    0018: [0] 57 ......................... loadThis 
    0019: [1] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    0025: [1] 5c ......................... getLocalSlot1 
    0026: [2] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 5c ......................... getLocalSlot1 
    0035: [2] b3 f8 64 ba 11 ............. putObjName <uri> <> 
    0040: [0] 33 12 f8 e9 01 e2 e6 01 .... debug 

    # ejs.es:14972              			write('<a href="' + uri + '"' + getOptions(options) + '>' + text + '</a>')

    0048: [0] 56 e2 bc 01 ................ loadString <<a href="> 
    0052: [1] 79 f8 64 ba 11 ............. getScopedName <uri> <> 
    0057: [2] 00 ......................... add 
    0058: [1] 56 de 89 01 ................ loadString <"> 
    0062: [2] 00 ......................... add 
    0063: [1] 5c ......................... getLocalSlot1 
    0064: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0072: [1] 93 ......................... pushResult 
    0073: [2] 00 ......................... add 
    0074: [1] 56 8c d4 01 ................ loadString <>> 
    0078: [2] 00 ......................... add 
    0079: [1] 5b ......................... getLocalSlot0 
    0080: [2] 00 ......................... add 
    0081: [1] 56 8a bd 01 ................ loadString <</a>> 
    0085: [2] 00 ......................... add 
    0086: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0093: [0] 54 ......................... loadNull 
    0094: [1] bf ......................... returnValue 
    0095: [0] 33 12 fa e9 01 94 bd 01 .... debug 

    # ejs.es:14973              		}
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-41]  ejs.web const function list(name: String, choices: Object, defaultValue: String, options: Object) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private choices : Object
     ARG:   [arg-02]   private defaultValue : String
     ARG:   [arg-03]   private options : Object
   LOCAL:   [local-04] var isSelected : Boolean
   LOCAL:   [local-05] var i
   LOCAL:   [local-06] var choice
   LOCAL:   [local-07] var field

    0000: [0] 33 12 80 ea 01 ca e9 01 .... debug 

    # ejs.es:14976                          write('<select name="' + name + '" ' + getOptions(options) + '>')

    0008: [0] 56 e6 ea 01 ................ loadString <<select name="> 
    0012: [1] 5b ......................... getLocalSlot0 
    0013: [2] 00 ......................... add 
    0014: [1] 56 84 eb 01 ................ loadString <" > 
    0018: [2] 00 ......................... add 
    0019: [1] 5e ......................... getLocalSlot3 
    0020: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0028: [1] 93 ......................... pushResult 
    0029: [2] 00 ......................... add 
    0030: [1] 56 8c d4 01 ................ loadString <>> 
    0034: [2] 00 ......................... add 
    0035: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0042: [0] 33 12 82 ea 01 8a eb 01 .... debug 

    # ejs.es:14977                          let isSelected: Boolean

    0050: [0] 33 12 84 ea 01 e8 eb 01 .... debug 

    # ejs.es:14978                          let i = 0

    0058: [0] 44 ......................... load0 
    0059: [1] 99 ......................... putLocalSlot5 
    0060: [0] 33 12 86 ea 01 98 ec 01 .... debug 

    # ejs.es:14979                          for each (choice in choices) {

    0068: [0] 5c ......................... getLocalSlot1 
    0069: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0075: [0] 93 ......................... pushResult 
    0076: [1] 39 ......................... dup 
    0077: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0080: [1] 93 ......................... pushResult 
    0081: [2] 9a ......................... putLocalSlot6 
    0082: [1] 33 12 88 ea 01 ee ec 01 .... debug 

    # ejs.es:14980                              if (choice is Array) {

    0090: [1] 61 ......................... getLocalSlot6 
    0091: [2] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0093: [3] 43 ......................... isA 
    0094: [2] 13 53 ...................... branchFalse8 <addr: 179> 
    0096: [1] 33 12 8a ea 01 bc ed 01 .... debug 

    # ejs.es:14981                                  isSelected = (choice[0] == defaultValue) ? 'selected="yes"' : ''

    0104: [1] 61 ......................... getLocalSlot6 
    0105: [2] 56 ba 11 ................... loadString <> 
    0108: [3] 44 ......................... load0 
    0109: [4] 7c ......................... getObjNameExpr 
    0110: [2] 5d ......................... getLocalSlot2 
    0111: [3] 25 ......................... compareEq 
    0112: [2] 13 06 ...................... branchFalse8 <addr: 120> 
    0114: [1] 56 e6 ee 01 ................ loadString <selected="yes"> 
    0118: [2] 3e 03 ...................... goto8 <addr: 123> 
    0120: [2] 56 ba 11 ................... loadString <> 
    0123: [3] 98 ......................... putLocalSlot4 
    0124: [2] 33 12 8c ea 01 84 ef 01 .... debug 

    # ejs.es:14982                                  write('  <option value="' + choice[0] + '"' + isSelected + '>' + choice[1] + '</option>')

    0132: [2] 56 e0 f0 01 ................ loadString <  <option value="> 
    0136: [3] 61 ......................... getLocalSlot6 
    0137: [4] 56 ba 11 ................... loadString <> 
    0140: [5] 44 ......................... load0 
    0141: [6] 7c ......................... getObjNameExpr 
    0142: [4] 00 ......................... add 
    0143: [3] 56 de 89 01 ................ loadString <"> 
    0147: [4] 00 ......................... add 
    0148: [3] 5f ......................... getLocalSlot4 
    0149: [4] 00 ......................... add 
    0150: [3] 56 8c d4 01 ................ loadString <>> 
    0154: [4] 00 ......................... add 
    0155: [3] 61 ......................... getLocalSlot6 
    0156: [4] 56 ba 11 ................... loadString <> 
    0159: [5] 45 ......................... load1 
    0160: [6] 7c ......................... getObjNameExpr 
    0161: [4] 00 ......................... add 
    0162: [3] 56 84 f1 01 ................ loadString <</option>> 
    0166: [4] 00 ......................... add 
    0167: [3] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0174: [2] 3d 88 04 f7 f7 ............. goto <addr: 439> 
    0179: [2] 33 12 8e ea 01 e8 a1 01 .... debug 

    # ejs.es:14983                              } else {

    0187: [2] 33 12 90 ea 01 98 f1 01 .... debug 

    # ejs.es:14984                                  if (choice && choice.id) {

    0195: [2] 61 ......................... getLocalSlot6 
    0196: [3] 39 ......................... dup 
    0197: [4] 13 07 ...................... branchFalse8 <addr: 206> 
    0199: [3] 90 ......................... pop 
    0200: [2] 61 ......................... getLocalSlot6 
    0201: [3] 7b ae 92 01 00 ............. getObjName <id> <> 
    0206: [3] 07 ba 02 f7 f7 ............. branchFalse <addr: 368> 
    0211: [2] 33 12 92 ea 01 f6 f1 01 .... debug 

    # ejs.es:14985                                      for (field in choice) {

    0219: [2] 61 ......................... getLocalSlot6 
    0220: [3] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0226: [2] 93 ......................... pushResult 
    0227: [3] 39 ......................... dup 
    0228: [4] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0231: [3] 93 ......................... pushResult 
    0232: [4] 9b ......................... putLocalSlot7 
    0233: [3] 33 12 94 ea 01 ec f2 01 .... debug 

    # ejs.es:14986                                          isSelected = (choice.id == defaultValue) ? 'selected="yes"' : ''

    0241: [3] 61 ......................... getLocalSlot6 
    0242: [4] 7b ae 92 01 00 ............. getObjName <id> <> 
    0247: [4] 5d ......................... getLocalSlot2 
    0248: [5] 25 ......................... compareEq 
    0249: [4] 13 06 ...................... branchFalse8 <addr: 257> 
    0251: [3] 56 e6 ee 01 ................ loadString <selected="yes"> 
    0255: [4] 3e 03 ...................... goto8 <addr: 260> 
    0257: [4] 56 ba 11 ................... loadString <> 
    0260: [5] 98 ......................... putLocalSlot4 
    0261: [4] 33 12 96 ea 01 a6 f4 01 .... debug 

    # ejs.es:14987                                          if (field != "id") {

    0269: [4] 62 ......................... getLocalSlot7 
    0270: [5] 56 ae 92 01 ................ loadString <id> 
    0274: [6] 2c ......................... compareNe 
    0275: [5] 13 53 ...................... branchFalse8 <addr: 360> 
    0277: [4] 33 12 98 ea 01 88 f5 01 .... debug 

    # ejs.es:14988                                              write('  <option value="' + choice.id + '"' + isSelected + '>' + choice[field] + '</option>')

    0285: [4] 56 e0 f0 01 ................ loadString <  <option value="> 
    0289: [5] 61 ......................... getLocalSlot6 
    0290: [6] 7b ae 92 01 00 ............. getObjName <id> <> 
    0295: [6] 00 ......................... add 
    0296: [5] 56 de 89 01 ................ loadString <"> 
    0300: [6] 00 ......................... add 
    0301: [5] 5f ......................... getLocalSlot4 
    0302: [6] 00 ......................... add 
    0303: [5] 56 8c d4 01 ................ loadString <>> 
    0307: [6] 00 ......................... add 
    0308: [5] 61 ......................... getLocalSlot6 
    0309: [6] 56 ba 11 ................... loadString <> 
    0312: [7] 62 ......................... getLocalSlot7 
    0313: [8] 7c ......................... getObjNameExpr 
    0314: [6] 00 ......................... add 
    0315: [5] 56 84 f1 01 ................ loadString <</option>> 
    0319: [6] 00 ......................... add 
    0320: [5] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0327: [4] 33 12 9a ea 01 84 f7 01 .... debug 

    # ejs.es:14989                                              done = true

    0335: [4] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0338: [5] b4 dc f7 01 ba 11 .......... putScopedName <done> <> 
    0344: [4] 33 12 9c ea 01 e6 f7 01 .... debug 

    # ejs.es:14990                                              break

    0352: [4] 90 ......................... pop 
    0353: [3] 3d 10 f7 f7 f7 ............. goto <addr: 366> 
    0358: [3] 3e 00 ...................... goto8 <addr: 360> 
    0360: [3] 3d 95 02 f7 f7 ............. goto <addr: 227> 
    0365: [3] 90 ......................... pop 
    0366: [2] 3e 47 ...................... goto8 <addr: 439> 
    0368: [2] 33 12 a2 ea 01 b2 f8 01 .... debug 

    # ejs.es:14993                                  } else {

    0376: [2] 33 12 a4 ea 01 ec f8 01 .... debug 

    # ejs.es:14994                                      isSelected = (i == defaultValue) ? 'selected="yes"' : ''

    0384: [2] 60 ......................... getLocalSlot5 
    0385: [3] 5d ......................... getLocalSlot2 
    0386: [4] 25 ......................... compareEq 
    0387: [3] 13 06 ...................... branchFalse8 <addr: 395> 
    0389: [2] 56 e6 ee 01 ................ loadString <selected="yes"> 
    0393: [3] 3e 03 ...................... goto8 <addr: 398> 
    0395: [3] 56 ba 11 ................... loadString <> 
    0398: [4] 98 ......................... putLocalSlot4 
    0399: [3] 33 12 a6 ea 01 8e fa 01 .... debug 

    # ejs.es:14995                                      write('  <option value="' + i + '"' + isSelected + '>' + choice + '</option>')

    0407: [3] 56 e0 f0 01 ................ loadString <  <option value="> 
    0411: [4] 60 ......................... getLocalSlot5 
    0412: [5] 00 ......................... add 
    0413: [4] 56 de 89 01 ................ loadString <"> 
    0417: [5] 00 ......................... add 
    0418: [4] 5f ......................... getLocalSlot4 
    0419: [5] 00 ......................... add 
    0420: [4] 56 8c d4 01 ................ loadString <>> 
    0424: [5] 00 ......................... add 
    0425: [4] 61 ......................... getLocalSlot6 
    0426: [5] 00 ......................... add 
    0427: [4] 56 84 f1 01 ................ loadString <</option>> 
    0431: [5] 00 ......................... add 
    0432: [4] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0439: [3] 33 12 aa ea 01 86 35 ....... debug 

    # ejs.es:14997                              }

    0446: [3] 33 12 ac ea 01 dc fb 01 .... debug 

    # ejs.es:14998                              i++

    0454: [3] 60 ......................... getLocalSlot5 
    0455: [4] 39 ......................... dup 
    0456: [5] 3f 01 ...................... inc <1> 
    0458: [5] 99 ......................... putLocalSlot5 
    0459: [4] 90 ......................... pop 
    0460: [3] 3d 8b 06 f7 f7 ............. goto <addr: 76> 
    0465: [3] 90 ......................... pop 
    0466: [2] 33 12 ae ea 01 b2 1a ....... debug 

    # ejs.es:14999                          }

    0473: [2] 33 12 b0 ea 01 84 fc 01 .... debug 

    # ejs.es:15000                          write('</select>')

    0481: [2] 56 c2 fc 01 ................ loadString <</select>> 
    0485: [3] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0492: [2] 54 ......................... loadNull 
    0493: [3] bf ......................... returnValue 
    0494: [0] 33 12 b2 ea 01 b0 15 ....... debug 

    # ejs.es:15001                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    228     231        365          365       StopIteration
1   iteration     77      80        465          465       StopIteration

VARIABLE:   [name-00]  private var name : String
VARIABLE:   [choices-01]  private var choices : Object
VARIABLE:   [defaultValue-02]  private var defaultValue : String
VARIABLE:   [options-03]  private var options : Object
VARIABLE:   [isSelected-04]  private var isSelected : Boolean
VARIABLE:   [i-05]  private var i
VARIABLE:   [choice-06]  -hoisted-6 var choice
VARIABLE:   [field-07]  -hoisted-7 var field

FUNCTION:   [HtmlConnector-42]  ejs.web const function mail(name: String, address: String, options: Object) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private address : String
     ARG:   [arg-02]   private options : Object

    0000: [0] 33 12 b8 ea 01 9c fe 01 .... debug 

    # ejs.es:15004              			write('<a href="mailto:' + address + '" ' + getOptions(options) + '>' + name + '</a>')

    0008: [0] 56 d0 ff 01 ................ loadString <<a href="mailto:> 
    0012: [1] 5c ......................... getLocalSlot1 
    0013: [2] 00 ......................... add 
    0014: [1] 56 84 eb 01 ................ loadString <" > 
    0018: [2] 00 ......................... add 
    0019: [1] 5d ......................... getLocalSlot2 
    0020: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0028: [1] 93 ......................... pushResult 
    0029: [2] 00 ......................... add 
    0030: [1] 56 8c d4 01 ................ loadString <>> 
    0034: [2] 00 ......................... add 
    0035: [1] 5b ......................... getLocalSlot0 
    0036: [2] 00 ......................... add 
    0037: [1] 56 8a bd 01 ................ loadString <</a>> 
    0041: [2] 00 ......................... add 
    0042: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0049: [0] 54 ......................... loadNull 
    0050: [1] bf ......................... returnValue 
    0051: [0] 33 12 ba ea 01 94 bd 01 .... debug 

    # ejs.es:15005              		}
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [address-01]  private var address : String
VARIABLE:   [options-02]  private var options : Object

FUNCTION:   [HtmlConnector-43]  ejs.web const function progress(initialData: Array, options: Object) : Void

     ARG:   [arg-00]   private initialData : Array
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 c0 ea 01 8e 81 02 .... debug 

    # ejs.es:15008                          write('<p>' + initialData + '%</p>')

    0008: [0] 56 f0 81 02 ................ loadString <<p>> 
    0012: [1] 5b ......................... getLocalSlot0 
    0013: [2] 00 ......................... add 
    0014: [1] 56 f8 81 02 ................ loadString <%</p>> 
    0018: [2] 00 ......................... add 
    0019: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0026: [0] 54 ......................... loadNull 
    0027: [1] bf ......................... returnValue 
    0028: [0] 33 12 c2 ea 01 94 bd 01 .... debug 

    # ejs.es:15009              		}
    
VARIABLE:   [initialData-00]  private var initialData : Array
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-44]  ejs.web const function radio(name: String, selected: String, choices: Object, options: Object) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private selected : String
     ARG:   [arg-02]   private choices : Object
     ARG:   [arg-03]   private options : Object
   LOCAL:   [local-04] var checked : String
   LOCAL:   [local-05] var v
   LOCAL:   [local-06] var item

    0000: [0] 33 12 c8 ea 01 d8 83 02 .... debug 

    # ejs.es:15012                          let checked: String

    0008: [0] 33 12 ca ea 01 98 84 02 .... debug 

    # ejs.es:15013                          if (choices is Array) {

    0016: [0] 5d ......................... getLocalSlot2 
    0017: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0019: [2] 43 ......................... isA 
    0020: [1] 07 b4 02 f7 f7 ............. branchFalse <addr: 179> 
    0025: [0] 33 12 cc ea 01 e0 84 02 .... debug 

    # ejs.es:15014                              for each (v in choices) {

    0033: [0] 5d ......................... getLocalSlot2 
    0034: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] 39 ......................... dup 
    0042: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0045: [1] 93 ......................... pushResult 
    0046: [2] 99 ......................... putLocalSlot5 
    0047: [1] 33 12 ce ea 01 b8 85 02 .... debug 

    # ejs.es:15015                                  checked = (v == selected) ? "checked" : ""

    0055: [1] 60 ......................... getLocalSlot5 
    0056: [2] 5c ......................... getLocalSlot1 
    0057: [3] 25 ......................... compareEq 
    0058: [2] 13 06 ...................... branchFalse8 <addr: 66> 
    0060: [1] 56 ba c9 01 ................ loadString <checked> 
    0064: [2] 3e 03 ...................... goto8 <addr: 69> 
    0066: [2] 56 ba 11 ................... loadString <> 
    0069: [3] 98 ......................... putLocalSlot4 
    0070: [2] 33 12 d0 ea 01 b6 86 02 .... debug 

    # ejs.es:15016                                  write(v + ' <input type="radio" name="' + name + '"' + getOptions(options) + 

    0078: [2] 33 12 d2 ea 01 b6 86 02 .... debug 

    # ejs.es:15017                                  write(v + ' <input type="radio" name="' + name + '"' + getOptions(options) + 

    0086: [2] 33 12 d0 ea 01 b6 86 02 .... debug 

    # ejs.es:15016                                  write(v + ' <input type="radio" name="' + name + '"' + getOptions(options) + 

    0094: [2] 33 12 d2 ea 01 fa 87 02 .... debug 

    # ejs.es:15017                                      ' value="' + v + '" ' + checked + ' />\r\n')

    0102: [2] 33 12 d0 ea 01 b6 86 02 .... debug 

    # ejs.es:15016                                  write(v + ' <input type="radio" name="' + name + '"' + getOptions(options) + 

    0110: [2] 60 ......................... getLocalSlot5 
    0111: [3] 56 84 89 02 ................ loadString < <input type="radio" name="> 
    0115: [4] 00 ......................... add 
    0116: [3] 5b ......................... getLocalSlot0 
    0117: [4] 00 ......................... add 
    0118: [3] 56 de 89 01 ................ loadString <"> 
    0122: [4] 00 ......................... add 
    0123: [3] 5e ......................... getLocalSlot3 
    0124: [4] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0132: [3] 93 ......................... pushResult 
    0133: [4] 00 ......................... add 
    0134: [3] 33 12 d2 ea 01 fa 87 02 .... debug 

    # ejs.es:15017                                      ' value="' + v + '" ' + checked + ' />\r\n')

    0142: [3] 56 bc 89 02 ................ loadString < value="> 
    0146: [4] 00 ......................... add 
    0147: [3] 60 ......................... getLocalSlot5 
    0148: [4] 00 ......................... add 
    0149: [3] 56 84 eb 01 ................ loadString <" > 
    0153: [4] 00 ......................... add 
    0154: [3] 5f ......................... getLocalSlot4 
    0155: [4] 00 ......................... add 
    0156: [3] 56 ce 89 02 ................ loadString < />
> 
    0160: [4] 00 ......................... add 
    0161: [3] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0168: [2] 3d 89 02 f7 f7 ............. goto <addr: 41> 
    0173: [2] 90 ......................... pop 
    0174: [1] 3d cc 02 f7 f7 ............. goto <addr: 345> 
    0179: [1] 33 12 d6 ea 01 b4 33 ....... debug 

    # ejs.es:15019                          } else {

    0186: [1] 33 12 d8 ea 01 da 89 02 .... debug 

    # ejs.es:15020                              for (item in choices) {

    0194: [1] 5d ......................... getLocalSlot2 
    0195: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0201: [1] 93 ......................... pushResult 
    0202: [2] 39 ......................... dup 
    0203: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0206: [2] 93 ......................... pushResult 
    0207: [3] 9a ......................... putLocalSlot6 
    0208: [2] 33 12 da ea 01 aa 8a 02 .... debug 

    # ejs.es:15021                                  checked = (choices[item] == selected) ? "checked" : ""

    0216: [2] 5d ......................... getLocalSlot2 
    0217: [3] 56 ba 11 ................... loadString <> 
    0220: [4] 61 ......................... getLocalSlot6 
    0221: [5] 7c ......................... getObjNameExpr 
    0222: [3] 5c ......................... getLocalSlot1 
    0223: [4] 25 ......................... compareEq 
    0224: [3] 13 06 ...................... branchFalse8 <addr: 232> 
    0226: [2] 56 ba c9 01 ................ loadString <checked> 
    0230: [3] 3e 03 ...................... goto8 <addr: 235> 
    0232: [3] 56 ba 11 ................... loadString <> 
    0235: [4] 98 ......................... putLocalSlot4 
    0236: [3] 33 12 dc ea 01 c0 8b 02 .... debug 

    # ejs.es:15022                                  write(item + ' <input type="radio" name="' + name + '"' + getOptions(options) + 

    0244: [3] 33 12 de ea 01 c0 8b 02 .... debug 

    # ejs.es:15023                                  write(item + ' <input type="radio" name="' + name + '"' + getOptions(options) + 

    0252: [3] 33 12 dc ea 01 c0 8b 02 .... debug 

    # ejs.es:15022                                  write(item + ' <input type="radio" name="' + name + '"' + getOptions(options) + 

    0260: [3] 33 12 de ea 01 8a 8d 02 .... debug 

    # ejs.es:15023                                      ' value="' + choices[item] + '" ' + checked + ' />\r\n')

    0268: [3] 33 12 dc ea 01 c0 8b 02 .... debug 

    # ejs.es:15022                                  write(item + ' <input type="radio" name="' + name + '"' + getOptions(options) + 

    0276: [3] 61 ......................... getLocalSlot6 
    0277: [4] 56 84 89 02 ................ loadString < <input type="radio" name="> 
    0281: [5] 00 ......................... add 
    0282: [4] 5b ......................... getLocalSlot0 
    0283: [5] 00 ......................... add 
    0284: [4] 56 de 89 01 ................ loadString <"> 
    0288: [5] 00 ......................... add 
    0289: [4] 5e ......................... getLocalSlot3 
    0290: [5] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0298: [4] 93 ......................... pushResult 
    0299: [5] 00 ......................... add 
    0300: [4] 33 12 de ea 01 8a 8d 02 .... debug 

    # ejs.es:15023                                      ' value="' + choices[item] + '" ' + checked + ' />\r\n')

    0308: [4] 56 bc 89 02 ................ loadString < value="> 
    0312: [5] 00 ......................... add 
    0313: [4] 5d ......................... getLocalSlot2 
    0314: [5] 56 ba 11 ................... loadString <> 
    0317: [6] 61 ......................... getLocalSlot6 
    0318: [7] 7c ......................... getObjNameExpr 
    0319: [5] 00 ......................... add 
    0320: [4] 56 84 eb 01 ................ loadString <" > 
    0324: [5] 00 ......................... add 
    0325: [4] 5f ......................... getLocalSlot4 
    0326: [5] 00 ......................... add 
    0327: [4] 56 ce 89 02 ................ loadString < />
> 
    0331: [5] 00 ......................... add 
    0332: [4] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0339: [3] 3d 9d 02 f7 f7 ............. goto <addr: 202> 
    0344: [3] 90 ......................... pop 
    0345: [2] 54 ......................... loadNull 
    0346: [3] bf ......................... returnValue 
    0347: [0] 33 12 e4 ea 01 b0 15 ....... debug 

    # ejs.es:15026                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     42      45        173          173       StopIteration
1   iteration    203     206        344          344       StopIteration

VARIABLE:   [name-00]  private var name : String
VARIABLE:   [selected-01]  private var selected : String
VARIABLE:   [choices-02]  private var choices : Object
VARIABLE:   [options-03]  private var options : Object
VARIABLE:   [checked-04]  private var checked : String
VARIABLE:   [v-05]  -hoisted-5 var v
VARIABLE:   [item-06]  -hoisted-6 var item

FUNCTION:   [HtmlConnector-45]  ejs.web const function script(uri: String, options: Object) : Void

     ARG:   [arg-00]   private uri : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 ea ea 01 ba 8f 02 .... debug 

    # ejs.es:15029                          write('<script src="' + uri + '" type="text/javascript"></script>\r\n')

    0008: [0] 56 e2 90 02 ................ loadString <<script src="> 
    0012: [1] 5b ......................... getLocalSlot0 
    0013: [2] 00 ......................... add 
    0014: [1] 56 fe 90 02 ................ loadString <" type="text/javascript"></script>
> 
    0018: [2] 00 ......................... add 
    0019: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0026: [0] 54 ......................... loadNull 
    0027: [1] bf ......................... returnValue 
    0028: [0] 33 12 ec ea 01 94 bd 01 .... debug 

    # ejs.es:15030              		}
    
VARIABLE:   [uri-00]  private var uri : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-46]  ejs.web const function status(initialData: Array, options: Object) : Void

     ARG:   [arg-00]   private initialData : Array
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 f2 ea 01 d4 92 02 .... debug 

    # ejs.es:15033                          write('<p>' + initialData + '</p>\r\n')

    0008: [0] 56 f0 81 02 ................ loadString <<p>> 
    0012: [1] 5b ......................... getLocalSlot0 
    0013: [2] 00 ......................... add 
    0014: [1] 56 bc 93 02 ................ loadString <</p>
> 
    0018: [2] 00 ......................... add 
    0019: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0026: [0] 54 ......................... loadNull 
    0027: [1] bf ......................... returnValue 
    0028: [0] 33 12 f4 ea 01 b0 15 ....... debug 

    # ejs.es:15034                      }
    
VARIABLE:   [initialData-00]  private var initialData : Array
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-47]  ejs.web const function stylesheet(uri: String, options: Object) : Void

     ARG:   [arg-00]   private uri : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 fa ea 01 c2 94 02 .... debug 

    # ejs.es:15037                          write('<link rel="stylesheet" type="text/css" href="' + uri + '" />\r\n')

    0008: [0] 56 ee 95 02 ................ loadString <<link rel="stylesheet" type="text/css" href="> 
    0012: [1] 5b ......................... getLocalSlot0 
    0013: [2] 00 ......................... add 
    0014: [1] 56 ca 96 02 ................ loadString <" />
> 
    0018: [2] 00 ......................... add 
    0019: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0026: [0] 54 ......................... loadNull 
    0027: [1] bf ......................... returnValue 
    0028: [0] 33 12 fc ea 01 94 bd 01 .... debug 

    # ejs.es:15038              		}
    
VARIABLE:   [uri-00]  private var uri : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-48]  ejs.web const function tabs(initialData: Array, options: Object) : Void

     ARG:   [arg-00]   private initialData : Array
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var t
   LOCAL:   [local-03] var name
   LOCAL:   [local-04] var uri

    0000: [0] 33 12 82 eb 01 e8 97 02 .... debug 

    # ejs.es:15041                          write('<div class="-ejs-tabs">\r\n')

    0008: [0] 56 ca 98 02 ................ loadString <<div class="-ejs-tabs">
> 
    0012: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0019: [0] 33 12 84 eb 01 fe 98 02 .... debug 

    # ejs.es:15042                          write('   <ul>\r\n')

    0027: [0] 56 c0 99 02 ................ loadString <   <ul>
> 
    0031: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0038: [0] 33 12 86 eb 01 d4 99 02 .... debug 

    # ejs.es:15043                          for each (t in initialData) {

    0046: [0] 5b ......................... getLocalSlot0 
    0047: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0053: [0] 93 ......................... pushResult 
    0054: [1] 39 ......................... dup 
    0055: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0058: [1] 93 ......................... pushResult 
    0059: [2] 96 ......................... putLocalSlot2 
    0060: [1] 33 12 88 eb 01 ac 9a 02 .... debug 

    # ejs.es:15044                              for (name in t) {

    0068: [1] 5d ......................... getLocalSlot2 
    0069: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0075: [1] 93 ......................... pushResult 
    0076: [2] 39 ......................... dup 
    0077: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0080: [2] 93 ......................... pushResult 
    0081: [3] 97 ......................... putLocalSlot3 
    0082: [2] 33 12 8a eb 01 f0 9a 02 .... debug 

    # ejs.es:15045                                  let uri = t[name]

    0090: [2] 5d ......................... getLocalSlot2 
    0091: [3] 56 ba 11 ................... loadString <> 
    0094: [4] 5e ......................... getLocalSlot3 
    0095: [5] 7c ......................... getObjNameExpr 
    0096: [3] 98 ......................... putLocalSlot4 
    0097: [2] 33 12 8c eb 01 bc 9b 02 .... debug 

    # ejs.es:15046                                  write('      <li onclick="window.location=\'' + uri + '\'"><a href="' + uri + '">' + 

    0105: [2] 33 12 8e eb 01 bc 9b 02 .... debug 

    # ejs.es:15047                                  write('      <li onclick="window.location=\'' + uri + '\'"><a href="' + uri + '">' + 

    0113: [2] 33 12 8c eb 01 bc 9b 02 .... debug 

    # ejs.es:15046                                  write('      <li onclick="window.location=\'' + uri + '\'"><a href="' + uri + '">' + 

    0121: [2] 33 12 8e eb 01 90 9d 02 .... debug 

    # ejs.es:15047                                      name + '</a></li>\r\n')

    0129: [2] 33 12 8c eb 01 bc 9b 02 .... debug 

    # ejs.es:15046                                  write('      <li onclick="window.location=\'' + uri + '\'"><a href="' + uri + '">' + 

    0137: [2] 56 f0 9d 02 ................ loadString <      <li onclick="window.location='> 
    0141: [3] 5f ......................... getLocalSlot4 
    0142: [4] 00 ......................... add 
    0143: [3] 56 ba 9e 02 ................ loadString <'"><a href="> 
    0147: [4] 00 ......................... add 
    0148: [3] 5f ......................... getLocalSlot4 
    0149: [4] 00 ......................... add 
    0150: [3] 56 a8 e3 01 ................ loadString <">> 
    0154: [4] 00 ......................... add 
    0155: [3] 33 12 8e eb 01 90 9d 02 .... debug 

    # ejs.es:15047                                      name + '</a></li>\r\n')

    0163: [3] 5e ......................... getLocalSlot3 
    0164: [4] 00 ......................... add 
    0165: [3] 56 d4 9e 02 ................ loadString <</a></li>
> 
    0169: [4] 00 ......................... add 
    0170: [3] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0177: [2] 3e 99 ...................... goto8 <addr: 76> 
    0179: [2] 90 ......................... pop 
    0180: [1] 3d 87 02 f7 f7 ............. goto <addr: 54> 
    0185: [1] 90 ......................... pop 
    0186: [0] 33 12 92 eb 01 b2 1a ....... debug 

    # ejs.es:15049                          }

    0193: [0] 33 12 94 eb 01 ec 9e 02 .... debug 

    # ejs.es:15050                          write('    </ul>')

    0201: [0] 56 aa 9f 02 ................ loadString <    </ul>> 
    0205: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0212: [0] 33 12 96 eb 01 be 9f 02 .... debug 

    # ejs.es:15051                          write('</div>')

    0220: [0] 56 f6 9f 02 ................ loadString <</div>> 
    0224: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0231: [0] 54 ......................... loadNull 
    0232: [1] bf ......................... returnValue 
    0233: [0] 33 12 98 eb 01 b0 15 ....... debug 

    # ejs.es:15052                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     77      80        179          179       StopIteration
1   iteration     55      58        185          185       StopIteration

VARIABLE:   [initialData-00]  private var initialData : Array
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [t-02]  -hoisted-2 var t
VARIABLE:   [name-03]  -hoisted-3 var name
VARIABLE:   [uri-04]  -hoisted-3 var uri

FUNCTION:   [HtmlConnector-49]  ejs.web const function table(data, options: Object) : Void

     ARG:   [arg-00]   private data
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var originalOptions
   LOCAL:   [local-03] var tableId
   LOCAL:   [local-04] var columns
   LOCAL:   [local-05] var refresh
   LOCAL:   [local-06] var sortOrder
   LOCAL:   [local-07] var sort
   LOCAL:   [local-08] var styleBody
   LOCAL:   [local-09] var row : Number
   LOCAL:   [local-10] var uri
   LOCAL:   [local-11] var gif
   LOCAL:   [local-12] var name
   LOCAL:   [local-13] var header
   LOCAL:   [local-14] var width
   LOCAL:   [local-15] var r : Object
   LOCAL:   [local-16] var uri
   LOCAL:   [local-17] var uriOptions
   LOCAL:   [local-18] var odd
   LOCAL:   [local-19] var even
   LOCAL:   [local-20] var col
   LOCAL:   [local-21] var name
   LOCAL:   [local-22] var column
   LOCAL:   [local-23] var styleCell : String
   LOCAL:   [local-24] var align
   LOCAL:   [local-25] var cellUrl

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 12 9e eb 01 9e a1 02 .... debug 

    # ejs.es:15055                          let originalOptions = options

    0015: [0] 5c ......................... getLocalSlot1 
    0016: [1] 96 ......................... putLocalSlot2 
    0017: [0] 33 12 a0 eb 01 f2 a1 02 .... debug 

    # ejs.es:15056                          let tableId = view.getNextId()

    0025: [0] 57 ......................... loadThis 
    0026: [1] 7b d6 07 ac 8d 01 .......... getObjName <view> <[HtmlConnector,private]> 
    0032: [1] 1e d8 a2 02 7c 00 .......... callObjName <getNextId> <ejs.web> <argc: 0> 
    0038: [0] 93 ......................... pushResult 
    0039: [1] 97 ......................... putLocalSlot3 
    0040: [0] 33 12 a4 eb 01 ec a2 02 .... debug 

    # ejs.es:15058                          if (data is Array) {

    0048: [0] 5b ......................... getLocalSlot0 
    0049: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0051: [2] 43 ......................... isA 
    0052: [1] 13 31 ...................... branchFalse8 <addr: 103> 
    0054: [0] 33 12 a6 eb 01 ae a3 02 .... debug 

    # ejs.es:15059                              if (data.length == 0) {

    0062: [0] 5b ......................... getLocalSlot0 
    0063: [1] 7b f4 3b 00 ................ getObjName <length> <> 
    0067: [1] 44 ......................... load0 
    0068: [2] 25 ......................... compareEq 
    0069: [1] 13 1e ...................... branchFalse8 <addr: 101> 
    0071: [0] 33 12 a8 eb 01 fe a3 02 .... debug 

    # ejs.es:15060                                  write("<p>No Data</p>")

    0079: [0] 56 d6 a4 02 ................ loadString <<p>No Data</p>> 
    0083: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0090: [0] 33 12 aa eb 01 f4 a4 02 .... debug 

    # ejs.es:15061                                  return

    0098: [0] be ......................... return 
    0099: [0] 3e 00 ...................... goto8 <addr: 101> 
    0101: [0] 3e 2e ...................... goto8 <addr: 149> 
    0103: [0] 33 12 ae eb 01 aa a5 02 .... debug 

    # ejs.es:15063                          } else if (!(data is Array) && data is Object) {

    0111: [0] 5b ......................... getLocalSlot0 
    0112: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0114: [2] 43 ......................... isA 
    0115: [1] 86 ......................... logicalNot 
    0116: [1] 39 ......................... dup 
    0117: [2] 13 06 ...................... branchFalse8 <addr: 125> 
    0119: [1] 90 ......................... pop 
    0120: [0] 5b ......................... getLocalSlot0 
    0121: [1] 7e d8 01 ................... getGlobalSlot <slot: 108> 
    0124: [2] 43 ......................... isA 
    0125: [1] 13 16 ...................... branchFalse8 <addr: 149> 
    0127: [0] 33 12 b0 eb 01 a4 a6 02 .... debug 

    # ejs.es:15064                              data = [data]

    0135: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0137: [1] 89 ......................... new 
    0138: [1] 39 ......................... dup 
    0139: [2] 5b ......................... getLocalSlot0 
    0140: [3] c5 ......................... swap 
    0141: [3] 56 ba 11 ................... loadString <> 
    0144: [4] 44 ......................... load0 
    0145: [5] b2 ......................... putObjNameExpr 
    0146: [1] 94 ......................... putLocalSlot0 
    0147: [0] 3e 00 ...................... goto8 <addr: 149> 
    0149: [0] 33 12 b2 eb 01 e0 a6 02 .... debug 

    # ejs.es:15065              			}

    0157: [0] 33 12 b6 eb 01 ea a6 02 .... debug 

    # ejs.es:15067                          options = (originalOptions && originalOptions.clone()) || {}

    0165: [0] 5d ......................... getLocalSlot2 
    0166: [1] 39 ......................... dup 
    0167: [2] 13 08 ...................... branchFalse8 <addr: 177> 
    0169: [1] 90 ......................... pop 
    0170: [0] 5d ......................... getLocalSlot2 
    0171: [1] 1e fe 35 00 00 ............. callObjName <clone> <> <argc: 0> 
    0176: [0] 93 ......................... pushResult 
    0177: [1] 39 ......................... dup 
    0178: [2] 14 05 ...................... branchTrue8 <addr: 185> 
    0180: [1] 90 ......................... pop 
    0181: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0185: [1] 95 ......................... putLocalSlot1 
    0186: [0] 33 12 b8 eb 01 fc a7 02 .... debug 

    # ejs.es:15068                          let columns = getColumns(data, options)

    0194: [0] 5b ......................... getLocalSlot0 
    0195: [1] 5c ......................... getLocalSlot1 
    0196: [2] 1f f4 a8 02 ac 8d 01 04 .... callScopedName <getColumns> <[HtmlConnector,private]> <argc: 2> 
    0204: [0] 93 ......................... pushResult 
    0205: [1] 98 ......................... putLocalSlot4 
    0206: [0] 33 12 bc eb 01 8a a9 02 .... debug 

    # ejs.es:15070                          let refresh = options.refresh || 10000

    0214: [0] 5c ......................... getLocalSlot1 
    0215: [1] 7b f0 a9 02 ba 11 .......... getObjName <refresh> <> 
    0221: [1] 39 ......................... dup 
    0222: [2] 14 05 ...................... branchTrue8 <addr: 229> 
    0224: [1] 90 ......................... pop 
    0225: [0] 51 a0 9c 01 ................ loadInt <10000> 
    0229: [1] 99 ......................... putLocalSlot5 
    0230: [0] 33 12 be eb 01 80 aa 02 .... debug 

    # ejs.es:15071                          let sortOrder = options.sortOrder || ""

    0238: [0] 5c ......................... getLocalSlot1 
    0239: [1] 7b e8 aa 02 ba 11 .......... getObjName <sortOrder> <> 
    0245: [1] 39 ......................... dup 
    0246: [2] 14 04 ...................... branchTrue8 <addr: 252> 
    0248: [1] 90 ......................... pop 
    0249: [0] 56 ba 11 ................... loadString <> 
    0252: [1] 9a ......................... putLocalSlot6 
    0253: [0] 33 12 c0 eb 01 fc aa 02 .... debug 

    # ejs.es:15072                          let sort = options.sort

    0261: [0] 5c ......................... getLocalSlot1 
    0262: [1] 7b c4 ab 02 ba 11 .......... getObjName <sort> <> 
    0268: [1] 9b ......................... putLocalSlot7 
    0269: [0] 33 12 c2 eb 01 ce ab 02 .... debug 

    # ejs.es:15073                          if (sort == undefined) sort = true

    0277: [0] 62 ......................... getLocalSlot7 
    0278: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0281: [2] 25 ......................... compareEq 
    0282: [1] 13 06 ...................... branchFalse8 <addr: 290> 
    0284: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0287: [1] 9b ......................... putLocalSlot7 
    0288: [0] 3e 00 ...................... goto8 <addr: 290> 
    0290: [0] 33 12 c8 eb 01 ac ac 02 .... debug 

    # ejs.es:15076                          if (!options.ajax) {

    0298: [0] 5c ......................... getLocalSlot1 
    0299: [1] 7b ee ac 02 ba 11 .......... getObjName <ajax> <> 
    0305: [1] 86 ......................... logicalNot 
    0306: [1] 07 ac 04 f7 f7 ............. branchFalse <addr: 589> 
    0311: [0] 33 12 ca eb 01 90 ad 02 .... debug 

    # ejs.es:15077                              let uri = (data is String) ? data : null

    0319: [0] 5b ......................... getLocalSlot0 
    0320: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0323: [2] 43 ......................... isA 
    0324: [1] 13 03 ...................... branchFalse8 <addr: 329> 
    0326: [0] 5b ......................... getLocalSlot0 
    0327: [1] 3e 02 ...................... goto8 <addr: 331> 
    0329: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0331: [2] b8 14 ...................... putLocalSlot <slot: 10> 
    0333: [1] 33 12 cc eb 01 82 ae 02 .... debug 

    # ejs.es:15078                              uri ||= options.data

    0341: [1] 7f 14 ...................... getLocalSlot <slot: 10> 
    0343: [2] 39 ......................... dup 
    0344: [3] 14 07 ...................... branchTrue8 <addr: 353> 
    0346: [2] 90 ......................... pop 
    0347: [1] 5c ......................... getLocalSlot1 
    0348: [2] 7b ea 69 ba 11 ............. getObjName <data> <> 
    0353: [2] b8 14 ...................... putLocalSlot <slot: 10> 
    0355: [1] 33 12 ce eb 01 cc ae 02 .... debug 

    # ejs.es:15079                              write('  <script type="text/javascript">\r\n' +

    0363: [1] 33 12 d8 eb 01 cc ae 02 .... debug 

    # ejs.es:15084                              write('  <script type="text/javascript">\r\n' +

    0371: [1] 33 12 ce eb 01 cc ae 02 .... debug 

    # ejs.es:15079                              write('  <script type="text/javascript">\r\n' +

    0379: [1] 33 12 d6 eb 01 cc af 02 .... debug 

    # ejs.es:15083                                  '})});\r\n' + 

    0387: [1] 33 12 d4 eb 01 92 b0 02 .... debug 

    # ejs.es:15082                                  ((uri) ? (', uri: "' + uri + '"'): "") + 

    0395: [1] 33 12 d2 eb 01 8e b1 02 .... debug 

    # ejs.es:15081                                  ', sort: "' + sort + '", sortOrder: "' + sortOrder + '"' + 

    0403: [1] 33 12 d0 eb 01 ae b2 02 .... debug 

    # ejs.es:15080                                  '   $(function() { $("#' + tableId + '").eTable({ refresh: ' + refresh + 

    0411: [1] 33 12 ce eb 01 cc ae 02 .... debug 

    # ejs.es:15079                              write('  <script type="text/javascript">\r\n' +

    0419: [1] 56 ea b3 02 ................ loadString <  <script type="text/javascript">
> 
    0423: [2] 33 12 d0 eb 01 ae b2 02 .... debug 

    # ejs.es:15080                                  '   $(function() { $("#' + tableId + '").eTable({ refresh: ' + refresh + 

    0431: [2] 56 b2 b4 02 ................ loadString <   $(function() { $("#> 
    0435: [3] 00 ......................... add 
    0436: [2] 5e ......................... getLocalSlot3 
    0437: [3] 00 ......................... add 
    0438: [2] 56 e0 b4 02 ................ loadString <").eTable({ refresh: > 
    0442: [3] 00 ......................... add 
    0443: [2] 60 ......................... getLocalSlot5 
    0444: [3] 00 ......................... add 
    0445: [2] 33 12 d2 eb 01 8e b1 02 .... debug 

    # ejs.es:15081                                  ', sort: "' + sort + '", sortOrder: "' + sortOrder + '"' + 

    0453: [2] 56 8c b5 02 ................ loadString <, sort: "> 
    0457: [3] 00 ......................... add 
    0458: [2] 62 ......................... getLocalSlot7 
    0459: [3] 00 ......................... add 
    0460: [2] 56 a0 b5 02 ................ loadString <", sortOrder: "> 
    0464: [3] 00 ......................... add 
    0465: [2] 61 ......................... getLocalSlot6 
    0466: [3] 00 ......................... add 
    0467: [2] 56 de 89 01 ................ loadString <"> 
    0471: [3] 00 ......................... add 
    0472: [2] 33 12 d4 eb 01 92 b0 02 .... debug 

    # ejs.es:15082                                  ((uri) ? (', uri: "' + uri + '"'): "") + 

    0480: [2] 7f 14 ...................... getLocalSlot <slot: 10> 
    0482: [3] 13 0e ...................... branchFalse8 <addr: 498> 
    0484: [2] 56 c0 b5 02 ................ loadString <, uri: "> 
    0488: [3] 7f 14 ...................... getLocalSlot <slot: 10> 
    0490: [4] 00 ......................... add 
    0491: [3] 56 de 89 01 ................ loadString <"> 
    0495: [4] 00 ......................... add 
    0496: [3] 3e 03 ...................... goto8 <addr: 501> 
    0498: [3] 56 ba 11 ................... loadString <> 
    0501: [4] 00 ......................... add 
    0502: [3] 33 12 d6 eb 01 cc af 02 .... debug 

    # ejs.es:15083                                  '})});\r\n' + 

    0510: [3] 56 d2 b5 02 ................ loadString <})});
> 
    0514: [4] 00 ......................... add 
    0515: [3] 33 12 d8 eb 01 e2 b5 02 .... debug 

    # ejs.es:15084                                  '  </script>\r\n')

    0523: [3] 56 b0 b6 02 ................ loadString <  </script>
> 
    0527: [4] 00 ......................... add 
    0528: [3] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0535: [2] 33 12 da eb 01 cc b6 02 .... debug 

    # ejs.es:15085                              if (data is String) {

    0543: [2] 5b ......................... getLocalSlot0 
    0544: [3] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0547: [4] 43 ......................... isA 
    0548: [3] 13 25 ...................... branchFalse8 <addr: 587> 
    0550: [2] 33 12 de eb 01 98 b7 02 .... debug 

    # ejs.es:15087                                  write('<table id="' + tableId + '" class="-ejs-table"></table>\r\n')

    0558: [2] 56 ca b8 02 ................ loadString <<table id="> 
    0562: [3] 5e ......................... getLocalSlot3 
    0563: [4] 00 ......................... add 
    0564: [3] 56 e2 b8 02 ................ loadString <" class="-ejs-table"></table>
> 
    0568: [4] 00 ......................... add 
    0569: [3] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0576: [2] 33 12 e0 eb 01 f4 a4 02 .... debug 

    # ejs.es:15088                                  return

    0584: [2] be ......................... return 
    0585: [0] 3e 00 ...................... goto8 <addr: 587> 
    0587: [0] 3e 5b ...................... goto8 <addr: 680> 
    0589: [0] 33 12 e4 eb 01 b4 33 ....... debug 

    # ejs.es:15090                          } else {

    0596: [0] 33 12 e8 eb 01 a2 b9 02 .... debug 

    # ejs.es:15092                              write('  <script type="text/javascript">$("#' + tableId + '").eTableSetOptions({ refresh: ' + refresh +

    0604: [0] 33 12 e6 eb 01 a2 b9 02 .... debug 

    # ejs.es:15091                              write('  <script type="text/javascript">$("#' + tableId + '").eTableSetOptions({ refresh: ' + refresh +

    0612: [0] 33 12 e8 eb 01 92 bb 02 .... debug 

    # ejs.es:15092                                  ', sort: "' + sort + '", sortOrder: "' + sortOrder + '"})' + ';</script>\r\n')

    0620: [0] 33 12 e6 eb 01 a2 b9 02 .... debug 

    # ejs.es:15091                              write('  <script type="text/javascript">$("#' + tableId + '").eTableSetOptions({ refresh: ' + refresh +

    0628: [0] 56 d8 bc 02 ................ loadString <  <script type="text/javascript">$("#> 
    0632: [1] 5e ......................... getLocalSlot3 
    0633: [2] 00 ......................... add 
    0634: [1] 56 a4 bd 02 ................ loadString <").eTableSetOptions({ refresh: > 
    0638: [2] 00 ......................... add 
    0639: [1] 60 ......................... getLocalSlot5 
    0640: [2] 00 ......................... add 
    0641: [1] 33 12 e8 eb 01 92 bb 02 .... debug 

    # ejs.es:15092                                  ', sort: "' + sort + '", sortOrder: "' + sortOrder + '"})' + ';</script>\r\n')

    0649: [1] 56 8c b5 02 ................ loadString <, sort: "> 
    0653: [2] 00 ......................... add 
    0654: [1] 62 ......................... getLocalSlot7 
    0655: [2] 00 ......................... add 
    0656: [1] 56 a0 b5 02 ................ loadString <", sortOrder: "> 
    0660: [2] 00 ......................... add 
    0661: [1] 61 ......................... getLocalSlot6 
    0662: [2] 00 ......................... add 
    0663: [1] 56 e4 bd 02 ................ loadString <"})> 
    0667: [2] 00 ......................... add 
    0668: [1] 56 ec bd 02 ................ loadString <;</script>
> 
    0672: [2] 00 ......................... add 
    0673: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0680: [0] 33 12 ea eb 01 b2 1a ....... debug 

    # ejs.es:15093                          }

    0687: [0] 33 12 ec eb 01 86 be 02 .... debug 

    # ejs.es:15094              			write('  <table id="' + tableId + '" class="-ejs-table ' + (options.styleTable || "" ) + '">\r\n')

    0695: [0] 56 d2 bf 02 ................ loadString <  <table id="> 
    0699: [1] 5e ......................... getLocalSlot3 
    0700: [2] 00 ......................... add 
    0701: [1] 56 ee bf 02 ................ loadString <" class="-ejs-table > 
    0705: [2] 00 ......................... add 
    0706: [1] 5c ......................... getLocalSlot1 
    0707: [2] 7b 98 c0 02 ba 11 .......... getObjName <styleTable> <> 
    0713: [2] 39 ......................... dup 
    0714: [3] 14 04 ...................... branchTrue8 <addr: 720> 
    0716: [2] 90 ......................... pop 
    0717: [1] 56 ba 11 ................... loadString <> 
    0720: [2] 00 ......................... add 
    0721: [1] 56 ae c0 02 ................ loadString <">
> 
    0725: [2] 00 ......................... add 
    0726: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0733: [0] 33 12 f6 eb 01 b8 c0 02 .... debug 

    # ejs.es:15099                          if (options.showHeader != false) {

    0741: [0] 5c ......................... getLocalSlot1 
    0742: [1] 7b 96 c1 02 ba 11 .......... getObjName <showHeader> <> 
    0748: [1] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0750: [2] 2c ......................... compareNe 
    0751: [1] 07 9e 09 f7 f7 ............. branchFalse <addr: 1347> 
    0756: [0] 33 12 f8 eb 01 ac c1 02 .... debug 

    # ejs.es:15100                              write('    <thead class="' + (options.styleHeader || "") + '">\r\n')

    0764: [0] 56 d6 c2 02 ................ loadString <    <thead class="> 
    0768: [1] 5c ......................... getLocalSlot1 
    0769: [2] 7b fc c2 02 ba 11 .......... getObjName <styleHeader> <> 
    0775: [2] 39 ......................... dup 
    0776: [3] 14 04 ...................... branchTrue8 <addr: 782> 
    0778: [2] 90 ......................... pop 
    0779: [1] 56 ba 11 ................... loadString <> 
    0782: [2] 00 ......................... add 
    0783: [1] 56 ae c0 02 ................ loadString <">
> 
    0787: [2] 00 ......................... add 
    0788: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0795: [0] 33 12 fa eb 01 94 c3 02 .... debug 

    # ejs.es:15101                              if (options.title) {

    0803: [0] 5c ......................... getLocalSlot1 
    0804: [1] 7b de c3 02 ba 11 .......... getObjName <title> <> 
    0810: [1] 07 bc 04 f7 f7 ............. branchFalse <addr: 1101> 
    0815: [0] 33 12 fc eb 01 8a c4 02 .... debug 

    # ejs.es:15102                                  let gif = request.home.join("/web/images/green.gif")

    0823: [0] 57 ......................... loadThis 
    0824: [1] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    0830: [1] 7b 9c c5 02 c4 08 .......... getObjName <home> <public> 
    0836: [1] 56 a6 c5 02 ................ loadString </web/images/green.gif> 
    0840: [2] 1e f6 25 00 02 ............. callObjName <join> <> <argc: 1> 
    0845: [0] 93 ......................... pushResult 
    0846: [1] b8 16 ...................... putLocalSlot <slot: 11> 
    0848: [0] 33 12 fe eb 01 d2 c5 02 .... debug 

    # ejs.es:15103                                  if (columns.length < 2) {

    0856: [0] 5f ......................... getLocalSlot4 
    0857: [1] 7b f4 3b 00 ................ getObjName <length> <> 
    0861: [1] 46 ......................... load2 
    0862: [2] 2b ......................... compareLt 
    0863: [1] 13 69 ...................... branchFalse8 <addr: 970> 
    0865: [0] 33 12 86 ec 01 ae c6 02 .... debug 

    # ejs.es:15107                                      write('  <tr><td>' + options.title + ' ' + '<img src="' + 

    0873: [0] 33 12 82 ec 01 ae c6 02 .... debug 

    # ejs.es:15105                                      write('  <tr><td>' + options.title + ' ' + '<img src="' + 

    0881: [0] 33 12 86 ec 01 d4 c7 02 .... debug 

    # ejs.es:15107                                          tableId + '\').eTableToggleRefresh();" />\r\n  </td></tr>\r\n')

    0889: [0] 33 12 84 ec 01 8c c9 02 .... debug 

    # ejs.es:15106                                          gif + '" class="-ejs-table-download -ejs-clickable" onclick="$(\'#' + 

    0897: [0] 33 12 82 ec 01 ae c6 02 .... debug 

    # ejs.es:15105                                      write('  <tr><td>' + options.title + ' ' + '<img src="' + 

    0905: [0] 56 d2 ca 02 ................ loadString <  <tr><td>> 
    0909: [1] 5c ......................... getLocalSlot1 
    0910: [2] 7b de c3 02 ba 11 .......... getObjName <title> <> 
    0916: [2] 00 ......................... add 
    0917: [1] 56 e8 ca 02 ................ loadString < > 
    0921: [2] 00 ......................... add 
    0922: [1] 56 d0 de 01 ................ loadString <<img src="> 
    0926: [2] 00 ......................... add 
    0927: [1] 33 12 84 ec 01 8c c9 02 .... debug 

    # ejs.es:15106                                          gif + '" class="-ejs-table-download -ejs-clickable" onclick="$(\'#' + 

    0935: [1] 7f 16 ...................... getLocalSlot <slot: 11> 
    0937: [2] 00 ......................... add 
    0938: [1] 56 ec ca 02 ................ loadString <" class="-ejs-table-download -ejs-clickable" onclick="$('#> 
    0942: [2] 00 ......................... add 
    0943: [1] 33 12 86 ec 01 d4 c7 02 .... debug 

    # ejs.es:15107                                          tableId + '\').eTableToggleRefresh();" />\r\n  </td></tr>\r\n')

    0951: [1] 5e ......................... getLocalSlot3 
    0952: [2] 00 ......................... add 
    0953: [1] 56 e2 cb 02 ................ loadString <').eTableToggleRefresh();" />
  </td></tr>
> 
    0957: [2] 00 ......................... add 
    0958: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0965: [0] 3d 82 02 f7 f7 ............. goto <addr: 1099> 
    0970: [0] 33 12 88 ec 01 b2 f8 01 .... debug 

    # ejs.es:15108                                  } else {

    0978: [0] 33 12 90 ec 01 be cc 02 .... debug 

    # ejs.es:15112                                      write('  <tr><td colspan="' + (columns.length - 1) + '">' + options.title + 

    0986: [0] 33 12 8a ec 01 be cc 02 .... debug 

    # ejs.es:15109                                      write('  <tr><td colspan="' + (columns.length - 1) + '">' + options.title + 

    0994: [0] 33 12 8e ec 01 88 ce 02 .... debug 

    # ejs.es:15111                                          '" class="-ejs-table-download -ejs-clickable" onclick="$(\'#' + tableId + 

    1002: [0] 33 12 8c ec 01 d6 cf 02 .... debug 

    # ejs.es:15110                                          '</td><td class="right">' + '<img src="' + gif + 

    1010: [0] 33 12 8a ec 01 be cc 02 .... debug 

    # ejs.es:15109                                      write('  <tr><td colspan="' + (columns.length - 1) + '">' + options.title + 

    1018: [0] 56 f2 d0 02 ................ loadString <  <tr><td colspan="> 
    1022: [1] 5f ......................... getLocalSlot4 
    1023: [2] 7b f4 3b 00 ................ getObjName <length> <> 
    1027: [2] 45 ......................... load1 
    1028: [3] c3 ......................... sub 
    1029: [2] 00 ......................... add 
    1030: [1] 56 a8 e3 01 ................ loadString <">> 
    1034: [2] 00 ......................... add 
    1035: [1] 5c ......................... getLocalSlot1 
    1036: [2] 7b de c3 02 ba 11 .......... getObjName <title> <> 
    1042: [2] 00 ......................... add 
    1043: [1] 33 12 8c ec 01 d6 cf 02 .... debug 

    # ejs.es:15110                                          '</td><td class="right">' + '<img src="' + gif + 

    1051: [1] 56 9a d1 02 ................ loadString <</td><td class="right">> 
    1055: [2] 00 ......................... add 
    1056: [1] 56 d0 de 01 ................ loadString <<img src="> 
    1060: [2] 00 ......................... add 
    1061: [1] 7f 16 ...................... getLocalSlot <slot: 11> 
    1063: [2] 00 ......................... add 
    1064: [1] 33 12 8e ec 01 88 ce 02 .... debug 

    # ejs.es:15111                                          '" class="-ejs-table-download -ejs-clickable" onclick="$(\'#' + tableId + 

    1072: [1] 56 ec ca 02 ................ loadString <" class="-ejs-table-download -ejs-clickable" onclick="$('#> 
    1076: [2] 00 ......................... add 
    1077: [1] 5e ......................... getLocalSlot3 
    1078: [2] 00 ......................... add 
    1079: [1] 33 12 90 ec 01 ca d1 02 .... debug 

    # ejs.es:15112                                          '\').eTableToggleRefresh();" />\r\n  </td></tr>\r\n')

    1087: [1] 56 e2 cb 02 ................ loadString <').eTableToggleRefresh();" />
  </td></tr>
> 
    1091: [2] 00 ......................... add 
    1092: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    1099: [0] 3e 00 ...................... goto8 <addr: 1101> 
    1101: [0] 33 12 9c ec 01 ee d2 02 .... debug 

    # ejs.es:15118                              if (columns) {

    1109: [0] 5f ......................... getLocalSlot4 
    1110: [1] 07 98 03 f7 f7 ............. branchFalse <addr: 1319> 
    1115: [0] 33 12 9e ec 01 ac d3 02 .... debug 

    # ejs.es:15119                                  write('    <tr>\r\n')

    1123: [0] 56 80 d4 02 ................ loadString <    <tr>
> 
    1127: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    1134: [0] 33 12 a0 ec 01 96 d4 02 .... debug 

    # ejs.es:15120                                  for (let name in columns) {

    1142: [0] 5f ......................... getLocalSlot4 
    1143: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    1149: [0] 93 ......................... pushResult 
    1150: [1] 39 ......................... dup 
    1151: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    1154: [1] 93 ......................... pushResult 
    1155: [2] b8 18 ...................... putLocalSlot <slot: 12> 
    1157: [1] 33 12 a2 ec 01 8e d5 02 .... debug 

    # ejs.es:15121                                      if (name == null) continue

    1165: [1] 7f 18 ...................... getLocalSlot <slot: 12> 
    1167: [2] 7e 7a ...................... getGlobalSlot <slot: 61> 
    1169: [3] 25 ......................... compareEq 
    1170: [2] 13 07 ...................... branchFalse8 <addr: 1179> 
    1172: [1] 3d 37 f7 f7 f7 ............. goto <addr: 1150> 
    1177: [1] 3e 00 ...................... goto8 <addr: 1179> 
    1179: [1] 33 12 a4 ec 01 f4 d5 02 .... debug 

    # ejs.es:15122                                      let header = (columns[name].header) ? (columns[name].header) : name.toPascal()

    1187: [1] 5f ......................... getLocalSlot4 
    1188: [2] 56 ba 11 ................... loadString <> 
    1191: [3] 7f 18 ...................... getLocalSlot <slot: 12> 
    1193: [4] 7c ......................... getObjNameExpr 
    1194: [2] 7b c2 d7 02 00 ............. getObjName <header> <> 
    1199: [2] 13 0e ...................... branchFalse8 <addr: 1215> 
    1201: [1] 5f ......................... getLocalSlot4 
    1202: [2] 56 ba 11 ................... loadString <> 
    1205: [3] 7f 18 ...................... getLocalSlot <slot: 12> 
    1207: [4] 7c ......................... getObjNameExpr 
    1208: [2] 7b c2 d7 02 00 ............. getObjName <header> <> 
    1213: [2] 3e 08 ...................... goto8 <addr: 1223> 
    1215: [2] 7f 18 ...................... getLocalSlot <slot: 12> 
    1217: [3] 1e 90 1c 00 00 ............. callObjName <toPascal> <> <argc: 0> 
    1222: [2] 93 ......................... pushResult 
    1223: [3] b8 1a ...................... putLocalSlot <slot: 13> 
    1225: [2] 33 12 a6 ec 01 d0 d7 02 .... debug 

    # ejs.es:15123                                      let width = (columns[name].width) ? ' width="' + columns[name].width + '"' : ''

    1233: [2] 5f ......................... getLocalSlot4 
    1234: [3] 56 ba 11 ................... loadString <> 
    1237: [4] 7f 18 ...................... getLocalSlot <slot: 12> 
    1239: [5] 7c ......................... getObjNameExpr 
    1240: [3] 7b a0 d9 02 00 ............. getObjName <width> <> 
    1245: [3] 13 18 ...................... branchFalse8 <addr: 1271> 
    1247: [2] 56 ac d9 02 ................ loadString < width="> 
    1251: [3] 5f ......................... getLocalSlot4 
    1252: [4] 56 ba 11 ................... loadString <> 
    1255: [5] 7f 18 ...................... getLocalSlot <slot: 12> 
    1257: [6] 7c ......................... getObjNameExpr 
    1258: [4] 7b a0 d9 02 00 ............. getObjName <width> <> 
    1263: [4] 00 ......................... add 
    1264: [3] 56 de 89 01 ................ loadString <"> 
    1268: [4] 00 ......................... add 
    1269: [3] 3e 03 ...................... goto8 <addr: 1274> 
    1271: [3] 56 ba 11 ................... loadString <> 
    1274: [4] b8 1c ...................... putLocalSlot <slot: 14> 
    1276: [3] 33 12 a8 ec 01 be d9 02 .... debug 

    # ejs.es:15124                                      write('    <th ' + width + '>' + header + '</th>\r\n')

    1284: [3] 56 dc da 02 ................ loadString <    <th > 
    1288: [4] 7f 1c ...................... getLocalSlot <slot: 14> 
    1290: [5] 00 ......................... add 
    1291: [4] 56 8c d4 01 ................ loadString <>> 
    1295: [5] 00 ......................... add 
    1296: [4] 7f 1a ...................... getLocalSlot <slot: 13> 
    1298: [5] 00 ......................... add 
    1299: [4] 56 ee da 02 ................ loadString <</th>
> 
    1303: [5] 00 ......................... add 
    1304: [4] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    1311: [3] 3d cd 02 f7 f7 ............. goto <addr: 1150> 
    1316: [3] 90 ......................... pop 
    1317: [2] 3e 00 ...................... goto8 <addr: 1319> 
    1319: [2] 33 12 ac ec 01 86 35 ....... debug 

    # ejs.es:15126                              }

    1326: [2] 33 12 ae ec 01 fe da 02 .... debug 

    # ejs.es:15127                              write("     </tr>\r\n    </thead>\r\n")

    1334: [2] 56 ee db 02 ................ loadString <     </tr>
    </thead>
> 
    1338: [3] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    1345: [2] 3e 00 ...................... goto8 <addr: 1347> 
    1347: [2] 33 12 b0 ec 01 b2 1a ....... debug 

    # ejs.es:15128                          }

    1354: [2] 33 12 b4 ec 01 b8 dc 02 .... debug 

    # ejs.es:15130                          let styleBody = options.styleBody || ""

    1362: [2] 5c ......................... getLocalSlot1 
    1363: [3] 7b a4 dc 02 ba 11 .......... getObjName <styleBody> <> 
    1369: [3] 39 ......................... dup 
    1370: [4] 14 04 ...................... branchTrue8 <addr: 1376> 
    1372: [3] 90 ......................... pop 
    1373: [2] 56 ba 11 ................... loadString <> 
    1376: [3] 9c ......................... putLocalSlot8 
    1377: [2] 33 12 b6 ec 01 a0 dd 02 .... debug 

    # ejs.es:15131                          write('    <tbody class="' + styleBody + '">\r\n')

    1385: [2] 56 9e de 02 ................ loadString <    <tbody class="> 
    1389: [3] 63 ......................... getLocalSlot8 
    1390: [4] 00 ......................... add 
    1391: [3] 56 ae c0 02 ................ loadString <">
> 
    1395: [4] 00 ......................... add 
    1396: [3] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    1403: [2] 33 12 ba ec 01 c4 de 02 .... debug 

    # ejs.es:15133                          let row: Number = 0

    1411: [2] 44 ......................... load0 
    1412: [3] 9d ......................... putLocalSlot9 
    1413: [2] 33 12 be ec 01 8c df 02 .... debug 

    # ejs.es:15135              			for each (let r: Object in data) {

    1421: [2] 5b ......................... getLocalSlot0 
    1422: [3] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    1428: [2] 93 ......................... pushResult 
    1429: [3] 39 ......................... dup 
    1430: [4] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    1433: [3] 93 ......................... pushResult 
    1434: [4] b8 1e ...................... putLocalSlot <slot: 15> 
    1436: [3] 33 12 c0 ec 01 f0 df 02 .... debug 

    # ejs.es:15136                              let uri = null

    1444: [3] 7e 7a ...................... getGlobalSlot <slot: 61> 
    1446: [4] b8 20 ...................... putLocalSlot <slot: 16> 
    1448: [3] 33 12 c2 ec 01 ae e0 02 .... debug 

    # ejs.es:15137                              let uriOptions = { controller: options.controller, query: options.query }

    1456: [3] 56 00 ...................... loadString <> 
    1458: [4] 56 f8 17 ................... loadString <controller> 
    1461: [5] 5c ......................... getLocalSlot1 
    1462: [6] 7b f8 17 ba 11 ............. getObjName <controller> <> 
    1467: [6] 56 00 ...................... loadString <> 
    1469: [7] 56 fe 99 01 ................ loadString <query> 
    1473: [8] 5c ......................... getLocalSlot1 
    1474: [9] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    1480: [9] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    1486: [4] b8 22 ...................... putLocalSlot <slot: 17> 
    1488: [3] 33 12 c4 ec 01 f8 e1 02 .... debug 

    # ejs.es:15138                              if (options.click) {

    1496: [3] 5c ......................... getLocalSlot1 
    1497: [4] 7b c2 e2 02 ba 11 .......... getObjName <click> <> 
    1503: [4] 07 e2 03 f7 f7 ............. branchFalse <addr: 1749> 
    1508: [3] 33 12 c6 ec 01 ce e2 02 .... debug 

    # ejs.es:15139                                  uriOptions.query = (options.query is Array) ? options.query[row] : options.query

    1516: [3] 5c ......................... getLocalSlot1 
    1517: [4] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    1523: [4] 7e 0a ...................... getGlobalSlot <slot: 5> 
    1525: [5] 43 ......................... isA 
    1526: [4] 13 0e ...................... branchFalse8 <addr: 1542> 
    1528: [3] 5c ......................... getLocalSlot1 
    1529: [4] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    1535: [4] 56 ba 11 ................... loadString <> 
    1538: [5] 64 ......................... getLocalSlot9 
    1539: [6] 7c ......................... getObjNameExpr 
    1540: [4] 3e 07 ...................... goto8 <addr: 1549> 
    1542: [4] 5c ......................... getLocalSlot1 
    1543: [5] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    1549: [5] 7f 22 ...................... getLocalSlot <slot: 17> 
    1551: [6] b3 fe 99 01 00 ............. putObjName <query> <> 
    1556: [4] 33 12 c8 ec 01 98 e4 02 .... debug 

    # ejs.es:15140                                  if (options.click is Array) {

    1564: [4] 5c ......................... getLocalSlot1 
    1565: [5] 7b c2 e2 02 ba 11 .......... getObjName <click> <> 
    1571: [5] 7e 0a ...................... getGlobalSlot <slot: 5> 
    1573: [6] 43 ......................... isA 
    1574: [5] 13 63 ...................... branchFalse8 <addr: 1675> 
    1576: [4] 33 12 ca ec 01 fc e4 02 .... debug 

    # ejs.es:15141                                      if (options.click[row] is String) {

    1584: [4] 5c ......................... getLocalSlot1 
    1585: [5] 7b c2 e2 02 ba 11 .......... getObjName <click> <> 
    1591: [5] 56 ba 11 ................... loadString <> 
    1594: [6] 64 ......................... getLocalSlot9 
    1595: [7] 7c ......................... getObjNameExpr 
    1596: [5] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    1599: [6] 43 ......................... isA 
    1600: [5] 13 47 ...................... branchFalse8 <addr: 1673> 
    1602: [4] 33 12 cc ec 01 f4 e5 02 .... debug 

    # ejs.es:15142                                          uri = request.makeUri(blend(uriOptions, {action: options.click[row], id: r.id}))

    1610: [4] 57 ......................... loadThis 
    1611: [5] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    1617: [5] 7f 22 ...................... getLocalSlot <slot: 17> 
    1619: [6] 56 00 ...................... loadString <> 
    1621: [7] 56 ee 01 ................... loadString <action> 
    1624: [8] 5c ......................... getLocalSlot1 
    1625: [9] 7b c2 e2 02 ba 11 .......... getObjName <click> <> 
    1631: [9] 56 ba 11 ................... loadString <> 
    1634: [10] 64 ......................... getLocalSlot9 
    1635: [11] 7c ......................... getObjNameExpr 
    1636: [9] 56 00 ...................... loadString <> 
    1638: [10] 56 ae 92 01 ................ loadString <id> 
    1642: [11] 7f 1e ...................... getLocalSlot <slot: 15> 
    1644: [12] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    1650: [12] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    1656: [7] 17 9c 01 04 ................ callGlobalSlot <slot: 78> <argc: 2> 
    1660: [5] 93 ......................... pushResult 
    1661: [6] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    1668: [4] 93 ......................... pushResult 
    1669: [5] b8 20 ...................... putLocalSlot <slot: 16> 
    1671: [4] 3e 00 ...................... goto8 <addr: 1673> 
    1673: [4] 3e 48 ...................... goto8 <addr: 1747> 
    1675: [4] 33 12 d0 ec 01 b2 f8 01 .... debug 

    # ejs.es:15144                                  } else {

    1683: [4] 33 12 d2 ec 01 ce e7 02 .... debug 

    # ejs.es:15145                                      uri = request.makeUri(blend(uriOptions, {action: options.click, id: r.id}))

    1691: [4] 57 ......................... loadThis 
    1692: [5] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    1698: [5] 7f 22 ...................... getLocalSlot <slot: 17> 
    1700: [6] 56 00 ...................... loadString <> 
    1702: [7] 56 ee 01 ................... loadString <action> 
    1705: [8] 5c ......................... getLocalSlot1 
    1706: [9] 7b c2 e2 02 ba 11 .......... getObjName <click> <> 
    1712: [9] 56 00 ...................... loadString <> 
    1714: [10] 56 ae 92 01 ................ loadString <id> 
    1718: [11] 7f 1e ...................... getLocalSlot <slot: 15> 
    1720: [12] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    1726: [12] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    1732: [7] 17 9c 01 04 ................ callGlobalSlot <slot: 78> <argc: 2> 
    1736: [5] 93 ......................... pushResult 
    1737: [6] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    1744: [4] 93 ......................... pushResult 
    1745: [5] b8 20 ...................... putLocalSlot <slot: 16> 
    1747: [4] 3e 00 ...................... goto8 <addr: 1749> 
    1749: [4] 33 12 d6 ec 01 86 35 ....... debug 

    # ejs.es:15147                              }

    1756: [4] 33 12 d8 ec 01 9e e9 02 .... debug 

    # ejs.es:15148                              let odd = options.styleOddRow || "-ejs-oddRow"

    1764: [4] 5c ......................... getLocalSlot1 
    1765: [5] 7b 9c ea 02 ba 11 .......... getObjName <styleOddRow> <> 
    1771: [5] 39 ......................... dup 
    1772: [6] 14 05 ...................... branchTrue8 <addr: 1779> 
    1774: [5] 90 ......................... pop 
    1775: [4] 56 b4 ea 02 ................ loadString <-ejs-oddRow> 
    1779: [5] b8 24 ...................... putLocalSlot <slot: 18> 
    1781: [4] 33 12 da ec 01 cc ea 02 .... debug 

    # ejs.es:15149                              let even = options.styleOddRow || "-ejs-evenRow"

    1789: [4] 5c ......................... getLocalSlot1 
    1790: [5] 7b 9c ea 02 ba 11 .......... getObjName <styleOddRow> <> 
    1796: [5] 39 ......................... dup 
    1797: [6] 14 05 ...................... branchTrue8 <addr: 1804> 
    1799: [5] 90 ......................... pop 
    1800: [4] 56 d8 eb 02 ................ loadString <-ejs-evenRow> 
    1804: [5] b8 26 ...................... putLocalSlot <slot: 19> 
    1806: [4] 33 12 dc ec 01 f2 eb 02 .... debug 

    # ejs.es:15150                              styleRow = ((row % 2) ? odd : even) || ""

    1814: [4] 64 ......................... getLocalSlot9 
    1815: [5] 46 ......................... load2 
    1816: [6] bd ......................... rem 
    1817: [5] 13 04 ...................... branchFalse8 <addr: 1823> 
    1819: [4] 7f 24 ...................... getLocalSlot <slot: 18> 
    1821: [5] 3e 02 ...................... goto8 <addr: 1825> 
    1823: [5] 7f 26 ...................... getLocalSlot <slot: 19> 
    1825: [6] 39 ......................... dup 
    1826: [7] 14 04 ...................... branchTrue8 <addr: 1832> 
    1828: [6] 90 ......................... pop 
    1829: [5] 56 ba 11 ................... loadString <> 
    1832: [6] b4 e6 ec 02 ba 11 .......... putScopedName <styleRow> <> 
    1838: [5] 33 12 de ec 01 f8 ec 02 .... debug 

    # ejs.es:15151                              if (options.styleRows) {

    1846: [5] 5c ......................... getLocalSlot1 
    1847: [6] 7b ca ed 02 ba 11 .......... getObjName <styleRows> <> 
    1853: [6] 13 2f ...................... branchFalse8 <addr: 1902> 
    1855: [5] 33 12 e0 ec 01 de ed 02 .... debug 

    # ejs.es:15152                                  styleRow += " " + (options.styleRows[row] || "")

    1863: [5] 79 e6 ec 02 ba 11 .......... getScopedName <styleRow> <> 
    1869: [6] 56 e8 ca 02 ................ loadString < > 
    1873: [7] 5c ......................... getLocalSlot1 
    1874: [8] 7b ca ed 02 ba 11 .......... getObjName <styleRows> <> 
    1880: [8] 56 ba 11 ................... loadString <> 
    1883: [9] 64 ......................... getLocalSlot9 
    1884: [10] 7c ......................... getObjNameExpr 
    1885: [8] 39 ......................... dup 
    1886: [9] 14 04 ...................... branchTrue8 <addr: 1892> 
    1888: [8] 90 ......................... pop 
    1889: [7] 56 ba 11 ................... loadString <> 
    1892: [8] 00 ......................... add 
    1893: [7] 00 ......................... add 
    1894: [6] b4 e6 ec 02 ba 11 .......... putScopedName <styleRow> <> 
    1900: [5] 3e 00 ...................... goto8 <addr: 1902> 
    1902: [5] 33 12 e4 ec 01 e8 ee 02 .... debug 

    # ejs.es:15154                              if (uri) {

    1910: [5] 7f 20 ...................... getLocalSlot <slot: 16> 
    1912: [6] 13 49 ...................... branchFalse8 <addr: 1987> 
    1914: [5] 33 12 e8 ec 01 9e ef 02 .... debug 

    # ejs.es:15156                                  write('    <tr class="' + styleRow + 

    1922: [5] 33 12 e6 ec 01 9e ef 02 .... debug 

    # ejs.es:15155                                  write('    <tr class="' + styleRow + 

    1930: [5] 33 12 e8 ec 01 92 f0 02 .... debug 

    # ejs.es:15156                                      '" onclick="window.location=\'' + uri + '\';">\r\n')

    1938: [5] 33 12 e6 ec 01 9e ef 02 .... debug 

    # ejs.es:15155                                  write('    <tr class="' + styleRow + 

    1946: [5] 56 ac f1 02 ................ loadString <    <tr class="> 
    1950: [6] 79 e6 ec 02 ba 11 .......... getScopedName <styleRow> <> 
    1956: [7] 00 ......................... add 
    1957: [6] 33 12 e8 ec 01 92 f0 02 .... debug 

    # ejs.es:15156                                      '" onclick="window.location=\'' + uri + '\';">\r\n')

    1965: [6] 56 cc f1 02 ................ loadString <" onclick="window.location='> 
    1969: [7] 00 ......................... add 
    1970: [6] 7f 20 ...................... getLocalSlot <slot: 16> 
    1972: [7] 00 ......................... add 
    1973: [6] 56 86 f2 02 ................ loadString <';">
> 
    1977: [7] 00 ......................... add 
    1978: [6] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    1985: [5] 3e 27 ...................... goto8 <addr: 2026> 
    1987: [5] 33 12 ea ec 01 e8 a1 01 .... debug 

    # ejs.es:15157                              } else {

    1995: [5] 33 12 ec ec 01 94 f2 02 .... debug 

    # ejs.es:15158                                  write('    <tr class="' + styleRow + '">\r\n')

    2003: [5] 56 ac f1 02 ................ loadString <    <tr class="> 
    2007: [6] 79 e6 ec 02 ba 11 .......... getScopedName <styleRow> <> 
    2013: [7] 00 ......................... add 
    2014: [6] 56 ae c0 02 ................ loadString <">
> 
    2018: [7] 00 ......................... add 
    2019: [6] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    2026: [5] 33 12 ee ec 01 86 35 ....... debug 

    # ejs.es:15159                              }

    2033: [5] 33 12 f2 ec 01 a2 f3 02 .... debug 

    # ejs.es:15161                              let col = 0

    2041: [5] 44 ......................... load0 
    2042: [6] b8 28 ...................... putLocalSlot <slot: 20> 
    2044: [5] 33 12 f4 ec 01 da f3 02 .... debug 

    # ejs.es:15162              				for (name in columns) {

    2052: [5] 5f ......................... getLocalSlot4 
    2053: [6] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    2059: [5] 93 ......................... pushResult 
    2060: [6] 39 ......................... dup 
    2061: [7] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    2064: [6] 93 ......................... pushResult 
    2065: [7] b8 2a ...................... putLocalSlot <slot: 21> 
    2067: [6] 33 12 f6 ec 01 aa f4 02 .... debug 

    # ejs.es:15163                                  if (name == null) {

    2075: [6] 7f 2a ...................... getLocalSlot <slot: 21> 
    2077: [7] 7e 7a ...................... getGlobalSlot <slot: 61> 
    2079: [8] 25 ......................... compareEq 
    2080: [7] 13 0f ...................... branchFalse8 <addr: 2097> 
    2082: [6] 33 12 f8 ec 01 fa f4 02 .... debug 

    # ejs.es:15164                                      continue

    2090: [6] 3d 47 f7 f7 f7 ............. goto <addr: 2060> 
    2095: [6] 3e 00 ...................... goto8 <addr: 2097> 
    2097: [6] 33 12 fa ec 01 bc f5 02 .... debug 

    # ejs.es:15165                                  }

    2105: [6] 33 12 fc ec 01 f6 f5 02 .... debug 

    # ejs.es:15166                                  let column = columns[name]

    2113: [6] 5f ......................... getLocalSlot4 
    2114: [7] 56 ba 11 ................... loadString <> 
    2117: [8] 7f 2a ...................... getLocalSlot <slot: 21> 
    2119: [9] 7c ......................... getObjNameExpr 
    2120: [7] b8 2c ...................... putLocalSlot <slot: 22> 
    2122: [6] 33 12 fe ec 01 d4 f6 02 .... debug 

    # ejs.es:15167                                  let styleCell: String = ""

    2130: [6] 56 ba 11 ................... loadString <> 
    2133: [7] b8 2e ...................... putLocalSlot <slot: 23> 
    2135: [6] 33 12 82 ed 01 c6 f7 02 .... debug 

    # ejs.es:15169                                  if (options.styleColumns) {

    2143: [6] 5c ......................... getLocalSlot1 
    2144: [7] 7b a6 f8 02 ba 11 .......... getObjName <styleColumns> <> 
    2150: [7] 13 20 ...................... branchFalse8 <addr: 2184> 
    2152: [6] 33 12 84 ed 01 c0 f8 02 .... debug 

    # ejs.es:15170                                      styleCell = options.styleColumns[col] || ""

    2160: [6] 5c ......................... getLocalSlot1 
    2161: [7] 7b a6 f8 02 ba 11 .......... getObjName <styleColumns> <> 
    2167: [7] 56 ba 11 ................... loadString <> 
    2170: [8] 7f 28 ...................... getLocalSlot <slot: 20> 
    2172: [9] 7c ......................... getObjNameExpr 
    2173: [7] 39 ......................... dup 
    2174: [8] 14 04 ...................... branchTrue8 <addr: 2180> 
    2176: [7] 90 ......................... pop 
    2177: [6] 56 ba 11 ................... loadString <> 
    2180: [7] b8 2e ...................... putLocalSlot <slot: 23> 
    2182: [6] 3e 00 ...................... goto8 <addr: 2184> 
    2184: [6] 33 12 88 ed 01 c8 f9 02 .... debug 

    # ejs.es:15172                                  if (column.style) {

    2192: [6] 7f 2c ...................... getLocalSlot <slot: 22> 
    2194: [7] 7b 98 fa 02 00 ............. getObjName <style> <> 
    2199: [7] 13 1b ...................... branchFalse8 <addr: 2228> 
    2201: [6] 33 12 8a ed 01 a4 fa 02 .... debug 

    # ejs.es:15173                                      styleCell += " " + column.style

    2209: [6] 7f 2e ...................... getLocalSlot <slot: 23> 
    2211: [7] 56 e8 ca 02 ................ loadString < > 
    2215: [8] 7f 2c ...................... getLocalSlot <slot: 22> 
    2217: [9] 7b 98 fa 02 00 ............. getObjName <style> <> 
    2222: [9] 00 ......................... add 
    2223: [8] 00 ......................... add 
    2224: [7] b8 2e ...................... putLocalSlot <slot: 23> 
    2226: [6] 3e 00 ...................... goto8 <addr: 2228> 
    2228: [6] 33 12 8e ed 01 94 fb 02 .... debug 

    # ejs.es:15175                                  if (options.styleCells && options.styleCells[row]) {

    2236: [6] 5c ......................... getLocalSlot1 
    2237: [7] 7b a6 fc 02 ba 11 .......... getObjName <styleCells> <> 
    2243: [7] 39 ......................... dup 
    2244: [8] 13 0d ...................... branchFalse8 <addr: 2259> 
    2246: [7] 90 ......................... pop 
    2247: [6] 5c ......................... getLocalSlot1 
    2248: [7] 7b a6 fc 02 ba 11 .......... getObjName <styleCells> <> 
    2254: [7] 56 ba 11 ................... loadString <> 
    2257: [8] 64 ......................... getLocalSlot9 
    2258: [9] 7c ......................... getObjNameExpr 
    2259: [7] 13 2d ...................... branchFalse8 <addr: 2306> 
    2261: [6] 33 12 90 ed 01 bc fc 02 .... debug 

    # ejs.es:15176                                      styleCell += " " + (options.styleCells[row][col] || "")

    2269: [6] 7f 2e ...................... getLocalSlot <slot: 23> 
    2271: [7] 56 e8 ca 02 ................ loadString < > 
    2275: [8] 5c ......................... getLocalSlot1 
    2276: [9] 7b a6 fc 02 ba 11 .......... getObjName <styleCells> <> 
    2282: [9] 56 ba 11 ................... loadString <> 
    2285: [10] 64 ......................... getLocalSlot9 
    2286: [11] 7c ......................... getObjNameExpr 
    2287: [9] 56 ba 11 ................... loadString <> 
    2290: [10] 7f 28 ...................... getLocalSlot <slot: 20> 
    2292: [11] 7c ......................... getObjNameExpr 
    2293: [9] 39 ......................... dup 
    2294: [10] 14 04 ...................... branchTrue8 <addr: 2300> 
    2296: [9] 90 ......................... pop 
    2297: [8] 56 ba 11 ................... loadString <> 
    2300: [9] 00 ......................... add 
    2301: [8] 00 ......................... add 
    2302: [7] b8 2e ...................... putLocalSlot <slot: 23> 
    2304: [6] 3e 00 ...................... goto8 <addr: 2306> 
    2306: [6] 33 12 92 ed 01 bc f5 02 .... debug 

    # ejs.es:15177                                  }

    2314: [6] 33 12 94 ed 01 dc fd 02 .... debug 

    # ejs.es:15178                                  styleCell = styleCell.trim()

    2322: [6] 7f 2e ...................... getLocalSlot <slot: 23> 
    2324: [7] 1e ba 13 c4 08 00 .......... callObjName <trim> <public> <argc: 0> 
    2330: [6] 93 ......................... pushResult 
    2331: [7] b8 2e ...................... putLocalSlot <slot: 23> 
    2333: [6] 33 12 96 ed 01 be fe 02 .... debug 

    # ejs.es:15179                                  data = view.getValue(r, name, { render: column.render, formatter: column.formatter } )

    2341: [6] 57 ......................... loadThis 
    2342: [7] 7b d6 07 ac 8d 01 .......... getObjName <view> <[HtmlConnector,private]> 
    2348: [7] 7f 1e ...................... getLocalSlot <slot: 15> 
    2350: [8] 7f 2a ...................... getLocalSlot <slot: 21> 
    2352: [9] 56 00 ...................... loadString <> 
    2354: [10] 56 a8 66 ................... loadString <render> 
    2357: [11] 7f 2c ...................... getLocalSlot <slot: 22> 
    2359: [12] 7b a8 66 00 ................ getObjName <render> <> 
    2363: [12] 56 00 ...................... loadString <> 
    2365: [13] 56 94 80 03 ................ loadString <formatter> 
    2369: [14] 7f 2c ...................... getLocalSlot <slot: 22> 
    2371: [15] 7b 94 80 03 00 ............. getObjName <formatter> <> 
    2376: [15] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    2382: [10] 1e a8 80 03 7c 06 .......... callObjName <getValue> <ejs.web> <argc: 3> 
    2388: [6] 93 ......................... pushResult 
    2389: [7] 94 ......................... putLocalSlot0 
    2390: [6] 33 12 9a ed 01 ba 80 03 .... debug 

    # ejs.es:15181                                  let align = ""

    2398: [6] 56 ba 11 ................... loadString <> 
    2401: [7] b8 30 ...................... putLocalSlot <slot: 24> 
    2403: [6] 33 12 9c ed 01 8c 81 03 .... debug 

    # ejs.es:15182                                  if (column.align) {

    2411: [6] 7f 2c ...................... getLocalSlot <slot: 22> 
    2413: [7] 7b 80 81 03 00 ............. getObjName <align> <> 
    2418: [7] 13 1d ...................... branchFalse8 <addr: 2449> 
    2420: [6] 33 12 9e ed 01 dc 81 03 .... debug 

    # ejs.es:15183                                      align = 'align="' + column.align + '"'

    2428: [6] 56 da 82 03 ................ loadString <align="> 
    2432: [7] 7f 2c ...................... getLocalSlot <slot: 22> 
    2434: [8] 7b 80 81 03 00 ............. getObjName <align> <> 
    2439: [8] 00 ......................... add 
    2440: [7] 56 de 89 01 ................ loadString <"> 
    2444: [8] 00 ......................... add 
    2445: [7] b8 30 ...................... putLocalSlot <slot: 24> 
    2447: [6] 3e 00 ...................... goto8 <addr: 2449> 
    2449: [6] 33 12 a0 ed 01 bc f5 02 .... debug 

    # ejs.es:15184                                  }

    2457: [6] 33 12 a2 ed 01 fa 82 03 .... debug 

    # ejs.es:15185                                  let cellUrl

    2465: [6] 33 12 a4 ed 01 ba 83 03 .... debug 

    # ejs.es:15186                                  if (options.click is Array && options.click[0] is Array) {

    2473: [6] 5c ......................... getLocalSlot1 
    2474: [7] 7b c2 e2 02 ba 11 .......... getObjName <click> <> 
    2480: [7] 7e 0a ...................... getGlobalSlot <slot: 5> 
    2482: [8] 43 ......................... isA 
    2483: [7] 39 ......................... dup 
    2484: [8] 13 10 ...................... branchFalse8 <addr: 2502> 
    2486: [7] 90 ......................... pop 
    2487: [6] 5c ......................... getLocalSlot1 
    2488: [7] 7b c2 e2 02 ba 11 .......... getObjName <click> <> 
    2494: [7] 56 ba 11 ................... loadString <> 
    2497: [8] 44 ......................... load0 
    2498: [9] 7c ......................... getObjNameExpr 
    2499: [7] 7e 0a ...................... getGlobalSlot <slot: 5> 
    2501: [8] 43 ......................... isA 
    2502: [7] 07 d0 03 f7 f7 ............. branchFalse <addr: 2739> 
    2507: [6] 33 12 a6 ed 01 d8 84 03 .... debug 

    # ejs.es:15187                                      if (options.query is Array) {

    2515: [6] 5c ......................... getLocalSlot1 
    2516: [7] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    2522: [7] 7e 0a ...................... getGlobalSlot <slot: 5> 
    2524: [8] 43 ......................... isA 
    2525: [7] 13 61 ...................... branchFalse8 <addr: 2624> 
    2527: [6] 33 12 a8 ed 01 c4 85 03 .... debug 

    # ejs.es:15188                                          if (options.query[0] is Array) {

    2535: [6] 5c ......................... getLocalSlot1 
    2536: [7] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    2542: [7] 56 ba 11 ................... loadString <> 
    2545: [8] 44 ......................... load0 
    2546: [9] 7c ......................... getObjNameExpr 
    2547: [7] 7e 0a ...................... getGlobalSlot <slot: 5> 
    2549: [8] 43 ......................... isA 
    2550: [7] 13 23 ...................... branchFalse8 <addr: 2587> 
    2552: [6] 33 12 aa ed 01 be 86 03 .... debug 

    # ejs.es:15189                                              uriOptions.query = options.query[row][col]

    2560: [6] 5c ......................... getLocalSlot1 
    2561: [7] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    2567: [7] 56 ba 11 ................... loadString <> 
    2570: [8] 64 ......................... getLocalSlot9 
    2571: [9] 7c ......................... getObjNameExpr 
    2572: [7] 56 ba 11 ................... loadString <> 
    2575: [8] 7f 28 ...................... getLocalSlot <slot: 20> 
    2577: [9] 7c ......................... getObjNameExpr 
    2578: [7] 7f 22 ...................... getLocalSlot <slot: 17> 
    2580: [8] b3 fe 99 01 00 ............. putObjName <query> <> 
    2585: [6] 3e 23 ...................... goto8 <addr: 2622> 
    2587: [6] 33 12 ac ed 01 d4 87 03 .... debug 

    # ejs.es:15190                                          } else {

    2595: [6] 33 12 ae ed 01 9e 88 03 .... debug 

    # ejs.es:15191                                              uriOptions.query = options.query[row]

    2603: [6] 5c ......................... getLocalSlot1 
    2604: [7] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    2610: [7] 56 ba 11 ................... loadString <> 
    2613: [8] 64 ......................... getLocalSlot9 
    2614: [9] 7c ......................... getObjNameExpr 
    2615: [7] 7f 22 ...................... getLocalSlot <slot: 17> 
    2617: [8] b3 fe 99 01 00 ............. putObjName <query> <> 
    2622: [6] 3e 1e ...................... goto8 <addr: 2654> 
    2624: [6] 33 12 b2 ed 01 aa 89 03 .... debug 

    # ejs.es:15193                                      } else {

    2632: [6] 33 12 b4 ed 01 ec 89 03 .... debug 

    # ejs.es:15194                                          uriOptions.query = options.query

    2640: [6] 5c ......................... getLocalSlot1 
    2641: [7] 7b fe 99 01 ba 11 .......... getObjName <query> <> 
    2647: [7] 7f 22 ...................... getLocalSlot <slot: 17> 
    2649: [8] b3 fe 99 01 00 ............. putObjName <query> <> 
    2654: [6] 33 12 b6 ed 01 e6 8a 03 .... debug 

    # ejs.es:15195                                      }

    2662: [6] 33 12 b8 ed 01 9a 8b 03 .... debug 

    # ejs.es:15196                                      cellUrl = request.makeUri(blend(uriOptions, { action: options.click[row][col], id: r.id}))

    2670: [6] 57 ......................... loadThis 
    2671: [7] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    2677: [7] 7f 22 ...................... getLocalSlot <slot: 17> 
    2679: [8] 56 00 ...................... loadString <> 
    2681: [9] 56 ee 01 ................... loadString <action> 
    2684: [10] 5c ......................... getLocalSlot1 
    2685: [11] 7b c2 e2 02 ba 11 .......... getObjName <click> <> 
    2691: [11] 56 ba 11 ................... loadString <> 
    2694: [12] 64 ......................... getLocalSlot9 
    2695: [13] 7c ......................... getObjNameExpr 
    2696: [11] 56 ba 11 ................... loadString <> 
    2699: [12] 7f 28 ...................... getLocalSlot <slot: 20> 
    2701: [13] 7c ......................... getObjNameExpr 
    2702: [11] 56 00 ...................... loadString <> 
    2704: [12] 56 ae 92 01 ................ loadString <id> 
    2708: [13] 7f 1e ...................... getLocalSlot <slot: 15> 
    2710: [14] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    2716: [14] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    2722: [9] 17 9c 01 04 ................ callGlobalSlot <slot: 78> <argc: 2> 
    2726: [7] 93 ......................... pushResult 
    2727: [8] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    2734: [6] 93 ......................... pushResult 
    2735: [7] b8 32 ...................... putLocalSlot <slot: 25> 
    2737: [6] 3e 00 ...................... goto8 <addr: 2739> 
    2739: [6] 33 12 ba ed 01 bc f5 02 .... debug 

    # ejs.es:15197                                  }

    2747: [6] 33 12 bc ed 01 80 8d 03 .... debug 

    # ejs.es:15198              					styleCell = styleCell.trim()

    2755: [6] 7f 2e ...................... getLocalSlot <slot: 23> 
    2757: [7] 1e ba 13 c4 08 00 .......... callObjName <trim> <public> <argc: 0> 
    2763: [6] 93 ......................... pushResult 
    2764: [7] b8 2e ...................... putLocalSlot <slot: 23> 
    2766: [6] 33 12 be ed 01 c4 8d 03 .... debug 

    # ejs.es:15199                                  if (cellUrl) {

    2774: [6] 7f 32 ...................... getLocalSlot <slot: 25> 
    2776: [7] 13 6c ...................... branchFalse8 <addr: 2886> 
    2778: [6] 33 12 c4 ed 01 8a 8e 03 .... debug 

    # ejs.es:15202                                      write('    <td class="' + styleCell + '"' + align + 

    2786: [6] 33 12 c0 ed 01 8a 8e 03 .... debug 

    # ejs.es:15200                                      write('    <td class="' + styleCell + '"' + align + 

    2794: [6] 33 12 c4 ed 01 a4 8f 03 .... debug 

    # ejs.es:15202                                          data + '</a></td>\r\n')

    2802: [6] 33 12 c2 ed 01 8c 90 03 .... debug 

    # ejs.es:15201                                          ' xonclick="window.location=\'' + cellUrl + '\';"><a href="' + cellUrl + '">' + 

    2810: [6] 33 12 c0 ed 01 8a 8e 03 .... debug 

    # ejs.es:15200                                      write('    <td class="' + styleCell + '"' + align + 

    2818: [6] 56 e6 91 03 ................ loadString <    <td class="> 
    2822: [7] 7f 2e ...................... getLocalSlot <slot: 23> 
    2824: [8] 00 ......................... add 
    2825: [7] 56 de 89 01 ................ loadString <"> 
    2829: [8] 00 ......................... add 
    2830: [7] 7f 30 ...................... getLocalSlot <slot: 24> 
    2832: [8] 00 ......................... add 
    2833: [7] 33 12 c2 ed 01 8c 90 03 .... debug 

    # ejs.es:15201                                          ' xonclick="window.location=\'' + cellUrl + '\';"><a href="' + cellUrl + '">' + 

    2841: [7] 56 86 92 03 ................ loadString < xonclick="window.location='> 
    2845: [8] 00 ......................... add 
    2846: [7] 7f 32 ...................... getLocalSlot <slot: 25> 
    2848: [8] 00 ......................... add 
    2849: [7] 56 c0 92 03 ................ loadString <';"><a href="> 
    2853: [8] 00 ......................... add 
    2854: [7] 7f 32 ...................... getLocalSlot <slot: 25> 
    2856: [8] 00 ......................... add 
    2857: [7] 56 a8 e3 01 ................ loadString <">> 
    2861: [8] 00 ......................... add 
    2862: [7] 33 12 c4 ed 01 a4 8f 03 .... debug 

    # ejs.es:15202                                          data + '</a></td>\r\n')

    2870: [7] 5b ......................... getLocalSlot0 
    2871: [8] 00 ......................... add 
    2872: [7] 56 dc 92 03 ................ loadString <</a></td>
> 
    2876: [8] 00 ......................... add 
    2877: [7] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    2884: [6] 3e 32 ...................... goto8 <addr: 2936> 
    2886: [6] 33 12 c6 ed 01 b2 f8 01 .... debug 

    # ejs.es:15203                                  } else {

    2894: [6] 33 12 c8 ed 01 f4 92 03 .... debug 

    # ejs.es:15204                                      write('    <td class="' + styleCell + '"' + align + '>' + data + '</td>\r\n')

    2902: [6] 56 e6 91 03 ................ loadString <    <td class="> 
    2906: [7] 7f 2e ...................... getLocalSlot <slot: 23> 
    2908: [8] 00 ......................... add 
    2909: [7] 56 de 89 01 ................ loadString <"> 
    2913: [8] 00 ......................... add 
    2914: [7] 7f 30 ...................... getLocalSlot <slot: 24> 
    2916: [8] 00 ......................... add 
    2917: [7] 56 8c d4 01 ................ loadString <>> 
    2921: [8] 00 ......................... add 
    2922: [7] 5b ......................... getLocalSlot0 
    2923: [8] 00 ......................... add 
    2924: [7] 56 c0 94 03 ................ loadString <</td>
> 
    2928: [8] 00 ......................... add 
    2929: [7] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    2936: [6] 33 12 ca ed 01 bc f5 02 .... debug 

    # ejs.es:15205                                  }

    2944: [6] 33 12 cc ed 01 d0 94 03 .... debug 

    # ejs.es:15206                                  col++

    2952: [6] 7f 28 ...................... getLocalSlot <slot: 20> 
    2954: [7] 39 ......................... dup 
    2955: [8] 3f 01 ...................... inc <1> 
    2957: [8] b8 28 ...................... putLocalSlot <slot: 20> 
    2959: [7] 90 ......................... pop 
    2960: [6] 3d 93 0e f7 f7 ............. goto <addr: 2060> 
    2965: [6] 90 ......................... pop 
    2966: [5] 33 12 ce ed 01 84 95 03 .... debug 

    # ejs.es:15207              				}

    2974: [5] 33 12 d0 ed 01 90 95 03 .... debug 

    # ejs.es:15208                              row++

    2982: [5] 64 ......................... getLocalSlot9 
    2983: [6] 39 ......................... dup 
    2984: [7] 3f 01 ...................... inc <1> 
    2986: [7] 9d ......................... putLocalSlot9 
    2987: [6] 90 ......................... pop 
    2988: [5] 33 12 d2 ed 01 bc 95 03 .... debug 

    # ejs.es:15209              				write('    </tr>\r\n')

    2996: [5] 56 f2 95 03 ................ loadString <    </tr>
> 
    3000: [6] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    3007: [5] 3d df 18 f7 f7 ............. goto <addr: 1429> 
    3012: [5] 90 ......................... pop 
    3013: [4] 33 12 d4 ed 01 e0 a6 02 .... debug 

    # ejs.es:15210              			}

    3021: [4] 33 12 d6 ed 01 8a 96 03 .... debug 

    # ejs.es:15211              			write('    </tbody>\r\n  </table>\r\n')

    3029: [4] 56 e0 96 03 ................ loadString <    </tbody>
  </table>
> 
    3033: [5] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    3040: [4] 54 ......................... loadNull 
    3041: [5] bf ......................... returnValue 
    3042: [0] 33 12 d8 ed 01 94 bd 01 .... debug 

    # ejs.es:15212              		}
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration   1151    1154       1316         1316       StopIteration
1   iteration   2061    2064       2965         2965       StopIteration
2   iteration   1430    1433       3012         3012       StopIteration

VARIABLE:   [data-00]  private var data
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [originalOptions-02]  private var originalOptions
VARIABLE:   [tableId-03]  private var tableId
VARIABLE:   [columns-04]  private var columns
VARIABLE:   [refresh-05]  private var refresh
VARIABLE:   [sortOrder-06]  private var sortOrder
VARIABLE:   [sort-07]  private var sort
VARIABLE:   [styleBody-08]  private var styleBody
VARIABLE:   [row-09]  private var row : Number
VARIABLE:   [uri-10]  -hoisted-10 var uri
VARIABLE:   [gif-11]  -hoisted-11 var gif
VARIABLE:   [name-12]  -hoisted-12 var name
VARIABLE:   [header-13]  -hoisted-12 var header
VARIABLE:   [width-14]  -hoisted-12 var width
VARIABLE:   [r-15]  -hoisted-15 var r : Object
VARIABLE:   [uri-16]  -hoisted-15 var uri
VARIABLE:   [uriOptions-17]  -hoisted-15 var uriOptions
VARIABLE:   [odd-18]  -hoisted-15 var odd
VARIABLE:   [even-19]  -hoisted-15 var even
VARIABLE:   [col-20]  -hoisted-15 var col
VARIABLE:   [name-21]  -hoisted-21 var name
VARIABLE:   [column-22]  -hoisted-21 var column
VARIABLE:   [styleCell-23]  -hoisted-21 var styleCell : String
VARIABLE:   [align-24]  -hoisted-21 var align
VARIABLE:   [cellUrl-25]  -hoisted-21 var cellUrl

FUNCTION:   [HtmlConnector-50]  ejs.web const function text(field: String, value: String, options: Object) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private value : String
     ARG:   [arg-02]   private options : Object

    0000: [0] 33 12 e0 ed 01 bc 98 03 .... debug 

    # ejs.es:15216                          write('<input name="' + field + '" ' + getOptions(options) + ' type="' + getTextKind(options) + 

    0008: [0] 33 12 de ed 01 bc 98 03 .... debug 

    # ejs.es:15215                          write('<input name="' + field + '" ' + getOptions(options) + ' type="' + getTextKind(options) + 

    0016: [0] 33 12 e0 ed 01 96 9a 03 .... debug 

    # ejs.es:15216                              '" value="' + value + '" />')

    0024: [0] 33 12 de ed 01 bc 98 03 .... debug 

    # ejs.es:15215                          write('<input name="' + field + '" ' + getOptions(options) + ' type="' + getTextKind(options) + 

    0032: [0] 56 b2 c0 01 ................ loadString <<input name="> 
    0036: [1] 5b ......................... getLocalSlot0 
    0037: [2] 00 ......................... add 
    0038: [1] 56 84 eb 01 ................ loadString <" > 
    0042: [2] 00 ......................... add 
    0043: [1] 5d ......................... getLocalSlot2 
    0044: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0052: [1] 93 ......................... pushResult 
    0053: [2] 00 ......................... add 
    0054: [1] 56 80 e3 01 ................ loadString < type="> 
    0058: [2] 00 ......................... add 
    0059: [1] 5d ......................... getLocalSlot2 
    0060: [2] 1f 90 e3 01 ac 8d 01 02 .... callScopedName <getTextKind> <[HtmlConnector,private]> <argc: 1> 
    0068: [1] 93 ......................... pushResult 
    0069: [2] 00 ......................... add 
    0070: [1] 33 12 e0 ed 01 96 9a 03 .... debug 

    # ejs.es:15216                              '" value="' + value + '" />')

    0078: [1] 56 da cd 01 ................ loadString <" value="> 
    0082: [2] 00 ......................... add 
    0083: [1] 5c ......................... getLocalSlot1 
    0084: [2] 00 ......................... add 
    0085: [1] 56 ee cd 01 ................ loadString <" />> 
    0089: [2] 00 ......................... add 
    0090: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0097: [0] 54 ......................... loadNull 
    0098: [1] bf ......................... returnValue 
    0099: [0] 33 12 e2 ed 01 b0 15 ....... debug 

    # ejs.es:15217                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [value-01]  private var value : String
VARIABLE:   [options-02]  private var options : Object

FUNCTION:   [HtmlConnector-51]  ejs.web const function textarea(name: String, value: String, options: Object) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private value : String
     ARG:   [arg-02]   private options : Object

    0000: [0] 33 12 e8 ed 01 92 9c 03 .... debug 

    # ejs.es:15220                          numCols = options.numCols

    0008: [0] 5d ......................... getLocalSlot2 
    0009: [1] 7b de 9c 03 ba 11 .......... getObjName <numCols> <> 
    0015: [1] b4 de 9c 03 ba 11 .......... putScopedName <numCols> <> 
    0021: [0] 33 12 ea ed 01 ee 9c 03 .... debug 

    # ejs.es:15221                          if (numCols == undefined) {

    0029: [0] 79 de 9c 03 ba 11 .......... getScopedName <numCols> <> 
    0035: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0038: [2] 25 ......................... compareEq 
    0039: [1] 13 12 ...................... branchFalse8 <addr: 59> 
    0041: [0] 33 12 ec ed 01 be 9d 03 .... debug 

    # ejs.es:15222                              numCols = 60

    0049: [0] 51 78 ...................... loadInt <60> 
    0051: [1] b4 de 9c 03 ba 11 .......... putScopedName <numCols> <> 
    0057: [0] 3e 00 ...................... goto8 <addr: 59> 
    0059: [0] 33 12 ee ed 01 b2 1a ....... debug 

    # ejs.es:15223                          }

    0066: [0] 33 12 f0 ed 01 f8 9d 03 .... debug 

    # ejs.es:15224                          numRows = options.numRows

    0074: [0] 5d ......................... getLocalSlot2 
    0075: [1] 7b c4 9e 03 ba 11 .......... getObjName <numRows> <> 
    0081: [1] b4 c4 9e 03 ba 11 .......... putScopedName <numRows> <> 
    0087: [0] 33 12 f2 ed 01 d4 9e 03 .... debug 

    # ejs.es:15225                          if (numRows == undefined) {

    0095: [0] 79 c4 9e 03 ba 11 .......... getScopedName <numRows> <> 
    0101: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0104: [2] 25 ......................... compareEq 
    0105: [1] 13 12 ...................... branchFalse8 <addr: 125> 
    0107: [0] 33 12 f4 ed 01 a4 9f 03 .... debug 

    # ejs.es:15226                              numRows = 10

    0115: [0] 51 14 ...................... loadInt <10> 
    0117: [1] b4 c4 9e 03 ba 11 .......... putScopedName <numRows> <> 
    0123: [0] 3e 00 ...................... goto8 <addr: 125> 
    0125: [0] 33 12 f6 ed 01 b2 1a ....... debug 

    # ejs.es:15227                          }

    0132: [0] 33 12 fa ed 01 de 9f 03 .... debug 

    # ejs.es:15229                          write('<textarea name="' + name + '" type="' + getTextKind(options) + '" ' + getOptions(options) + 

    0140: [0] 33 12 f8 ed 01 de 9f 03 .... debug 

    # ejs.es:15228                          write('<textarea name="' + name + '" type="' + getTextKind(options) + '" ' + getOptions(options) + 

    0148: [0] 33 12 fa ed 01 be a1 03 .... debug 

    # ejs.es:15229                              ' cols="' + numCols + '" rows="' + numRows + '">' + value + '</textarea>')

    0156: [0] 33 12 f8 ed 01 de 9f 03 .... debug 

    # ejs.es:15228                          write('<textarea name="' + name + '" type="' + getTextKind(options) + '" ' + getOptions(options) + 

    0164: [0] 56 f4 a2 03 ................ loadString <<textarea name="> 
    0168: [1] 5b ......................... getLocalSlot0 
    0169: [2] 00 ......................... add 
    0170: [1] 56 96 a3 03 ................ loadString <" type="> 
    0174: [2] 00 ......................... add 
    0175: [1] 5d ......................... getLocalSlot2 
    0176: [2] 1f 90 e3 01 ac 8d 01 02 .... callScopedName <getTextKind> <[HtmlConnector,private]> <argc: 1> 
    0184: [1] 93 ......................... pushResult 
    0185: [2] 00 ......................... add 
    0186: [1] 56 84 eb 01 ................ loadString <" > 
    0190: [2] 00 ......................... add 
    0191: [1] 5d ......................... getLocalSlot2 
    0192: [2] 1f aa ac 01 ac 8d 01 02 .... callScopedName <getOptions> <[HtmlConnector,private]> <argc: 1> 
    0200: [1] 93 ......................... pushResult 
    0201: [2] 00 ......................... add 
    0202: [1] 33 12 fa ed 01 be a1 03 .... debug 

    # ejs.es:15229                              ' cols="' + numCols + '" rows="' + numRows + '">' + value + '</textarea>')

    0210: [1] 56 a8 a3 03 ................ loadString < cols="> 
    0214: [2] 00 ......................... add 
    0215: [1] 79 de 9c 03 ba 11 .......... getScopedName <numCols> <> 
    0221: [2] 00 ......................... add 
    0222: [1] 56 b8 a3 03 ................ loadString <" rows="> 
    0226: [2] 00 ......................... add 
    0227: [1] 79 c4 9e 03 ba 11 .......... getScopedName <numRows> <> 
    0233: [2] 00 ......................... add 
    0234: [1] 56 a8 e3 01 ................ loadString <">> 
    0238: [2] 00 ......................... add 
    0239: [1] 5c ......................... getLocalSlot1 
    0240: [2] 00 ......................... add 
    0241: [1] 56 ca a3 03 ................ loadString <</textarea>> 
    0245: [2] 00 ......................... add 
    0246: [1] 1f 9c 66 ac 8d 01 02 ....... callScopedName <write> <[HtmlConnector,private]> <argc: 1> 
    0253: [0] 54 ......................... loadNull 
    0254: [1] bf ......................... returnValue 
    0255: [0] 33 12 fc ed 01 b0 15 ....... debug 

    # ejs.es:15230                      }
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [value-01]  private var value : String
VARIABLE:   [options-02]  private var options : Object

FUNCTION:   [HtmlConnector-52]  ejs.web const function tree(initialData: Array, options: Object) : Void

     ARG:   [arg-00]   private initialData : Array
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 82 ee 01 fa a4 03 .... debug 

    # ejs.es:15233                          throw 'HtmlConnector control "tree" not implemented.'

    0008: [0] 56 fe a5 03 ................ loadString <HtmlConnector control "tree" not implemented.> 
    0012: [1] c6 ......................... throw 
    0013: [1] 54 ......................... loadNull 
    0014: [2] bf ......................... returnValue 
    0015: [0] 33 12 84 ee 01 b0 15 ....... debug 

    # ejs.es:15234                      }
    
VARIABLE:   [initialData-00]  private var initialData : Array
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [HtmlConnector-53]  [HtmlConnector,private] const function getColumns(data: Object, options: Object) : Object

     ARG:   [arg-00]   private data : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var columns
   LOCAL:   [local-03] var name
   LOCAL:   [local-04] var name

    0000: [0] 33 12 8a ee 01 fe a7 03 .... debug 

    # ejs.es:15237                          let columns

    0008: [0] 33 12 8c ee 01 ae a8 03 .... debug 

    # ejs.es:15238                          if (options.columns) {

    0016: [0] 5c ......................... getLocalSlot1 
    0017: [1] 7b e4 a8 02 ba 11 .......... getObjName <columns> <> 
    0023: [1] 13 6b ...................... branchFalse8 <addr: 132> 
    0025: [0] 33 12 8e ee 01 f4 a8 03 .... debug 

    # ejs.es:15239                              if (options.columns is Array) {

    0033: [0] 5c ......................... getLocalSlot1 
    0034: [1] 7b e4 a8 02 ba 11 .......... getObjName <columns> <> 
    0040: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0042: [2] 43 ......................... isA 
    0043: [1] 13 3d ...................... branchFalse8 <addr: 106> 
    0045: [0] 33 12 90 ee 01 d4 a9 03 .... debug 

    # ejs.es:15240                                  columns = {}

    0053: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0057: [1] 96 ......................... putLocalSlot2 
    0058: [0] 33 12 92 ee 01 96 aa 03 .... debug 

    # ejs.es:15241                                  for each (name in options.columns) {

    0066: [0] 5c ......................... getLocalSlot1 
    0067: [1] 7b e4 a8 02 ba 11 .......... getObjName <columns> <> 
    0073: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0079: [0] 93 ......................... pushResult 
    0080: [1] 39 ......................... dup 
    0081: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0084: [1] 93 ......................... pushResult 
    0085: [2] 97 ......................... putLocalSlot3 
    0086: [1] 33 12 94 ee 01 88 ab 03 .... debug 

    # ejs.es:15242                                      columns[name] = name

    0094: [1] 5e ......................... getLocalSlot3 
    0095: [2] 5d ......................... getLocalSlot2 
    0096: [3] 56 ba 11 ................... loadString <> 
    0099: [4] 5e ......................... getLocalSlot3 
    0100: [5] b2 ......................... putObjNameExpr 
    0101: [1] 3e e9 ...................... goto8 <addr: 80> 
    0103: [1] 90 ......................... pop 
    0104: [0] 3e 18 ...................... goto8 <addr: 130> 
    0106: [0] 33 12 98 ee 01 e8 a1 01 .... debug 

    # ejs.es:15244                              } else {

    0114: [0] 33 12 9a ee 01 e2 ab 03 .... debug 

    # ejs.es:15245                                  columns = options.columns

    0122: [0] 5c ......................... getLocalSlot1 
    0123: [1] 7b e4 a8 02 ba 11 .......... getObjName <columns> <> 
    0129: [1] 96 ......................... putLocalSlot2 
    0130: [0] 3e 74 ...................... goto8 <addr: 248> 
    0132: [0] 33 12 9e ee 01 b4 33 ....... debug 

    # ejs.es:15247                          } else {

    0139: [0] 33 12 a6 ee 01 be ac 03 .... debug 

    # ejs.es:15251                              columns = {}

    0147: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0151: [1] 96 ......................... putLocalSlot2 
    0152: [0] 33 12 a8 ee 01 f8 ac 03 .... debug 

    # ejs.es:15252                              if (data is Array) {

    0160: [0] 5b ......................... getLocalSlot0 
    0161: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0163: [2] 43 ......................... isA 
    0164: [1] 13 52 ...................... branchFalse8 <addr: 248> 
    0166: [0] 33 12 aa ee 01 c2 ad 03 .... debug 

    # ejs.es:15253                                  for (let name in data[0]) {

    0174: [0] 5b ......................... getLocalSlot0 
    0175: [1] 56 ba 11 ................... loadString <> 
    0178: [2] 44 ......................... load0 
    0179: [3] 7c ......................... getObjNameExpr 
    0180: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0186: [0] 93 ......................... pushResult 
    0187: [1] 39 ......................... dup 
    0188: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0191: [1] 93 ......................... pushResult 
    0192: [2] 98 ......................... putLocalSlot4 
    0193: [1] 33 12 ac ee 01 b8 ae 03 .... debug 

    # ejs.es:15254                                      if (name == "id" && !options.showId) continue

    0201: [1] 5f ......................... getLocalSlot4 
    0202: [2] 56 ae 92 01 ................ loadString <id> 
    0206: [3] 25 ......................... compareEq 
    0207: [2] 39 ......................... dup 
    0208: [3] 13 09 ...................... branchFalse8 <addr: 219> 
    0210: [2] 90 ......................... pop 
    0211: [1] 5c ......................... getLocalSlot1 
    0212: [2] 7b c4 af 03 ba 11 .......... getObjName <showId> <> 
    0218: [2] 86 ......................... logicalNot 
    0219: [2] 13 07 ...................... branchFalse8 <addr: 228> 
    0221: [1] 3d 4f f7 f7 f7 ............. goto <addr: 187> 
    0226: [1] 3e 00 ...................... goto8 <addr: 228> 
    0228: [1] 33 12 ae ee 01 88 ab 03 .... debug 

    # ejs.es:15255                                      columns[name] = name

    0236: [1] 5f ......................... getLocalSlot4 
    0237: [2] 5d ......................... getLocalSlot2 
    0238: [3] 56 ba 11 ................... loadString <> 
    0241: [4] 5f ......................... getLocalSlot4 
    0242: [5] b2 ......................... putObjNameExpr 
    0243: [1] 3e c6 ...................... goto8 <addr: 187> 
    0245: [1] 90 ......................... pop 
    0246: [0] 3e 00 ...................... goto8 <addr: 248> 
    0248: [0] 33 12 b6 ee 01 d2 af 03 .... debug 

    # ejs.es:15259                          return columns

    0256: [0] 5d ......................... getLocalSlot2 
    0257: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     81      84        103          103       StopIteration
1   iteration    188     191        245          245       StopIteration

VARIABLE:   [data-00]  private var data : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [columns-02]  private var columns
VARIABLE:   [name-03]  -hoisted-3 var name
VARIABLE:   [name-04]  -hoisted-4 var name

FUNCTION:   [HtmlConnector-54]  [HtmlConnector,private] const function getTextKind(options) : String

     ARG:   [arg-00]   private options
   LOCAL:   [local-01] var kind : String

    0000: [0] 33 12 be ee 01 f8 b0 03 .... debug 

    # ejs.es:15263                          var kind: String

    0008: [0] 33 12 c2 ee 01 b2 b1 03 .... debug 

    # ejs.es:15265                          if (options.password) {

    0016: [0] 5b ......................... getLocalSlot0 
    0017: [1] 7b fa b1 03 00 ............. getObjName <password> <> 
    0022: [1] 13 0f ...................... branchFalse8 <addr: 39> 
    0024: [0] 33 12 c4 ee 01 8c b2 03 .... debug 

    # ejs.es:15266                              kind = "password"

    0032: [0] 56 fa b1 03 ................ loadString <password> 
    0036: [1] 95 ......................... putLocalSlot1 
    0037: [0] 3e 33 ...................... goto8 <addr: 90> 
    0039: [0] 33 12 c6 ee 01 d0 b2 03 .... debug 

    # ejs.es:15267                          } else if (options.hidden) {

    0047: [0] 5b ......................... getLocalSlot0 
    0048: [1] 7b a2 b3 03 00 ............. getObjName <hidden> <> 
    0053: [1] 13 0f ...................... branchFalse8 <addr: 70> 
    0055: [0] 33 12 c8 ee 01 b0 b3 03 .... debug 

    # ejs.es:15268                              kind = "hidden"

    0063: [0] 56 a2 b3 03 ................ loadString <hidden> 
    0067: [1] 95 ......................... putLocalSlot1 
    0068: [0] 3e 14 ...................... goto8 <addr: 90> 
    0070: [0] 33 12 ca ee 01 b4 33 ....... debug 

    # ejs.es:15269                          } else {

    0077: [0] 33 12 cc ee 01 f0 b3 03 .... debug 

    # ejs.es:15270                              kind = "text"

    0085: [0] 56 9c bd 01 ................ loadString <text> 
    0089: [1] 95 ......................... putLocalSlot1 
    0090: [0] 33 12 d0 ee 01 ac b4 03 .... debug 

    # ejs.es:15272                          return kind

    0098: [0] 5c ......................... getLocalSlot1 
    0099: [1] bf ......................... returnValue 
    
VARIABLE:   [options-00]  private var options
VARIABLE:   [kind-01]  private var kind : String

FUNCTION:   [HtmlConnector-55]  [HtmlConnector,private] const function getOptions(options: Object) : String

     ARG:   [arg-00]   private options : Object

    0000: [0] 33 12 d8 ee 01 ca b5 03 .... debug 

    # ejs.es:15276                          view.getOptions(options)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b d6 07 ac 8d 01 .......... getObjName <view> <[HtmlConnector,private]> 
    0015: [1] 5b ......................... getLocalSlot0 
    0016: [2] 1e aa ac 01 7c 02 .......... callObjName <getOptions> <ejs.web> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    
VARIABLE:   [options-00]  private var options : Object

FUNCTION:   [HtmlConnector-56]  [HtmlConnector,private] const function write(str: String) : Void

     ARG:   [arg-00]   private str : String

    0000: [0] 33 12 de ee 01 f8 b6 03 .... debug 

    # ejs.es:15279                          request.write(str)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 88 07 ac 8d 01 .......... getObjName <request> <[HtmlConnector,private]> 
    0015: [1] 5b ......................... getLocalSlot0 
    0016: [2] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    
VARIABLE:   [str-00]  private var str : String
VARIABLE:   [nextId-00]  [HtmlConnector,private] var nextId : Number
VARIABLE:   [request-01]  [HtmlConnector,private] var request
VARIABLE:   [view-02]  [HtmlConnector,private] var view

CLASS:      dynamic class HttpServer extends Object
            #  Class Details: 37 class traits, 2 instance traits, requested slot 168

FUNCTION:   [HttpServer-26]  -constructor- native const function HttpServer(serverRoot: Path, documentRoot: Path) : void

     ARG:   [arg-00]   private serverRoot : Path
     ARG:   [arg-01]   private documentRoot : Path

    
VARIABLE:   [serverRoot-00]  private var serverRoot : Path
VARIABLE:   [documentRoot-01]  private var documentRoot : Path

FUNCTION:   [HttpServer-27]  public native const function addListener(name, listener: Function) : Void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [HttpServer-28]  public native const get function address() : String


    

FUNCTION:   [HttpServer-29]  public native const get function async() : Boolean


    

FUNCTION:   [HttpServer-29]  public native const set function async(enable: Boolean) : Void

     ARG:   [arg-00]   private enable : Boolean

    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [HttpServer-30]  public native const function close() : Void


    

FUNCTION:   [HttpServer-31]  public native const function listen(address) : void

     ARG:   [arg-00]   private address

    
VARIABLE:   [address-00]  private var address

FUNCTION:   [HttpServer-32]  public native const function attach() : Void


    

FUNCTION:   [HttpServer-33]  public native const function secureListen(address, keyFile, certFile, protocols: String, ciphers: String) : Void

     ARG:   [arg-00]   private address
     ARG:   [arg-01]   private keyFile
     ARG:   [arg-02]   private certFile
     ARG:   [arg-03]   private protocols : String
     ARG:   [arg-04]   private ciphers : String

    
VARIABLE:   [address-00]  private var address
VARIABLE:   [keyFile-01]  private var keyFile
VARIABLE:   [certFile-02]  private var certFile
VARIABLE:   [protocols-03]  private var protocols : String
VARIABLE:   [ciphers-04]  private var ciphers : String

FUNCTION:   [HttpServer-34]  public native const get function port() : Number


    

FUNCTION:   [HttpServer-35]  public native const function removeListener(name: Object, listener: Function) : Void

     ARG:   [arg-00]   private name : Object
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name : Object
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [HttpServer-36]  public native const get function software() : String


    
VARIABLE:   [documentRoot-00]  public var documentRoot : Path
VARIABLE:   [serverRoot-01]  public var serverRoot : Path

CLASS:      class Mvc extends Object
            #  Class Details: 35 class traits, 0 instance traits, requested slot 169

FUNCTION:   [Mvc-26]  -initializer- static function Mvc-initializer() : Void


    0000: [0] 33 12 b6 f2 01 96 c8 03 .... debug 

    # ejs.es:15515                      private static var defaultConfig = {

    0008: [0] 33 12 b8 f2 01 a8 c9 03 .... debug 

    # ejs.es:15516                          cache: {

    0016: [0] 56 00 ...................... loadString <> 
    0018: [1] 56 80 56 ................... loadString <cache> 
    0021: [2] 33 12 ba f2 01 d2 c9 03 .... debug 

    # ejs.es:15517                              enable: true,

    0029: [2] 56 00 ...................... loadString <> 
    0031: [3] 56 be be 03 ................ loadString <enable> 
    0035: [4] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0038: [5] 33 12 bc f2 01 8e ca 03 .... debug 

    # ejs.es:15518                              reload: true,

    0046: [5] 56 00 ...................... loadString <> 
    0048: [6] 56 ca ca 03 ................ loadString <reload> 
    0052: [7] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0055: [8] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0061: [3] 33 12 c0 f2 01 d8 ca 03 .... debug 

    # ejs.es:15520                          directories: {

    0069: [3] 56 00 ...................... loadString <> 
    0071: [4] 56 e8 55 ................... loadString <directories> 
    0074: [5] 33 12 c2 f2 01 8e cb 03 .... debug 

    # ejs.es:15521                              bin: Path("bin"),

    0082: [5] 56 00 ...................... loadString <> 
    0084: [6] 56 d2 cb 03 ................ loadString <bin> 
    0088: [7] 56 d2 cb 03 ................ loadString <bin> 
    0092: [8] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0096: [7] 93 ......................... pushResult 
    0097: [8] 33 12 c4 f2 01 da cb 03 .... debug 

    # ejs.es:15522                              db: Path("db"),

    0105: [8] 56 00 ...................... loadString <> 
    0107: [9] 56 98 24 ................... loadString <db> 
    0110: [10] 56 98 24 ................... loadString <db> 
    0113: [11] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0117: [10] 93 ......................... pushResult 
    0118: [11] 33 12 c6 f2 01 9a cc 03 .... debug 

    # ejs.es:15523                              cache: Path("cache"),

    0126: [11] 56 00 ...................... loadString <> 
    0128: [12] 56 80 56 ................... loadString <cache> 
    0131: [13] 56 80 56 ................... loadString <cache> 
    0134: [14] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0138: [13] 93 ......................... pushResult 
    0139: [14] 33 12 c8 f2 01 e6 cc 03 .... debug 

    # ejs.es:15524                              controllers: Path("controllers"),

    0147: [14] 56 00 ...................... loadString <> 
    0149: [15] 56 ca cd 03 ................ loadString <controllers> 
    0153: [16] 56 ca cd 03 ................ loadString <controllers> 
    0157: [17] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0161: [16] 93 ......................... pushResult 
    0162: [17] 33 12 ca f2 01 e2 cd 03 .... debug 

    # ejs.es:15525                              layouts: Path("views/layouts"),

    0170: [17] 56 00 ...................... loadString <> 
    0172: [18] 56 c2 ce 03 ................ loadString <layouts> 
    0176: [19] 56 d2 ce 03 ................ loadString <views/layouts> 
    0180: [20] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0184: [19] 93 ......................... pushResult 
    0185: [20] 33 12 cc f2 01 ee ce 03 .... debug 

    # ejs.es:15526                              models: Path("models"),

    0193: [20] 56 00 ...................... loadString <> 
    0195: [21] 56 be cf 03 ................ loadString <models> 
    0199: [22] 56 be cf 03 ................ loadString <models> 
    0203: [23] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0207: [22] 93 ......................... pushResult 
    0208: [23] 33 12 ce f2 01 cc cf 03 .... debug 

    # ejs.es:15527                              views: Path("views"),

    0216: [23] 56 00 ...................... loadString <> 
    0218: [24] 56 ec 72 ................... loadString <views> 
    0221: [25] 56 ec 72 ................... loadString <views> 
    0224: [26] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0228: [25] 93 ......................... pushResult 
    0229: [26] 33 12 d0 f2 01 98 d0 03 .... debug 

    # ejs.es:15528                              src: Path("src"),

    0237: [26] 56 00 ...................... loadString <> 
    0239: [27] 56 f8 de 01 ................ loadString <src> 
    0243: [28] 56 f8 de 01 ................ loadString <src> 
    0247: [29] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0251: [28] 93 ......................... pushResult 
    0252: [29] 33 12 d2 f2 01 dc d0 03 .... debug 

    # ejs.es:15529                              web: Path("web"),

    0260: [29] 56 00 ...................... loadString <> 
    0262: [30] 56 a0 d1 03 ................ loadString <web> 
    0266: [31] 56 a0 d1 03 ................ loadString <web> 
    0270: [32] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0274: [31] 93 ......................... pushResult 
    0275: [32] 8a e4 06 12 00 00 00 00 00 00 00 00 00  newObject <type: 0x1b2,  ejs::Object> <argc: 9> <att: 9 9 9 9 9 9 9 9 9 >
    0288: [6] 33 12 d6 f2 01 a8 d1 03 .... debug 

    # ejs.es:15531                          extensions: {

    0296: [6] 56 00 ...................... loadString <> 
    0298: [7] 56 c2 7e ................... loadString <extensions> 
    0301: [8] 33 12 d8 f2 01 dc d1 03 .... debug 

    # ejs.es:15532                              es: "es",

    0309: [8] 56 00 ...................... loadString <> 
    0311: [9] 56 90 d2 03 ................ loadString <es> 
    0315: [10] 56 90 d2 03 ................ loadString <es> 
    0319: [11] 33 12 da f2 01 96 d2 03 .... debug 

    # ejs.es:15533                              ejs: "ejs",

    0327: [11] 56 00 ...................... loadString <> 
    0329: [12] 56 ee 1d ................... loadString <ejs> 
    0332: [13] 56 ee 1d ................... loadString <ejs> 
    0335: [14] 33 12 dc f2 01 ce d2 03 .... debug 

    # ejs.es:15534                              mod: "mod",

    0343: [14] 56 00 ...................... loadString <> 
    0345: [15] 56 86 d3 03 ................ loadString <mod> 
    0349: [16] 56 86 d3 03 ................ loadString <mod> 
    0353: [17] 8a e4 06 06 00 00 00 ....... newObject <type: 0x1b2,  ejs::Object> <argc: 3> <att: 3 3 3 >
    0360: [9] 33 12 e0 f2 01 8e d3 03 .... debug 

    # ejs.es:15536                          mvc: {

    0368: [9] 56 00 ...................... loadString <> 
    0370: [10] 56 b4 d3 03 ................ loadString <mvc> 
    0374: [11] 33 12 e2 f2 01 bc d3 03 .... debug 

    # ejs.es:15537                              appmod: "App.mod",

    0382: [11] 56 00 ...................... loadString <> 
    0384: [12] 56 82 d4 03 ................ loadString <appmod> 
    0388: [13] 56 90 d4 03 ................ loadString <App.mod> 
    0392: [14] 33 12 e4 f2 01 a0 d4 03 .... debug 

    # ejs.es:15538                              start: "start.es",

    0400: [14] 56 00 ...................... loadString <> 
    0402: [15] 56 e6 d4 03 ................ loadString <start> 
    0406: [16] 56 f2 d4 03 ................ loadString <start.es> 
    0410: [17] 33 12 e6 f2 01 84 d5 03 .... debug 

    # ejs.es:15539                              views: {

    0418: [17] 56 00 ...................... loadString <> 
    0420: [18] 56 ec 72 ................... loadString <views> 
    0423: [19] 33 12 e8 f2 01 b6 d5 03 .... debug 

    # ejs.es:15540                                  connectors: { },

    0431: [19] 56 00 ...................... loadString <> 
    0433: [20] 56 80 d6 03 ................ loadString <connectors> 
    0437: [21] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0441: [22] 33 12 ea f2 01 96 d6 03 .... debug 

    # ejs.es:15541                                  formats: { },

    0449: [22] 56 00 ...................... loadString <> 
    0451: [23] 56 da d6 03 ................ loadString <formats> 
    0455: [24] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0459: [25] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0465: [20] 8a e4 06 06 00 00 00 ....... newObject <type: 0x1b2,  ejs::Object> <argc: 3> <att: 3 3 3 >
    0472: [12] 8a e4 06 08 00 00 00 00 .... newObject <type: 0x1b2,  ejs::Object> <argc: 4> <att: 4 4 4 4 >
    0480: [1] 33 12 b6 f2 01 96 c8 03 .... debug 

    # ejs.es:15515                      private static var defaultConfig = {

    0488: [1] 57 ......................... loadThis 
    0489: [2] b3 f0 c8 03 8c c9 03 ....... putObjName <defaultConfig> <[Mvc,private]> 
    0496: [0] 33 12 f6 f2 01 ea d6 03 .... debug 

    # ejs.es:15547                      private static var mvc: Object

    0504: [0] 33 12 f8 f2 01 b8 d7 03 .... debug 

    # ejs.es:15548                      private static var dirs: Object

    0512: [0] 33 12 fa f2 01 92 d8 03 .... debug 

    # ejs.es:15549                      private static var ext: Object

    0520: [0] 33 12 84 f3 01 e8 d8 03 .... debug 

    # ejs.es:15554                      private static function defaultAppExports(request: Request): Object {

    0528: [0] 33 12 a0 f3 01 b2 dd 03 .... debug 

    # ejs.es:15568                      public static function load(request: Request): Object {

    0536: [0] 33 12 dc f3 01 ec e9 03 .... debug 

    # ejs.es:15598                      public static function init(request: Request): Void {

    0544: [0] 33 12 9c f4 01 b4 f7 03 .... debug 

    # ejs.es:15630                      public static function loadComponent(mod: Path, deps: Array? = null) {

    0552: [0] be ......................... return 
    
VARIABLE:   [Mvc-27]  [Mvc,private] static var defaultConfig
VARIABLE:   [Mvc-28]  [Mvc,private] static var mvc : Object
VARIABLE:   [Mvc-29]  [Mvc,private] static var dirs : Object
VARIABLE:   [Mvc-30]  [Mvc,private] static var ext : Object

FUNCTION:   [Mvc-31]  [Mvc,private] const static function defaultAppExports(request) : Object

     ARG:   [arg-00]   private request
   LOCAL:   [local-01] var controller

    0000: [0] 33 12 88 f3 01 84 da 03 .... debug 

    # ejs.es:15556                          Route(request, Router.LegacyRoutes)

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7e d6 02 ................... getGlobalSlot <slot: 171> 
    0012: [2] 7b e4 da 03 c4 08 .......... getObjName <LegacyRoutes> <public> 
    0018: [2] 17 d8 02 04 ................ callGlobalSlot <slot: 172> <argc: 2> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] 90 ......................... pop 
    0024: [0] 33 12 8a f3 01 fe da 03 .... debug 

    # ejs.es:15557                          Mvc.init(request)

    0032: [0] 7e d2 02 ................... getGlobalSlot <slot: 169> 
    0035: [1] 5b ......................... getLocalSlot0 
    0036: [2] 1e ba db 03 c4 08 02 ....... callObjName <init> <public> <argc: 1> 
    0043: [0] 33 12 8c f3 01 c4 db 03 .... debug 

    # ejs.es:15558                          let controller = Controller.create(request)

    0051: [0] 7e cc 02 ................... getGlobalSlot <slot: 166> 
    0054: [1] 5b ......................... getLocalSlot0 
    0055: [2] 1e e0 1d 7c 02 ............. callObjName <create> <ejs.web> <argc: 1> 
    0060: [0] 93 ......................... pushResult 
    0061: [1] 95 ......................... putLocalSlot1 
    0062: [0] 33 12 8e f3 01 b4 dc 03 .... debug 

    # ejs.es:15559                          return controller.start(request)

    0070: [0] 5c ......................... getLocalSlot1 
    0071: [1] 5b ......................... getLocalSlot0 
    0072: [2] 1e e6 d4 03 00 02 .......... callObjName <start> <> <argc: 1> 
    0078: [0] 93 ......................... pushResult 
    0079: [1] bf ......................... returnValue 
    
VARIABLE:   [request-00]  private var request
VARIABLE:   [controller-01]  private var controller

FUNCTION:   [Mvc-32]  public const static function load(request) : Object

     ARG:   [arg-00]   private request
   LOCAL:   [local-01] var dir
   LOCAL:   [local-02] var path
   LOCAL:   [local-03] var config
   LOCAL:   [local-04] var start
   LOCAL:   [local-05] var exports
   LOCAL:   [local-06] var appConfig

    0000: [0] 33 12 a2 f3 01 b2 de 03 .... debug 

    # ejs.es:15569                          let dir = request.dir

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0014: [1] 95 ......................... putLocalSlot1 
    0015: [0] 33 12 a4 f3 01 f6 de 03 .... debug 

    # ejs.es:15570                          let path = dir.join("ejsrc")

    0023: [0] 5c ......................... getLocalSlot1 
    0024: [1] 56 c8 df 03 ................ loadString <ejsrc> 
    0028: [2] 1e f6 25 00 02 ............. callObjName <join> <> <argc: 1> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 96 ......................... putLocalSlot2 
    0035: [0] 33 12 a6 f3 01 d4 df 03 .... debug 

    # ejs.es:15571                          let config = request.config

    0043: [0] 5b ......................... getLocalSlot0 
    0044: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0049: [1] 97 ......................... putLocalSlot3 
    0050: [0] 33 12 a8 f3 01 a4 e0 03 .... debug 

    # ejs.es:15572                          if (path.exists) {

    0058: [0] 5d ......................... getLocalSlot2 
    0059: [1] 7b aa 57 00 ................ getObjName <exists> <> 
    0063: [1] 13 44 ...................... branchFalse8 <addr: 133> 
    0065: [0] 33 12 aa f3 01 f6 e0 03 .... debug 

    # ejs.es:15573                              let appConfig = deserialize(path.readString())

    0073: [0] 5d ......................... getLocalSlot2 
    0074: [1] 1e c8 5d 00 00 ............. callObjName <readString> <> <argc: 0> 
    0079: [0] 93 ......................... pushResult 
    0080: [1] 17 c6 01 02 ................ callGlobalSlot <slot: 99> <argc: 1> 
    0084: [0] 93 ......................... pushResult 
    0085: [1] 9a ......................... putLocalSlot6 
    0086: [0] 33 12 ae f3 01 f4 e1 03 .... debug 

    # ejs.es:15575                              config = request.config = request.config.clone()

    0094: [0] 5b ......................... getLocalSlot0 
    0095: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0100: [1] 1e fe 35 00 00 ............. callObjName <clone> <> <argc: 0> 
    0105: [0] 93 ......................... pushResult 
    0106: [1] 39 ......................... dup 
    0107: [2] 5b ......................... getLocalSlot0 
    0108: [3] b3 a2 14 c4 08 ............. putObjName <config> <public> 
    0113: [1] 97 ......................... putLocalSlot3 
    0114: [0] 33 12 b0 f3 01 f6 e2 03 .... debug 

    # ejs.es:15576                              blend(config, appConfig, true)

    0122: [0] 5e ......................... getLocalSlot3 
    0123: [1] 61 ......................... getLocalSlot6 
    0124: [2] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0127: [3] 17 9c 01 06 ................ callGlobalSlot <slot: 78> <argc: 3> 
    0131: [0] 3e 00 ...................... goto8 <addr: 133> 
    0133: [0] 33 12 b2 f3 01 b2 1a ....... debug 

    # ejs.es:15577                          }

    0140: [0] 33 12 b4 f3 01 d4 e3 03 .... debug 

    # ejs.es:15578                          blend(config, defaultConfig, false)

    0148: [0] 5e ......................... getLocalSlot3 
    0149: [1] 57 ......................... loadThis 
    0150: [2] 7b f0 c8 03 8c c9 03 ....... getObjName <defaultConfig> <[Mvc,private]> 
    0157: [2] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0159: [3] 17 9c 01 06 ................ callGlobalSlot <slot: 78> <argc: 3> 
    0163: [0] 33 12 b6 f3 01 b4 e4 03 .... debug 

    # ejs.es:15579                          mvc = config.mvc

    0171: [0] 5e ......................... getLocalSlot3 
    0172: [1] 7b b4 d3 03 00 ............. getObjName <mvc> <> 
    0177: [1] 57 ......................... loadThis 
    0178: [2] b3 b4 d3 03 8c c9 03 ....... putObjName <mvc> <[Mvc,private]> 
    0185: [0] 33 12 b8 f3 01 ee e4 03 .... debug 

    # ejs.es:15580                          dirs = config.directories

    0193: [0] 5e ......................... getLocalSlot3 
    0194: [1] 7b e8 55 00 ................ getObjName <directories> <> 
    0198: [1] 57 ......................... loadThis 
    0199: [2] b3 88 d8 03 8c c9 03 ....... putObjName <dirs> <[Mvc,private]> 
    0206: [0] 33 12 ba f3 01 ba e5 03 .... debug 

    # ejs.es:15581                          ext = config.extensions

    0214: [0] 5e ......................... getLocalSlot3 
    0215: [1] 7b c2 7e 00 ................ getObjName <extensions> <> 
    0219: [1] 57 ......................... loadThis 
    0220: [2] b3 e0 d8 03 8c c9 03 ....... putObjName <ext> <[Mvc,private]> 
    0227: [0] 33 12 bc f3 01 82 e6 03 .... debug 

    # ejs.es:15582                          let start = dir.join(mvc.start)

    0235: [0] 5c ......................... getLocalSlot1 
    0236: [1] 57 ......................... loadThis 
    0237: [2] 7b b4 d3 03 8c c9 03 ....... getObjName <mvc> <[Mvc,private]> 
    0244: [2] 7b e6 d4 03 ba 11 .......... getObjName <start> <> 
    0250: [2] 1e f6 25 00 02 ............. callObjName <join> <> <argc: 1> 
    0255: [0] 93 ......................... pushResult 
    0256: [1] 98 ......................... putLocalSlot4 
    0257: [0] 33 12 be f3 01 da e6 03 .... debug 

    # ejs.es:15583                          let exports

    0265: [0] 33 12 c0 f3 01 9a e7 03 .... debug 

    # ejs.es:15584                          if (start && start.exists) {

    0273: [0] 5f ......................... getLocalSlot4 
    0274: [1] 39 ......................... dup 
    0275: [2] 13 06 ...................... branchFalse8 <addr: 283> 
    0277: [1] 90 ......................... pop 
    0278: [0] 5f ......................... getLocalSlot4 
    0279: [1] 7b aa 57 00 ................ getObjName <exists> <> 
    0283: [1] 13 18 ...................... branchFalse8 <addr: 309> 
    0285: [0] 33 12 c2 f3 01 ec e7 03 .... debug 

    # ejs.es:15585                              exports = Loader.load(start, start)

    0293: [0] 7e 94 02 ................... getGlobalSlot <slot: 138> 
    0296: [1] 5f ......................... getLocalSlot4 
    0297: [2] 5f ......................... getLocalSlot4 
    0298: [3] 1e d4 e8 03 c4 08 04 ....... callObjName <load> <public> <argc: 2> 
    0305: [0] 93 ......................... pushResult 
    0306: [1] 99 ......................... putLocalSlot5 
    0307: [0] 3e 18 ...................... goto8 <addr: 333> 
    0309: [0] 33 12 c4 f3 01 b4 33 ....... debug 

    # ejs.es:15586                          } else {

    0316: [0] 33 12 c6 f3 01 de e8 03 .... debug 

    # ejs.es:15587                              exports = defaultAppExports

    0324: [0] 57 ......................... loadThis 
    0325: [1] 7b 8e dd 03 8c c9 03 ....... getObjName <defaultAppExports> <[Mvc,private]> 
    0332: [1] 99 ......................... putLocalSlot5 
    0333: [0] 33 12 ca f3 01 b6 e9 03 .... debug 

    # ejs.es:15589                          return exports

    0341: [0] 60 ......................... getLocalSlot5 
    0342: [1] bf ......................... returnValue 
    
VARIABLE:   [request-00]  private var request
VARIABLE:   [dir-01]  private var dir
VARIABLE:   [path-02]  private var path
VARIABLE:   [config-03]  private var config
VARIABLE:   [start-04]  private var start
VARIABLE:   [exports-05]  private var exports
VARIABLE:   [appConfig-06]  -hoisted-6 var appConfig

FUNCTION:   [Mvc-33]  public const static function init(request) : Void

     ARG:   [arg-00]   private request
   LOCAL:   [local-01] var config
   LOCAL:   [local-02] var dir
   LOCAL:   [local-03] var mod
   LOCAL:   [local-04] var deps
   LOCAL:   [local-05] var controller
   LOCAL:   [local-06] var ucontroller

    0000: [0] 33 12 de f3 01 d4 df 03 .... debug 

    # ejs.es:15599                          let config = request.config

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0014: [1] 95 ......................... putLocalSlot1 
    0015: [0] 33 12 e0 f3 01 b2 de 03 .... debug 

    # ejs.es:15600                          let dir = request.dir

    0023: [0] 5b ......................... getLocalSlot0 
    0024: [1] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0029: [1] 96 ......................... putLocalSlot2 
    0030: [0] 33 12 e6 f3 01 e8 ea 03 .... debug 

    # ejs.es:15603                          let mod = dir.join(dirs.cache, mvc.appmod)

    0038: [0] 5d ......................... getLocalSlot2 
    0039: [1] 57 ......................... loadThis 
    0040: [2] 7b 88 d8 03 8c c9 03 ....... getObjName <dirs> <[Mvc,private]> 
    0047: [2] 7b 80 56 ba 11 ............. getObjName <cache> <> 
    0052: [2] 57 ......................... loadThis 
    0053: [3] 7b b4 d3 03 8c c9 03 ....... getObjName <mvc> <[Mvc,private]> 
    0060: [3] 7b 82 d4 03 ba 11 .......... getObjName <appmod> <> 
    0066: [3] 1e f6 25 00 04 ............. callObjName <join> <> <argc: 2> 
    0071: [0] 93 ......................... pushResult 
    0072: [1] 97 ......................... putLocalSlot3 
    0073: [0] 33 12 e8 f3 01 d6 eb 03 .... debug 

    # ejs.es:15604                          let deps

    0081: [0] 33 12 ea f3 01 8a ec 03 .... debug 

    # ejs.es:15605                          if (config.mode == "debug") {

    0089: [0] 5c ......................... getLocalSlot1 
    0090: [1] 7b d4 1f 00 ................ getObjName <mode> <> 
    0094: [1] 56 de ec 03 ................ loadString <debug> 
    0098: [2] 25 ......................... compareEq 
    0099: [1] 07 86 03 f7 f7 ............. branchFalse <addr: 299> 
    0104: [0] 33 12 ec f3 01 ea ec 03 .... debug 

    # ejs.es:15606                              deps = []

    0112: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0114: [1] 89 ......................... new 
    0115: [1] 98 ......................... putLocalSlot4 
    0116: [0] 33 12 ee f3 01 9e ed 03 .... debug 

    # ejs.es:15607                              deps.append(dir.join(dirs.models).find("*" + ext.es))

    0124: [0] 5f ......................... getLocalSlot4 
    0125: [1] 5d ......................... getLocalSlot2 
    0126: [2] 57 ......................... loadThis 
    0127: [3] 7b 88 d8 03 8c c9 03 ....... getObjName <dirs> <[Mvc,private]> 
    0134: [3] 7b be cf 03 ba 11 .......... getObjName <models> <> 
    0140: [3] 1e f6 25 00 02 ............. callObjName <join> <> <argc: 1> 
    0145: [1] 93 ......................... pushResult 
    0146: [2] 56 aa ee 03 ................ loadString <*> 
    0150: [3] 57 ......................... loadThis 
    0151: [4] 7b e0 d8 03 8c c9 03 ....... getObjName <ext> <[Mvc,private]> 
    0158: [4] 7b 90 d2 03 ba 11 .......... getObjName <es> <> 
    0164: [4] 00 ......................... add 
    0165: [3] 1e ae ee 03 00 02 .......... callObjName <find> <> <argc: 1> 
    0171: [1] 93 ......................... pushResult 
    0172: [2] 1e dc 41 00 02 ............. callObjName <append> <> <argc: 1> 
    0177: [0] 33 12 f0 f3 01 b8 ee 03 .... debug 

    # ejs.es:15608                              deps.append(dir.join(dirs.src).find("*" + ext.es))

    0185: [0] 5f ......................... getLocalSlot4 
    0186: [1] 5d ......................... getLocalSlot2 
    0187: [2] 57 ......................... loadThis 
    0188: [3] 7b 88 d8 03 8c c9 03 ....... getObjName <dirs> <[Mvc,private]> 
    0195: [3] 7b f8 de 01 ba 11 .......... getObjName <src> <> 
    0201: [3] 1e f6 25 00 02 ............. callObjName <join> <> <argc: 1> 
    0206: [1] 93 ......................... pushResult 
    0207: [2] 56 aa ee 03 ................ loadString <*> 
    0211: [3] 57 ......................... loadThis 
    0212: [4] 7b e0 d8 03 8c c9 03 ....... getObjName <ext> <[Mvc,private]> 
    0219: [4] 7b 90 d2 03 ba 11 .......... getObjName <es> <> 
    0225: [4] 00 ......................... add 
    0226: [3] 1e ae ee 03 00 02 .......... callObjName <find> <> <argc: 1> 
    0232: [1] 93 ......................... pushResult 
    0233: [2] 1e dc 41 00 02 ............. callObjName <append> <> <argc: 1> 
    0238: [0] 33 12 f2 f3 01 be ef 03 .... debug 

    # ejs.es:15609                              deps.append(dir.join(dirs.controllers, "Base").joinExt(ext.es))

    0246: [0] 5f ......................... getLocalSlot4 
    0247: [1] 5d ......................... getLocalSlot2 
    0248: [2] 57 ......................... loadThis 
    0249: [3] 7b 88 d8 03 8c c9 03 ....... getObjName <dirs> <[Mvc,private]> 
    0256: [3] 7b ca cd 03 ba 11 .......... getObjName <controllers> <> 
    0262: [3] 56 de f0 03 ................ loadString <Base> 
    0266: [4] 1e f6 25 00 04 ............. callObjName <join> <> <argc: 2> 
    0271: [1] 93 ......................... pushResult 
    0272: [2] 57 ......................... loadThis 
    0273: [3] 7b e0 d8 03 8c c9 03 ....... getObjName <ext> <[Mvc,private]> 
    0280: [3] 7b 90 d2 03 ba 11 .......... getObjName <es> <> 
    0286: [3] 1e d8 7e 00 02 ............. callObjName <joinExt> <> <argc: 1> 
    0291: [1] 93 ......................... pushResult 
    0292: [2] 1e dc 41 00 02 ............. callObjName <append> <> <argc: 1> 
    0297: [0] 3e 00 ...................... goto8 <addr: 299> 
    0299: [0] 33 12 f4 f3 01 b2 1a ....... debug 

    # ejs.es:15610                          }

    0306: [0] 33 12 f6 f3 01 e8 f0 03 .... debug 

    # ejs.es:15611                          loadComponent(mod, deps)

    0314: [0] 5e ......................... getLocalSlot3 
    0315: [1] 5f ......................... getLocalSlot4 
    0316: [2] 1f b2 f1 03 c4 08 04 ....... callScopedName <loadComponent> <public> <argc: 2> 
    0323: [0] 33 12 fc f3 01 ce f1 03 .... debug 

    # ejs.es:15614                          let controller = request.params.controller

    0331: [0] 5b ......................... getLocalSlot0 
    0332: [1] 7b b2 06 c4 08 ............. getObjName <params> <public> 
    0337: [1] 7b f8 17 00 ................ getObjName <controller> <> 
    0341: [1] 99 ......................... putLocalSlot5 
    0342: [0] 33 12 fe f3 01 bc f2 03 .... debug 

    # ejs.es:15615                          let ucontroller = controller.toPascal()

    0350: [0] 60 ......................... getLocalSlot5 
    0351: [1] 1e 90 1c 00 00 ............. callObjName <toPascal> <> <argc: 0> 
    0356: [0] 93 ......................... pushResult 
    0357: [1] 9a ......................... putLocalSlot6 
    0358: [0] 33 12 80 f4 01 bc f3 03 .... debug 

    # ejs.es:15616                          mod = dir.join(dirs.cache, ucontroller).joinExt(ext.mod)

    0366: [0] 5d ......................... getLocalSlot2 
    0367: [1] 57 ......................... loadThis 
    0368: [2] 7b 88 d8 03 8c c9 03 ....... getObjName <dirs> <[Mvc,private]> 
    0375: [2] 7b 80 56 ba 11 ............. getObjName <cache> <> 
    0380: [2] 61 ......................... getLocalSlot6 
    0381: [3] 1e f6 25 00 04 ............. callObjName <join> <> <argc: 2> 
    0386: [0] 93 ......................... pushResult 
    0387: [1] 57 ......................... loadThis 
    0388: [2] 7b e0 d8 03 8c c9 03 ....... getObjName <ext> <[Mvc,private]> 
    0395: [2] 7b 86 d3 03 ba 11 .......... getObjName <mod> <> 
    0401: [2] 1e d8 7e 00 02 ............. callObjName <joinExt> <> <argc: 1> 
    0406: [0] 93 ......................... pushResult 
    0407: [1] 97 ......................... putLocalSlot3 
    0408: [0] 33 12 82 f4 01 c6 f4 03 .... debug 

    # ejs.es:15617                          if (!mod.exists || config.cache.reload) {

    0416: [0] 5e ......................... getLocalSlot3 
    0417: [1] 7b aa 57 00 ................ getObjName <exists> <> 
    0421: [1] 86 ......................... logicalNot 
    0422: [1] 39 ......................... dup 
    0423: [2] 14 0b ...................... branchTrue8 <addr: 436> 
    0425: [1] 90 ......................... pop 
    0426: [0] 5c ......................... getLocalSlot1 
    0427: [1] 7b 80 56 00 ................ getObjName <cache> <> 
    0431: [1] 7b ca ca 03 00 ............. getObjName <reload> <> 
    0436: [1] 13 46 ...................... branchFalse8 <addr: 508> 
    0438: [0] 33 12 84 f4 01 b2 f5 03 .... debug 

    # ejs.es:15618                              loadComponent(mod, [dir.join(dirs.controllers, ucontroller).joinExt(ext.es)])

    0446: [0] 5e ......................... getLocalSlot3 
    0447: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0449: [2] 89 ......................... new 
    0450: [2] 39 ......................... dup 
    0451: [3] 5d ......................... getLocalSlot2 
    0452: [4] 57 ......................... loadThis 
    0453: [5] 7b 88 d8 03 8c c9 03 ....... getObjName <dirs> <[Mvc,private]> 
    0460: [5] 7b ca cd 03 ba 11 .......... getObjName <controllers> <> 
    0466: [5] 61 ......................... getLocalSlot6 
    0467: [6] 1e f6 25 00 04 ............. callObjName <join> <> <argc: 2> 
    0472: [3] 93 ......................... pushResult 
    0473: [4] 57 ......................... loadThis 
    0474: [5] 7b e0 d8 03 8c c9 03 ....... getObjName <ext> <[Mvc,private]> 
    0481: [5] 7b 90 d2 03 ba 11 .......... getObjName <es> <> 
    0487: [5] 1e d8 7e 00 02 ............. callObjName <joinExt> <> <argc: 1> 
    0492: [3] 93 ......................... pushResult 
    0493: [4] c5 ......................... swap 
    0494: [4] 56 ba 11 ................... loadString <> 
    0497: [5] 44 ......................... load0 
    0498: [6] b2 ......................... putObjNameExpr 
    0499: [2] 1f b2 f1 03 c4 08 04 ....... callScopedName <loadComponent> <public> <argc: 2> 
    0506: [0] 3e 17 ...................... goto8 <addr: 531> 
    0508: [0] 33 12 86 f4 01 b4 33 ....... debug 

    # ejs.es:15619                          } else {

    0515: [0] 33 12 88 f4 01 ee f6 03 .... debug 

    # ejs.es:15620                              loadComponent(mod)

    0523: [0] 5e ......................... getLocalSlot3 
    0524: [1] 1f b2 f1 03 c4 08 02 ....... callScopedName <loadComponent> <public> <argc: 1> 
    0531: [0] 54 ......................... loadNull 
    0532: [1] bf ......................... returnValue 
    0533: [0] 33 12 8c f4 01 b0 15 ....... debug 

    # ejs.es:15622                      }
    
VARIABLE:   [request-00]  private var request
VARIABLE:   [config-01]  private var config
VARIABLE:   [dir-02]  private var dir
VARIABLE:   [mod-03]  private var mod
VARIABLE:   [deps-04]  private var deps
VARIABLE:   [controller-05]  private var controller
VARIABLE:   [ucontroller-06]  private var ucontroller

FUNCTION:   [Mvc-34]  public const static function loadComponent(mod: Path, deps: Array) : void

     ARG:   [arg-00]   private mod : Path
     ARG:   [arg-01]   private deps : Array
   LOCAL:   [local-02] var rebuild
   LOCAL:   [local-03] var when
   LOCAL:   [local-04] var dep
   LOCAL:   [local-05] var code
   LOCAL:   [local-06] var dep
   LOCAL:   [local-07] var path

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 12 9e f4 01 e2 f8 03 .... debug 

    # ejs.es:15631                          let rebuild

    0015: [0] 33 12 a0 f4 01 92 f9 03 .... debug 

    # ejs.es:15632                          if (mod.exists) {

    0023: [0] 5b ......................... getLocalSlot0 
    0024: [1] 7b aa 57 c4 08 ............. getObjName <exists> <public> 
    0029: [1] 13 5d ...................... branchFalse8 <addr: 124> 
    0031: [0] 33 12 a2 f4 01 ce f9 03 .... debug 

    # ejs.es:15633                              rebuild = false

    0039: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0041: [1] 96 ......................... putLocalSlot2 
    0042: [0] 33 12 a4 f4 01 8e fa 03 .... debug 

    # ejs.es:15634                              let when = mod.modified

    0050: [0] 5b ......................... getLocalSlot0 
    0051: [1] 7b b8 57 c4 08 ............. getObjName <modified> <public> 
    0056: [1] 97 ......................... putLocalSlot3 
    0057: [0] 33 12 a6 f4 01 e8 fa 03 .... debug 

    # ejs.es:15635                              for each (dep in deps) {

    0065: [0] 5c ......................... getLocalSlot1 
    0066: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0072: [0] 93 ......................... pushResult 
    0073: [1] 39 ......................... dup 
    0074: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0077: [1] 93 ......................... pushResult 
    0078: [2] 98 ......................... putLocalSlot4 
    0079: [1] 33 12 a8 f4 01 c2 fb 03 .... debug 

    # ejs.es:15636                                  if (dep.exists && dep.modified > when) {

    0087: [1] 5f ......................... getLocalSlot4 
    0088: [2] 7b aa 57 00 ................ getObjName <exists> <> 
    0092: [2] 39 ......................... dup 
    0093: [3] 13 08 ...................... branchFalse8 <addr: 103> 
    0095: [2] 90 ......................... pop 
    0096: [1] 5f ......................... getLocalSlot4 
    0097: [2] 7b b8 57 00 ................ getObjName <modified> <> 
    0101: [2] 5e ......................... getLocalSlot3 
    0102: [3] 29 ......................... compareGt 
    0103: [2] 13 0e ...................... branchFalse8 <addr: 119> 
    0105: [1] 33 12 aa f4 01 bc fc 03 .... debug 

    # ejs.es:15637                                      rebuild = true

    0113: [1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0116: [2] 96 ......................... putLocalSlot2 
    0117: [1] 3e 00 ...................... goto8 <addr: 119> 
    0119: [1] 3e d0 ...................... goto8 <addr: 73> 
    0121: [1] 90 ......................... pop 
    0122: [0] 3e 13 ...................... goto8 <addr: 143> 
    0124: [0] 33 12 b0 f4 01 b4 33 ....... debug 

    # ejs.es:15640                          } else {

    0131: [0] 33 12 b2 f4 01 8a fd 03 .... debug 

    # ejs.es:15641                              rebuild = true

    0139: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0142: [1] 96 ......................... putLocalSlot2 
    0143: [0] 33 12 b6 f4 01 c8 fd 03 .... debug 

    # ejs.es:15643                          if (rebuild) {

    0151: [0] 5d ......................... getLocalSlot2 
    0152: [1] 07 96 02 f7 f7 ............. branchFalse <addr: 296> 
    0157: [0] 33 12 b8 f4 01 fe fd 03 .... debug 

    # ejs.es:15644                              let code = ""

    0165: [0] 56 ba 11 ................... loadString <> 
    0168: [1] 99 ......................... putLocalSlot5 
    0169: [0] 33 12 ba f4 01 e8 fa 03 .... debug 

    # ejs.es:15645                              for each (dep in deps) {

    0177: [0] 5c ......................... getLocalSlot1 
    0178: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0184: [0] 93 ......................... pushResult 
    0185: [1] 39 ......................... dup 
    0186: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0189: [1] 93 ......................... pushResult 
    0190: [2] 9a ......................... putLocalSlot6 
    0191: [1] 33 12 bc f4 01 ba fe 03 .... debug 

    # ejs.es:15646                                  let path = Path(dep)

    0199: [1] 61 ......................... getLocalSlot6 
    0200: [2] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0204: [1] 93 ......................... pushResult 
    0205: [2] 9b ......................... putLocalSlot7 
    0206: [1] 33 12 be f4 01 8c ff 03 .... debug 

    # ejs.es:15647                                  if (!path.exists) {

    0214: [1] 62 ......................... getLocalSlot7 
    0215: [2] 7b aa 57 00 ................ getObjName <exists> <> 
    0219: [2] 86 ......................... logicalNot 
    0220: [2] 13 16 ...................... branchFalse8 <addr: 244> 
    0222: [1] 33 12 c0 f4 01 dc ff 03 .... debug 

    # ejs.es:15648                                      throw "Can't find required component: \"" + path + "\""

    0230: [1] 56 fc 80 04 ................ loadString <Can't find required component: "> 
    0234: [2] 62 ......................... getLocalSlot7 
    0235: [3] 00 ......................... add 
    0236: [2] 56 de 89 01 ................ loadString <"> 
    0240: [3] 00 ......................... add 
    0241: [2] c6 ......................... throw 
    0242: [2] 3e 00 ...................... goto8 <addr: 244> 
    0244: [2] 33 12 c2 f4 01 bc f5 02 .... debug 

    # ejs.es:15649                                  }

    0252: [2] 33 12 c4 f4 01 be 81 04 .... debug 

    # ejs.es:15650                                  code += path.readString()

    0260: [2] 60 ......................... getLocalSlot5 
    0261: [3] 62 ......................... getLocalSlot7 
    0262: [4] 1e c8 5d 00 00 ............. callObjName <readString> <> <argc: 0> 
    0267: [3] 93 ......................... pushResult 
    0268: [4] 00 ......................... add 
    0269: [3] 99 ......................... putLocalSlot5 
    0270: [2] 3e a9 ...................... goto8 <addr: 185> 
    0272: [2] 90 ......................... pop 
    0273: [1] 33 12 c6 f4 01 86 35 ....... debug 

    # ejs.es:15651                              }

    0280: [1] 33 12 c8 f4 01 9a 82 04 .... debug 

    # ejs.es:15652                              eval(code, mod)

    0288: [1] 60 ......................... getLocalSlot5 
    0289: [2] 5b ......................... getLocalSlot0 
    0290: [3] 17 9e 01 04 ................ callGlobalSlot <slot: 79> <argc: 2> 
    0294: [1] 3e 19 ...................... goto8 <addr: 321> 
    0296: [1] 33 12 ca f4 01 b4 33 ....... debug 

    # ejs.es:15653                          } else {

    0303: [1] 33 12 cc f4 01 da 82 04 .... debug 

    # ejs.es:15654                              global.load(mod)

    0311: [1] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0313: [2] 5b ......................... getLocalSlot0 
    0314: [3] 1e d4 e8 03 ba 11 02 ....... callObjName <load> <> <argc: 1> 
    0321: [1] be ......................... return 
    0322: [0] 33 12 d0 f4 01 b0 15 ....... debug 

    # ejs.es:15656                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     74      77        121          121       StopIteration
1   iteration    186     189        272          272       StopIteration

VARIABLE:   [mod-00]  private var mod : Path
VARIABLE:   [deps-01]  private var deps : Array
VARIABLE:   [rebuild-02]  private var rebuild
VARIABLE:   [when-03]  -hoisted-3 var when
VARIABLE:   [dep-04]  -hoisted-4 var dep
VARIABLE:   [code-05]  -hoisted-5 var code
VARIABLE:   [dep-06]  -hoisted-6 var dep
VARIABLE:   [path-07]  -hoisted-6 var path

CLASS:      dynamic class Request extends Object
            #  Class Details: 57 class traits, 33 instance traits, requested slot 170

FUNCTION:   [Request-26]  -initializer- static function Request-initializer() : Void


    0000: [0] 33 12 d6 f5 01 9c b8 03 .... debug 

    # ejs.es:15723                      use default namespace public

    0008: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0010: [1] 02 ......................... addNamespaceRef 
    0011: [0] 33 12 e2 f5 01 f2 84 04 .... debug 

    # ejs.es:15729                      native var absHome: Uri

    0019: [0] 33 12 ec f5 01 c2 85 04 .... debug 

    # ejs.es:15734                      native var authGroup: String

    0027: [0] 33 12 f6 f5 01 a0 86 04 .... debug 

    # ejs.es:15739                      native var authType: String

    0035: [0] 33 12 82 f6 01 fa 86 04 .... debug 

    # ejs.es:15745                      native var authUser: String

    0043: [0] 33 12 90 f6 01 d4 87 04 .... debug 

    # ejs.es:15752                      native var chunkSize: Number

    0051: [0] 33 12 9c f6 01 b2 88 04 .... debug 

    # ejs.es:15758                      var config: Object

    0059: [0] 33 12 a8 f6 01 e8 88 04 .... debug 

    # ejs.es:15764                      native var contentLength: Number

    0067: [0] 33 12 b4 f6 01 d6 89 04 .... debug 

    # ejs.es:15770                      native var contentType: String

    0075: [0] 33 12 c2 f6 01 bc 8a 04 .... debug 

    # ejs.es:15777                      native var cookies: Object

    0083: [0] 33 12 d0 f6 01 92 8b 04 .... debug 

    # ejs.es:15784                      native var dir: Path

    0091: [0] 33 12 da f6 01 cc 8b 04 .... debug 

    # ejs.es:15789                      native var encoding: String

    0099: [0] 33 12 e6 f6 01 a6 8c 04 .... debug 

    # ejs.es:15795                      native var files: Object

    0107: [0] 33 12 f4 f6 01 f4 8c 04 .... debug 

    # ejs.es:15802                      native var headers: Object

    0115: [0] 33 12 80 f7 01 ca 8d 04 .... debug 

    # ejs.es:15808                      native var home: Uri

    0123: [0] 33 12 8a f7 01 84 8e 04 .... debug 

    # ejs.es:15813                      native var host: String

    0131: [0] 33 12 94 f7 01 ce 8e 04 .... debug 

    # ejs.es:15818                      function get log(): Logger 

    0139: [0] 33 12 a0 f7 01 c4 8f 04 .... debug 

    # ejs.es:15824                      native var method: String

    0147: [0] 33 12 aa f7 01 88 90 04 .... debug 

    # ejs.es:15829                      native var params: Object

    0155: [0] 33 12 b4 f7 01 cc 90 04 .... debug 

    # ejs.es:15834                      native var pathInfo: String

    0163: [0] 33 12 be f7 01 a6 91 04 .... debug 

    # ejs.es:15839                      native var query: String

    0171: [0] 33 12 ca f7 01 e8 91 04 .... debug 

    # ejs.es:15845                      native var referrer: String

    0179: [0] 33 12 d4 f7 01 c2 92 04 .... debug 

    # ejs.es:15850                      native var remoteAddress: String

    0187: [0] 33 12 e2 f7 01 b0 93 04 .... debug 

    # ejs.es:15857                      var route: Route

    0195: [0] 33 12 ec f7 01 fa 93 04 .... debug 

    # ejs.es:15862                      native var scheme: String

    0203: [0] 33 12 fc f7 01 cc 94 04 .... debug 

    # ejs.es:15870                      native var scriptName: String

    0211: [0] 33 12 88 f8 01 ae 95 04 .... debug 

    # ejs.es:15876                      native var secure: Boolean

    0219: [0] 33 12 92 f8 01 82 96 04 .... debug 

    # ejs.es:15881                      native var server: HttpServer

    0227: [0] 33 12 a2 f8 01 dc 96 04 .... debug 

    # ejs.es:15889                      native var session: Object 

    0235: [0] 33 12 ac f8 01 b4 97 04 .... debug 

    # ejs.es:15894                      native var sessionID: String

    0243: [0] 33 12 b6 f8 01 92 98 04 .... debug 

    # ejs.es:15899                      native var status: Number

    0251: [0] 33 12 c2 f8 01 d6 98 04 .... debug 

    # ejs.es:15905                      native var timeout: Number

    0259: [0] 33 12 ce f8 01 ac 99 04 .... debug 

    # ejs.es:15911                      native var uri: Uri

    0267: [0] 33 12 d8 f8 01 e4 99 04 .... debug 

    # ejs.es:15916                      native var userAgent: String

    0275: [0] 33 12 f2 f8 01 d6 ba 03 .... debug 

    # ejs.es:15929                      native function addListener(name, listener: Function): Void

    0283: [0] 33 12 fc f8 01 e6 bc 03 .... debug 

    # ejs.es:15934                      native function get async(): Boolean

    0291: [0] 33 12 86 f9 01 cc bd 03 .... debug 

    # ejs.es:15939                      native function set async(enable: Boolean): Void

    0299: [0] 33 12 94 f9 01 c2 9a 04 .... debug 

    # ejs.es:15946                      function cachable(enable: Boolean = false): Void {

    0307: [0] 33 12 aa f9 01 cc be 03 .... debug 

    # ejs.es:15957                      native function close(): Void

    0315: [0] 33 12 b6 f9 01 bc 9d 04 .... debug 

    # ejs.es:15963                      function dump(...args): Void {

    0323: [0] 33 12 ca f9 01 80 a0 04 .... debug 

    # ejs.es:15973                      native function destroySession(): Void

    0331: [0] 33 12 d4 f9 01 fc a0 04 .... debug 

    # ejs.es:15978                      function get extension() 

    0339: [0] 33 12 e2 f9 01 9e a2 04 .... debug 

    # ejs.es:15985                      native function finalize(): Void 

    0347: [0] 33 12 ee f9 01 84 a3 04 .... debug 

    # ejs.es:15991                      function flush(): Void {}

    0355: [0] 33 12 fa f9 01 d4 a3 04 .... debug 

    # ejs.es:15997                      native function getResponseHeaders(): Object

    0363: [0] 33 12 8a fa 01 e4 a4 04 .... debug 

    # ejs.es:16005                      native function header(key: String): String

    0371: [0] 33 12 94 fa 01 d4 a5 04 .... debug 

    # ejs.es:16010                      native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number 

    0379: [0] 33 12 a6 fa 01 d2 a7 04 .... debug 

    # ejs.es:16019                      function redirect(url: String, status: Number = Http.MovedTemporarily): Void {

    0387: [0] 33 12 d4 fa 01 e0 bb 04 .... debug 

    # ejs.es:16042                      native function removeListener(name, listener: Function): Void

    0395: [0] 33 12 dc fa 01 ee bc 04 .... debug 

    # ejs.es:16046                      function makeUri(parts: Object): Uri {

    0403: [0] 33 12 82 fb 01 de c1 04 .... debug 

    # ejs.es:16065                      function setLocation(prefix: String, location: Path): Void {

    0411: [0] 33 12 9e fb 01 ac c5 04 .... debug 

    # ejs.es:16079                      function sendResponse(response: Object): Void {

    0419: [0] 33 12 c6 fb 01 82 ca 04 .... debug 

    # ejs.es:16099                      function setCookie(name: String, options: Object) {

    0427: [0] 33 12 f4 fb 01 d8 d4 04 .... debug 

    # ejs.es:16122                      native function setHeader(key: String, value: String, overwrite: Boolean = true): Void

    0435: [0] 33 12 86 fc 01 aa d6 04 .... debug 

    # ejs.es:16131                      function setHeaders(headers: Object, overwrite: Boolean = true): Void {

    0443: [0] 33 12 98 fc 01 80 d9 04 .... debug 

    # ejs.es:16140                      function setStatus(status: Number): Void {

    0451: [0] 33 12 a8 fc 01 fa d9 04 .... debug 

    # ejs.es:16148                      native function write(...data): Number

    0459: [0] 33 12 b6 fc 01 d8 da 04 .... debug 

    # ejs.es:16155                      function writeError(msg: String, code: Number = Http.ServerError): Void {

    0467: [0] 33 12 e6 fc 01 fc e8 04 .... debug 

    # ejs.es:16179                      function writeHtml(...args): Void

    0475: [0] 33 12 f6 fc 01 a0 ea 04 .... debug 

    # ejs.es:16187                      static var jsgi: Object = {

    0483: [0] 33 12 f8 fc 01 f2 ea 04 .... debug 

    # ejs.es:16188                          errors: App.logger,

    0491: [0] 56 00 ...................... loadString <> 
    0493: [1] 56 b2 eb 04 ................ loadString <errors> 
    0497: [2] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0499: [3] 7b ac 11 c4 08 ............. getObjName <logger> <public> 
    0504: [3] 33 12 fa fc 01 c0 eb 04 .... debug 

    # ejs.es:16189                          version: [0,3],

    0512: [3] 56 00 ...................... loadString <> 
    0514: [4] 56 f8 eb 04 ................ loadString <version> 
    0518: [5] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0520: [6] 89 ......................... new 
    0521: [6] 39 ......................... dup 
    0522: [7] 44 ......................... load0 
    0523: [8] c5 ......................... swap 
    0524: [8] 56 ba 11 ................... loadString <> 
    0527: [9] 44 ......................... load0 
    0528: [10] b2 ......................... putObjNameExpr 
    0529: [6] 39 ......................... dup 
    0530: [7] 47 ......................... load3 
    0531: [8] c5 ......................... swap 
    0532: [8] 56 ba 11 ................... loadString <> 
    0535: [9] 45 ......................... load1 
    0536: [10] b2 ......................... putObjNameExpr 
    0537: [6] 33 12 fc fc 01 88 ec 04 .... debug 

    # ejs.es:16190                          multithread: true,

    0545: [6] 56 00 ...................... loadString <> 
    0547: [7] 56 c6 ec 04 ................ loadString <multithread> 
    0551: [8] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0554: [9] 33 12 fe fc 01 de ec 04 .... debug 

    # ejs.es:16191                          multiprocess: false,

    0562: [9] 56 00 ...................... loadString <> 
    0564: [10] 56 a0 ed 04 ................ loadString <multiprocess> 
    0568: [11] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0570: [12] 33 12 80 fd 01 ba ed 04 .... debug 

    # ejs.es:16192                          runonce: false,

    0578: [12] 56 00 ...................... loadString <> 
    0580: [13] 56 f2 ed 04 ................ loadString <runonce> 
    0584: [14] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0586: [15] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    0595: [1] 33 12 f6 fc 01 a0 ea 04 .... debug 

    # ejs.es:16187                      static var jsgi: Object = {

    0603: [1] 57 ......................... loadThis 
    0604: [2] b3 e8 ea 04 c4 08 .......... putObjName <jsgi> <public> 
    0610: [0] 33 12 8e fd 01 82 ee 04 .... debug 

    # ejs.es:16199                      native var env: Object

    0618: [0] 33 12 9e fd 01 c8 ee 04 .... debug 

    # ejs.es:16207                      function get input(): Stream {

    0626: [0] 33 12 b0 fd 01 e0 ef 04 .... debug 

    # ejs.es:16216                      function get queryString(): String

    0634: [0] 33 12 c0 fd 01 f2 f0 04 .... debug 

    # ejs.es:16224                      function get serverName(): String {

    0642: [0] 33 12 d0 fd 01 a2 f2 04 .... debug 

    # ejs.es:16232                      function get serverPort(): Number

    0650: [0] be ......................... return 
    

FUNCTION:   [Request-27]  public const get function log() : Logger


    0000: [0] 33 12 96 f7 01 96 8f 04 .... debug 

    # ejs.es:15819                          App.logger

    0008: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0010: [1] 7b ac 11 c4 08 ............. getObjName <logger> <public> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [Request-28]  public native const function addListener(name, listener: Function) : Void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Request-29]  public native const get function async() : Boolean


    

FUNCTION:   [Request-29]  public native const set function async(enable: Boolean) : Void

     ARG:   [arg-00]   private enable : Boolean

    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [Request-30]  public const function cachable(enable: Boolean) : Void

     ARG:   [arg-00]   private enable : Boolean

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0006: [1] 94 ......................... putLocalSlot0 
    0007: [0] 33 12 98 f9 01 b8 9b 04 .... debug 

    # ejs.es:15948                          if (!cache) {

    0015: [0] 79 80 56 ba 11 ............. getScopedName <cache> <> 
    0020: [1] 86 ......................... logicalNot 
    0021: [1] 13 1b ...................... branchFalse8 <addr: 50> 
    0023: [0] 33 12 9a f9 01 ec 9b 04 .... debug 

    # ejs.es:15949                              setHeader("Cache-Control", "no-cache", false)

    0031: [0] 56 e8 9c 04 ................ loadString <Cache-Control> 
    0035: [1] 56 84 9d 04 ................ loadString <no-cache> 
    0039: [2] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0041: [3] 1f 96 9d 04 c4 08 06 ....... callScopedName <setHeader> <public> <argc: 3> 
    0048: [0] 3e 00 ...................... goto8 <addr: 50> 
    0050: [0] 54 ......................... loadNull 
    0051: [1] bf ......................... returnValue 
    0052: [0] 33 12 9e f9 01 b0 15 ....... debug 

    # ejs.es:15951                      }
    
VARIABLE:   [enable-00]  private var enable : Boolean

FUNCTION:   [Request-31]  public native const function close() : Void


    

FUNCTION:   [Request-32]  public const function dump(args: Array) : Void

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var e : Object

    0000: [0] 33 12 b8 f9 01 8a 9e 04 .... debug 

    # ejs.es:15964                          for each (var e: Object in args) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 39 ......................... dup 
    0017: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0020: [1] 93 ......................... pushResult 
    0021: [2] 95 ......................... putLocalSlot1 
    0022: [1] 33 12 ba f9 01 e8 9e 04 .... debug 

    # ejs.es:15965                              write(serialize(e, {pretty: true}) + "\r\n")

    0030: [1] 5c ......................... getLocalSlot1 
    0031: [2] 56 00 ...................... loadString <> 
    0033: [3] 56 e2 9f 04 ................ loadString <pretty> 
    0037: [4] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0040: [5] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0045: [3] 17 c8 01 04 ................ callGlobalSlot <slot: 100> <argc: 2> 
    0049: [1] 93 ......................... pushResult 
    0050: [2] 56 f0 9f 04 ................ loadString <
> 
    0054: [3] 00 ......................... add 
    0055: [2] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0061: [1] 3e d1 ...................... goto8 <addr: 16> 
    0063: [1] 90 ......................... pop 
    0064: [0] 54 ......................... loadNull 
    0065: [1] bf ......................... returnValue 
    0066: [0] 33 12 be f9 01 b0 15 ....... debug 

    # ejs.es:15967                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     17      20         63           63       StopIteration

VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [e-01]  private var e : Object

FUNCTION:   [Request-33]  public native const function destroySession() : Void


    

FUNCTION:   [Request-34]  public const get function extension() : void


    0000: [0] 33 12 d6 f9 01 c0 a1 04 .... debug 

    # ejs.es:15979                          Path(pathInfo).extension

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 94 91 04 c4 08 .......... getObjName <pathInfo> <public> 
    0015: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] 7b 8a a2 04 c4 08 .......... getObjName <extension> <public> 
    0026: [1] bf ......................... returnValue 
    

FUNCTION:   [Request-35]  public native const function finalize() : Void


    

FUNCTION:   [Request-36]  public const function flush() : Void


    0000: [0] 54 ......................... loadNull 
    0001: [1] bf ......................... returnValue 
    

FUNCTION:   [Request-37]  public native const function getResponseHeaders() : Object


    

FUNCTION:   [Request-38]  public native const function header(key: String) : String

     ARG:   [arg-00]   private key : String

    
VARIABLE:   [key-00]  private var key : String

FUNCTION:   [Request-39]  public native const function read(buffer: ByteArray, offset: Number, count: Number) : Number

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number

    
VARIABLE:   [buffer-00]  private var buffer : ByteArray
VARIABLE:   [offset-01]  private var offset : Number
VARIABLE:   [count-02]  private var count : Number

FUNCTION:   [Request-40]  public const function redirect(url: String, status: Number) : Void

     ARG:   [arg-00]   private url : String
     ARG:   [arg-01]   private status : Number

    0000: [0] 41 02 02 0b ................ initDefaultArgs8 <2> <4> <13> 
    0004: [0] 7e bc 01 ................... getGlobalSlot <slot: 94> 
    0007: [1] 7b b4 63 c4 08 ............. getObjName <MovedTemporarily> <public> 
    0012: [1] 95 ......................... putLocalSlot1 
    0013: [0] 33 12 a8 fa 01 80 a9 04 .... debug 

    # ejs.es:16020                          if (!url.contains("://")) {

    0021: [0] 5b ......................... getLocalSlot0 
    0022: [1] 56 d0 a9 04 ................ loadString <://> 
    0026: [2] 1e c0 4e c4 08 02 .......... callObjName <contains> <public> <argc: 1> 
    0032: [0] 93 ......................... pushResult 
    0033: [1] 86 ......................... logicalNot 
    0034: [1] 07 c4 03 f7 f7 ............. branchFalse <addr: 265> 
    0039: [0] 33 12 aa fa 01 d8 a9 04 .... debug 

    # ejs.es:16021                              if (url[0] == '/') {

    0047: [0] 5b ......................... getLocalSlot0 
    0048: [1] 56 ba 11 ................... loadString <> 
    0051: [2] 44 ......................... load0 
    0052: [3] 7c ......................... getObjNameExpr 
    0053: [1] 56 d8 6f ................... loadString </> 
    0056: [2] 25 ......................... compareEq 
    0057: [1] 13 4c ...................... branchFalse8 <addr: 135> 
    0059: [0] 33 12 ac fa 01 a2 aa 04 .... debug 

    # ejs.es:16022                                  uri = Url({ scheme: scheme, host: serverName, port: port, path: url})

    0067: [0] 56 00 ...................... loadString <> 
    0069: [1] 56 be 94 04 ................ loadString <scheme> 
    0073: [2] 57 ......................... loadThis 
    0074: [3] 7b be 94 04 c4 08 .......... getObjName <scheme> <public> 
    0080: [3] 56 00 ...................... loadString <> 
    0082: [4] 56 c4 8e 04 ................ loadString <host> 
    0086: [5] 57 ......................... loadThis 
    0087: [6] 7b d6 ab 04 c4 08 .......... getObjName <serverName> <public> 
    0093: [6] 56 00 ...................... loadString <> 
    0095: [7] 56 b0 c4 03 ................ loadString <port> 
    0099: [8] 79 b0 c4 03 ba 11 .......... getScopedName <port> <> 
    0105: [9] 56 00 ...................... loadString <> 
    0107: [10] 56 ca 5e ................... loadString <path> 
    0110: [11] 5b ......................... getLocalSlot0 
    0111: [12] 8a e4 06 08 00 00 00 00 .... newObject <type: 0x1b2,  ejs::Object> <argc: 4> <att: 4 4 4 4 >
    0119: [1] 1f ec ab 04 ba 11 02 ....... callScopedName <Url> <> <argc: 1> 
    0126: [0] 93 ......................... pushResult 
    0127: [1] 57 ......................... loadThis 
    0128: [2] b3 f8 64 c4 08 ............. putObjName <uri> <public> 
    0133: [0] 3e 5d ...................... goto8 <addr: 228> 
    0135: [0] 33 12 ae fa 01 e8 a1 01 .... debug 

    # ejs.es:16023                              } else {

    0143: [0] 33 12 b0 fa 01 f4 ab 04 .... debug 

    # ejs.es:16024                                  url = Url({ scheme: scheme, host: serverName, port: port, path: scriptName + pathInfo + url})

    0151: [0] 56 00 ...................... loadString <> 
    0153: [1] 56 be 94 04 ................ loadString <scheme> 
    0157: [2] 57 ......................... loadThis 
    0158: [3] 7b be 94 04 c4 08 .......... getObjName <scheme> <public> 
    0164: [3] 56 00 ...................... loadString <> 
    0166: [4] 56 c4 8e 04 ................ loadString <host> 
    0170: [5] 57 ......................... loadThis 
    0171: [6] 7b d6 ab 04 c4 08 .......... getObjName <serverName> <public> 
    0177: [6] 56 00 ...................... loadString <> 
    0179: [7] 56 b0 c4 03 ................ loadString <port> 
    0183: [8] 79 b0 c4 03 ba 11 .......... getScopedName <port> <> 
    0189: [9] 56 00 ...................... loadString <> 
    0191: [10] 56 ca 5e ................... loadString <path> 
    0194: [11] 57 ......................... loadThis 
    0195: [12] 7b 98 95 04 c4 08 .......... getObjName <scriptName> <public> 
    0201: [12] 57 ......................... loadThis 
    0202: [13] 7b 94 91 04 c4 08 .......... getObjName <pathInfo> <public> 
    0208: [13] 00 ......................... add 
    0209: [12] 5b ......................... getLocalSlot0 
    0210: [13] 00 ......................... add 
    0211: [12] 8a e4 06 08 00 00 00 00 .... newObject <type: 0x1b2,  ejs::Object> <argc: 4> <att: 4 4 4 4 >
    0219: [1] 1f ec ab 04 ba 11 02 ....... callScopedName <Url> <> <argc: 1> 
    0226: [0] 93 ......................... pushResult 
    0227: [1] 94 ......................... putLocalSlot0 
    0228: [0] 33 12 b2 fa 01 86 35 ....... debug 

    # ejs.es:16025                              }

    0235: [0] 33 12 b4 fa 01 d8 ad 04 .... debug 

    # ejs.es:16026                              url = uri.normalize.toString()

    0243: [0] 57 ......................... loadThis 
    0244: [1] 7b f8 64 c4 08 ............. getObjName <uri> <public> 
    0249: [1] 7b b6 ae 04 c4 08 .......... getObjName <normalize> <public> 
    0255: [1] 1e c2 8b 01 00 00 .......... callObjName <toString> <> <argc: 0> 
    0261: [0] 93 ......................... pushResult 
    0262: [1] 94 ......................... putLocalSlot0 
    0263: [0] 3e 00 ...................... goto8 <addr: 265> 
    0265: [0] 33 12 b6 fa 01 b2 1a ....... debug 

    # ejs.es:16027                          }

    0272: [0] 33 12 b8 fa 01 ca ae 04 .... debug 

    # ejs.es:16028                          this.status = status

    0280: [0] 5c ......................... getLocalSlot1 
    0281: [1] 57 ......................... loadThis 
    0282: [2] b3 f0 61 c4 08 ............. putObjName <status> <public> 
    0287: [0] 33 12 ba fa 01 8c af 04 .... debug 

    # ejs.es:16029                          setHeader("Location", url)

    0295: [0] 56 da af 04 ................ loadString <Location> 
    0299: [1] 5b ......................... getLocalSlot0 
    0300: [2] 1f 96 9d 04 c4 08 04 ....... callScopedName <setHeader> <public> <argc: 2> 
    0307: [0] 33 12 bc fa 01 ec af 04 .... debug 

    # ejs.es:16030                          write("<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n" +

    0315: [0] 33 12 c8 fa 01 ec af 04 .... debug 

    # ejs.es:16036                          write("<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n" +

    0323: [0] 33 12 bc fa 01 ec af 04 .... debug 

    # ejs.es:16030                          write("<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n" +

    0331: [0] 33 12 c6 fa 01 8a b1 04 .... debug 

    # ejs.es:16035                                  "<address>" + server.software + " at " + serverName + " Port " + server.port + 

    0339: [0] 33 12 c4 fa 01 d2 b2 04 .... debug 

    # ejs.es:16034                                  "\">here</a>.</p>\r\n" +

    0347: [0] 33 12 c2 fa 01 ac b3 04 .... debug 

    # ejs.es:16033                                  "<p>The document has moved <a href=\"" + url + 

    0355: [0] 33 12 c0 fa 01 b4 b4 04 .... debug 

    # ejs.es:16032                                  "<body><h1>Redirect (" + status + ")</h1>\r\n</H1>\r\n" + 

    0363: [0] 33 12 be fa 01 d2 b5 04 .... debug 

    # ejs.es:16031                                 "<html><head><title>Redirect (" + status + ")</title></head>\r\n" +

    0371: [0] 33 12 bc fa 01 ec af 04 .... debug 

    # ejs.es:16030                          write("<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n" +

    0379: [0] 56 80 b7 04 ................ loadString <<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> 
    0383: [1] 33 12 be fa 01 d2 b5 04 .... debug 

    # ejs.es:16031                                 "<html><head><title>Redirect (" + status + ")</title></head>\r\n" +

    0391: [1] 56 ea b7 04 ................ loadString <<html><head><title>Redirect (> 
    0395: [2] 00 ......................... add 
    0396: [1] 5c ......................... getLocalSlot1 
    0397: [2] 00 ......................... add 
    0398: [1] 56 a6 b8 04 ................ loadString <)</title></head>
> 
    0402: [2] 00 ......................... add 
    0403: [1] 33 12 c0 fa 01 b4 b4 04 .... debug 

    # ejs.es:16032                                  "<body><h1>Redirect (" + status + ")</h1>\r\n</H1>\r\n" + 

    0411: [1] 56 cc b8 04 ................ loadString <<body><h1>Redirect (> 
    0415: [2] 00 ......................... add 
    0416: [1] 5c ......................... getLocalSlot1 
    0417: [2] 00 ......................... add 
    0418: [1] 56 f6 b8 04 ................ loadString <)</h1>
</H1>
> 
    0422: [2] 00 ......................... add 
    0423: [1] 33 12 c2 fa 01 ac b3 04 .... debug 

    # ejs.es:16033                                  "<p>The document has moved <a href=\"" + url + 

    0431: [1] 56 96 b9 04 ................ loadString <<p>The document has moved <a href="> 
    0435: [2] 00 ......................... add 
    0436: [1] 5b ......................... getLocalSlot0 
    0437: [2] 00 ......................... add 
    0438: [1] 33 12 c4 fa 01 d2 b2 04 .... debug 

    # ejs.es:16034                                  "\">here</a>.</p>\r\n" +

    0446: [1] 56 de b9 04 ................ loadString <">here</a>.</p>
> 
    0450: [2] 00 ......................... add 
    0451: [1] 33 12 c6 fa 01 8a b1 04 .... debug 

    # ejs.es:16035                                  "<address>" + server.software + " at " + serverName + " Port " + server.port + 

    0459: [1] 56 82 ba 04 ................ loadString <<address>> 
    0463: [2] 00 ......................... add 
    0464: [1] 57 ......................... loadThis 
    0465: [2] 7b ce 96 04 c4 08 .......... getObjName <server> <public> 
    0471: [2] 7b 8e c7 03 c4 08 .......... getObjName <software> <public> 
    0477: [2] 00 ......................... add 
    0478: [1] 56 96 ba 04 ................ loadString < at > 
    0482: [2] 00 ......................... add 
    0483: [1] 57 ......................... loadThis 
    0484: [2] 7b d6 ab 04 c4 08 .......... getObjName <serverName> <public> 
    0490: [2] 00 ......................... add 
    0491: [1] 56 a0 ba 04 ................ loadString < Port > 
    0495: [2] 00 ......................... add 
    0496: [1] 57 ......................... loadThis 
    0497: [2] 7b ce 96 04 c4 08 .......... getObjName <server> <public> 
    0503: [2] 7b b0 c4 03 c4 08 .......... getObjName <port> <public> 
    0509: [2] 00 ......................... add 
    0510: [1] 33 12 c8 fa 01 ae ba 04 .... debug 

    # ejs.es:16036                                  "</address></body>\r\n</html>\r\n")

    0518: [1] 56 9e bb 04 ................ loadString <</address></body>
</html>
> 
    0522: [2] 00 ......................... add 
    0523: [1] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0529: [0] 54 ......................... loadNull 
    0530: [1] bf ......................... returnValue 
    0531: [0] 33 12 ca fa 01 b0 15 ....... debug 

    # ejs.es:16037                      }
    
VARIABLE:   [url-00]  private var url : String
VARIABLE:   [status-01]  private var status : Number

FUNCTION:   [Request-41]  public native const function removeListener(name, listener: Function) : Void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Request-42]  public const function makeUri(parts: Object) : Uri

     ARG:   [arg-00]   private parts : Object
   LOCAL:   [local-01] var uri
   LOCAL:   [local-02] var part

    0000: [0] 33 12 de fa 01 cc bd 04 .... debug 

    # ejs.es:16047                          if (route) {

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b e2 93 04 c4 08 .......... getObjName <route> <public> 
    0015: [1] 13 2e ...................... branchFalse8 <addr: 63> 
    0017: [0] 33 12 e0 fa 01 fe bd 04 .... debug 

    # ejs.es:16048                              return route.makeUri(this, blend(params.clone(), parts))

    0025: [0] 57 ......................... loadThis 
    0026: [1] 7b e2 93 04 c4 08 .......... getObjName <route> <public> 
    0032: [1] 57 ......................... loadThis 
    0033: [2] 57 ......................... loadThis 
    0034: [3] 7b b2 06 c4 08 ............. getObjName <params> <public> 
    0039: [3] 1e fe 35 c4 08 00 .......... callObjName <clone> <public> <argc: 0> 
    0045: [2] 93 ......................... pushResult 
    0046: [3] 5b ......................... getLocalSlot0 
    0047: [4] 17 9c 01 04 ................ callGlobalSlot <slot: 78> <argc: 2> 
    0051: [2] 93 ......................... pushResult 
    0052: [3] 1e 88 86 01 c4 08 04 ....... callObjName <makeUri> <public> <argc: 2> 
    0059: [0] 93 ......................... pushResult 
    0060: [1] bf ......................... returnValue 
    0061: [0] 3e 00 ...................... goto8 <addr: 63> 
    0063: [0] 33 12 e2 fa 01 b2 1a ....... debug 

    # ejs.es:16049                          }

    0070: [0] 33 12 e4 fa 01 90 bf 04 .... debug 

    # ejs.es:16050                          let uri = request.absHome.components()

    0078: [0] 79 88 07 ba 11 ............. getScopedName <request> <> 
    0083: [1] 7b b2 85 04 00 ............. getObjName <absHome> <> 
    0088: [1] 1e f6 bf 04 00 00 .......... callObjName <components> <> <argc: 0> 
    0094: [0] 93 ......................... pushResult 
    0095: [1] 95 ......................... putLocalSlot1 
    0096: [0] 33 12 e6 fa 01 8c c0 04 .... debug 

    # ejs.es:16051                          for each (part in parts) {

    0104: [0] 5b ......................... getLocalSlot0 
    0105: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0111: [0] 93 ......................... pushResult 
    0112: [1] 39 ......................... dup 
    0113: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0116: [1] 93 ......................... pushResult 
    0117: [2] 96 ......................... putLocalSlot2 
    0118: [1] 33 12 e8 fa 01 e4 c0 04 .... debug 

    # ejs.es:16052                              blend(uri, part)

    0126: [1] 5c ......................... getLocalSlot1 
    0127: [2] 5d ......................... getLocalSlot2 
    0128: [3] 17 9c 01 04 ................ callGlobalSlot <slot: 78> <argc: 2> 
    0132: [1] 3e ea ...................... goto8 <addr: 112> 
    0134: [1] 90 ......................... pop 
    0135: [0] 33 12 ec fa 01 a6 c1 04 .... debug 

    # ejs.es:16054                          return Uri(uri)

    0143: [0] 5c ......................... getLocalSlot1 
    0144: [1] 17 f8 01 02 ................ callGlobalSlot <slot: 124> <argc: 1> 
    0148: [0] 93 ......................... pushResult 
    0149: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    113     116        134          134       StopIteration

VARIABLE:   [parts-00]  private var parts : Object
VARIABLE:   [uri-01]  private var uri
VARIABLE:   [part-02]  -hoisted-2 var part

FUNCTION:   [Request-43]  public const function setLocation(prefix: String, location: Path) : Void

     ARG:   [arg-00]   private prefix : String
     ARG:   [arg-01]   private location : Path

    0000: [0] 33 12 84 fb 01 e8 c2 04 .... debug 

    # ejs.es:16066                          dir = location

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 ee 25 c4 08 ............. putObjName <dir> <public> 
    0015: [0] 33 12 86 fb 01 9e c3 04 .... debug 

    # ejs.es:16067                          pathInfo = pathInfo.trimStart(prefix)

    0023: [0] 57 ......................... loadThis 
    0024: [1] 7b 94 91 04 c4 08 .......... getObjName <pathInfo> <public> 
    0030: [1] 5b ......................... getLocalSlot0 
    0031: [2] 1e 82 c4 04 c4 08 02 ....... callObjName <trimStart> <public> <argc: 1> 
    0038: [0] 93 ......................... pushResult 
    0039: [1] 57 ......................... loadThis 
    0040: [2] b3 94 91 04 c4 08 .......... putObjName <pathInfo> <public> 
    0046: [0] 33 12 88 fb 01 96 c4 04 .... debug 

    # ejs.es:16068                          scriptName = prefix.trimStart("/")

    0054: [0] 5b ......................... getLocalSlot0 
    0055: [1] 56 d8 6f ................... loadString </> 
    0058: [2] 1e 82 c4 04 c4 08 02 ....... callObjName <trimStart> <public> <argc: 1> 
    0065: [0] 93 ......................... pushResult 
    0066: [1] 57 ......................... loadThis 
    0067: [2] b3 98 95 04 c4 08 .......... putObjName <scriptName> <public> 
    0073: [0] 54 ......................... loadNull 
    0074: [1] bf ......................... returnValue 
    0075: [0] 33 12 8a fb 01 b0 15 ....... debug 

    # ejs.es:16069                      }
    
VARIABLE:   [prefix-00]  private var prefix : String
VARIABLE:   [location-01]  private var location : Path

FUNCTION:   [Request-44]  public const function sendResponse(response: Object) : Void

     ARG:   [arg-00]   private response : Object

    0000: [0] 33 12 a0 fb 01 9c c6 04 .... debug 

    # ejs.es:16080                          status = response.status || 200

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7b f0 61 ba 11 ............. getObjName <status> <> 
    0014: [1] 39 ......................... dup 
    0015: [2] 14 04 ...................... branchTrue8 <addr: 21> 
    0017: [1] 90 ......................... pop 
    0018: [0] 51 90 03 ................... loadInt <200> 
    0021: [1] 57 ......................... loadThis 
    0022: [2] b3 f0 61 c4 08 ............. putObjName <status> <public> 
    0027: [0] 33 12 a2 fb 01 f4 c6 04 .... debug 

    # ejs.es:16081                          if (response.headers)

    0035: [0] 5b ......................... getLocalSlot0 
    0036: [1] 7b ba 8d 04 ba 11 .......... getObjName <headers> <> 
    0042: [1] 13 18 ...................... branchFalse8 <addr: 68> 
    0044: [0] 33 12 a4 fb 01 b8 c7 04 .... debug 

    # ejs.es:16082                              setHeaders(response.headers)

    0052: [0] 5b ......................... getLocalSlot0 
    0053: [1] 7b ba 8d 04 ba 11 .......... getObjName <headers> <> 
    0059: [1] 1f 92 c8 04 c4 08 02 ....... callScopedName <setHeaders> <public> <argc: 1> 
    0066: [0] 3e 00 ...................... goto8 <addr: 68> 
    0068: [0] 33 12 a6 fb 01 a8 c8 04 .... debug 

    # ejs.es:16083                          if (response.body)

    0076: [0] 5b ......................... getLocalSlot0 
    0077: [1] 7b e6 c8 04 ba 11 .......... getObjName <body> <> 
    0083: [1] 13 16 ...................... branchFalse8 <addr: 107> 
    0085: [0] 33 12 a8 fb 01 f0 c8 04 .... debug 

    # ejs.es:16084                              write(body)

    0093: [0] 79 e6 c8 04 ba 11 .......... getScopedName <body> <> 
    0099: [1] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0105: [0] 3e 00 ...................... goto8 <addr: 107> 
    0107: [0] 33 12 aa fb 01 a8 c9 04 .... debug 

    # ejs.es:16085                          finalize()

    0115: [0] 1f f2 a2 04 c4 08 00 ....... callScopedName <finalize> <public> <argc: 0> 
    0122: [0] 54 ......................... loadNull 
    0123: [1] bf ......................... returnValue 
    0124: [0] 33 12 ac fb 01 b0 15 ....... debug 

    # ejs.es:16086                      }
    
VARIABLE:   [response-00]  private var response : Object

FUNCTION:   [Request-45]  public const function setCookie(name: String, options: Object) : void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var value

    0000: [0] 33 12 c8 fb 01 fa ca 04 .... debug 

    # ejs.es:16100                          options.path ||= "/"

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 7b ca 5e ba 11 ............. getObjName <path> <> 
    0014: [1] 39 ......................... dup 
    0015: [2] 14 04 ...................... branchTrue8 <addr: 21> 
    0017: [1] 90 ......................... pop 
    0018: [0] 56 d8 6f ................... loadString </> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] b3 ca 5e ba 11 ............. putObjName <path> <> 
    0027: [0] 33 12 ca fb 01 bc cb 04 .... debug 

    # ejs.es:16101                          let value = encodeUri(name) + "="

    0035: [0] 5b ......................... getLocalSlot0 
    0036: [1] 1f 98 cc 04 ba 11 02 ....... callScopedName <encodeUri> <> <argc: 1> 
    0043: [0] 93 ......................... pushResult 
    0044: [1] 56 ac cc 04 ................ loadString <=> 
    0048: [2] 00 ......................... add 
    0049: [1] 96 ......................... putLocalSlot2 
    0050: [0] 33 12 cc fb 01 b0 cc 04 .... debug 

    # ejs.es:16102                          value += "; path=" + options.path

    0058: [0] 5d ......................... getLocalSlot2 
    0059: [1] 56 8c cd 04 ................ loadString <; path=> 
    0063: [2] 5c ......................... getLocalSlot1 
    0064: [3] 7b ca 5e ba 11 ............. getObjName <path> <> 
    0069: [3] 00 ......................... add 
    0070: [2] 00 ......................... add 
    0071: [1] 96 ......................... putLocalSlot2 
    0072: [0] 33 12 ce fb 01 9c cd 04 .... debug 

    # ejs.es:16103                          if (options.domain)

    0080: [0] 5c ......................... getLocalSlot1 
    0081: [1] 7b dc cd 04 ba 11 .......... getObjName <domain> <> 
    0087: [1] 13 19 ...................... branchFalse8 <addr: 114> 
    0089: [0] 33 12 d0 fb 01 ea cd 04 .... debug 

    # ejs.es:16104                              value += "domain=" + options.domain

    0097: [0] 5d ......................... getLocalSlot2 
    0098: [1] 56 d2 ce 04 ................ loadString <domain=> 
    0102: [2] 5c ......................... getLocalSlot1 
    0103: [3] 7b dc cd 04 ba 11 .......... getObjName <domain> <> 
    0109: [3] 00 ......................... add 
    0110: [2] 00 ......................... add 
    0111: [1] 96 ......................... putLocalSlot2 
    0112: [0] 3e 00 ...................... goto8 <addr: 114> 
    0114: [0] 33 12 d2 fb 01 e2 ce 04 .... debug 

    # ejs.es:16105                          if (options.expires)

    0122: [0] 5c ......................... getLocalSlot1 
    0123: [1] 7b a4 cf 04 ba 11 .......... getObjName <expires> <> 
    0129: [1] 13 20 ...................... branchFalse8 <addr: 163> 
    0131: [0] 33 12 d4 fb 01 b4 cf 04 .... debug 

    # ejs.es:16106                              value += "; expires= " + options.expires.toUTCString()

    0139: [0] 5d ......................... getLocalSlot2 
    0140: [1] 56 c2 d0 04 ................ loadString <; expires= > 
    0144: [2] 5c ......................... getLocalSlot1 
    0145: [3] 7b a4 cf 04 ba 11 .......... getObjName <expires> <> 
    0151: [3] 1e da d0 04 00 00 .......... callObjName <toUTCString> <> <argc: 0> 
    0157: [2] 93 ......................... pushResult 
    0158: [3] 00 ......................... add 
    0159: [2] 00 ......................... add 
    0160: [1] 96 ......................... putLocalSlot2 
    0161: [0] 3e 00 ...................... goto8 <addr: 163> 
    0163: [0] 33 12 d6 fb 01 f2 d0 04 .... debug 

    # ejs.es:16107                          if (options.secure)

    0171: [0] 5c ......................... getLocalSlot1 
    0172: [1] 7b f4 95 04 ba 11 .......... getObjName <secure> <> 
    0178: [1] 13 11 ...................... branchFalse8 <addr: 197> 
    0180: [0] 33 12 d8 fb 01 b2 d1 04 .... debug 

    # ejs.es:16108                              value += "; secure"

    0188: [0] 5d ......................... getLocalSlot2 
    0189: [1] 56 fa d1 04 ................ loadString <; secure> 
    0193: [2] 00 ......................... add 
    0194: [1] 96 ......................... putLocalSlot2 
    0195: [0] 3e 00 ...................... goto8 <addr: 197> 
    0197: [0] 33 12 da fb 01 8c d2 04 .... debug 

    # ejs.es:16109                          setHeader("Set-Cookie", value)

    0205: [0] 56 e2 d2 04 ................ loadString <Set-Cookie> 
    0209: [1] 5d ......................... getLocalSlot2 
    0210: [2] 1f 96 9d 04 c4 08 04 ....... callScopedName <setHeader> <public> <argc: 2> 
    0217: [0] 33 12 dc fb 01 f8 d2 04 .... debug 

    # ejs.es:16110                          setHeader("Cache-control", "no-cache=\"set-cookie\"")

    0225: [0] 56 fc d3 04 ................ loadString <Cache-control> 
    0229: [1] 56 98 d4 04 ................ loadString <no-cache="set-cookie"> 
    0233: [2] 1f 96 9d 04 c4 08 04 ....... callScopedName <setHeader> <public> <argc: 2> 
    0240: [0] be ......................... return 
    0241: [0] 33 12 de fb 01 b0 15 ....... debug 

    # ejs.es:16111                      }
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [value-02]  private var value

FUNCTION:   [Request-46]  public native const function setHeader(key: String, value: String, overwrite: Boolean) : Void

     ARG:   [arg-00]   private key : String
     ARG:   [arg-01]   private value : String
     ARG:   [arg-02]   private overwrite : Boolean

    
VARIABLE:   [key-00]  private var key : String
VARIABLE:   [value-01]  private var value : String
VARIABLE:   [overwrite-02]  private var overwrite : Boolean

FUNCTION:   [Request-47]  public const function setHeaders(headers: Object, overwrite: Boolean) : Void

     ARG:   [arg-00]   private headers : Object
     ARG:   [arg-01]   private overwrite : Boolean
   LOCAL:   [local-02] var key

    0000: [0] 41 02 02 06 ................ initDefaultArgs8 <2> <4> <8> 
    0004: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0007: [1] 95 ......................... putLocalSlot1 
    0008: [0] 33 12 88 fc 01 ca d7 04 .... debug 

    # ejs.es:16132                          for (key in headers) {

    0016: [0] 5b ......................... getLocalSlot0 
    0017: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] 39 ......................... dup 
    0025: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0028: [1] 93 ......................... pushResult 
    0029: [2] 96 ......................... putLocalSlot2 
    0030: [1] 33 12 8a fc 01 90 d8 04 .... debug 

    # ejs.es:16133                              setHeader(key, headers[key], overwrite)

    0038: [1] 5d ......................... getLocalSlot2 
    0039: [2] 5b ......................... getLocalSlot0 
    0040: [3] 56 ba 11 ................... loadString <> 
    0043: [4] 5d ......................... getLocalSlot2 
    0044: [5] 7c ......................... getObjNameExpr 
    0045: [3] 5c ......................... getLocalSlot1 
    0046: [4] 1f 96 9d 04 c4 08 06 ....... callScopedName <setHeader> <public> <argc: 3> 
    0053: [1] 3e e1 ...................... goto8 <addr: 24> 
    0055: [1] 90 ......................... pop 
    0056: [0] 54 ......................... loadNull 
    0057: [1] bf ......................... returnValue 
    0058: [0] 33 12 8e fc 01 b0 15 ....... debug 

    # ejs.es:16135                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     25      28         55           55       StopIteration

VARIABLE:   [headers-00]  private var headers : Object
VARIABLE:   [overwrite-01]  private var overwrite : Boolean
VARIABLE:   [key-02]  -hoisted-2 var key

FUNCTION:   [Request-48]  public const function setStatus(status: Number) : Void

     ARG:   [arg-00]   private status : Number

    0000: [0] 33 12 9a fc 01 ca ae 04 .... debug 

    # ejs.es:16141                          this.status = status

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 57 ......................... loadThis 
    0010: [2] b3 f0 61 c4 08 ............. putObjName <status> <public> 
    0015: [0] 54 ......................... loadNull 
    0016: [1] bf ......................... returnValue 
    0017: [0] 33 12 9c fc 01 b0 15 ....... debug 

    # ejs.es:16142                      }
    
VARIABLE:   [status-00]  private var status : Number

FUNCTION:   [Request-49]  public native const function write(data: Array) : Number

     ARG:   [arg-00]   private data : Array

    
VARIABLE:   [data-00]  private var data : Array

FUNCTION:   [Request-50]  public const function writeError(msg: String, code: Number) : Void

     ARG:   [arg-00]   private msg : String
     ARG:   [arg-01]   private code : Number
   LOCAL:   [local-02] var text

    0000: [0] 41 02 02 0b ................ initDefaultArgs8 <2> <4> <13> 
    0004: [0] 7e bc 01 ................... getGlobalSlot <slot: 94> 
    0007: [1] 7b 92 60 c4 08 ............. getObjName <ServerError> <public> 
    0012: [1] 95 ......................... putLocalSlot1 
    0013: [0] 33 12 b8 fc 01 fc db 04 .... debug 

    # ejs.es:16156                          let text

    0021: [0] 33 12 ba fc 01 a6 dc 04 .... debug 

    # ejs.es:16157                          status = code

    0029: [0] 5c ......................... getLocalSlot1 
    0030: [1] 57 ......................... loadThis 
    0031: [2] b3 f0 61 c4 08 ............. putObjName <status> <public> 
    0036: [0] 33 12 bc fc 01 da dc 04 .... debug 

    # ejs.es:16158                          msg = msg.replace(/.*Error Exception: /, "")

    0044: [0] 5b ......................... getLocalSlot0 
    0045: [1] 55 cc dd 04 ................ loadRegexp </.*Error Exception: /> 
    0049: [2] 56 ba 11 ................... loadString <> 
    0052: [3] 1e e0 6f c4 08 04 .......... callObjName <replace> <public> <argc: 2> 
    0058: [0] 93 ......................... pushResult 
    0059: [1] 94 ......................... putLocalSlot0 
    0060: [0] 33 12 be fc 01 f8 dd 04 .... debug 

    # ejs.es:16159                          if (config.log.showClient) {

    0068: [0] 57 ......................... loadThis 
    0069: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0074: [1] 7b e6 05 ba 11 ............. getObjName <log> <> 
    0079: [1] 7b ca de 04 00 ............. getObjName <showClient> <> 
    0084: [1] 07 84 02 f7 f7 ............. branchFalse <addr: 219> 
    0089: [0] 33 12 c0 fc 01 e0 de 04 .... debug 

    # ejs.es:16160                              setHeader("Content-Type", "text/html")

    0097: [0] 56 ce df 04 ................ loadString <Content-Type> 
    0101: [1] 56 e8 df 04 ................ loadString <text/html> 
    0105: [2] 1f 96 9d 04 c4 08 04 ....... callScopedName <setHeader> <public> <argc: 2> 
    0112: [0] 33 12 c2 fc 01 fc df 04 .... debug 

    # ejs.es:16161                              text = "<h1>Request error for \"" + pathInfo + "\"</h1>\r\n"

    0120: [0] 56 96 e1 04 ................ loadString <<h1>Request error for "> 
    0124: [1] 57 ......................... loadThis 
    0125: [2] 7b 94 91 04 c4 08 .......... getObjName <pathInfo> <public> 
    0131: [2] 00 ......................... add 
    0132: [1] 56 c6 e1 04 ................ loadString <"</h1>
> 
    0136: [2] 00 ......................... add 
    0137: [1] 96 ......................... putLocalSlot2 
    0138: [0] 33 12 c4 fc 01 d8 e1 04 .... debug 

    # ejs.es:16162                              text += "<pre>" + escapeHtml(msg) + "</pre>\r\n"

    0146: [0] 5d ......................... getLocalSlot2 
    0147: [1] 56 da e2 04 ................ loadString <<pre>> 
    0151: [2] 5b ......................... getLocalSlot0 
    0152: [3] 17 e2 02 02 ................ callGlobalSlot <slot: 177> <argc: 1> 
    0156: [2] 93 ......................... pushResult 
    0157: [3] 00 ......................... add 
    0158: [2] 56 e6 e2 04 ................ loadString <</pre>
> 
    0162: [3] 00 ......................... add 
    0163: [2] 00 ......................... add 
    0164: [1] 96 ......................... putLocalSlot2 
    0165: [0] 33 12 c6 fc 01 f8 e2 04 .... debug 

    # ejs.es:16163                              text += '<p>To prevent errors being displayed in the "browser, ' + 

    0173: [0] 33 12 c8 fc 01 a0 e4 04 .... debug 

    # ejs.es:16164                                  'set <b>errors.showClient</b> to false in the ejsrc file.</p>\r\n'

    0181: [0] 33 12 c6 fc 01 f8 e2 04 .... debug 

    # ejs.es:16163                              text += '<p>To prevent errors being displayed in the "browser, ' + 

    0189: [0] 5d ......................... getLocalSlot2 
    0190: [1] 56 ce e5 04 ................ loadString <<p>To prevent errors being displayed in the "browser, > 
    0194: [2] 33 12 c8 fc 01 a0 e4 04 .... debug 

    # ejs.es:16164                                  'set <b>errors.showClient</b> to false in the ejsrc file.</p>\r\n'

    0202: [2] 56 bc e6 04 ................ loadString <set <b>errors.showClient</b> to false in the ejsrc file.</p>
> 
    0206: [3] 00 ......................... add 
    0207: [2] 00 ......................... add 
    0208: [1] 33 12 c6 fc 01 f8 e2 04 .... debug 

    # ejs.es:16163                              text += '<p>To prevent errors being displayed in the "browser, ' + 

    0216: [1] 96 ......................... putLocalSlot2 
    0217: [0] 3e 21 ...................... goto8 <addr: 252> 
    0219: [0] 33 12 ca fc 01 b4 33 ....... debug 

    # ejs.es:16165                          } else {

    0226: [0] 33 12 cc fc 01 fc df 04 .... debug 

    # ejs.es:16166                              text = "<h1>Request error for \"" + pathInfo + "\"</h1>\r\n"

    0234: [0] 56 96 e1 04 ................ loadString <<h1>Request error for "> 
    0238: [1] 57 ......................... loadThis 
    0239: [2] 7b 94 91 04 c4 08 .......... getObjName <pathInfo> <public> 
    0245: [2] 00 ......................... add 
    0246: [1] 56 c6 e1 04 ................ loadString <"</h1>
> 
    0250: [2] 00 ......................... add 
    0251: [1] 96 ......................... putLocalSlot2 
    0252: [0] 33 12 d0 fc 01 98 68 ....... debug 

    # ejs.es:16168                          try {

    0259: [0] 33 12 d2 fc 01 ba e7 04 .... debug 

    # ejs.es:16169                              write(text)

    0267: [0] 5d ......................... getLocalSlot2 
    0268: [1] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0274: [0] 3e 09 ...................... goto8 <addr: 285> 
    0276: [0] 33 12 d4 fc 01 f2 e7 04 .... debug 

    # ejs.es:16170                          } catch {}

    0284: [0] 3c ......................... endException 
    0285: [0] 33 12 d6 fc 01 a8 c9 04 .... debug 

    # ejs.es:16171                          finalize()

    0293: [0] 1f f2 a2 04 c4 08 00 ....... callScopedName <finalize> <public> <argc: 0> 
    0300: [0] 33 12 d8 fc 01 a0 e8 04 .... debug 

    # ejs.es:16172                          log.error(status + ". " + msg)

    0308: [0] 57 ......................... loadThis 
    0309: [1] 7b e6 05 c4 08 ............. getObjName <log> <public> 
    0314: [1] 57 ......................... loadThis 
    0315: [2] 7b f0 61 c4 08 ............. getObjName <status> <public> 
    0320: [2] 56 f6 e8 04 ................ loadString <. > 
    0324: [3] 00 ......................... add 
    0325: [2] 5b ......................... getLocalSlot0 
    0326: [3] 00 ......................... add 
    0327: [2] 1e 98 82 01 00 02 .......... callObjName <error> <> <argc: 1> 
    0333: [0] 54 ......................... loadNull 
    0334: [1] bf ......................... returnValue 
    0335: [0] 33 12 da fc 01 b0 15 ....... debug 

    # ejs.es:16173                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch        252     276        276          285       Void

VARIABLE:   [msg-00]  private var msg : String
VARIABLE:   [code-01]  private var code : Number
VARIABLE:   [text-02]  private var text

FUNCTION:   [Request-51]  public const function writeHtml(args: Array) : Void

     ARG:   [arg-00]   private args : Array

    0000: [0] 33 12 e8 fc 01 d0 e9 04 .... debug 

    # ejs.es:16180                          write(html(args))

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 17 e4 02 02 ................ callGlobalSlot <slot: 178> <argc: 1> 
    0013: [0] 93 ......................... pushResult 
    0014: [1] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [Request-52]  public static var jsgi : Object

FUNCTION:   [Request-53]  public const get function input() : Stream


    0000: [0] 33 12 a0 fd 01 96 ef 04 .... debug 

    # ejs.es:16208                          return this

    0008: [0] 57 ......................... loadThis 
    0009: [1] bf ......................... returnValue 
    

FUNCTION:   [Request-54]  public const get function queryString() : String


    0000: [0] 33 12 b2 fd 01 b6 f0 04 .... debug 

    # ejs.es:16217                          query

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b fe 99 01 c4 08 .......... getObjName <query> <public> 
    0015: [1] bf ......................... returnValue 
    

FUNCTION:   [Request-55]  public const get function serverName() : String


    0000: [0] 33 12 c2 fd 01 ca f1 04 .... debug 

    # ejs.es:16225                          return (host) ? host : uri.host

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b c4 8e 04 c4 08 .......... getObjName <host> <public> 
    0015: [1] 13 09 ...................... branchFalse8 <addr: 26> 
    0017: [0] 57 ......................... loadThis 
    0018: [1] 7b c4 8e 04 c4 08 .......... getObjName <host> <public> 
    0024: [1] 3e 0c ...................... goto8 <addr: 38> 
    0026: [1] 57 ......................... loadThis 
    0027: [2] 7b f8 64 c4 08 ............. getObjName <uri> <public> 
    0032: [2] 7b c4 8e 04 c4 08 .......... getObjName <host> <public> 
    0038: [2] bf ......................... returnValue 
    

FUNCTION:   [Request-56]  public const get function serverPort() : Number


    0000: [0] 33 12 d2 fd 01 f6 f2 04 .... debug 

    # ejs.es:16233                          server.port

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ce 96 04 c4 08 .......... getObjName <server> <public> 
    0015: [1] 7b b0 c4 03 c4 08 .......... getObjName <port> <public> 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [absHome-00]  public native var absHome : Uri
VARIABLE:   [authGroup-01]  public native var authGroup : String
VARIABLE:   [authType-02]  public native var authType : String
VARIABLE:   [authUser-03]  public native var authUser : String
VARIABLE:   [chunkSize-04]  public native var chunkSize : Number
VARIABLE:   [config-05]  public var config : Object
VARIABLE:   [contentLength-06]  public native var contentLength : Number
VARIABLE:   [contentType-07]  public native var contentType : String
VARIABLE:   [cookies-08]  public native var cookies : Object
VARIABLE:   [dir-09]  public native var dir : Path
VARIABLE:   [encoding-10]  public native var encoding : String
VARIABLE:   [files-11]  public native var files : Object
VARIABLE:   [headers-12]  public native var headers : Object
VARIABLE:   [home-13]  public native var home : Uri
VARIABLE:   [host-14]  public native var host : String
VARIABLE:   [method-15]  public native var method : String
VARIABLE:   [params-16]  public native var params : Object
VARIABLE:   [pathInfo-17]  public native var pathInfo : String
VARIABLE:   [query-18]  public native var query : String
VARIABLE:   [referrer-19]  public native var referrer : String
VARIABLE:   [remoteAddress-20]  public native var remoteAddress : String
VARIABLE:   [route-21]  public var route
VARIABLE:   [scheme-22]  public native var scheme : String
VARIABLE:   [scriptName-23]  public native var scriptName : String
VARIABLE:   [secure-24]  public native var secure : Boolean
VARIABLE:   [server-25]  public native var server : HttpServer
VARIABLE:   [session-26]  public native var session : Object
VARIABLE:   [sessionID-27]  public native var sessionID : String
VARIABLE:   [status-28]  public native var status : Number
VARIABLE:   [timeout-29]  public native var timeout : Number
VARIABLE:   [uri-30]  public native var uri : Uri
VARIABLE:   [userAgent-31]  public native var userAgent : String
VARIABLE:   [env-32]  public native var env : Object

CLASS:      class Router extends Object
            #  Class Details: 35 class traits, 1 instance traits, requested slot 171

FUNCTION:   [Router-26]  -constructor- const function Router(set: Array) : void

     ARG:   [arg-00]   private set : Array

    0000: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0002: [1] 89 ......................... new 
    0003: [1] 57 ......................... loadThis 
    0004: [2] b3 ee f4 04 24 ............. putObjName <routes> <internal-ed363076473b51ca685af450cc662b39-0> 
    0009: [0] 41 02 02 0a ................ initDefaultArgs8 <2> <4> <12> 
    0013: [0] 57 ......................... loadThis 
    0014: [1] 7b fc f8 04 c4 08 .......... getObjName <RestfulRoutes> <public> 
    0020: [1] 94 ......................... putLocalSlot0 
    0021: [0] 33 12 d8 ff 01 e4 99 05 .... debug 

    # ejs.es:16364                          addRoutes(set)

    0029: [0] 5b ......................... getLocalSlot0 
    0030: [1] 1f 9a 9a 05 c4 08 02 ....... callScopedName <addRoutes> <public> <argc: 1> 
    0037: [0] be ......................... return 
    0038: [0] 33 12 da ff 01 b0 15 ....... debug 

    # ejs.es:16365                      }
    
VARIABLE:   [set-00]  private var set : Array

FUNCTION:   [Router-27]  -initializer- static function Router-initializer() : Void


    0000: [0] 33 12 d2 fe 01 aa f4 04 .... debug 

    # ejs.es:16297              		internal var routes: Array = []

    0008: [0] 33 12 ea fe 01 fc f4 04 .... debug 

    # ejs.es:16309                      public static var TopRoutes = [

    0016: [0] 33 12 f0 fe 01 e0 f5 04 .... debug 

    # ejs.es:16312                      ]

    0024: [0] 33 12 ea fe 01 fc f4 04 .... debug 

    # ejs.es:16309                      public static var TopRoutes = [

    0032: [0] 33 12 f0 fe 01 e0 f5 04 .... debug 

    # ejs.es:16312                      ]

    0040: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0042: [1] 89 ......................... new 
    0043: [1] 33 12 ea fe 01 fc f4 04 .... debug 

    # ejs.es:16309                      public static var TopRoutes = [

    0051: [1] 39 ......................... dup 
    0052: [2] 33 12 ec fe 01 f4 f5 04 .... debug 

    # ejs.es:16310                        { name: "es",      type: "es",  match: /\.es$/   },

    0060: [2] 56 00 ...................... loadString <> 
    0062: [3] 56 9a 13 ................... loadString <name> 
    0065: [4] 56 90 d2 03 ................ loadString <es> 
    0069: [5] 56 00 ...................... loadString <> 
    0071: [6] 56 f0 f6 04 ................ loadString <type> 
    0075: [7] 56 90 d2 03 ................ loadString <es> 
    0079: [8] 56 00 ...................... loadString <> 
    0081: [9] 56 fa f6 04 ................ loadString <match> 
    0085: [10] 55 86 f7 04 ................ loadRegexp </\.es$/> 
    0089: [11] 8a e4 06 06 00 00 00 ....... newObject <type: 0x1b2,  ejs::Object> <argc: 3> <att: 3 3 3 >
    0096: [3] c5 ......................... swap 
    0097: [3] 33 12 ea fe 01 fc f4 04 .... debug 

    # ejs.es:16309                      public static var TopRoutes = [

    0105: [3] 56 ba 11 ................... loadString <> 
    0108: [4] 44 ......................... load0 
    0109: [5] b2 ......................... putObjNameExpr 
    0110: [1] 33 12 ec fe 01 f4 f5 04 .... debug 

    # ejs.es:16310                        { name: "es",      type: "es",  match: /\.es$/   },

    0118: [1] 39 ......................... dup 
    0119: [2] 33 12 ee fe 01 96 f7 04 .... debug 

    # ejs.es:16311                        { name: "ejs",     type: "ejs", match: /\.ejs$/  },

    0127: [2] 56 00 ...................... loadString <> 
    0129: [3] 56 9a 13 ................... loadString <name> 
    0132: [4] 56 ee 1d ................... loadString <ejs> 
    0135: [5] 56 00 ...................... loadString <> 
    0137: [6] 56 f0 f6 04 ................ loadString <type> 
    0141: [7] 56 ee 1d ................... loadString <ejs> 
    0144: [8] 56 00 ...................... loadString <> 
    0146: [9] 56 fa f6 04 ................ loadString <match> 
    0150: [10] 55 92 f8 04 ................ loadRegexp </\.ejs$/> 
    0154: [11] 8a e4 06 06 00 00 00 ....... newObject <type: 0x1b2,  ejs::Object> <argc: 3> <att: 3 3 3 >
    0161: [3] c5 ......................... swap 
    0162: [3] 33 12 ec fe 01 f4 f5 04 .... debug 

    # ejs.es:16310                        { name: "es",      type: "es",  match: /\.es$/   },

    0170: [3] 56 ba 11 ................... loadString <> 
    0173: [4] 45 ......................... load1 
    0174: [5] b2 ......................... putObjNameExpr 
    0175: [1] 33 12 ea fe 01 fc f4 04 .... debug 

    # ejs.es:16309                      public static var TopRoutes = [

    0183: [1] 57 ......................... loadThis 
    0184: [2] b3 cc f5 04 c4 08 .......... putObjName <TopRoutes> <public> 
    0190: [0] 33 12 8e ff 01 a4 f8 04 .... debug 

    # ejs.es:16327                      public static var RestfulRoutes = [

    0198: [0] 33 12 9e ff 01 e0 f5 04 .... debug 

    # ejs.es:16335                      ]

    0206: [0] 33 12 8e ff 01 a4 f8 04 .... debug 

    # ejs.es:16327                      public static var RestfulRoutes = [

    0214: [0] 33 12 9e ff 01 e0 f5 04 .... debug 

    # ejs.es:16335                      ]

    0222: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0224: [1] 89 ......................... new 
    0225: [1] 33 12 8e ff 01 a4 f8 04 .... debug 

    # ejs.es:16327                      public static var RestfulRoutes = [

    0233: [1] 39 ......................... dup 
    0234: [2] 33 12 90 ff 01 98 f9 04 .... debug 

    # ejs.es:16328                        { name: "new",     type: "mvc", method: "GET",    match: "/:controller/new",       params: { action: "new" } },

    0242: [2] 56 00 ...................... loadString <> 
    0244: [3] 56 9a 13 ................... loadString <name> 
    0247: [4] 56 8c fb 04 ................ loadString <new> 
    0251: [5] 56 00 ...................... loadString <> 
    0253: [6] 56 f0 f6 04 ................ loadString <type> 
    0257: [7] 56 b4 d3 03 ................ loadString <mvc> 
    0261: [8] 56 00 ...................... loadString <> 
    0263: [9] 56 ae 99 01 ................ loadString <method> 
    0267: [10] 56 94 fb 04 ................ loadString <GET> 
    0271: [11] 56 00 ...................... loadString <> 
    0273: [12] 56 fa f6 04 ................ loadString <match> 
    0277: [13] 56 9c fb 04 ................ loadString </:controller/new> 
    0281: [14] 56 00 ...................... loadString <> 
    0283: [15] 56 b2 06 ................... loadString <params> 
    0286: [16] 56 00 ...................... loadString <> 
    0288: [17] 56 ee 01 ................... loadString <action> 
    0291: [18] 56 8c fb 04 ................ loadString <new> 
    0295: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0300: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    0309: [3] c5 ......................... swap 
    0310: [3] 33 12 8e ff 01 a4 f8 04 .... debug 

    # ejs.es:16327                      public static var RestfulRoutes = [

    0318: [3] 56 ba 11 ................... loadString <> 
    0321: [4] 44 ......................... load0 
    0322: [5] b2 ......................... putObjNameExpr 
    0323: [1] 33 12 90 ff 01 98 f9 04 .... debug 

    # ejs.es:16328                        { name: "new",     type: "mvc", method: "GET",    match: "/:controller/new",       params: { action: "new" } },

    0331: [1] 39 ......................... dup 
    0332: [2] 33 12 92 ff 01 be fb 04 .... debug 

    # ejs.es:16329                        { name: "edit",    type: "mvc", method: "GET",    match: "/:controller/:id/edit",  params: { action: "edit" } },

    0340: [2] 56 00 ...................... loadString <> 
    0342: [3] 56 9a 13 ................... loadString <name> 
    0345: [4] 56 b4 fd 04 ................ loadString <edit> 
    0349: [5] 56 00 ...................... loadString <> 
    0351: [6] 56 f0 f6 04 ................ loadString <type> 
    0355: [7] 56 b4 d3 03 ................ loadString <mvc> 
    0359: [8] 56 00 ...................... loadString <> 
    0361: [9] 56 ae 99 01 ................ loadString <method> 
    0365: [10] 56 94 fb 04 ................ loadString <GET> 
    0369: [11] 56 00 ...................... loadString <> 
    0371: [12] 56 fa f6 04 ................ loadString <match> 
    0375: [13] 56 be fd 04 ................ loadString </:controller/:id/edit> 
    0379: [14] 56 00 ...................... loadString <> 
    0381: [15] 56 b2 06 ................... loadString <params> 
    0384: [16] 56 00 ...................... loadString <> 
    0386: [17] 56 ee 01 ................... loadString <action> 
    0389: [18] 56 b4 fd 04 ................ loadString <edit> 
    0393: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0398: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    0407: [3] c5 ......................... swap 
    0408: [3] 33 12 90 ff 01 98 f9 04 .... debug 

    # ejs.es:16328                        { name: "new",     type: "mvc", method: "GET",    match: "/:controller/new",       params: { action: "new" } },

    0416: [3] 56 ba 11 ................... loadString <> 
    0419: [4] 45 ......................... load1 
    0420: [5] b2 ......................... putObjNameExpr 
    0421: [1] 33 12 92 ff 01 be fb 04 .... debug 

    # ejs.es:16329                        { name: "edit",    type: "mvc", method: "GET",    match: "/:controller/:id/edit",  params: { action: "edit" } },

    0429: [1] 39 ......................... dup 
    0430: [2] 33 12 94 ff 01 ea fd 04 .... debug 

    # ejs.es:16330                        { name: "show",    type: "mvc", method: "GET",    match: "/:controller/:id",       params: { action: "show" } },

    0438: [2] 56 00 ...................... loadString <> 
    0440: [3] 56 9a 13 ................... loadString <name> 
    0443: [4] 56 e0 ff 04 ................ loadString <show> 
    0447: [5] 56 00 ...................... loadString <> 
    0449: [6] 56 f0 f6 04 ................ loadString <type> 
    0453: [7] 56 b4 d3 03 ................ loadString <mvc> 
    0457: [8] 56 00 ...................... loadString <> 
    0459: [9] 56 ae 99 01 ................ loadString <method> 
    0463: [10] 56 94 fb 04 ................ loadString <GET> 
    0467: [11] 56 00 ...................... loadString <> 
    0469: [12] 56 fa f6 04 ................ loadString <match> 
    0473: [13] 56 ea ff 04 ................ loadString </:controller/:id> 
    0477: [14] 56 00 ...................... loadString <> 
    0479: [15] 56 b2 06 ................... loadString <params> 
    0482: [16] 56 00 ...................... loadString <> 
    0484: [17] 56 ee 01 ................... loadString <action> 
    0487: [18] 56 e0 ff 04 ................ loadString <show> 
    0491: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0496: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    0505: [3] c5 ......................... swap 
    0506: [3] 33 12 92 ff 01 be fb 04 .... debug 

    # ejs.es:16329                        { name: "edit",    type: "mvc", method: "GET",    match: "/:controller/:id/edit",  params: { action: "edit" } },

    0514: [3] 56 ba 11 ................... loadString <> 
    0517: [4] 46 ......................... load2 
    0518: [5] b2 ......................... putObjNameExpr 
    0519: [1] 33 12 94 ff 01 ea fd 04 .... debug 

    # ejs.es:16330                        { name: "show",    type: "mvc", method: "GET",    match: "/:controller/:id",       params: { action: "show" } },

    0527: [1] 39 ......................... dup 
    0528: [2] 33 12 96 ff 01 8c 80 05 .... debug 

    # ejs.es:16331                        { name: "update",  type: "mvc", method: "PUT",    match: "/:controller/:id",       params: { action: "update" } },

    0536: [2] 56 00 ...................... loadString <> 
    0538: [3] 56 9a 13 ................... loadString <name> 
    0541: [4] 56 a8 9d 01 ................ loadString <update> 
    0545: [5] 56 00 ...................... loadString <> 
    0547: [6] 56 f0 f6 04 ................ loadString <type> 
    0551: [7] 56 b4 d3 03 ................ loadString <mvc> 
    0555: [8] 56 00 ...................... loadString <> 
    0557: [9] 56 ae 99 01 ................ loadString <method> 
    0561: [10] 56 86 82 05 ................ loadString <PUT> 
    0565: [11] 56 00 ...................... loadString <> 
    0567: [12] 56 fa f6 04 ................ loadString <match> 
    0571: [13] 56 ea ff 04 ................ loadString </:controller/:id> 
    0575: [14] 56 00 ...................... loadString <> 
    0577: [15] 56 b2 06 ................... loadString <params> 
    0580: [16] 56 00 ...................... loadString <> 
    0582: [17] 56 ee 01 ................... loadString <action> 
    0585: [18] 56 a8 9d 01 ................ loadString <update> 
    0589: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0594: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    0603: [3] c5 ......................... swap 
    0604: [3] 33 12 94 ff 01 ea fd 04 .... debug 

    # ejs.es:16330                        { name: "show",    type: "mvc", method: "GET",    match: "/:controller/:id",       params: { action: "show" } },

    0612: [3] 56 ba 11 ................... loadString <> 
    0615: [4] 47 ......................... load3 
    0616: [5] b2 ......................... putObjNameExpr 
    0617: [1] 33 12 96 ff 01 8c 80 05 .... debug 

    # ejs.es:16331                        { name: "update",  type: "mvc", method: "PUT",    match: "/:controller/:id",       params: { action: "update" } },

    0625: [1] 39 ......................... dup 
    0626: [2] 33 12 98 ff 01 8e 82 05 .... debug 

    # ejs.es:16332                        { name: "delete",  type: "mvc", method: "DELETE", match: "/:controller/:id",       params: { action: "delete" } },

    0634: [2] 56 00 ...................... loadString <> 
    0636: [3] 56 9a 13 ................... loadString <name> 
    0639: [4] 56 88 84 05 ................ loadString <delete> 
    0643: [5] 56 00 ...................... loadString <> 
    0645: [6] 56 f0 f6 04 ................ loadString <type> 
    0649: [7] 56 b4 d3 03 ................ loadString <mvc> 
    0653: [8] 56 00 ...................... loadString <> 
    0655: [9] 56 ae 99 01 ................ loadString <method> 
    0659: [10] 56 96 84 05 ................ loadString <DELETE> 
    0663: [11] 56 00 ...................... loadString <> 
    0665: [12] 56 fa f6 04 ................ loadString <match> 
    0669: [13] 56 ea ff 04 ................ loadString </:controller/:id> 
    0673: [14] 56 00 ...................... loadString <> 
    0675: [15] 56 b2 06 ................... loadString <params> 
    0678: [16] 56 00 ...................... loadString <> 
    0680: [17] 56 ee 01 ................... loadString <action> 
    0683: [18] 56 88 84 05 ................ loadString <delete> 
    0687: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0692: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    0701: [3] c5 ......................... swap 
    0702: [3] 33 12 96 ff 01 8c 80 05 .... debug 

    # ejs.es:16331                        { name: "update",  type: "mvc", method: "PUT",    match: "/:controller/:id",       params: { action: "update" } },

    0710: [3] 56 ba 11 ................... loadString <> 
    0713: [4] 48 ......................... load4 
    0714: [5] b2 ......................... putObjNameExpr 
    0715: [1] 33 12 98 ff 01 8e 82 05 .... debug 

    # ejs.es:16332                        { name: "delete",  type: "mvc", method: "DELETE", match: "/:controller/:id",       params: { action: "delete" } },

    0723: [1] 39 ......................... dup 
    0724: [2] 33 12 9a ff 01 a4 84 05 .... debug 

    # ejs.es:16333                        { name: "create",  type: "mvc", method: "POST",   match: "/:controller",           params: { action: "create" } },

    0732: [2] 56 00 ...................... loadString <> 
    0734: [3] 56 9a 13 ................... loadString <name> 
    0737: [4] 56 e0 1d ................... loadString <create> 
    0740: [5] 56 00 ...................... loadString <> 
    0742: [6] 56 f0 f6 04 ................ loadString <type> 
    0746: [7] 56 b4 d3 03 ................ loadString <mvc> 
    0750: [8] 56 00 ...................... loadString <> 
    0752: [9] 56 ae 99 01 ................ loadString <method> 
    0756: [10] 56 9e 86 05 ................ loadString <POST> 
    0760: [11] 56 00 ...................... loadString <> 
    0762: [12] 56 fa f6 04 ................ loadString <match> 
    0766: [13] 56 a8 86 05 ................ loadString </:controller> 
    0770: [14] 56 00 ...................... loadString <> 
    0772: [15] 56 b2 06 ................... loadString <params> 
    0775: [16] 56 00 ...................... loadString <> 
    0777: [17] 56 ee 01 ................... loadString <action> 
    0780: [18] 56 e0 1d ................... loadString <create> 
    0783: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0788: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    0797: [3] c5 ......................... swap 
    0798: [3] 33 12 98 ff 01 8e 82 05 .... debug 

    # ejs.es:16332                        { name: "delete",  type: "mvc", method: "DELETE", match: "/:controller/:id",       params: { action: "delete" } },

    0806: [3] 56 ba 11 ................... loadString <> 
    0809: [4] 49 ......................... load5 
    0810: [5] b2 ......................... putObjNameExpr 
    0811: [1] 33 12 9a ff 01 a4 84 05 .... debug 

    # ejs.es:16333                        { name: "create",  type: "mvc", method: "POST",   match: "/:controller",           params: { action: "create" } },

    0819: [1] 39 ......................... dup 
    0820: [2] 33 12 9c ff 01 c2 86 05 .... debug 

    # ejs.es:16334                        { name: "index",   type: "mvc", method: "GET",    match: "/:controller",           params: { action: "index" } },

    0828: [2] 56 00 ...................... loadString <> 
    0830: [3] 56 9a 13 ................... loadString <name> 
    0833: [4] 56 de 28 ................... loadString <index> 
    0836: [5] 56 00 ...................... loadString <> 
    0838: [6] 56 f0 f6 04 ................ loadString <type> 
    0842: [7] 56 b4 d3 03 ................ loadString <mvc> 
    0846: [8] 56 00 ...................... loadString <> 
    0848: [9] 56 ae 99 01 ................ loadString <method> 
    0852: [10] 56 94 fb 04 ................ loadString <GET> 
    0856: [11] 56 00 ...................... loadString <> 
    0858: [12] 56 fa f6 04 ................ loadString <match> 
    0862: [13] 56 a8 86 05 ................ loadString </:controller> 
    0866: [14] 56 00 ...................... loadString <> 
    0868: [15] 56 b2 06 ................... loadString <params> 
    0871: [16] 56 00 ...................... loadString <> 
    0873: [17] 56 ee 01 ................... loadString <action> 
    0876: [18] 56 de 28 ................... loadString <index> 
    0879: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0884: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    0893: [3] c5 ......................... swap 
    0894: [3] 33 12 9a ff 01 a4 84 05 .... debug 

    # ejs.es:16333                        { name: "create",  type: "mvc", method: "POST",   match: "/:controller",           params: { action: "create" } },

    0902: [3] 56 ba 11 ................... loadString <> 
    0905: [4] 4a ......................... load6 
    0906: [5] b2 ......................... putObjNameExpr 
    0907: [1] 33 12 8e ff 01 a4 f8 04 .... debug 

    # ejs.es:16327                      public static var RestfulRoutes = [

    0915: [1] 57 ......................... loadThis 
    0916: [2] b3 fc f8 04 c4 08 .......... putObjName <RestfulRoutes> <public> 
    0922: [0] 33 12 c0 ff 01 ba 88 05 .... debug 

    # ejs.es:16352                      public static var LegacyRoutes = [

    0930: [0] 33 12 d2 ff 01 e0 f5 04 .... debug 

    # ejs.es:16361                      ]

    0938: [0] 33 12 c0 ff 01 ba 88 05 .... debug 

    # ejs.es:16352                      public static var LegacyRoutes = [

    0946: [0] 33 12 d2 ff 01 e0 f5 04 .... debug 

    # ejs.es:16361                      ]

    0954: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0956: [1] 89 ......................... new 
    0957: [1] 33 12 c0 ff 01 ba 88 05 .... debug 

    # ejs.es:16352                      public static var LegacyRoutes = [

    0965: [1] 39 ......................... dup 
    0966: [2] 33 12 c2 ff 01 90 89 05 .... debug 

    # ejs.es:16353                        { name: "list",    type: "mvc", method: "GET",  match: "/:controller/list",        params: { action: "list" } },

    0974: [2] 56 00 ...................... loadString <> 
    0976: [3] 56 9a 13 ................... loadString <name> 
    0979: [4] 56 d6 fc 01 ................ loadString <list> 
    0983: [5] 56 00 ...................... loadString <> 
    0985: [6] 56 f0 f6 04 ................ loadString <type> 
    0989: [7] 56 b4 d3 03 ................ loadString <mvc> 
    0993: [8] 56 00 ...................... loadString <> 
    0995: [9] 56 ae 99 01 ................ loadString <method> 
    0999: [10] 56 94 fb 04 ................ loadString <GET> 
    1003: [11] 56 00 ...................... loadString <> 
    1005: [12] 56 fa f6 04 ................ loadString <match> 
    1009: [13] 56 86 8b 05 ................ loadString </:controller/list> 
    1013: [14] 56 00 ...................... loadString <> 
    1015: [15] 56 b2 06 ................... loadString <params> 
    1018: [16] 56 00 ...................... loadString <> 
    1020: [17] 56 ee 01 ................... loadString <action> 
    1023: [18] 56 d6 fc 01 ................ loadString <list> 
    1027: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    1032: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    1041: [3] c5 ......................... swap 
    1042: [3] 33 12 c0 ff 01 ba 88 05 .... debug 

    # ejs.es:16352                      public static var LegacyRoutes = [

    1050: [3] 56 ba 11 ................... loadString <> 
    1053: [4] 44 ......................... load0 
    1054: [5] b2 ......................... putObjNameExpr 
    1055: [1] 33 12 c2 ff 01 90 89 05 .... debug 

    # ejs.es:16353                        { name: "list",    type: "mvc", method: "GET",  match: "/:controller/list",        params: { action: "list" } },

    1063: [1] 39 ......................... dup 
    1064: [2] 33 12 c4 ff 01 aa 8b 05 .... debug 

    # ejs.es:16354                        { name: "create",  type: "mvc", method: "POST", match: "/:controller/create",      params: { action: "create" } },

    1072: [2] 56 00 ...................... loadString <> 
    1074: [3] 56 9a 13 ................... loadString <name> 
    1077: [4] 56 e0 1d ................... loadString <create> 
    1080: [5] 56 00 ...................... loadString <> 
    1082: [6] 56 f0 f6 04 ................ loadString <type> 
    1086: [7] 56 b4 d3 03 ................ loadString <mvc> 
    1090: [8] 56 00 ...................... loadString <> 
    1092: [9] 56 ae 99 01 ................ loadString <method> 
    1096: [10] 56 9e 86 05 ................ loadString <POST> 
    1100: [11] 56 00 ...................... loadString <> 
    1102: [12] 56 fa f6 04 ................ loadString <match> 
    1106: [13] 56 a4 8d 05 ................ loadString </:controller/create> 
    1110: [14] 56 00 ...................... loadString <> 
    1112: [15] 56 b2 06 ................... loadString <params> 
    1115: [16] 56 00 ...................... loadString <> 
    1117: [17] 56 ee 01 ................... loadString <action> 
    1120: [18] 56 e0 1d ................... loadString <create> 
    1123: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    1128: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    1137: [3] c5 ......................... swap 
    1138: [3] 33 12 c2 ff 01 90 89 05 .... debug 

    # ejs.es:16353                        { name: "list",    type: "mvc", method: "GET",  match: "/:controller/list",        params: { action: "list" } },

    1146: [3] 56 ba 11 ................... loadString <> 
    1149: [4] 45 ......................... load1 
    1150: [5] b2 ......................... putObjNameExpr 
    1151: [1] 33 12 c4 ff 01 aa 8b 05 .... debug 

    # ejs.es:16354                        { name: "create",  type: "mvc", method: "POST", match: "/:controller/create",      params: { action: "create" } },

    1159: [1] 39 ......................... dup 
    1160: [2] 33 12 c6 ff 01 cc 8d 05 .... debug 

    # ejs.es:16355                        { name: "edit",    type: "mvc", method: "GET",  match: "/:controller/edit",        params: { action: "edit" } },

    1168: [2] 56 00 ...................... loadString <> 
    1170: [3] 56 9a 13 ................... loadString <name> 
    1173: [4] 56 b4 fd 04 ................ loadString <edit> 
    1177: [5] 56 00 ...................... loadString <> 
    1179: [6] 56 f0 f6 04 ................ loadString <type> 
    1183: [7] 56 b4 d3 03 ................ loadString <mvc> 
    1187: [8] 56 00 ...................... loadString <> 
    1189: [9] 56 ae 99 01 ................ loadString <method> 
    1193: [10] 56 94 fb 04 ................ loadString <GET> 
    1197: [11] 56 00 ...................... loadString <> 
    1199: [12] 56 fa f6 04 ................ loadString <match> 
    1203: [13] 56 c2 8f 05 ................ loadString </:controller/edit> 
    1207: [14] 56 00 ...................... loadString <> 
    1209: [15] 56 b2 06 ................... loadString <params> 
    1212: [16] 56 00 ...................... loadString <> 
    1214: [17] 56 ee 01 ................... loadString <action> 
    1217: [18] 56 b4 fd 04 ................ loadString <edit> 
    1221: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    1226: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    1235: [3] c5 ......................... swap 
    1236: [3] 33 12 c4 ff 01 aa 8b 05 .... debug 

    # ejs.es:16354                        { name: "create",  type: "mvc", method: "POST", match: "/:controller/create",      params: { action: "create" } },

    1244: [3] 56 ba 11 ................... loadString <> 
    1247: [4] 46 ......................... load2 
    1248: [5] b2 ......................... putObjNameExpr 
    1249: [1] 33 12 c6 ff 01 cc 8d 05 .... debug 

    # ejs.es:16355                        { name: "edit",    type: "mvc", method: "GET",  match: "/:controller/edit",        params: { action: "edit" } },

    1257: [1] 39 ......................... dup 
    1258: [2] 33 12 c8 ff 01 e6 8f 05 .... debug 

    # ejs.es:16356                        { name: "update",  type: "mvc", method: "POST", match: "/:controller/update",      params: { action: "update" } },

    1266: [2] 56 00 ...................... loadString <> 
    1268: [3] 56 9a 13 ................... loadString <name> 
    1271: [4] 56 a8 9d 01 ................ loadString <update> 
    1275: [5] 56 00 ...................... loadString <> 
    1277: [6] 56 f0 f6 04 ................ loadString <type> 
    1281: [7] 56 b4 d3 03 ................ loadString <mvc> 
    1285: [8] 56 00 ...................... loadString <> 
    1287: [9] 56 ae 99 01 ................ loadString <method> 
    1291: [10] 56 9e 86 05 ................ loadString <POST> 
    1295: [11] 56 00 ...................... loadString <> 
    1297: [12] 56 fa f6 04 ................ loadString <match> 
    1301: [13] 56 e0 91 05 ................ loadString </:controller/update> 
    1305: [14] 56 00 ...................... loadString <> 
    1307: [15] 56 b2 06 ................... loadString <params> 
    1310: [16] 56 00 ...................... loadString <> 
    1312: [17] 56 ee 01 ................... loadString <action> 
    1315: [18] 56 a8 9d 01 ................ loadString <update> 
    1319: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    1324: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    1333: [3] c5 ......................... swap 
    1334: [3] 33 12 c6 ff 01 cc 8d 05 .... debug 

    # ejs.es:16355                        { name: "edit",    type: "mvc", method: "GET",  match: "/:controller/edit",        params: { action: "edit" } },

    1342: [3] 56 ba 11 ................... loadString <> 
    1345: [4] 47 ......................... load3 
    1346: [5] b2 ......................... putObjNameExpr 
    1347: [1] 33 12 c8 ff 01 e6 8f 05 .... debug 

    # ejs.es:16356                        { name: "update",  type: "mvc", method: "POST", match: "/:controller/update",      params: { action: "update" } },

    1355: [1] 39 ......................... dup 
    1356: [2] 33 12 ca ff 01 88 92 05 .... debug 

    # ejs.es:16357                        { name: "destroy", type: "mvc", method: "POST", match: "/:controller/destroy",     params: { action: "destroy" } },

    1364: [2] 56 00 ...................... loadString <> 
    1366: [3] 56 9a 13 ................... loadString <name> 
    1369: [4] 56 84 94 05 ................ loadString <destroy> 
    1373: [5] 56 00 ...................... loadString <> 
    1375: [6] 56 f0 f6 04 ................ loadString <type> 
    1379: [7] 56 b4 d3 03 ................ loadString <mvc> 
    1383: [8] 56 00 ...................... loadString <> 
    1385: [9] 56 ae 99 01 ................ loadString <method> 
    1389: [10] 56 9e 86 05 ................ loadString <POST> 
    1393: [11] 56 00 ...................... loadString <> 
    1395: [12] 56 fa f6 04 ................ loadString <match> 
    1399: [13] 56 94 94 05 ................ loadString </:controller/destroy> 
    1403: [14] 56 00 ...................... loadString <> 
    1405: [15] 56 b2 06 ................... loadString <params> 
    1408: [16] 56 00 ...................... loadString <> 
    1410: [17] 56 ee 01 ................... loadString <action> 
    1413: [18] 56 84 94 05 ................ loadString <destroy> 
    1417: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    1422: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    1431: [3] c5 ......................... swap 
    1432: [3] 33 12 c8 ff 01 e6 8f 05 .... debug 

    # ejs.es:16356                        { name: "update",  type: "mvc", method: "POST", match: "/:controller/update",      params: { action: "update" } },

    1440: [3] 56 ba 11 ................... loadString <> 
    1443: [4] 48 ......................... load4 
    1444: [5] b2 ......................... putObjNameExpr 
    1445: [1] 33 12 ca ff 01 88 92 05 .... debug 

    # ejs.es:16357                        { name: "destroy", type: "mvc", method: "POST", match: "/:controller/destroy",     params: { action: "destroy" } },

    1453: [1] 39 ......................... dup 
    1454: [2] 33 12 cc ff 01 be 94 05 .... debug 

    # ejs.es:16358                        { name: "index",   type: "mvc", method: "GET",  match: "/:controller",             params: { action: "index" } },

    1462: [2] 56 00 ...................... loadString <> 
    1464: [3] 56 9a 13 ................... loadString <name> 
    1467: [4] 56 de 28 ................... loadString <index> 
    1470: [5] 56 00 ...................... loadString <> 
    1472: [6] 56 f0 f6 04 ................ loadString <type> 
    1476: [7] 56 b4 d3 03 ................ loadString <mvc> 
    1480: [8] 56 00 ...................... loadString <> 
    1482: [9] 56 ae 99 01 ................ loadString <method> 
    1486: [10] 56 94 fb 04 ................ loadString <GET> 
    1490: [11] 56 00 ...................... loadString <> 
    1492: [12] 56 fa f6 04 ................ loadString <match> 
    1496: [13] 56 a8 86 05 ................ loadString </:controller> 
    1500: [14] 56 00 ...................... loadString <> 
    1502: [15] 56 b2 06 ................... loadString <params> 
    1505: [16] 56 00 ...................... loadString <> 
    1507: [17] 56 ee 01 ................... loadString <action> 
    1510: [18] 56 de 28 ................... loadString <index> 
    1513: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    1518: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    1527: [3] c5 ......................... swap 
    1528: [3] 33 12 ca ff 01 88 92 05 .... debug 

    # ejs.es:16357                        { name: "destroy", type: "mvc", method: "POST", match: "/:controller/destroy",     params: { action: "destroy" } },

    1536: [3] 56 ba 11 ................... loadString <> 
    1539: [4] 49 ......................... load5 
    1540: [5] b2 ......................... putObjNameExpr 
    1541: [1] 33 12 cc ff 01 be 94 05 .... debug 

    # ejs.es:16358                        { name: "index",   type: "mvc", method: "GET",  match: "/:controller",             params: { action: "index" } },

    1549: [1] 39 ......................... dup 
    1550: [2] 33 12 d0 ff 01 b6 96 05 .... debug 

    # ejs.es:16360                        { name: "funny",   type: "mvc", method: "GET",  match: "/funny/:controller/:id/edit",  params: { action: "edit" } },

    1558: [2] 56 00 ...................... loadString <> 
    1560: [3] 56 9a 13 ................... loadString <name> 
    1563: [4] 56 b4 98 05 ................ loadString <funny> 
    1567: [5] 56 00 ...................... loadString <> 
    1569: [6] 56 f0 f6 04 ................ loadString <type> 
    1573: [7] 56 b4 d3 03 ................ loadString <mvc> 
    1577: [8] 56 00 ...................... loadString <> 
    1579: [9] 56 ae 99 01 ................ loadString <method> 
    1583: [10] 56 94 fb 04 ................ loadString <GET> 
    1587: [11] 56 00 ...................... loadString <> 
    1589: [12] 56 fa f6 04 ................ loadString <match> 
    1593: [13] 56 c0 98 05 ................ loadString </funny/:controller/:id/edit> 
    1597: [14] 56 00 ...................... loadString <> 
    1599: [15] 56 b2 06 ................... loadString <params> 
    1602: [16] 56 00 ...................... loadString <> 
    1604: [17] 56 ee 01 ................... loadString <action> 
    1607: [18] 56 b4 fd 04 ................ loadString <edit> 
    1611: [19] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    1616: [17] 8a e4 06 0a 00 00 00 00 00 . newObject <type: 0x1b2,  ejs::Object> <argc: 5> <att: 5 5 5 5 5 >
    1625: [3] c5 ......................... swap 
    1626: [3] 33 12 cc ff 01 be 94 05 .... debug 

    # ejs.es:16358                        { name: "index",   type: "mvc", method: "GET",  match: "/:controller",             params: { action: "index" } },

    1634: [3] 56 ba 11 ................... loadString <> 
    1637: [4] 4a ......................... load6 
    1638: [5] b2 ......................... putObjNameExpr 
    1639: [1] 33 12 c0 ff 01 ba 88 05 .... debug 

    # ejs.es:16352                      public static var LegacyRoutes = [

    1647: [1] 57 ......................... loadThis 
    1648: [2] b3 e4 da 03 c4 08 .......... putObjName <LegacyRoutes> <public> 
    1654: [0] 33 12 d6 ff 01 f8 98 05 .... debug 

    # ejs.es:16363                      function Router(set: Array = RestfulRoutes) {

    1662: [0] 33 12 e4 ff 01 c4 9a 05 .... debug 

    # ejs.es:16370              		public function addRestfulRoutes(): Void

    1670: [0] 33 12 f4 ff 01 86 9c 05 .... debug 

    # ejs.es:16378              		public function addRoutes(routeSet: Array, outer: Route? = null): Void {

    1678: [0] 33 12 e4 80 02 de b3 05 .... debug 

    # ejs.es:16434                      public function route(request): Void {

    1686: [0] 33 12 d6 81 02 dc cc 05 .... debug 

    # ejs.es:16491                      function dumpRoutes(): Void {

    1694: [0] be ......................... return 
    
VARIABLE:   [Router-28]  public static var TopRoutes
VARIABLE:   [Router-29]  public static var RestfulRoutes
VARIABLE:   [Router-30]  public static var LegacyRoutes

FUNCTION:   [Router-31]  public const function addRestfulRoutes() : Void


    0000: [0] 33 12 e6 ff 01 9a 9b 05 .... debug 

    # ejs.es:16371                          addRoutes(RestfulRoutes)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b fc f8 04 c4 08 .......... getObjName <RestfulRoutes> <public> 
    0015: [1] 1f 9a 9a 05 c4 08 02 ....... callScopedName <addRoutes> <public> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] bf ......................... returnValue 
    

FUNCTION:   [Router-32]  public const function addRoutes(routeSet: Array, outer) : Void

     ARG:   [arg-00]   private routeSet : Array
     ARG:   [arg-01]   private outer
   LOCAL:   [local-02] var route
   LOCAL:   [local-03] var p
   LOCAL:   [local-04] var splitter
   LOCAL:   [local-05] var tokens
   LOCAL:   [local-06] var i
   LOCAL:   [local-07] var template
   LOCAL:   [local-08] var c

    0000: [0] 41 02 02 05 ................ initDefaultArgs8 <2> <4> <7> 
    0004: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0006: [1] 95 ......................... putLocalSlot1 
    0007: [0] 33 12 f6 ff 01 9c 9d 05 .... debug 

    # ejs.es:16379                          for each (route in routeSet) {

    0015: [0] 5b ......................... getLocalSlot0 
    0016: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] 39 ......................... dup 
    0024: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0027: [1] 93 ......................... pushResult 
    0028: [2] 96 ......................... putLocalSlot2 
    0029: [1] 33 12 f8 ff 01 f2 9d 05 .... debug 

    # ejs.es:16380                              route = route.clone()

    0037: [1] 5d ......................... getLocalSlot2 
    0038: [2] 1e fe 35 00 00 ............. callObjName <clone> <> <argc: 0> 
    0043: [1] 93 ......................... pushResult 
    0044: [2] 96 ......................... putLocalSlot2 
    0045: [1] 33 12 80 80 02 be 9e 05 .... debug 

    # ejs.es:16384                              while (outer) {

    0053: [1] 5c ......................... getLocalSlot1 
    0054: [2] 07 a4 02 f7 f7 ............. branchFalse <addr: 205> 
    0059: [1] 33 12 82 80 02 fe 9e 05 .... debug 

    # ejs.es:16385                                  route.name = outer.name + "." + route.name

    0067: [1] 5c ......................... getLocalSlot1 
    0068: [2] 7b 9a 13 c4 08 ............. getObjName <name> <public> 
    0073: [2] 56 fc 9f 05 ................ loadString <.> 
    0077: [3] 00 ......................... add 
    0078: [2] 5d ......................... getLocalSlot2 
    0079: [3] 7b 9a 13 00 ................ getObjName <name> <> 
    0083: [3] 00 ......................... add 
    0084: [2] 5d ......................... getLocalSlot2 
    0085: [3] b3 9a 13 00 ................ putObjName <name> <> 
    0089: [1] 33 12 84 80 02 80 a0 05 .... debug 

    # ejs.es:16386                                  route.match = outer.match + route.match

    0097: [1] 5c ......................... getLocalSlot1 
    0098: [2] 7b fa f6 04 c4 08 .......... getObjName <match> <public> 
    0104: [2] 5d ......................... getLocalSlot2 
    0105: [3] 7b fa f6 04 00 ............. getObjName <match> <> 
    0110: [3] 00 ......................... add 
    0111: [2] 5d ......................... getLocalSlot2 
    0112: [3] b3 fa f6 04 00 ............. putObjName <match> <> 
    0117: [1] 33 12 86 80 02 f8 a0 05 .... debug 

    # ejs.es:16387                                  for (p in outer.params) {

    0125: [1] 5c ......................... getLocalSlot1 
    0126: [2] 7b b2 06 c4 08 ............. getObjName <params> <public> 
    0131: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0137: [1] 93 ......................... pushResult 
    0138: [2] 39 ......................... dup 
    0139: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0142: [2] 93 ......................... pushResult 
    0143: [3] 97 ......................... putLocalSlot3 
    0144: [2] 33 12 88 80 02 d8 a1 05 .... debug 

    # ejs.es:16388                                      route.params[p] = outer.params[p]

    0152: [2] 5c ......................... getLocalSlot1 
    0153: [3] 7b b2 06 c4 08 ............. getObjName <params> <public> 
    0158: [3] 56 ba 11 ................... loadString <> 
    0161: [4] 5e ......................... getLocalSlot3 
    0162: [5] 7c ......................... getObjNameExpr 
    0163: [3] 5d ......................... getLocalSlot2 
    0164: [4] 7b b2 06 00 ................ getObjName <params> <> 
    0168: [4] 56 ba 11 ................... loadString <> 
    0171: [5] 5e ......................... getLocalSlot3 
    0172: [6] b2 ......................... putObjNameExpr 
    0173: [2] 3e db ...................... goto8 <addr: 138> 
    0175: [2] 90 ......................... pop 
    0176: [1] 33 12 8a 80 02 bc f5 02 .... debug 

    # ejs.es:16389                                  }

    0184: [1] 33 12 8c 80 02 cc a2 05 .... debug 

    # ejs.es:16390                                  outer = outer.parent

    0192: [1] 5c ......................... getLocalSlot1 
    0193: [2] 7b 9e a3 05 ba 11 .......... getObjName <parent> <> 
    0199: [2] 95 ......................... putLocalSlot1 
    0200: [1] 3d b1 02 f7 f7 ............. goto <addr: 53> 
    0205: [1] 33 12 8e 80 02 86 35 ....... debug 

    # ejs.es:16391                              }

    0212: [1] 33 12 98 80 02 be a3 05 .... debug 

    # ejs.es:16396                              let splitter, tokens

    0220: [1] 33 12 9a 80 02 96 a4 05 .... debug 

    # ejs.es:16397                              route.matcher = route.match

    0228: [1] 5d ......................... getLocalSlot2 
    0229: [2] 7b fa f6 04 00 ............. getObjName <match> <> 
    0234: [2] 5d ......................... getLocalSlot2 
    0235: [3] b3 ee a4 05 00 ............. putObjName <matcher> <> 
    0240: [1] 33 12 9c 80 02 fe a4 05 .... debug 

    # ejs.es:16398                              if (route.match is String) {

    0248: [1] 5d ......................... getLocalSlot2 
    0249: [2] 7b fa f6 04 00 ............. getObjName <match> <> 
    0254: [2] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0257: [3] 43 ......................... isA 
    0258: [2] 07 ce 04 f7 f7 ............. branchFalse <addr: 558> 
    0263: [1] 33 12 a6 80 02 d8 a5 05 .... debug 

    # ejs.es:16403                                  tokens = route.match.match(/:([^:\W]*)/g)

    0271: [1] 5d ......................... getLocalSlot2 
    0272: [2] 7b fa f6 04 00 ............. getObjName <match> <> 
    0277: [2] 55 d4 a6 05 ................ loadRegexp </:([^:\W]*)/g> 
    0281: [3] 1e fa f6 04 00 02 .......... callObjName <match> <> <argc: 1> 
    0287: [1] 93 ......................... pushResult 
    0288: [2] 99 ......................... putLocalSlot5 
    0289: [1] 33 12 a8 80 02 f0 a6 05 .... debug 

    # ejs.es:16404                                  for (i in tokens) {

    0297: [1] 60 ......................... getLocalSlot5 
    0298: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0304: [1] 93 ......................... pushResult 
    0305: [2] 39 ......................... dup 
    0306: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0309: [2] 93 ......................... pushResult 
    0310: [3] 9a ......................... putLocalSlot6 
    0311: [2] 33 12 aa 80 02 c0 a7 05 .... debug 

    # ejs.es:16405                                      tokens[i] = tokens[i].trim(":")

    0319: [2] 60 ......................... getLocalSlot5 
    0320: [3] 56 ba 11 ................... loadString <> 
    0323: [4] 61 ......................... getLocalSlot6 
    0324: [5] 7c ......................... getObjNameExpr 
    0325: [3] 56 b0 a8 05 ................ loadString <:> 
    0329: [4] 1e ba 13 00 02 ............. callObjName <trim> <> <argc: 1> 
    0334: [2] 93 ......................... pushResult 
    0335: [3] 60 ......................... getLocalSlot5 
    0336: [4] 56 ba 11 ................... loadString <> 
    0339: [5] 61 ......................... getLocalSlot6 
    0340: [6] b2 ......................... putObjNameExpr 
    0341: [2] 3e da ...................... goto8 <addr: 305> 
    0343: [2] 90 ......................... pop 
    0344: [1] 33 12 ac 80 02 bc f5 02 .... debug 

    # ejs.es:16406                                  }

    0352: [1] 33 12 ae 80 02 c6 a8 05 .... debug 

    # ejs.es:16407                                  let template = route.match.replace(/:([^:\W]+)/g, "([^\W]+)").replace(/\//g, "\\/")

    0360: [1] 5d ......................... getLocalSlot2 
    0361: [2] 7b fa f6 04 00 ............. getObjName <match> <> 
    0366: [2] 55 96 aa 05 ................ loadRegexp </:([^:\W]+)/g> 
    0370: [3] 56 b2 aa 05 ................ loadString <([^W]+)> 
    0374: [4] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0379: [1] 93 ......................... pushResult 
    0380: [2] 55 c2 aa 05 ................ loadRegexp </\//g> 
    0384: [3] 56 ce aa 05 ................ loadString <\/> 
    0388: [4] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0393: [1] 93 ......................... pushResult 
    0394: [2] 9b ......................... putLocalSlot7 
    0395: [1] 33 12 b0 80 02 d4 aa 05 .... debug 

    # ejs.es:16408                                  route.matcher = RegExp("^" + template)

    0403: [1] 56 ca ab 05 ................ loadString <^> 
    0407: [2] 62 ......................... getLocalSlot7 
    0408: [3] 00 ......................... add 
    0409: [2] 17 e2 01 02 ................ callGlobalSlot <slot: 113> <argc: 1> 
    0413: [1] 93 ......................... pushResult 
    0414: [2] 5d ......................... getLocalSlot2 
    0415: [3] b3 ee a4 05 00 ............. putObjName <matcher> <> 
    0420: [1] 33 12 b4 80 02 ce ab 05 .... debug 

    # ejs.es:16410                                  count = 1

    0428: [1] 45 ......................... load1 
    0429: [2] b4 c6 a7 04 ba 11 .......... putScopedName <count> <> 
    0435: [1] 33 12 b6 80 02 8a ac 05 .... debug 

    # ejs.es:16411                                  splitter = ""

    0443: [1] 56 ba 11 ................... loadString <> 
    0446: [2] 98 ......................... putLocalSlot4 
    0447: [1] 33 12 b8 80 02 ce ac 05 .... debug 

    # ejs.es:16412                                  for (c in tokens) {

    0455: [1] 60 ......................... getLocalSlot5 
    0456: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0462: [1] 93 ......................... pushResult 
    0463: [2] 39 ......................... dup 
    0464: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0467: [2] 93 ......................... pushResult 
    0468: [3] 9c ......................... putLocalSlot8 
    0469: [2] 33 12 ba 80 02 b4 ad 05 .... debug 

    # ejs.es:16413                                      splitter += "$" + count++ + ":"

    0477: [2] 5f ......................... getLocalSlot4 
    0478: [3] 56 a4 ae 05 ................ loadString <$> 
    0482: [4] 79 c6 a7 04 ba 11 .......... getScopedName <count> <> 
    0488: [5] 39 ......................... dup 
    0489: [6] 3f 01 ...................... inc <1> 
    0491: [6] b4 c6 a7 04 ba 11 .......... putScopedName <count> <> 
    0497: [5] 00 ......................... add 
    0498: [4] 56 b0 a8 05 ................ loadString <:> 
    0502: [5] 00 ......................... add 
    0503: [4] 00 ......................... add 
    0504: [3] 98 ......................... putLocalSlot4 
    0505: [2] 3e d4 ...................... goto8 <addr: 463> 
    0507: [2] 90 ......................... pop 
    0508: [1] 33 12 bc 80 02 bc f5 02 .... debug 

    # ejs.es:16414                                  }

    0516: [1] 33 12 be 80 02 a8 ae 05 .... debug 

    # ejs.es:16415                                  route.splitter = splitter.trim(":")

    0524: [1] 5f ......................... getLocalSlot4 
    0525: [2] 56 b0 a8 05 ................ loadString <:> 
    0529: [3] 1e ba 13 00 02 ............. callObjName <trim> <> <argc: 1> 
    0534: [1] 93 ......................... pushResult 
    0535: [2] 5d ......................... getLocalSlot2 
    0536: [3] b3 ac a3 05 00 ............. putObjName <splitter> <> 
    0541: [1] 33 12 c0 80 02 98 af 05 .... debug 

    # ejs.es:16416                                  route.tokens = tokens

    0549: [1] 60 ......................... getLocalSlot5 
    0550: [2] 5d ......................... getLocalSlot2 
    0551: [3] b3 88 a4 05 00 ............. putObjName <tokens> <> 
    0556: [1] 3e 00 ...................... goto8 <addr: 558> 
    0558: [1] 33 12 c2 80 02 86 35 ....... debug 

    # ejs.es:16417                              }

    0565: [1] 33 12 c4 80 02 ec af 05 .... debug 

    # ejs.es:16418                              route = new Route(route, this)

    0573: [1] 7e d8 02 ................... getGlobalSlot <slot: 172> 
    0576: [2] 89 ......................... new 
    0577: [2] 5d ......................... getLocalSlot2 
    0578: [3] 57 ......................... loadThis 
    0579: [4] 20 04 ...................... callConstructor <argc: 2> 
    0581: [2] 96 ......................... putLocalSlot2 
    0582: [1] 33 12 c6 80 02 ca b0 05 .... debug 

    # ejs.es:16419                              if (route.subroute) {

    0590: [1] 5d ......................... getLocalSlot2 
    0591: [2] 7b 96 b1 05 00 ............. getObjName <subroute> <> 
    0596: [2] 13 2c ...................... branchFalse8 <addr: 642> 
    0598: [1] 33 12 ca 80 02 a8 b1 05 .... debug 

    # ejs.es:16421                                  route.subroute.parent = route

    0606: [1] 5d ......................... getLocalSlot2 
    0607: [2] 5d ......................... getLocalSlot2 
    0608: [3] 7b 96 b1 05 00 ............. getObjName <subroute> <> 
    0613: [3] b3 9e a3 05 00 ............. putObjName <parent> <> 
    0618: [1] 33 12 cc 80 02 8c b2 05 .... debug 

    # ejs.es:16422                                  addRoutes(route.subroute, route)

    0626: [1] 5d ......................... getLocalSlot2 
    0627: [2] 7b 96 b1 05 00 ............. getObjName <subroute> <> 
    0632: [2] 5d ......................... getLocalSlot2 
    0633: [3] 1f 9a 9a 05 c4 08 04 ....... callScopedName <addRoutes> <public> <argc: 2> 
    0640: [1] 3e 00 ...................... goto8 <addr: 642> 
    0642: [1] 33 12 ce 80 02 86 35 ....... debug 

    # ejs.es:16423                              }

    0649: [1] 33 12 d0 80 02 f6 b2 05 .... debug 

    # ejs.es:16424                              routes.append(route)

    0657: [1] 57 ......................... loadThis 
    0658: [2] 7b ee f4 04 24 ............. getObjName <routes> <internal-ed363076473b51ca685af450cc662b39-0> 
    0663: [2] 5d ......................... getLocalSlot2 
    0664: [3] 1e dc 41 c4 08 02 .......... callObjName <append> <public> <argc: 1> 
    0670: [1] 3d 99 0a f7 f7 ............. goto <addr: 23> 
    0675: [1] 90 ......................... pop 
    0676: [0] 54 ......................... loadNull 
    0677: [1] bf ......................... returnValue 
    0678: [0] 33 12 d4 80 02 94 bd 01 .... debug 

    # ejs.es:16426              		}
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    139     142        175          175       StopIteration
1   iteration    306     309        343          343       StopIteration
2   iteration    464     467        507          507       StopIteration
3   iteration     24      27        675          675       StopIteration

VARIABLE:   [routeSet-00]  private var routeSet : Array
VARIABLE:   [outer-01]  private var outer
VARIABLE:   [route-02]  -hoisted-2 var route
VARIABLE:   [p-03]  -hoisted-3 var p
VARIABLE:   [splitter-04]  -hoisted-2 var splitter
VARIABLE:   [tokens-05]  -hoisted-2 var tokens
VARIABLE:   [i-06]  -hoisted-6 var i
VARIABLE:   [template-07]  -hoisted-7 var template
VARIABLE:   [c-08]  -hoisted-8 var c

FUNCTION:   [Router-33]  public const function route(request) : Void

     ARG:   [arg-00]   private request
   LOCAL:   [local-01] var params
   LOCAL:   [local-02] var pathInfo
   LOCAL:   [local-03] var route
   LOCAL:   [local-04] var i
   LOCAL:   [local-05] var results
   LOCAL:   [local-06] var name
   LOCAL:   [local-07] var value
   LOCAL:   [local-08] var i
   LOCAL:   [local-09] var i
   LOCAL:   [local-10] var location

    0000: [0] 33 12 e6 80 02 bc b4 05 .... debug 

    # ejs.es:16435                          let params = request.params

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 7b b2 06 00 ................ getObjName <params> <> 
    0013: [1] 95 ......................... putLocalSlot1 
    0014: [0] 33 12 e8 80 02 8c b5 05 .... debug 

    # ejs.es:16436                          let pathInfo = request.pathInfo

    0022: [0] 5b ......................... getLocalSlot0 
    0023: [1] 7b 94 91 04 00 ............. getObjName <pathInfo> <> 
    0028: [1] 96 ......................... putLocalSlot2 
    0029: [0] 33 12 ea 80 02 e4 b5 05 .... debug 

    # ejs.es:16437                          for each (route in routes) {

    0037: [0] 57 ......................... loadThis 
    0038: [1] 7b ee f4 04 24 ............. getObjName <routes> <internal-ed363076473b51ca685af450cc662b39-0> 
    0043: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0049: [0] 93 ......................... pushResult 
    0050: [1] 39 ......................... dup 
    0051: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0054: [1] 93 ......................... pushResult 
    0055: [2] 97 ......................... putLocalSlot3 
    0056: [1] 33 12 ec 80 02 b6 b6 05 .... debug 

    # ejs.es:16438                              if (route.method && request.method != route.method) {

    0064: [1] 5e ......................... getLocalSlot3 
    0065: [2] 7b ae 99 01 00 ............. getObjName <method> <> 
    0070: [2] 39 ......................... dup 
    0071: [3] 13 0e ...................... branchFalse8 <addr: 87> 
    0073: [2] 90 ......................... pop 
    0074: [1] 5b ......................... getLocalSlot0 
    0075: [2] 7b ae 99 01 00 ............. getObjName <method> <> 
    0080: [2] 5e ......................... getLocalSlot3 
    0081: [3] 7b ae 99 01 00 ............. getObjName <method> <> 
    0086: [3] 2c ......................... compareNe 
    0087: [2] 13 0f ...................... branchFalse8 <addr: 104> 
    0089: [1] 33 12 ee 80 02 c2 b7 05 .... debug 

    # ejs.es:16439                                  continue

    0097: [1] 3d 69 f7 f7 f7 ............. goto <addr: 50> 
    0102: [1] 3e 00 ...................... goto8 <addr: 104> 
    0104: [1] 33 12 f2 80 02 fc b7 05 .... debug 

    # ejs.es:16441                              if (route.matcher is Function) { 

    0112: [1] 5e ......................... getLocalSlot3 
    0113: [2] 7b ee a4 05 00 ............. getObjName <matcher> <> 
    0118: [2] 7e 4e ...................... getGlobalSlot <slot: 39> 
    0120: [3] 43 ......................... isA 
    0121: [2] 13 5d ...................... branchFalse8 <addr: 216> 
    0123: [1] 33 12 f4 80 02 e0 b8 05 .... debug 

    # ejs.es:16442                                  if (!route.matcher(request)) {

    0131: [1] 5e ......................... getLocalSlot3 
    0132: [2] 5b ......................... getLocalSlot0 
    0133: [3] 1e ee a4 05 00 02 .......... callObjName <matcher> <> <argc: 1> 
    0139: [1] 93 ......................... pushResult 
    0140: [2] 86 ......................... logicalNot 
    0141: [2] 13 0f ...................... branchFalse8 <addr: 158> 
    0143: [1] 33 12 f6 80 02 fa f4 02 .... debug 

    # ejs.es:16443                                      continue

    0151: [1] 3d d5 01 f7 f7 ............. goto <addr: 50> 
    0156: [1] 3e 00 ...................... goto8 <addr: 158> 
    0158: [1] 33 12 fa 80 02 c6 b9 05 .... debug 

    # ejs.es:16445                                  for (i in route.params) {

    0166: [1] 5e ......................... getLocalSlot3 
    0167: [2] 7b b2 06 00 ................ getObjName <params> <> 
    0171: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0177: [1] 93 ......................... pushResult 
    0178: [2] 39 ......................... dup 
    0179: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0182: [2] 93 ......................... pushResult 
    0183: [3] 98 ......................... putLocalSlot4 
    0184: [2] 33 12 fc 80 02 a2 ba 05 .... debug 

    # ejs.es:16446                                      params[i] = route.params[i]

    0192: [2] 5e ......................... getLocalSlot3 
    0193: [3] 7b b2 06 00 ................ getObjName <params> <> 
    0197: [3] 56 ba 11 ................... loadString <> 
    0200: [4] 5f ......................... getLocalSlot4 
    0201: [5] 7c ......................... getObjNameExpr 
    0202: [3] 5c ......................... getLocalSlot1 
    0203: [4] 56 ba 11 ................... loadString <> 
    0206: [5] 5f ......................... getLocalSlot4 
    0207: [6] b2 ......................... putObjNameExpr 
    0208: [2] 3e e0 ...................... goto8 <addr: 178> 
    0210: [2] 90 ......................... pop 
    0211: [1] 3d dc 06 f7 f7 ............. goto <addr: 646> 
    0216: [1] 33 12 82 81 02 8a bb 05 .... debug 

    # ejs.es:16449                              } else if (!route.splitter) { 

    0224: [1] 5e ......................... getLocalSlot3 
    0225: [2] 7b ac a3 05 00 ............. getObjName <splitter> <> 
    0230: [2] 86 ......................... logicalNot 
    0231: [2] 07 d8 02 f7 f7 ............. branchFalse <addr: 408> 
    0236: [1] 33 12 84 81 02 f8 bb 05 .... debug 

    # ejs.es:16450                                  let results = pathInfo.match(route.matcher)

    0244: [1] 5d ......................... getLocalSlot2 
    0245: [2] 5e ......................... getLocalSlot3 
    0246: [3] 7b ee a4 05 00 ............. getObjName <matcher> <> 
    0251: [3] 1e fa f6 04 00 02 .......... callObjName <match> <> <argc: 1> 
    0257: [1] 93 ......................... pushResult 
    0258: [2] 99 ......................... putLocalSlot5 
    0259: [1] 33 12 86 81 02 f8 bc 05 .... debug 

    # ejs.es:16451                                  if (!results) {

    0267: [1] 60 ......................... getLocalSlot5 
    0268: [2] 86 ......................... logicalNot 
    0269: [2] 13 0f ...................... branchFalse8 <addr: 286> 
    0271: [1] 33 12 88 81 02 fa f4 02 .... debug 

    # ejs.es:16452                                      continue

    0279: [1] 3d d5 03 f7 f7 ............. goto <addr: 50> 
    0284: [1] 3e 00 ...................... goto8 <addr: 286> 
    0286: [1] 33 12 8c 81 02 c0 bd 05 .... debug 

    # ejs.es:16454                                  for (let name in route.params) {

    0294: [1] 5e ......................... getLocalSlot3 
    0295: [2] 7b b2 06 00 ................ getObjName <params> <> 
    0299: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0305: [1] 93 ......................... pushResult 
    0306: [2] 39 ......................... dup 
    0307: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0310: [2] 93 ......................... pushResult 
    0311: [3] 9a ......................... putLocalSlot6 
    0312: [2] 33 12 8e 81 02 aa be 05 .... debug 

    # ejs.es:16455                                      let value = route.params[name]

    0320: [2] 5e ......................... getLocalSlot3 
    0321: [3] 7b b2 06 00 ................ getObjName <params> <> 
    0325: [3] 56 ba 11 ................... loadString <> 
    0328: [4] 61 ......................... getLocalSlot6 
    0329: [5] 7c ......................... getObjNameExpr 
    0330: [3] 9b ......................... putLocalSlot7 
    0331: [2] 33 12 90 81 02 98 bf 05 .... debug 

    # ejs.es:16456                                      if (value.contains("$")) {

    0339: [2] 62 ......................... getLocalSlot7 
    0340: [3] 56 a4 ae 05 ................ loadString <$> 
    0344: [4] 1e c0 4e 00 02 ............. callObjName <contains> <> <argc: 1> 
    0349: [2] 93 ......................... pushResult 
    0350: [3] 13 19 ...................... branchFalse8 <addr: 377> 
    0352: [2] 33 12 92 81 02 fe bf 05 .... debug 

    # ejs.es:16457                                          value = pathInfo.replace(route.matcher, value)

    0360: [2] 5d ......................... getLocalSlot2 
    0361: [3] 5e ......................... getLocalSlot3 
    0362: [4] 7b ee a4 05 00 ............. getObjName <matcher> <> 
    0367: [4] 62 ......................... getLocalSlot7 
    0368: [5] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0373: [2] 93 ......................... pushResult 
    0374: [3] 9b ......................... putLocalSlot7 
    0375: [2] 3e 00 ...................... goto8 <addr: 377> 
    0377: [2] 33 12 94 81 02 e6 8a 03 .... debug 

    # ejs.es:16458                                      }

    0385: [2] 33 12 96 81 02 94 c1 05 .... debug 

    # ejs.es:16459                                      params[name] = value

    0393: [2] 62 ......................... getLocalSlot7 
    0394: [3] 5c ......................... getLocalSlot1 
    0395: [4] 56 ba 11 ................... loadString <> 
    0398: [5] 61 ......................... getLocalSlot6 
    0399: [6] b2 ......................... putObjNameExpr 
    0400: [2] 3e a0 ...................... goto8 <addr: 306> 
    0402: [2] 90 ......................... pop 
    0403: [1] 3d dc 03 f7 f7 ............. goto <addr: 646> 
    0408: [1] 33 12 9c 81 02 e8 a1 01 .... debug 

    # ejs.es:16462                              } else {

    0416: [1] 33 12 a0 81 02 ee c1 05 .... debug 

    # ejs.es:16464                                  if (!pathInfo.match(route.matcher)) {

    0424: [1] 5d ......................... getLocalSlot2 
    0425: [2] 5e ......................... getLocalSlot3 
    0426: [3] 7b ee a4 05 00 ............. getObjName <matcher> <> 
    0431: [3] 1e fa f6 04 00 02 .......... callObjName <match> <> <argc: 1> 
    0437: [1] 93 ......................... pushResult 
    0438: [2] 86 ......................... logicalNot 
    0439: [2] 13 0f ...................... branchFalse8 <addr: 456> 
    0441: [1] 33 12 a2 81 02 fa f4 02 .... debug 

    # ejs.es:16465                                      continue

    0449: [1] 3d a9 06 f7 f7 ............. goto <addr: 50> 
    0454: [1] 3e 00 ...................... goto8 <addr: 456> 
    0456: [1] 33 12 a4 81 02 bc f5 02 .... debug 

    # ejs.es:16466                                  }

    0464: [1] 33 12 a6 81 02 e2 c2 05 .... debug 

    # ejs.es:16467                                  parts = pathInfo.replace(route.matcher, route.splitter)

    0472: [1] 5d ......................... getLocalSlot2 
    0473: [2] 5e ......................... getLocalSlot3 
    0474: [3] 7b ee a4 05 00 ............. getObjName <matcher> <> 
    0479: [3] 5e ......................... getLocalSlot3 
    0480: [4] 7b ac a3 05 00 ............. getObjName <splitter> <> 
    0485: [4] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0490: [1] 93 ......................... pushResult 
    0491: [2] b4 98 86 01 ba 11 .......... putScopedName <parts> <> 
    0497: [1] 33 12 a8 81 02 fa c3 05 .... debug 

    # ejs.es:16468                                  parts = parts.split(":")

    0505: [1] 79 98 86 01 ba 11 .......... getScopedName <parts> <> 
    0511: [2] 56 b0 a8 05 ................ loadString <:> 
    0515: [3] 1e d4 c4 05 00 02 .......... callObjName <split> <> <argc: 1> 
    0521: [1] 93 ......................... pushResult 
    0522: [2] b4 98 86 01 ba 11 .......... putScopedName <parts> <> 
    0528: [1] 33 12 aa 81 02 e0 c4 05 .... debug 

    # ejs.es:16469                                  for (i in route.tokens) {

    0536: [1] 5e ......................... getLocalSlot3 
    0537: [2] 7b 88 a4 05 00 ............. getObjName <tokens> <> 
    0542: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0548: [1] 93 ......................... pushResult 
    0549: [2] 39 ......................... dup 
    0550: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0553: [2] 93 ......................... pushResult 
    0554: [3] 9c ......................... putLocalSlot8 
    0555: [2] 33 12 ac 81 02 bc c5 05 .... debug 

    # ejs.es:16470                                      params[route.tokens[i]] = parts[i]

    0563: [2] 79 98 86 01 ba 11 .......... getScopedName <parts> <> 
    0569: [3] 56 ba 11 ................... loadString <> 
    0572: [4] 63 ......................... getLocalSlot8 
    0573: [5] 7c ......................... getObjNameExpr 
    0574: [3] 5c ......................... getLocalSlot1 
    0575: [4] 56 ba 11 ................... loadString <> 
    0578: [5] 5e ......................... getLocalSlot3 
    0579: [6] 7b 88 a4 05 00 ............. getObjName <tokens> <> 
    0584: [6] 56 ba 11 ................... loadString <> 
    0587: [7] 63 ......................... getLocalSlot8 
    0588: [8] 7c ......................... getObjNameExpr 
    0589: [6] b2 ......................... putObjNameExpr 
    0590: [2] 3e d5 ...................... goto8 <addr: 549> 
    0592: [2] 90 ......................... pop 
    0593: [1] 33 12 b2 81 02 c6 b9 05 .... debug 

    # ejs.es:16473                                  for (i in route.params) {

    0601: [1] 5e ......................... getLocalSlot3 
    0602: [2] 7b b2 06 00 ................ getObjName <params> <> 
    0606: [2] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0612: [1] 93 ......................... pushResult 
    0613: [2] 39 ......................... dup 
    0614: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0617: [2] 93 ......................... pushResult 
    0618: [3] 9d ......................... putLocalSlot9 
    0619: [2] 33 12 b4 81 02 a2 ba 05 .... debug 

    # ejs.es:16474                                      params[i] = route.params[i]

    0627: [2] 5e ......................... getLocalSlot3 
    0628: [3] 7b b2 06 00 ................ getObjName <params> <> 
    0632: [3] 56 ba 11 ................... loadString <> 
    0635: [4] 64 ......................... getLocalSlot9 
    0636: [5] 7c ......................... getObjNameExpr 
    0637: [3] 5c ......................... getLocalSlot1 
    0638: [4] 56 ba 11 ................... loadString <> 
    0641: [5] 64 ......................... getLocalSlot9 
    0642: [6] b2 ......................... putObjNameExpr 
    0643: [2] 3e e0 ...................... goto8 <addr: 613> 
    0645: [2] 90 ......................... pop 
    0646: [1] 33 12 b8 81 02 86 35 ....... debug 

    # ejs.es:16476                              }

    0653: [1] 33 12 ba 81 02 c8 c6 05 .... debug 

    # ejs.es:16477                              request.route = route

    0661: [1] 5e ......................... getLocalSlot3 
    0662: [2] 5b ......................... getLocalSlot0 
    0663: [3] b3 e2 93 04 00 ............. putObjName <route> <> 
    0668: [1] 33 12 bc 81 02 94 c7 05 .... debug 

    # ejs.es:16478                              if (route.rewrite && !route.rewrite(request)) {

    0676: [1] 5e ......................... getLocalSlot3 
    0677: [2] 7b 94 c8 05 00 ............. getObjName <rewrite> <> 
    0682: [2] 39 ......................... dup 
    0683: [3] 13 0b ...................... branchFalse8 <addr: 696> 
    0685: [2] 90 ......................... pop 
    0686: [1] 5e ......................... getLocalSlot3 
    0687: [2] 5b ......................... getLocalSlot0 
    0688: [3] 1e 94 c8 05 00 02 .......... callObjName <rewrite> <> <argc: 1> 
    0694: [1] 93 ......................... pushResult 
    0695: [2] 86 ......................... logicalNot 
    0696: [2] 13 1f ...................... branchFalse8 <addr: 729> 
    0698: [1] 33 12 be 81 02 a4 c8 05 .... debug 

    # ejs.es:16479                                  request.route = null

    0706: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0708: [2] 5b ......................... getLocalSlot0 
    0709: [3] b3 e2 93 04 00 ............. putObjName <route> <> 
    0714: [1] 33 12 c0 81 02 c2 b7 05 .... debug 

    # ejs.es:16480                                  continue

    0722: [1] 3d cb 0a f7 f7 ............. goto <addr: 50> 
    0727: [1] 3e 00 ...................... goto8 <addr: 729> 
    0729: [1] 33 12 c2 81 02 86 35 ....... debug 

    # ejs.es:16481                              }

    0736: [1] 33 12 c4 81 02 f6 c8 05 .... debug 

    # ejs.es:16482                              let location = route.location

    0744: [1] 5e ......................... getLocalSlot3 
    0745: [2] 7b 9a c5 04 00 ............. getObjName <location> <> 
    0750: [2] b8 14 ...................... putLocalSlot <slot: 10> 
    0752: [1] 33 12 c6 81 02 d2 c9 05 .... debug 

    # ejs.es:16483                              if (location && location.prefix && location.dir) {

    0760: [1] 7f 14 ...................... getLocalSlot <slot: 10> 
    0762: [2] 39 ......................... dup 
    0763: [3] 13 08 ...................... branchFalse8 <addr: 773> 
    0765: [2] 90 ......................... pop 
    0766: [1] 7f 14 ...................... getLocalSlot <slot: 10> 
    0768: [2] 7b 8c c5 04 00 ............. getObjName <prefix> <> 
    0773: [2] 39 ......................... dup 
    0774: [3] 13 07 ...................... branchFalse8 <addr: 783> 
    0776: [2] 90 ......................... pop 
    0777: [1] 7f 14 ...................... getLocalSlot <slot: 10> 
    0779: [2] 7b ee 25 00 ................ getObjName <dir> <> 
    0783: [2] 13 1e ...................... branchFalse8 <addr: 815> 
    0785: [1] 33 12 c8 81 02 d8 ca 05 .... debug 

    # ejs.es:16484                                  request.setLocation(location.prefix, location.dir)

    0793: [1] 5b ......................... getLocalSlot0 
    0794: [2] 7f 14 ...................... getLocalSlot <slot: 10> 
    0796: [3] 7b 8c c5 04 00 ............. getObjName <prefix> <> 
    0801: [3] 7f 14 ...................... getLocalSlot <slot: 10> 
    0803: [4] 7b ee 25 00 ................ getObjName <dir> <> 
    0807: [4] 1e f4 c4 04 00 04 .......... callObjName <setLocation> <> <argc: 2> 
    0813: [1] 3e 00 ...................... goto8 <addr: 815> 
    0815: [1] 33 12 cc 81 02 9e 7b ....... debug 

    # ejs.es:16486                              return

    0822: [1] be ......................... return 
    0823: [0] 3d 95 0c f7 f7 ............. goto <addr: 50> 
    0828: [0] 90 ......................... pop 
    0829: [-1] 33 12 d0 81 02 e6 cb 05 .... debug 

    # ejs.es:16488                          throw "No route for " + pathInfo

    0837: [-1] 56 c0 cc 05 ................ loadString <No route for > 
    0841: [0] 5d ......................... getLocalSlot2 
    0842: [1] 00 ......................... add 
    0843: [0] c6 ......................... throw 
    0844: [0] 54 ......................... loadNull 
    0845: [1] bf ......................... returnValue 
    0846: [0] 33 12 d2 81 02 b0 15 ....... debug 

    # ejs.es:16489                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    179     182        210          210       StopIteration
1   iteration    307     310        402          402       StopIteration
2   iteration    550     553        592          592       StopIteration
3   iteration    614     617        645          645       StopIteration
4   iteration     51      54        828          828       StopIteration

VARIABLE:   [request-00]  private var request
VARIABLE:   [params-01]  private var params
VARIABLE:   [pathInfo-02]  private var pathInfo
VARIABLE:   [route-03]  -hoisted-3 var route
VARIABLE:   [i-04]  -hoisted-4 var i
VARIABLE:   [results-05]  -hoisted-5 var results
VARIABLE:   [name-06]  -hoisted-6 var name
VARIABLE:   [value-07]  -hoisted-6 var value
VARIABLE:   [i-08]  -hoisted-8 var i
VARIABLE:   [i-09]  -hoisted-9 var i
VARIABLE:   [location-10]  -hoisted-3 var location

FUNCTION:   [Router-34]  internal-ed363076473b51ca685af450cc662b39-0 const function dumpRoutes() : Void


    0000: [0] 33 12 d8 81 02 a8 cd 05 .... debug 

    # ejs.es:16492                          dump(routes)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b ee f4 04 24 ............. getObjName <routes> <internal-ed363076473b51ca685af450cc662b39-0> 
    0014: [1] 17 90 01 02 ................ callGlobalSlot <slot: 72> <argc: 1> 
    0018: [0] 54 ......................... loadNull 
    0019: [1] bf ......................... returnValue 
    0020: [0] 33 12 da 81 02 b0 15 ....... debug 

    # ejs.es:16493                      }
    
VARIABLE:   [routes-00]  internal-ed363076473b51ca685af450cc662b39-0 var routes : Array

CLASS:      dynamic class Route extends Object
            #  Class Details: 28 class traits, 14 instance traits, requested slot 172

FUNCTION:   [Route-26]  -constructor- const function Route(route: Object, router: Router) : void

     ARG:   [arg-00]   private route : Object
     ARG:   [arg-01]   private router : Router
   LOCAL:   [local-02] var field

    0000: [0] 33 12 94 83 02 86 d6 05 .... debug 

    # ejs.es:16586                          for (field in route) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 39 ......................... dup 
    0017: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0020: [1] 93 ......................... pushResult 
    0021: [2] 96 ......................... putLocalSlot2 
    0022: [1] 33 12 96 83 02 cc d6 05 .... debug 

    # ejs.es:16587                             this[field] = route[field]

    0030: [1] 5b ......................... getLocalSlot0 
    0031: [2] 56 ba 11 ................... loadString <> 
    0034: [3] 5d ......................... getLocalSlot2 
    0035: [4] 7c ......................... getObjNameExpr 
    0036: [2] 57 ......................... loadThis 
    0037: [3] 56 ba 11 ................... loadString <> 
    0040: [4] 5d ......................... getLocalSlot2 
    0041: [5] b2 ......................... putObjNameExpr 
    0042: [1] 3e e4 ...................... goto8 <addr: 16> 
    0044: [1] 90 ......................... pop 
    0045: [0] 33 12 98 83 02 a0 d7 05 .... debug 

    # ejs.es:16588                          } 

    0053: [0] 33 12 9a 83 02 be d7 05 .... debug 

    # ejs.es:16589                          this.router = router

    0061: [0] 5c ......................... getLocalSlot1 
    0062: [1] 57 ......................... loadThis 
    0063: [2] b3 88 d5 05 24 ............. putObjName <router> <internal-ed363076473b51ca685af450cc662b39-0> 
    0068: [0] be ......................... return 
    0069: [0] 33 12 9c 83 02 b0 15 ....... debug 

    # ejs.es:16590                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     17      20         44           44       StopIteration

VARIABLE:   [route-00]  private var route : Object
VARIABLE:   [router-01]  private var router : Router
VARIABLE:   [field-02]  -hoisted-2 var field

FUNCTION:   [Route-27]  public const function makeUri(request: Request, parts: Object) : Uri

     ARG:   [arg-00]   private request : Request
     ARG:   [arg-01]   private parts : Object
   LOCAL:   [local-02] var result
   LOCAL:   [local-03] var routeName
   LOCAL:   [local-04] var route
   LOCAL:   [local-05] var path
   LOCAL:   [local-06] var r
   LOCAL:   [local-07] var token

    0000: [0] 33 12 a8 83 02 90 d9 05 .... debug 

    # ejs.es:16596                          if (urimaker)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b c4 d2 05 c4 08 .......... getObjName <urimaker> <public> 
    0015: [1] 13 15 ...................... branchFalse8 <addr: 38> 
    0017: [0] 33 12 aa 83 02 c4 d9 05 .... debug 

    # ejs.es:16597                              return urimaker(request, parts)

    0025: [0] 5b ......................... getLocalSlot0 
    0026: [1] 5c ......................... getLocalSlot1 
    0027: [2] 1f c4 d2 05 c4 08 04 ....... callScopedName <urimaker> <public> <argc: 2> 
    0034: [0] 93 ......................... pushResult 
    0035: [1] bf ......................... returnValue 
    0036: [0] 3e 00 ...................... goto8 <addr: 38> 
    0038: [0] 33 12 ac 83 02 a4 da 05 .... debug 

    # ejs.es:16598                          if (request)

    0046: [0] 5b ......................... getLocalSlot0 
    0047: [1] 13 20 ...................... branchFalse8 <addr: 81> 
    0049: [0] 33 12 ae 83 02 d6 da 05 .... debug 

    # ejs.es:16599                              parts = blend(request.absHome.components(), parts)

    0057: [0] 5b ......................... getLocalSlot0 
    0058: [1] 7b b2 85 04 c4 08 .......... getObjName <absHome> <public> 
    0064: [1] 1e f6 bf 04 c4 08 00 ....... callObjName <components> <public> <argc: 0> 
    0071: [0] 93 ......................... pushResult 
    0072: [1] 5c ......................... getLocalSlot1 
    0073: [2] 17 9c 01 04 ................ callGlobalSlot <slot: 78> <argc: 2> 
    0077: [0] 93 ......................... pushResult 
    0078: [1] 95 ......................... putLocalSlot1 
    0079: [0] 3e 11 ...................... goto8 <addr: 98> 
    0081: [0] 33 12 b0 83 02 dc db 05 .... debug 

    # ejs.es:16600                          else parts = parts.clone()

    0089: [0] 5c ......................... getLocalSlot1 
    0090: [1] 1e fe 35 c4 08 00 .......... callObjName <clone> <public> <argc: 0> 
    0096: [0] 93 ......................... pushResult 
    0097: [1] 95 ......................... putLocalSlot1 
    0098: [0] 33 12 b2 83 02 aa dc 05 .... debug 

    # ejs.es:16601                          let result = Uri(parts)

    0106: [0] 5c ......................... getLocalSlot1 
    0107: [1] 17 f8 01 02 ................ callGlobalSlot <slot: 124> <argc: 1> 
    0111: [0] 93 ......................... pushResult 
    0112: [1] 96 ......................... putLocalSlot2 
    0113: [0] 33 12 b4 83 02 80 dd 05 .... debug 

    # ejs.es:16602                          let routeName = parts.route

    0121: [0] 5c ......................... getLocalSlot1 
    0122: [1] 7b e2 93 04 ba 11 .......... getObjName <route> <> 
    0128: [1] 97 ......................... putLocalSlot3 
    0129: [0] 33 12 b6 83 02 e4 dd 05 .... debug 

    # ejs.es:16603                          let route = this

    0137: [0] 57 ......................... loadThis 
    0138: [1] 98 ......................... putLocalSlot4 
    0139: [0] 33 12 b8 83 02 9e de 05 .... debug 

    # ejs.es:16604                          if (routeName != this.name) {

    0147: [0] 5e ......................... getLocalSlot3 
    0148: [1] 57 ......................... loadThis 
    0149: [2] 7b 9a 13 c4 08 ............. getObjName <name> <public> 
    0154: [2] 2c ......................... compareNe 
    0155: [1] 13 50 ...................... branchFalse8 <addr: 237> 
    0157: [0] 33 12 ba 83 02 f2 de 05 .... debug 

    # ejs.es:16605                              for each (r in router.routes) {

    0165: [0] 57 ......................... loadThis 
    0166: [1] 7b 88 d5 05 24 ............. getObjName <router> <internal-ed363076473b51ca685af450cc662b39-0> 
    0171: [1] 7b ee f4 04 24 ............. getObjName <routes> <internal-ed363076473b51ca685af450cc662b39-0> 
    0176: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0182: [0] 93 ......................... pushResult 
    0183: [1] 39 ......................... dup 
    0184: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0187: [1] 93 ......................... pushResult 
    0188: [2] 9a ......................... putLocalSlot6 
    0189: [1] 33 12 bc 83 02 d2 df 05 .... debug 

    # ejs.es:16606                                  if (r.name == routeName) {

    0197: [1] 61 ......................... getLocalSlot6 
    0198: [2] 7b 9a 13 00 ................ getObjName <name> <> 
    0202: [2] 5e ......................... getLocalSlot3 
    0203: [3] 25 ......................... compareEq 
    0204: [2] 13 1a ...................... branchFalse8 <addr: 232> 
    0206: [1] 33 12 be 83 02 b0 e0 05 .... debug 

    # ejs.es:16607                                      route = r

    0214: [1] 61 ......................... getLocalSlot6 
    0215: [2] 98 ......................... putLocalSlot4 
    0216: [1] 33 12 c0 83 02 f4 e0 05 .... debug 

    # ejs.es:16608                                      break

    0224: [1] 90 ......................... pop 
    0225: [0] 3d 0a f7 f7 f7 ............. goto <addr: 235> 
    0230: [0] 3e 00 ...................... goto8 <addr: 232> 
    0232: [0] 3e cd ...................... goto8 <addr: 183> 
    0234: [0] 90 ......................... pop 
    0235: [-1] 3e 00 ...................... goto8 <addr: 237> 
    0237: [-1] 33 12 c6 83 02 b2 1a ....... debug 

    # ejs.es:16611                          }

    0244: [-1] 33 12 c8 83 02 b0 e1 05 .... debug 

    # ejs.es:16612                          let path = ""

    0252: [-1] 56 ba 11 ................... loadString <> 
    0255: [0] 99 ......................... putLocalSlot5 
    0256: [-1] 33 12 ca 83 02 e4 e1 05 .... debug 

    # ejs.es:16613                          for each (token in route.tokens) {

    0264: [-1] 5f ......................... getLocalSlot4 
    0265: [0] 7b 88 a4 05 00 ............. getObjName <tokens> <> 
    0270: [0] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0276: [-1] 93 ......................... pushResult 
    0277: [0] 39 ......................... dup 
    0278: [1] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0281: [0] 93 ......................... pushResult 
    0282: [1] 9b ......................... putLocalSlot7 
    0283: [0] 33 12 cc 83 02 ce e2 05 .... debug 

    # ejs.es:16614                              if (!parts[token]) {

    0291: [0] 5c ......................... getLocalSlot1 
    0292: [1] 56 ba 11 ................... loadString <> 
    0295: [2] 62 ......................... getLocalSlot7 
    0296: [3] 7c ......................... getObjNameExpr 
    0297: [1] 86 ......................... logicalNot 
    0298: [1] 13 11 ...................... branchFalse8 <addr: 317> 
    0300: [0] 33 12 ce 83 02 98 e3 05 .... debug 

    # ejs.es:16615                                  throw "Missing URI token " + token

    0308: [0] 56 86 e4 05 ................ loadString <Missing URI token > 
    0312: [1] 62 ......................... getLocalSlot7 
    0313: [2] 00 ......................... add 
    0314: [1] c6 ......................... throw 
    0315: [1] 3e 00 ...................... goto8 <addr: 317> 
    0317: [1] 33 12 d0 83 02 86 35 ....... debug 

    # ejs.es:16616                              }

    0324: [1] 33 12 d2 83 02 ac e4 05 .... debug 

    # ejs.es:16617                              path += "/" + parts[token]

    0332: [1] 60 ......................... getLocalSlot5 
    0333: [2] 56 d8 6f ................... loadString </> 
    0336: [3] 5c ......................... getLocalSlot1 
    0337: [4] 56 ba 11 ................... loadString <> 
    0340: [5] 62 ......................... getLocalSlot7 
    0341: [6] 7c ......................... getObjNameExpr 
    0342: [4] 00 ......................... add 
    0343: [3] 00 ......................... add 
    0344: [2] 99 ......................... putLocalSlot5 
    0345: [1] 3e ba ...................... goto8 <addr: 277> 
    0347: [1] 90 ......................... pop 
    0348: [0] 33 12 d4 83 02 b2 1a ....... debug 

    # ejs.es:16618                          }

    0355: [0] 33 12 d6 83 02 82 e5 05 .... debug 

    # ejs.es:16619                          result.path = path

    0363: [0] 60 ......................... getLocalSlot5 
    0364: [1] 5d ......................... getLocalSlot2 
    0365: [2] b3 ca 5e 00 ................ putObjName <path> <> 
    0369: [0] 33 12 d8 83 02 c0 e5 05 .... debug 

    # ejs.es:16620                          return result

    0377: [0] 5d ......................... getLocalSlot2 
    0378: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    184     187        234          234       StopIteration
1   iteration    278     281        347          347       StopIteration

VARIABLE:   [request-00]  private var request : Request
VARIABLE:   [parts-01]  private var parts : Object
VARIABLE:   [result-02]  private var result
VARIABLE:   [routeName-03]  private var routeName
VARIABLE:   [route-04]  private var route
VARIABLE:   [path-05]  private var path
VARIABLE:   [r-06]  -hoisted-6 var r
VARIABLE:   [token-07]  -hoisted-7 var token
VARIABLE:   [dir-00]  public var dir : Path
VARIABLE:   [match-01]  public var match : Object
VARIABLE:   [method-02]  public var method : String
VARIABLE:   [name-03]  public var name : String
VARIABLE:   [params-04]  public var params : Object
VARIABLE:   [rewrite-05]  public var rewrite : Function
VARIABLE:   [subroute-06]  public var subroute : Route
VARIABLE:   [threaded-07]  public var threaded : Boolean
VARIABLE:   [type-08]  public var type : String
VARIABLE:   [urimaker-09]  public var urimaker : Function
VARIABLE:   [matcher-10]  internal-ed363076473b51ca685af450cc662b39-0 var matcher : RegExp
VARIABLE:   [splitter-11]  internal-ed363076473b51ca685af450cc662b39-0 var splitter : String
VARIABLE:   [tokens-12]  internal-ed363076473b51ca685af450cc662b39-0 var tokens : Array
VARIABLE:   [router-13]  internal-ed363076473b51ca685af450cc662b39-0 var router : Router
VARIABLE:   [session-173]  ejs.web var session : Object

CLASS:      class Session extends Object
            #  Class Details: 30 class traits, 0 instance traits, requested slot 174

FUNCTION:   [Session-26]  internal-ed363076473b51ca685af450cc662b39-0 native const static function addListener(name, listener: Function) : Void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Session-27]  internal-ed363076473b51ca685af450cc662b39-0 native const static get function count() : Number


    

FUNCTION:   [Session-28]  internal-ed363076473b51ca685af450cc662b39-0 native const static function removeListener(name, listener: Function) : Void

     ARG:   [arg-00]   private name
     ARG:   [arg-01]   private listener : Function

    
VARIABLE:   [name-00]  private var name
VARIABLE:   [listener-01]  private var listener : Function

FUNCTION:   [Session-29]  internal-ed363076473b51ca685af450cc662b39-0 native const function setSessionTimeout(timeout: Number) : Object

     ARG:   [arg-00]   private timeout : Number

    
VARIABLE:   [timeout-00]  private var timeout : Number

CLASS:      class UploadFile extends Object
            #  Class Details: 26 class traits, 5 instance traits, requested slot 175
VARIABLE:   [clientFilename-00]  public native var clientFilename : String
VARIABLE:   [contentType-01]  public native var contentType : String
VARIABLE:   [filename-02]  public native var filename : String
VARIABLE:   [name-03]  public var name : String
VARIABLE:   [size-04]  public native var size : Number

FUNCTION:   [parseCookies-176]  ejs.web function parseCookies(cookieHeader: String) : Object

     ARG:   [arg-00]   private cookieHeader : String
   LOCAL:   [local-01] var cookies
   LOCAL:   [local-02] var c

    0000: [0] 33 12 8a 87 02 be ef 05 .... debug 

    # ejs.es:16837                      let cookies = {}

    0008: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0012: [1] 95 ......................... putLocalSlot1 
    0013: [0] 33 12 94 87 02 f0 ef 05 .... debug 

    # ejs.es:16842                      for each (c in cookieHeader.split(";")) {

    0021: [0] 5b ......................... getLocalSlot0 
    0022: [1] 56 d4 f0 05 ................ loadString <;> 
    0026: [2] 1e d4 c4 05 c4 08 02 ....... callObjName <split> <public> <argc: 1> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] 39 ......................... dup 
    0042: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0045: [1] 93 ......................... pushResult 
    0046: [2] 96 ......................... putLocalSlot2 
    0047: [1] 33 12 96 87 02 d8 f0 05 .... debug 

    # ejs.es:16843                          parts = c.split("=")

    0055: [1] 5d ......................... getLocalSlot2 
    0056: [2] 56 ac cc 04 ................ loadString <=> 
    0060: [3] 1e d4 c4 05 00 02 .......... callObjName <split> <> <argc: 1> 
    0066: [1] 93 ......................... pushResult 
    0067: [2] b4 98 86 01 ba 11 .......... putScopedName <parts> <> 
    0073: [1] 33 12 98 87 02 9a f1 05 .... debug 

    # ejs.es:16844                          key = parts[0].toLower().trim("$")

    0081: [1] 79 98 86 01 ba 11 .......... getScopedName <parts> <> 
    0087: [2] 56 ba 11 ................... loadString <> 
    0090: [3] 44 ......................... load0 
    0091: [4] 7c ......................... getObjNameExpr 
    0092: [2] 1e f8 f1 05 00 00 .......... callObjName <toLower> <> <argc: 0> 
    0098: [1] 93 ......................... pushResult 
    0099: [2] 56 a4 ae 05 ................ loadString <$> 
    0103: [3] 1e ba 13 00 02 ............. callObjName <trim> <> <argc: 1> 
    0108: [1] 93 ......................... pushResult 
    0109: [2] b4 cc a5 04 ba 11 .......... putScopedName <key> <> 
    0115: [1] 33 12 9a 87 02 88 f2 05 .... debug 

    # ejs.es:16845                          if (key == "version") {

    0123: [1] 79 cc a5 04 ba 11 .......... getScopedName <key> <> 
    0129: [2] 56 f8 eb 04 ................ loadString <version> 
    0133: [3] 25 ......................... compareEq 
    0134: [2] 13 0f ...................... branchFalse8 <addr: 151> 
    0136: [1] 33 12 9c 87 02 d0 f2 05 .... debug 

    # ejs.es:16846                              continue

    0144: [1] 3d d9 01 f7 f7 ............. goto <addr: 41> 
    0149: [1] 3e 00 ...................... goto8 <addr: 151> 
    0151: [1] 33 12 a0 87 02 82 f3 05 .... debug 

    # ejs.es:16848                          if (key == "name") {

    0159: [1] 79 cc a5 04 ba 11 .......... getScopedName <key> <> 
    0165: [2] 56 9a 13 ................... loadString <name> 
    0168: [3] 25 ......................... compareEq 
    0169: [2] 13 1f ...................... branchFalse8 <addr: 202> 
    0171: [1] 33 12 a2 87 02 c4 f3 05 .... debug 

    # ejs.es:16849                              cookies[name] = cookie = {}

    0179: [1] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0183: [2] 39 ......................... dup 
    0184: [3] b4 9c f4 05 ba 11 .......... putScopedName <cookie> <> 
    0190: [2] 5c ......................... getLocalSlot1 
    0191: [3] 56 ba 11 ................... loadString <> 
    0194: [4] 79 9a 13 ba 11 ............. getScopedName <name> <> 
    0199: [5] b2 ......................... putObjNameExpr 
    0200: [1] 3e 00 ...................... goto8 <addr: 202> 
    0202: [1] 33 12 a4 87 02 b2 1a ....... debug 

    # ejs.es:16850                          }

    0209: [1] 33 12 a6 87 02 aa f4 05 .... debug 

    # ejs.es:16851                          cookie[key] = parts[1]

    0217: [1] 79 98 86 01 ba 11 .......... getScopedName <parts> <> 
    0223: [2] 56 ba 11 ................... loadString <> 
    0226: [3] 45 ......................... load1 
    0227: [4] 7c ......................... getObjNameExpr 
    0228: [2] 79 9c f4 05 ba 11 .......... getScopedName <cookie> <> 
    0234: [3] 56 ba 11 ................... loadString <> 
    0237: [4] 79 cc a5 04 ba 11 .......... getScopedName <key> <> 
    0243: [5] b2 ......................... putObjNameExpr 
    0244: [1] 3d a1 03 f7 f7 ............. goto <addr: 41> 
    0249: [1] 90 ......................... pop 
    0250: [0] 33 12 aa 87 02 f0 f4 05 .... debug 

    # ejs.es:16853                      return cookies

    0258: [0] 5c ......................... getLocalSlot1 
    0259: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     42      45        249          249       StopIteration

VARIABLE:   [cookieHeader-00]  private var cookieHeader : String
VARIABLE:   [cookies-01]  private var cookies
VARIABLE:   [c-02]  -hoisted-2 static var c

FUNCTION:   [escapeHtml-177]  ejs.web function escapeHtml(s: String) : String

     ARG:   [arg-00]   private s : String

    0000: [0] 33 12 fe 87 02 a8 f6 05 .... debug 

    # ejs.es:16895                      s.replace(/&/g,'&amp;').replace(/\>/g,'&gt;').replace(/</g,'&lt;').replace(/"/g,'&quot;')

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 55 ec f7 05 ................ loadRegexp </&/g> 
    0013: [2] 56 f6 f7 05 ................ loadString <&amp;> 
    0017: [3] 1e e0 6f c4 08 04 .......... callObjName <replace> <public> <argc: 2> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] 55 82 f8 05 ................ loadRegexp </\>/g> 
    0028: [2] 56 8e f8 05 ................ loadString <&gt;> 
    0032: [3] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0037: [0] 93 ......................... pushResult 
    0038: [1] 55 98 f8 05 ................ loadRegexp </</g> 
    0042: [2] 56 a2 f8 05 ................ loadString <&lt;> 
    0046: [3] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0051: [0] 93 ......................... pushResult 
    0052: [1] 55 ac f8 05 ................ loadRegexp </"/g> 
    0056: [2] 56 b6 f8 05 ................ loadString <&quot;> 
    0060: [3] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0065: [0] 93 ......................... pushResult 
    0066: [1] bf ......................... returnValue 
    
VARIABLE:   [s-00]  private var s : String

FUNCTION:   [html-178]  ejs.web function html(args: Array) : String

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var s : String

    0000: [0] 33 12 92 88 02 a8 f9 05 .... debug 

    # ejs.es:16905                      result = ""

    0008: [0] 56 ba 11 ................... loadString <> 
    0011: [1] b4 f2 dc 05 ba 11 .......... putScopedName <result> <> 
    0017: [0] 33 12 94 88 02 d0 f9 05 .... debug 

    # ejs.es:16906                      for each (let s: String in args) {

    0025: [0] 5b ......................... getLocalSlot0 
    0026: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0032: [0] 93 ......................... pushResult 
    0033: [1] 39 ......................... dup 
    0034: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0037: [1] 93 ......................... pushResult 
    0038: [2] 95 ......................... putLocalSlot1 
    0039: [1] 33 12 96 88 02 a6 fa 05 .... debug 

    # ejs.es:16907                          result += escapeHtml(s)

    0047: [1] 79 f2 dc 05 ba 11 .......... getScopedName <result> <> 
    0053: [2] 5c ......................... getLocalSlot1 
    0054: [3] 17 e2 02 02 ................ callGlobalSlot <slot: 177> <argc: 1> 
    0058: [2] 93 ......................... pushResult 
    0059: [3] 00 ......................... add 
    0060: [2] b4 f2 dc 05 ba 11 .......... putScopedName <result> <> 
    0066: [1] 3e dd ...................... goto8 <addr: 33> 
    0068: [1] 90 ......................... pop 
    0069: [0] 33 12 9a 88 02 ee fa 05 .... debug 

    # ejs.es:16909                      return result

    0077: [0] 79 f2 dc 05 ba 11 .......... getScopedName <result> <> 
    0083: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     34      37         68           68       StopIteration

VARIABLE:   [args-00]  private var args : Array
VARIABLE:   [s-01]  -hoisted-1 static var s : String

FUNCTION:   [unescapeHtml-179]  ejs.web function unescapeHtml(s: String) : String

     ARG:   [arg-00]   private s : String

    0000: [0] 33 12 b2 88 02 fe fb 05 .... debug 

    # ejs.es:16921                      s.replace(/&amp/g,'&;').replace(/&gt/g,'>').replace(/&lt/g,'<').replace(/&quot/g,'"')

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 55 ba fd 05 ................ loadRegexp </&amp/g> 
    0013: [2] 56 ca fd 05 ................ loadString <&;> 
    0017: [3] 1e e0 6f c4 08 04 .......... callObjName <replace> <public> <argc: 2> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] 55 d0 fd 05 ................ loadRegexp </&gt/g> 
    0028: [2] 56 8c d4 01 ................ loadString <>> 
    0032: [3] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0037: [0] 93 ......................... pushResult 
    0038: [1] 55 de fd 05 ................ loadRegexp </&lt/g> 
    0042: [2] 56 ec fd 05 ................ loadString <<> 
    0046: [3] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0051: [0] 93 ......................... pushResult 
    0052: [1] 55 f0 fd 05 ................ loadRegexp </&quot/g> 
    0056: [2] 56 de 89 01 ................ loadString <"> 
    0060: [3] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0065: [0] 93 ......................... pushResult 
    0066: [1] bf ......................... returnValue 
    
VARIABLE:   [s-00]  private var s : String

CLASS:      dynamic class View extends Object
            #  Class Details: 73 class traits, 4 instance traits, requested slot 180

FUNCTION:   [View-26]  -constructor- const function View(request: Object) : void

     ARG:   [arg-00]   private request : Object

    0000: [0] 44 ......................... load0 
    0001: [1] 57 ......................... loadThis 
    0002: [2] b3 9e 8d 01 86 80 06 ....... putObjName <nextId> <[ejs.web::View,private]> 
    0009: [0] 33 12 b8 89 02 c4 8f 01 .... debug 

    # ejs.es:16988                          this.request = request

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 57 ......................... loadThis 
    0019: [2] b3 88 07 7c ................ putObjName <request> <ejs.web> 
    0023: [0] 33 12 ba 89 02 ec 82 06 .... debug 

    # ejs.es:16989                          this.config = request.config

    0031: [0] 5b ......................... getLocalSlot0 
    0032: [1] 7b a2 14 ba 11 ............. getObjName <config> <> 
    0037: [1] 57 ......................... loadThis 
    0038: [2] b3 a2 14 86 80 06 .......... putObjName <config> <[ejs.web::View,private]> 
    0044: [0] 33 12 bc 89 02 be 83 06 .... debug 

    # ejs.es:16990                          view = this

    0052: [0] 57 ......................... loadThis 
    0053: [1] b4 d6 07 ba 11 ............. putScopedName <view> <> 
    0058: [0] be ......................... return 
    0059: [0] 33 12 be 89 02 b0 15 ....... debug 

    # ejs.es:16991                      }
    
VARIABLE:   [request-00]  private var request : Object

FUNCTION:   [View-27]  -initializer- static function View-initializer() : Void


    0000: [0] 33 12 f8 88 02 be 02 ....... debug 

    # ejs.es:16956                      use default namespace module

    0007: [0] 01 7c ...................... addNamespace <ejs.web> 
    0009: [0] 33 12 82 89 02 ce 06 ....... debug 

    # ejs.es:16961                      var request: Request

    0016: [0] 33 12 8c 89 02 96 ff 05 .... debug 

    # ejs.es:16966                      private var currentRecord: Object

    0024: [0] 33 12 96 89 02 b6 80 06 .... debug 

    # ejs.es:16971                      private var config: Object

    0032: [0] 33 12 a0 89 02 d0 8c 01 .... debug 

    # ejs.es:16976                      private var nextId: Number = 0

    0040: [0] 33 12 a6 89 02 fc 80 06 .... debug 

    # ejs.es:16979                      function getNextId(): Number {

    0048: [0] 33 12 b6 89 02 9a 82 06 .... debug 

    # ejs.es:16987                      function View(request: Object) {

    0056: [0] 33 12 d0 89 02 ee 83 06 .... debug 

    # ejs.es:17000                      public function makeUri(parts: Object): Uri

    0064: [0] 33 12 e0 89 02 d6 84 06 .... debug 

    # ejs.es:17008                      public function render(renderer: Function): Void {

    0072: [0] 33 12 80 8a 02 d2 87 06 .... debug 

    # ejs.es:17024                      public function setHeader(key: String, value: String, overwrite: Boolean = true): Void

    0080: [0] 33 12 94 8a 02 fa 89 06 .... debug 

    # ejs.es:17034                      public function setHeaders(headers: Object, overwrite: Boolean = true): Void

    0088: [0] 33 12 a2 8a 02 88 8c 06 .... debug 

    # ejs.es:17041                      public function setStatus(status: Number): Void

    0096: [0] 33 12 b2 8a 02 c4 8d 06 .... debug 

    # ejs.es:17049                      public function write(...data): Number

    0104: [0] 33 12 ca 8a 02 e0 90 01 .... debug 

    # ejs.es:17061                      function aform(record: Object, options: Object = {}): Void {

    0112: [0] 33 12 f6 8a 02 c4 95 06 .... debug 

    # ejs.es:17083                      function alink(text: String, options: Object = {}): Void {

    0120: [0] 33 12 98 8b 02 c0 9a 06 .... debug 

    # ejs.es:17100                      function button(value: String, buttonName: String? = null, options: Object = {}): Void {

    0128: [0] 33 12 b6 8b 02 aa 9f 06 .... debug 

    # ejs.es:17115                      function buttonLink(text: String, options: Object = {}): Void {

    0136: [0] 33 12 e2 8b 02 8a a3 06 .... debug 

    # ejs.es:17137                      function chart(initialData: Array, options: Object = {}): Void {

    0144: [0] 33 12 fc 8b 02 f6 a5 06 .... debug 

    # ejs.es:17150                      function checkbox(field: String, choice: String = "true", options: Object = {}): Void {

    0152: [0] 33 12 90 8c 02 c6 ab 06 .... debug 

    # ejs.es:17160                      function endform(): Void {

    0160: [0] 33 12 ae 8c 02 8c ae 06 .... debug 

    # ejs.es:17175                      function form(record: Object, options: Object = {}): Void {

    0168: [0] 33 12 d6 8c 02 c4 b1 06 .... debug 

    # ejs.es:17195                      function image(src: String, options: Object = {}): Void {

    0176: [0] 33 12 f2 8c 02 d8 b4 06 .... debug 

    # ejs.es:17209                      function imageLink(image: String, options: Object = {}): Void {

    0184: [0] 33 12 90 8d 02 b2 b8 06 .... debug 

    # ejs.es:17224                      function input(field: String, options: Object = {}): Void {

    0192: [0] 33 12 e8 8d 02 ae c9 06 .... debug 

    # ejs.es:17268                      function label(text: String, options: Object = {}): Void {

    0200: [0] 33 12 88 8e 02 e6 cc 06 .... debug 

    # ejs.es:17284                      function link(text: String, options: Object = {}): Void {

    0208: [0] 33 12 a0 8e 02 96 d0 06 .... debug 

    # ejs.es:17296                      function extlink(text: String, options: Object = {}): Void {

    0216: [0] 33 12 d0 8e 02 f4 d2 06 .... debug 

    # ejs.es:17320                      function list(field: String, choices: Object? = null, options: Object = {}): Void {

    0224: [0] 33 12 fc 8e 02 b0 dd 06 .... debug 

    # ejs.es:17342                      function mail(name: String, address: String, options: Object = {}): Void  {

    0232: [0] 33 12 98 8f 02 b2 e0 06 .... debug 

    # ejs.es:17356                      function progress(initialData: Object, options: Object = {}): Void {

    0240: [0] 33 12 c2 8f 02 b2 e3 06 .... debug 

    # ejs.es:17377                      function radio(field: String, choices: Object, options: Object = {}): Void {

    0248: [0] 33 12 da 8f 02 e2 e6 06 .... debug 

    # ejs.es:17389                      function script(uri: Object, options: Object = {}): Void {

    0256: [0] 33 12 82 90 02 fc eb 06 .... debug 

    # ejs.es:17409                      function status(initialData: Object, options: Object = {}): Void {

    0264: [0] 33 12 96 90 02 f0 ee 06 .... debug 

    # ejs.es:17419                      function stylesheet(uri: Object, options: Object = {}): Void {

    0272: [0] 33 12 b6 91 02 9a f3 06 .... debug 

    # ejs.es:17499                      function table(data, options: Object = {}): Void {

    0280: [0] 33 12 d6 91 02 d6 f7 06 .... debug 

    # ejs.es:17515                      function tabs(initialData: Array, options: Object = {}): Void {

    0288: [0] 33 12 fa 91 02 bc fa 06 .... debug 

    # ejs.es:17533                      function text(field: String, options: Object = {}): Void {

    0296: [0] 33 12 aa 92 02 b2 fd 06 .... debug 

    # ejs.es:17557                      function textarea(field: String, options: Object = {}): Void {

    0304: [0] 33 12 cc 92 02 c0 80 07 .... debug 

    # ejs.es:17574                      function tree(initialData: Object, options: Object = {}): Void {

    0312: [0] 33 12 f2 92 02 a8 83 07 .... debug 

    # ejs.es:17593                      function flash(kinds: Object? = null, options: Object = {}): Void {

    0320: [0] 33 12 ae 93 02 fe 90 07 .... debug 

    # ejs.es:17623                      private function emitFormErrors(record): Void {

    0328: [0] 33 12 dc 93 02 f2 a0 07 .... debug 

    # ejs.es:17646                      private function getConnector(kind: String, options: Object) {

    0336: [0] 33 12 fa 93 02 9a a9 07 .... debug 

    # ejs.es:17661                      private function setOptions(field: String, options: Object): Object {

    0344: [0] 33 12 a2 94 02 e2 b2 07 .... debug 

    # ejs.es:17681                      function getValue(record: Object, field: String, options: Object): String {

    0352: [0] 33 12 82 95 02 e2 c7 07 .... debug 

    # ejs.es:17729                      function date(fmt: String): String {

    0360: [0] 33 12 9a 95 02 ba ca 07 .... debug 

    # ejs.es:17741                      function currency(fmt: String): String {

    0368: [0] 33 12 b2 95 02 ae cc 07 .... debug 

    # ejs.es:17753                      function number(fmt: String): String {

    0376: [0] 33 12 c4 95 02 bc cd 07 .... debug 

    # ejs.es:17762                      private static const htmlOptions: Object = { 

    0384: [0] 33 12 c6 95 02 c0 ce 07 .... debug 

    # ejs.es:17763                          background: "", color: "", id: "", height: "", method: "", size: "", style: "class", visible: "", width: "",

    0392: [0] 56 00 ...................... loadString <> 
    0394: [1] 56 b2 d0 07 ................ loadString <background> 
    0398: [2] 56 ba 11 ................... loadString <> 
    0401: [3] 56 00 ...................... loadString <> 
    0403: [4] 56 c8 d0 07 ................ loadString <color> 
    0407: [5] 56 ba 11 ................... loadString <> 
    0410: [6] 56 00 ...................... loadString <> 
    0412: [7] 56 ae 92 01 ................ loadString <id> 
    0416: [8] 56 ba 11 ................... loadString <> 
    0419: [9] 56 00 ...................... loadString <> 
    0421: [10] 56 d4 d0 07 ................ loadString <height> 
    0425: [11] 56 ba 11 ................... loadString <> 
    0428: [12] 56 00 ...................... loadString <> 
    0430: [13] 56 ae 99 01 ................ loadString <method> 
    0434: [14] 56 ba 11 ................... loadString <> 
    0437: [15] 56 00 ...................... loadString <> 
    0439: [16] 56 8a ee 05 ................ loadString <size> 
    0443: [17] 56 ba 11 ................... loadString <> 
    0446: [18] 56 00 ...................... loadString <> 
    0448: [19] 56 98 fa 02 ................ loadString <style> 
    0452: [20] 56 b6 21 ................... loadString <class> 
    0455: [21] 56 00 ...................... loadString <> 
    0457: [22] 56 e2 d0 07 ................ loadString <visible> 
    0461: [23] 56 ba 11 ................... loadString <> 
    0464: [24] 56 00 ...................... loadString <> 
    0466: [25] 56 a0 d9 02 ................ loadString <width> 
    0470: [26] 56 ba 11 ................... loadString <> 
    0473: [27] 8a e4 06 12 00 00 00 00 00 00 00 00 00  newObject <type: 0x1b2,  ejs::Object> <argc: 9> <att: 9 9 9 9 9 9 9 9 9 >
    0486: [1] 33 12 c4 95 02 bc cd 07 .... debug 

    # ejs.es:17762                      private static const htmlOptions: Object = { 

    0494: [1] 57 ......................... loadThis 
    0495: [2] b3 a8 ce 07 86 80 06 ....... putObjName <htmlOptions> <[ejs.web::View,private]> 
    0502: [0] 33 12 f8 95 02 f2 d0 07 .... debug 

    # ejs.es:17788                      function getOptions(options: Object): String {

    0510: [0] 33 12 a4 96 02 d0 d8 07 .... debug 

    # ejs.es:17810                      private function pivot(grid: Array, options: Object = {}) {

    0518: [0] 33 12 d2 96 02 d0 e1 07 .... debug 

    # ejs.es:17833                      private function filter(data: Array): Array {

    0526: [0] be ......................... return 
    

FUNCTION:   [View-28]  ejs.web const function getNextId() : Number


    0000: [0] 33 12 a8 89 02 ca 81 06 .... debug 

    # ejs.es:16980                          return "id_" + nextId++

    0008: [0] 56 92 82 06 ................ loadString <id_> 
    0012: [1] 57 ......................... loadThis 
    0013: [2] 7b 9e 8d 01 86 80 06 ....... getObjName <nextId> <[ejs.web::View,private]> 
    0020: [2] 39 ......................... dup 
    0021: [3] 3f 01 ...................... inc <1> 
    0023: [3] 57 ......................... loadThis 
    0024: [4] b3 9e 8d 01 86 80 06 ....... putObjName <nextId> <[ejs.web::View,private]> 
    0031: [2] 00 ......................... add 
    0032: [1] bf ......................... returnValue 
    

FUNCTION:   [View-29]  public const function makeUri(parts: Object) : Uri

     ARG:   [arg-00]   private parts : Object

    0000: [0] 33 12 d2 89 02 c2 85 01 .... debug 

    # ejs.es:17001                          request.makeUri(parts)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e 88 86 01 c4 08 02 ....... callObjName <makeUri> <public> <argc: 1> 
    0021: [0] 93 ......................... pushResult 
    0022: [1] bf ......................... returnValue 
    
VARIABLE:   [parts-00]  private var parts : Object

FUNCTION:   [View-30]  public const function render(renderer: Function) : Void

     ARG:   [arg-00]   private renderer : Function

    0000: [0] 33 12 e2 89 02 cc 85 06 .... debug 

    # ejs.es:17009                          if (renderer) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 13 2a ...................... branchFalse8 <addr: 53> 
    0011: [0] 33 12 e4 89 02 84 86 06 .... debug 

    # ejs.es:17010                              renderer.setScope(View)

    0019: [0] 5b ......................... getLocalSlot0 
    0020: [1] 7e e8 02 ................... getGlobalSlot <slot: 180> 
    0023: [2] 1e d4 86 06 c4 08 02 ....... callObjName <setScope> <public> <argc: 1> 
    0030: [0] 33 12 e6 89 02 e6 86 06 .... debug 

    # ejs.es:17011                              renderer.call(this, request)

    0038: [0] 5b ......................... getLocalSlot0 
    0039: [1] 57 ......................... loadThis 
    0040: [2] 57 ......................... loadThis 
    0041: [3] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0045: [3] 1e 92 53 c4 08 04 .......... callObjName <call> <public> <argc: 2> 
    0051: [0] 3e 00 ...................... goto8 <addr: 53> 
    0053: [0] 54 ......................... loadNull 
    0054: [1] bf ......................... returnValue 
    0055: [0] 33 12 ea 89 02 b0 15 ....... debug 

    # ejs.es:17013                      }
    
VARIABLE:   [renderer-00]  private var renderer : Function

FUNCTION:   [View-31]  public const function setHeader(key: String, value: String, overwrite: Boolean) : Void

     ARG:   [arg-00]   private key : String
     ARG:   [arg-01]   private value : String
     ARG:   [arg-02]   private overwrite : Boolean

    0000: [0] 41 02 02 06 ................ initDefaultArgs8 <2> <4> <8> 
    0004: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0007: [1] 96 ......................... putLocalSlot2 
    0008: [0] 33 12 82 8a 02 90 89 06 .... debug 

    # ejs.es:17025                          request.setHeader(key, value, overwrite)

    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0021: [1] 5b ......................... getLocalSlot0 
    0022: [2] 5c ......................... getLocalSlot1 
    0023: [3] 5d ......................... getLocalSlot2 
    0024: [4] 1e 96 9d 04 c4 08 06 ....... callObjName <setHeader> <public> <argc: 3> 
    0031: [0] 93 ......................... pushResult 
    0032: [1] bf ......................... returnValue 
    
VARIABLE:   [key-00]  private var key : String
VARIABLE:   [value-01]  private var value : String
VARIABLE:   [overwrite-02]  private var overwrite : Boolean

FUNCTION:   [View-32]  public const function setHeaders(headers: Object, overwrite: Boolean) : Void

     ARG:   [arg-00]   private headers : Object
     ARG:   [arg-01]   private overwrite : Boolean

    0000: [0] 41 02 02 06 ................ initDefaultArgs8 <2> <4> <8> 
    0004: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0007: [1] 95 ......................... putLocalSlot1 
    0008: [0] 33 12 96 8a 02 a4 8b 06 .... debug 

    # ejs.es:17035                          request.setHeader(headers, overwrite)

    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0021: [1] 5b ......................... getLocalSlot0 
    0022: [2] 5c ......................... getLocalSlot1 
    0023: [3] 1e 96 9d 04 c4 08 04 ....... callObjName <setHeader> <public> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] bf ......................... returnValue 
    
VARIABLE:   [headers-00]  private var headers : Object
VARIABLE:   [overwrite-01]  private var overwrite : Boolean

FUNCTION:   [View-33]  public const function setStatus(status: Number) : Void

     ARG:   [arg-00]   private status : Number

    0000: [0] 33 12 a4 8a 02 f8 8c 06 .... debug 

    # ejs.es:17042                          request.setStatus(status)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e e6 d9 04 c4 08 02 ....... callObjName <setStatus> <public> <argc: 1> 
    0021: [0] 93 ......................... pushResult 
    0022: [1] bf ......................... returnValue 
    
VARIABLE:   [status-00]  private var status : Number

FUNCTION:   [View-34]  public const function write(data: Array) : Number

     ARG:   [arg-00]   private data : Array

    0000: [0] 33 12 b4 8a 02 a2 8e 06 .... debug 

    # ejs.es:17050                          request.write(data)

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data : Array

FUNCTION:   [View-35]  ejs.web const function aform(record: Object, options: Object) : Void

     ARG:   [arg-00]   private record : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 cc 8a 02 e2 8e 06 .... debug 

    # ejs.es:17062                          currentRecord = record

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 57 ......................... loadThis 
    0019: [2] b3 ea ff 05 86 80 06 ....... putObjName <currentRecord> <[ejs.web::View,private]> 
    0026: [0] 33 12 ce 8a 02 a8 8f 06 .... debug 

    # ejs.es:17063                          emitFormErrors(record)

    0034: [0] 5b ......................... getLocalSlot0 
    0035: [1] 1f ee 8f 06 86 80 06 02 .... callScopedName <emitFormErrors> <[ejs.web::View,private]> <argc: 1> 
    0043: [0] 33 12 d0 8a 02 8c 90 06 .... debug 

    # ejs.es:17064                          options = setOptions("aform", options)

    0051: [0] 56 de ac 01 ................ loadString <aform> 
    0055: [1] 5c ......................... getLocalSlot1 
    0056: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0064: [0] 93 ......................... pushResult 
    0065: [1] 95 ......................... putLocalSlot1 
    0066: [0] 33 12 d2 8a 02 88 91 06 .... debug 

    # ejs.es:17065                          if (options.method == null) {

    0074: [0] 5c ......................... getLocalSlot1 
    0075: [1] 7b ae 99 01 ba 11 .......... getObjName <method> <> 
    0081: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0083: [2] 25 ......................... compareEq 
    0084: [1] 13 15 ...................... branchFalse8 <addr: 107> 
    0086: [0] 33 12 d4 8a 02 dc 91 06 .... debug 

    # ejs.es:17066                              options.method = "POST"

    0094: [0] 56 9e 86 05 ................ loadString <POST> 
    0098: [1] 5c ......................... getLocalSlot1 
    0099: [2] b3 ae 99 01 ba 11 .......... putObjName <method> <> 
    0105: [0] 3e 00 ...................... goto8 <addr: 107> 
    0107: [0] 33 12 d6 8a 02 b2 1a ....... debug 

    # ejs.es:17067                          }

    0114: [0] 33 12 d8 8a 02 ac 92 06 .... debug 

    # ejs.es:17068                          options.action ||= "update"

    0122: [0] 5c ......................... getLocalSlot1 
    0123: [1] 7b ee 01 ba 11 ............. getObjName <action> <> 
    0128: [1] 39 ......................... dup 
    0129: [2] 14 05 ...................... branchTrue8 <addr: 136> 
    0131: [1] 90 ......................... pop 
    0132: [0] 56 a8 9d 01 ................ loadString <update> 
    0136: [1] 5c ......................... getLocalSlot1 
    0137: [2] b3 ee 01 ba 11 ............. putObjName <action> <> 
    0142: [0] 33 12 da 8a 02 fc 92 06 .... debug 

    # ejs.es:17069                          options.id ||= record.id

    0150: [0] 5c ......................... getLocalSlot1 
    0151: [1] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0157: [1] 39 ......................... dup 
    0158: [2] 14 08 ...................... branchTrue8 <addr: 168> 
    0160: [1] 90 ......................... pop 
    0161: [0] 5b ......................... getLocalSlot0 
    0162: [1] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0168: [1] 5c ......................... getLocalSlot1 
    0169: [2] b3 ae 92 01 ba 11 .......... putObjName <id> <> 
    0175: [0] 33 12 dc 8a 02 c6 93 06 .... debug 

    # ejs.es:17070                          let connector = getConnector("aform", options)

    0183: [0] 56 de ac 01 ................ loadString <aform> 
    0187: [1] 5c ......................... getLocalSlot1 
    0188: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0196: [0] 93 ......................... pushResult 
    0197: [1] 96 ......................... putLocalSlot2 
    0198: [0] 33 12 de 8a 02 ea 94 06 .... debug 

    # ejs.es:17071                          connector.aform(record, options)

    0206: [0] 5d ......................... getLocalSlot2 
    0207: [1] 5b ......................... getLocalSlot0 
    0208: [2] 5c ......................... getLocalSlot1 
    0209: [3] 1e de ac 01 00 04 .......... callObjName <aform> <> <argc: 2> 
    0215: [0] 54 ......................... loadNull 
    0216: [1] bf ......................... returnValue 
    0217: [0] 33 12 e0 8a 02 b0 15 ....... debug 

    # ejs.es:17072                      }
    
VARIABLE:   [record-00]  private var record : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-36]  ejs.web const function alink(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 f8 8a 02 ca 96 06 .... debug 

    # ejs.es:17084                          options = setOptions("alink", options)

    0017: [0] 56 ae ae 01 ................ loadString <alink> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 95 ......................... putLocalSlot1 
    0032: [0] 33 12 fa 8a 02 b0 97 06 .... debug 

    # ejs.es:17085                          options.action ||= text.split(" ")[0].toLower()

    0040: [0] 5c ......................... getLocalSlot1 
    0041: [1] 7b ee 01 ba 11 ............. getObjName <action> <> 
    0046: [1] 39 ......................... dup 
    0047: [2] 14 1a ...................... branchTrue8 <addr: 75> 
    0049: [1] 90 ......................... pop 
    0050: [0] 5b ......................... getLocalSlot0 
    0051: [1] 56 e8 ca 02 ................ loadString < > 
    0055: [2] 1e d4 c4 05 c4 08 02 ....... callObjName <split> <public> <argc: 1> 
    0062: [0] 93 ......................... pushResult 
    0063: [1] 56 ba 11 ................... loadString <> 
    0066: [2] 44 ......................... load0 
    0067: [3] 7c ......................... getObjNameExpr 
    0068: [1] 1e f8 f1 05 00 00 .......... callObjName <toLower> <> <argc: 0> 
    0074: [0] 93 ......................... pushResult 
    0075: [1] 5c ......................... getLocalSlot1 
    0076: [2] b3 ee 01 ba 11 ............. putObjName <action> <> 
    0081: [0] 33 12 fc 8a 02 a8 98 06 .... debug 

    # ejs.es:17086                          options.method ||= "POST"

    0089: [0] 5c ......................... getLocalSlot1 
    0090: [1] 7b ae 99 01 ba 11 .......... getObjName <method> <> 
    0096: [1] 39 ......................... dup 
    0097: [2] 14 05 ...................... branchTrue8 <addr: 104> 
    0099: [1] 90 ......................... pop 
    0100: [0] 56 9e 86 05 ................ loadString <POST> 
    0104: [1] 5c ......................... getLocalSlot1 
    0105: [2] b3 ae 99 01 ba 11 .......... putObjName <method> <> 
    0111: [0] 33 12 fe 8a 02 f4 98 06 .... debug 

    # ejs.es:17087                          let connector = getConnector("alink", options)

    0119: [0] 56 ae ae 01 ................ loadString <alink> 
    0123: [1] 5c ......................... getLocalSlot1 
    0124: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0132: [0] 93 ......................... pushResult 
    0133: [1] 96 ......................... putLocalSlot2 
    0134: [0] 33 12 80 8b 02 ea 99 06 .... debug 

    # ejs.es:17088                          connector.alink(text, options)

    0142: [0] 5d ......................... getLocalSlot2 
    0143: [1] 5b ......................... getLocalSlot0 
    0144: [2] 5c ......................... getLocalSlot1 
    0145: [3] 1e ae ae 01 00 04 .......... callObjName <alink> <> <argc: 2> 
    0151: [0] 54 ......................... loadNull 
    0152: [1] bf ......................... returnValue 
    0153: [0] 33 12 82 8b 02 b0 15 ....... debug 

    # ejs.es:17089                      }
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-37]  ejs.web const function button(value: String, buttonName: String, options: Object) : Void

     ARG:   [arg-00]   private value : String
     ARG:   [arg-01]   private buttonName : String
     ARG:   [arg-02]   private options : Object
   LOCAL:   [local-03] var connector

    0000: [0] 41 03 03 06 0b ............. initDefaultArgs8 <3> <5> <8> <13> 
    0005: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0007: [1] 95 ......................... putLocalSlot1 
    0008: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0012: [1] 96 ......................... putLocalSlot2 
    0013: [0] 33 12 9a 8b 02 82 9c 06 .... debug 

    # ejs.es:17101                          options = setOptions("button", options)

    0021: [0] 56 86 c1 01 ................ loadString <button> 
    0025: [1] 5d ......................... getLocalSlot2 
    0026: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0034: [0] 93 ......................... pushResult 
    0035: [1] 96 ......................... putLocalSlot2 
    0036: [0] 33 12 9c 8b 02 ea 9c 06 .... debug 

    # ejs.es:17102                          buttonName ||= value.toLower()

    0044: [0] 5c ......................... getLocalSlot1 
    0045: [1] 39 ......................... dup 
    0046: [2] 14 0a ...................... branchTrue8 <addr: 58> 
    0048: [1] 90 ......................... pop 
    0049: [0] 5b ......................... getLocalSlot0 
    0050: [1] 1e f8 f1 05 c4 08 00 ....... callObjName <toLower> <public> <argc: 0> 
    0057: [0] 93 ......................... pushResult 
    0058: [1] 95 ......................... putLocalSlot1 
    0059: [0] 33 12 9e 8b 02 c0 9d 06 .... debug 

    # ejs.es:17103                          let connector = getConnector("button", options)

    0067: [0] 56 86 c1 01 ................ loadString <button> 
    0071: [1] 5d ......................... getLocalSlot2 
    0072: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0080: [0] 93 ......................... pushResult 
    0081: [1] 97 ......................... putLocalSlot3 
    0082: [0] 33 12 a0 8b 02 b8 9e 06 .... debug 

    # ejs.es:17104                          connector.button(value, buttonName, options)

    0090: [0] 5e ......................... getLocalSlot3 
    0091: [1] 5b ......................... getLocalSlot0 
    0092: [2] 5c ......................... getLocalSlot1 
    0093: [3] 5d ......................... getLocalSlot2 
    0094: [4] 1e 86 c1 01 00 06 .......... callObjName <button> <> <argc: 3> 
    0100: [0] 54 ......................... loadNull 
    0101: [1] bf ......................... returnValue 
    0102: [0] 33 12 a2 8b 02 b0 15 ....... debug 

    # ejs.es:17105                      }
    
VARIABLE:   [value-00]  private var value : String
VARIABLE:   [buttonName-01]  private var buttonName : String
VARIABLE:   [options-02]  private var options : Object
VARIABLE:   [connector-03]  private var connector

FUNCTION:   [View-38]  ejs.web const function buttonLink(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 b8 8b 02 ba a0 06 .... debug 

    # ejs.es:17116                          options = setOptions("buttonLink", options)

    0017: [0] 56 de c4 01 ................ loadString <buttonLink> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 95 ......................... putLocalSlot1 
    0032: [0] 33 12 ba 8b 02 aa a1 06 .... debug 

    # ejs.es:17117                          let connector = getConnector("buttonLink", options)

    0040: [0] 56 de c4 01 ................ loadString <buttonLink> 
    0044: [1] 5c ......................... getLocalSlot1 
    0045: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0053: [0] 93 ......................... pushResult 
    0054: [1] 96 ......................... putLocalSlot2 
    0055: [0] 33 12 bc 8b 02 aa a2 06 .... debug 

    # ejs.es:17118                          connector.buttonLink(text, options)

    0063: [0] 5d ......................... getLocalSlot2 
    0064: [1] 5b ......................... getLocalSlot0 
    0065: [2] 5c ......................... getLocalSlot1 
    0066: [3] 1e de c4 01 00 04 .......... callObjName <buttonLink> <> <argc: 2> 
    0072: [0] 54 ......................... loadNull 
    0073: [1] bf ......................... returnValue 
    0074: [0] 33 12 be 8b 02 b0 15 ....... debug 

    # ejs.es:17119                      }
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-39]  ejs.web const function chart(initialData: Array, options: Object) : Void

     ARG:   [arg-00]   private initialData : Array
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 e4 8b 02 9c a4 06 .... debug 

    # ejs.es:17138                          let connector = getConnector("chart", options)

    0017: [0] 56 d4 c7 01 ................ loadString <chart> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 12 e6 8b 02 92 a5 06 .... debug 

    # ejs.es:17139                          connector.chart(initialData, options)

    0040: [0] 5d ......................... getLocalSlot2 
    0041: [1] 5b ......................... getLocalSlot0 
    0042: [2] 5c ......................... getLocalSlot1 
    0043: [3] 1e d4 c7 01 00 04 .......... callObjName <chart> <> <argc: 2> 
    0049: [0] 54 ......................... loadNull 
    0050: [1] bf ......................... returnValue 
    0051: [0] 33 12 e8 8b 02 b0 15 ....... debug 

    # ejs.es:17140                      }
    
VARIABLE:   [initialData-00]  private var initialData : Array
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-40]  ejs.web const function checkbox(field: String, choice: String, options: Object) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private choice : String
     ARG:   [arg-02]   private options : Object
   LOCAL:   [local-03] var value
   LOCAL:   [local-04] var connector

    0000: [0] 41 03 03 08 0d ............. initDefaultArgs8 <3> <5> <10> <15> 
    0005: [0] 56 b6 a7 06 ................ loadString <true> 
    0009: [1] 95 ......................... putLocalSlot1 
    0010: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0014: [1] 96 ......................... putLocalSlot2 
    0015: [0] 33 12 fe 8b 02 c0 a7 06 .... debug 

    # ejs.es:17151                          options = setOptions(field, options)

    0023: [0] 5b ......................... getLocalSlot0 
    0024: [1] 5d ......................... getLocalSlot2 
    0025: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 96 ......................... putLocalSlot2 
    0035: [0] 33 12 80 8c 02 a2 a8 06 .... debug 

    # ejs.es:17152                          let value = getValue(currentRecord, field, options)

    0043: [0] 57 ......................... loadThis 
    0044: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0051: [1] 5b ......................... getLocalSlot0 
    0052: [2] 5d ......................... getLocalSlot2 
    0053: [3] 1f a8 80 03 7c 06 .......... callScopedName <getValue> <ejs.web> <argc: 3> 
    0059: [0] 93 ......................... pushResult 
    0060: [1] 97 ......................... putLocalSlot3 
    0061: [0] 33 12 82 8c 02 a2 a9 06 .... debug 

    # ejs.es:17153                          let connector = getConnector("checkbox", options)

    0069: [0] 56 8a d0 01 ................ loadString <checkbox> 
    0073: [1] 5d ......................... getLocalSlot2 
    0074: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0082: [0] 93 ......................... pushResult 
    0083: [1] 98 ......................... putLocalSlot4 
    0084: [0] 33 12 84 8c 02 9e aa 06 .... debug 

    # ejs.es:17154                          connector.checkbox(options.fieldName, value, choice, options)

    0092: [0] 5f ......................... getLocalSlot4 
    0093: [1] 5d ......................... getLocalSlot2 
    0094: [2] 7b b2 ab 06 ba 11 .......... getObjName <fieldName> <> 
    0100: [2] 5e ......................... getLocalSlot3 
    0101: [3] 5c ......................... getLocalSlot1 
    0102: [4] 5d ......................... getLocalSlot2 
    0103: [5] 1e 8a d0 01 00 08 .......... callObjName <checkbox> <> <argc: 4> 
    0109: [0] 54 ......................... loadNull 
    0110: [1] bf ......................... returnValue 
    0111: [0] 33 12 86 8c 02 b0 15 ....... debug 

    # ejs.es:17155                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [choice-01]  private var choice : String
VARIABLE:   [options-02]  private var options : Object
VARIABLE:   [value-03]  private var value
VARIABLE:   [connector-04]  private var connector

FUNCTION:   [View-41]  ejs.web const function endform() : Void

   LOCAL:   [local-00] var connector

    0000: [0] 33 12 92 8c 02 8c ac 06 .... debug 

    # ejs.es:17161                          let connector = getConnector("endform", null)

    0008: [0] 56 d2 d1 01 ................ loadString <endform> 
    0012: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0014: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] 94 ......................... putLocalSlot0 
    0024: [0] 33 12 94 8c 02 80 ad 06 .... debug 

    # ejs.es:17162                          connector.endform()

    0032: [0] 5b ......................... getLocalSlot0 
    0033: [1] 1e d2 d1 01 00 00 .......... callObjName <endform> <> <argc: 0> 
    0039: [0] 33 12 96 8c 02 c0 ad 06 .... debug 

    # ejs.es:17163                          currentRecord = undefined

    0047: [0] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0050: [1] 57 ......................... loadThis 
    0051: [2] b3 ea ff 05 86 80 06 ....... putObjName <currentRecord> <[ejs.web::View,private]> 
    0058: [0] 54 ......................... loadNull 
    0059: [1] bf ......................... returnValue 
    0060: [0] 33 12 98 8c 02 b0 15 ....... debug 

    # ejs.es:17164                      }
    
VARIABLE:   [connector-00]  private var connector

FUNCTION:   [View-42]  ejs.web const function form(record: Object, options: Object) : Void

     ARG:   [arg-00]   private record : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 b0 8c 02 e2 8e 06 .... debug 

    # ejs.es:17176                          currentRecord = record

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 57 ......................... loadThis 
    0019: [2] b3 ea ff 05 86 80 06 ....... putObjName <currentRecord> <[ejs.web::View,private]> 
    0026: [0] 33 12 b2 8c 02 a8 8f 06 .... debug 

    # ejs.es:17177                          emitFormErrors(record)

    0034: [0] 5b ......................... getLocalSlot0 
    0035: [1] 1f ee 8f 06 86 80 06 02 .... callScopedName <emitFormErrors> <[ejs.web::View,private]> <argc: 1> 
    0043: [0] 33 12 b4 8c 02 94 af 06 .... debug 

    # ejs.es:17178                          options = setOptions("form", options)

    0051: [0] 56 b4 92 01 ................ loadString <form> 
    0055: [1] 5c ......................... getLocalSlot1 
    0056: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0064: [0] 93 ......................... pushResult 
    0065: [1] 95 ......................... putLocalSlot1 
    0066: [0] 33 12 b6 8c 02 a8 98 06 .... debug 

    # ejs.es:17179                          options.method ||= "POST"

    0074: [0] 5c ......................... getLocalSlot1 
    0075: [1] 7b ae 99 01 ba 11 .......... getObjName <method> <> 
    0081: [1] 39 ......................... dup 
    0082: [2] 14 05 ...................... branchTrue8 <addr: 89> 
    0084: [1] 90 ......................... pop 
    0085: [0] 56 9e 86 05 ................ loadString <POST> 
    0089: [1] 5c ......................... getLocalSlot1 
    0090: [2] b3 ae 99 01 ba 11 .......... putObjName <method> <> 
    0096: [0] 33 12 b8 8c 02 ac 92 06 .... debug 

    # ejs.es:17180                          options.action ||= "update"

    0104: [0] 5c ......................... getLocalSlot1 
    0105: [1] 7b ee 01 ba 11 ............. getObjName <action> <> 
    0110: [1] 39 ......................... dup 
    0111: [2] 14 05 ...................... branchTrue8 <addr: 118> 
    0113: [1] 90 ......................... pop 
    0114: [0] 56 a8 9d 01 ................ loadString <update> 
    0118: [1] 5c ......................... getLocalSlot1 
    0119: [2] b3 ee 01 ba 11 ............. putObjName <action> <> 
    0124: [0] 33 12 ba 8c 02 fc 92 06 .... debug 

    # ejs.es:17181                          options.id ||= record.id

    0132: [0] 5c ......................... getLocalSlot1 
    0133: [1] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0139: [1] 39 ......................... dup 
    0140: [2] 14 08 ...................... branchTrue8 <addr: 150> 
    0142: [1] 90 ......................... pop 
    0143: [0] 5b ......................... getLocalSlot0 
    0144: [1] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0150: [1] 5c ......................... getLocalSlot1 
    0151: [2] b3 ae 92 01 ba 11 .......... putObjName <id> <> 
    0157: [0] 33 12 bc 8c 02 f8 af 06 .... debug 

    # ejs.es:17182                          let connector = getConnector("form", options)

    0165: [0] 56 b4 92 01 ................ loadString <form> 
    0169: [1] 5c ......................... getLocalSlot1 
    0170: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0178: [0] 93 ......................... pushResult 
    0179: [1] 96 ......................... putLocalSlot2 
    0180: [0] 33 12 be 8c 02 ec b0 06 .... debug 

    # ejs.es:17183                          connector.form(record, options)

    0188: [0] 5d ......................... getLocalSlot2 
    0189: [1] 5b ......................... getLocalSlot0 
    0190: [2] 5c ......................... getLocalSlot1 
    0191: [3] 1e b4 92 01 00 04 .......... callObjName <form> <> <argc: 2> 
    0197: [0] 54 ......................... loadNull 
    0198: [1] bf ......................... returnValue 
    0199: [0] 33 12 c0 8c 02 b0 15 ....... debug 

    # ejs.es:17184                      }
    
VARIABLE:   [record-00]  private var record : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-43]  ejs.web const function image(src: String, options: Object) : Void

     ARG:   [arg-00]   private src : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 d8 8c 02 c8 b2 06 .... debug 

    # ejs.es:17196                          options = setOptions("image", options)

    0017: [0] 56 ec de 01 ................ loadString <image> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 95 ......................... putLocalSlot1 
    0032: [0] 33 12 da 8c 02 ae b3 06 .... debug 

    # ejs.es:17197                          getConnector("image", options)

    0040: [0] 56 ec de 01 ................ loadString <image> 
    0044: [1] 5c ......................... getLocalSlot1 
    0045: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0053: [0] 33 12 dc 8c 02 84 b4 06 .... debug 

    # ejs.es:17198                          connector.image(src, options)

    0061: [0] 79 bc 94 06 ba 11 .......... getScopedName <connector> <> 
    0067: [1] 5b ......................... getLocalSlot0 
    0068: [2] 5c ......................... getLocalSlot1 
    0069: [3] 1e ec de 01 00 04 .......... callObjName <image> <> <argc: 2> 
    0075: [0] 54 ......................... loadNull 
    0076: [1] bf ......................... returnValue 
    0077: [0] 33 12 de 8c 02 b0 15 ....... debug 

    # ejs.es:17199                      }
    
VARIABLE:   [src-00]  private var src : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [View-44]  ejs.web const function imageLink(image: String, options: Object) : Void

     ARG:   [arg-00]   private image : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 f4 8c 02 e8 b5 06 .... debug 

    # ejs.es:17210                          options = setOptions("imageLink", options)

    0017: [0] 56 82 e0 01 ................ loadString <imageLink> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 95 ......................... putLocalSlot1 
    0032: [0] 33 12 f6 8c 02 d6 b6 06 .... debug 

    # ejs.es:17211                          let connector = getConnector("imageLink", options)

    0040: [0] 56 82 e0 01 ................ loadString <imageLink> 
    0044: [1] 5c ......................... getLocalSlot1 
    0045: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0053: [0] 93 ......................... pushResult 
    0054: [1] 96 ......................... putLocalSlot2 
    0055: [0] 33 12 f8 8c 02 d4 b7 06 .... debug 

    # ejs.es:17212                          connector.imageLink(text, options)

    0063: [0] 5d ......................... getLocalSlot2 
    0064: [1] 57 ......................... loadThis 
    0065: [2] 7b 9c bd 01 7c ............. getObjName <text> <ejs.web> 
    0070: [2] 5c ......................... getLocalSlot1 
    0071: [3] 1e 82 e0 01 00 04 .......... callObjName <imageLink> <> <argc: 2> 
    0077: [0] 54 ......................... loadNull 
    0078: [1] bf ......................... returnValue 
    0079: [0] 33 12 fa 8c 02 b0 15 ....... debug 

    # ejs.es:17213                      }
    
VARIABLE:   [image-00]  private var image : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-45]  ejs.web const function input(field: String, options: Object) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 92 8d 02 ba b9 06 .... debug 

    # ejs.es:17225                          if (currentRecord && currentRecord.getColumnType) {

    0017: [0] 57 ......................... loadThis 
    0018: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0025: [1] 39 ......................... dup 
    0026: [2] 13 0f ...................... branchFalse8 <addr: 43> 
    0028: [1] 90 ......................... pop 
    0029: [0] 57 ......................... loadThis 
    0030: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0037: [1] 7b ba ba 06 ba 11 .......... getObjName <getColumnType> <> 
    0043: [1] 07 88 06 f7 f7 ............. branchFalse <addr: 436> 
    0048: [0] 33 12 94 8d 02 d6 ba 06 .... debug 

    # ejs.es:17226                              datatype = currentRecord.getColumnType(field)

    0056: [0] 57 ......................... loadThis 
    0057: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0064: [1] 5b ......................... getLocalSlot0 
    0065: [2] 1e ba ba 06 ba 11 02 ....... callObjName <getColumnType> <> <argc: 1> 
    0072: [0] 93 ......................... pushResult 
    0073: [1] b4 d2 bb 06 ba 11 .......... putScopedName <datatype> <> 
    0079: [0] 33 12 98 8d 02 e4 bb 06 .... debug 

    # ejs.es:17228                              switch (datatype) {

    0087: [0] 79 d2 bb 06 ba 11 .......... getScopedName <datatype> <> 
    0093: [1] 33 12 9a 8d 02 ac bc 06 .... debug 

    # ejs.es:17229                              case "binary":

    0101: [1] 39 ......................... dup 
    0102: [2] 56 ea bc 06 ................ loadString <binary> 
    0106: [3] 26 ......................... compareStrictlyEq 
    0107: [2] 13 02 ...................... branchFalse8 <addr: 111> 
    0109: [1] 3e 10 ...................... goto8 <addr: 127> 
    0111: [1] 33 12 9c 8d 02 f8 bc 06 .... debug 

    # ejs.es:17230                              case "date":

    0119: [1] 39 ......................... dup 
    0120: [2] 56 b2 bd 06 ................ loadString <date> 
    0124: [3] 26 ......................... compareStrictlyEq 
    0125: [2] 13 02 ...................... branchFalse8 <addr: 129> 
    0127: [1] 3e 10 ...................... goto8 <addr: 145> 
    0129: [1] 33 12 9e 8d 02 bc bd 06 .... debug 

    # ejs.es:17231                              case "datetime":

    0137: [1] 39 ......................... dup 
    0138: [2] 56 fe bd 06 ................ loadString <datetime> 
    0142: [3] 26 ......................... compareStrictlyEq 
    0143: [2] 13 02 ...................... branchFalse8 <addr: 147> 
    0145: [1] 3e 10 ...................... goto8 <addr: 163> 
    0147: [1] 33 12 a0 8d 02 90 be 06 .... debug 

    # ejs.es:17232                              case "decimal":

    0155: [1] 39 ......................... dup 
    0156: [2] 56 d0 be 06 ................ loadString <decimal> 
    0160: [3] 26 ......................... compareStrictlyEq 
    0161: [2] 13 02 ...................... branchFalse8 <addr: 165> 
    0163: [1] 3e 10 ...................... goto8 <addr: 181> 
    0165: [1] 33 12 a2 8d 02 e0 be 06 .... debug 

    # ejs.es:17233                              case "float":

    0173: [1] 39 ......................... dup 
    0174: [2] 56 9c bf 06 ................ loadString <float> 
    0178: [3] 26 ......................... compareStrictlyEq 
    0179: [2] 13 02 ...................... branchFalse8 <addr: 183> 
    0181: [1] 3e 10 ...................... goto8 <addr: 199> 
    0183: [1] 33 12 a4 8d 02 a8 bf 06 .... debug 

    # ejs.es:17234                              case "integer":

    0191: [1] 39 ......................... dup 
    0192: [2] 56 e8 bf 06 ................ loadString <integer> 
    0196: [3] 26 ......................... compareStrictlyEq 
    0197: [2] 13 02 ...................... branchFalse8 <addr: 201> 
    0199: [1] 3e 10 ...................... goto8 <addr: 217> 
    0201: [1] 33 12 a6 8d 02 f8 bf 06 .... debug 

    # ejs.es:17235                              case "number":

    0209: [1] 39 ......................... dup 
    0210: [2] 56 b6 c0 06 ................ loadString <number> 
    0214: [3] 26 ......................... compareStrictlyEq 
    0215: [2] 13 02 ...................... branchFalse8 <addr: 219> 
    0217: [1] 3e 10 ...................... goto8 <addr: 235> 
    0219: [1] 33 12 a8 8d 02 c4 c0 06 .... debug 

    # ejs.es:17236                              case "string":

    0227: [1] 39 ......................... dup 
    0228: [2] 56 82 c1 06 ................ loadString <string> 
    0232: [3] 26 ......................... compareStrictlyEq 
    0233: [2] 13 02 ...................... branchFalse8 <addr: 237> 
    0235: [1] 3e 10 ...................... goto8 <addr: 253> 
    0237: [1] 33 12 aa 8d 02 90 c1 06 .... debug 

    # ejs.es:17237                              case "time":

    0245: [1] 39 ......................... dup 
    0246: [2] 56 ca c1 06 ................ loadString <time> 
    0250: [3] 26 ......................... compareStrictlyEq 
    0251: [2] 13 02 ...................... branchFalse8 <addr: 255> 
    0253: [1] 3e 10 ...................... goto8 <addr: 271> 
    0255: [1] 33 12 ac 8d 02 d4 c1 06 .... debug 

    # ejs.es:17238                              case "timestamp":

    0263: [1] 39 ......................... dup 
    0264: [2] 56 98 c2 06 ................ loadString <timestamp> 
    0268: [3] 26 ......................... compareStrictlyEq 
    0269: [2] 13 1f ...................... branchFalse8 <addr: 302> 
    0271: [1] 33 12 ae 8d 02 ac c2 06 .... debug 

    # ejs.es:17239                                  text(field, options)

    0279: [1] 5b ......................... getLocalSlot0 
    0280: [2] 5c ......................... getLocalSlot1 
    0281: [3] 1f 9c bd 01 7c 04 .......... callScopedName <text> <ejs.web> <argc: 2> 
    0287: [1] 33 12 b0 8d 02 fe c2 06 .... debug 

    # ejs.es:17240                                  break

    0295: [1] 3d 8a 02 f7 f7 ............. goto <addr: 433> 
    0300: [1] 3e 10 ...................... goto8 <addr: 318> 
    0302: [1] 33 12 b2 8d 02 b2 c3 06 .... debug 

    # ejs.es:17241                              case "text":

    0310: [1] 39 ......................... dup 
    0311: [2] 56 9c bd 01 ................ loadString <text> 
    0315: [3] 26 ......................... compareStrictlyEq 
    0316: [2] 13 1f ...................... branchFalse8 <addr: 349> 
    0318: [1] 33 12 b4 8d 02 ec c3 06 .... debug 

    # ejs.es:17242                                  textarea(field, options)

    0326: [1] 5b ......................... getLocalSlot0 
    0327: [2] 5c ......................... getLocalSlot1 
    0328: [3] 1f e2 a3 03 7c 04 .......... callScopedName <textarea> <ejs.web> <argc: 2> 
    0334: [1] 33 12 b6 8d 02 fe c2 06 .... debug 

    # ejs.es:17243                                  break

    0342: [1] 3d ac 01 f7 f7 ............. goto <addr: 433> 
    0347: [1] 3e 10 ...................... goto8 <addr: 365> 
    0349: [1] 33 12 b8 8d 02 c6 c4 06 .... debug 

    # ejs.es:17244                              case "boolean":

    0357: [1] 39 ......................... dup 
    0358: [2] 56 86 c5 06 ................ loadString <boolean> 
    0362: [3] 26 ......................... compareStrictlyEq 
    0363: [2] 13 21 ...................... branchFalse8 <addr: 398> 
    0365: [1] 33 12 ba 8d 02 96 c5 06 .... debug 

    # ejs.es:17245                                  checkbox(field, "true", options)

    0373: [1] 5b ......................... getLocalSlot0 
    0374: [2] 56 b6 a7 06 ................ loadString <true> 
    0378: [3] 5c ......................... getLocalSlot1 
    0379: [4] 1f 8a d0 01 7c 06 .......... callScopedName <checkbox> <ejs.web> <argc: 3> 
    0385: [1] 33 12 bc 8d 02 fe c2 06 .... debug 

    # ejs.es:17246                                  break

    0393: [1] 3d 46 f7 f7 f7 ............. goto <addr: 433> 
    0398: [1] 33 12 be 8d 02 80 c6 06 .... debug 

    # ejs.es:17247                              default:

    0406: [1] 33 12 c0 8d 02 b2 c6 06 .... debug 

    # ejs.es:17248                                  throw "input control: Unknown field type: " + datatype + " for field " + field

    0414: [1] 56 f8 c7 06 ................ loadString <input control: Unknown field type: > 
    0418: [2] 79 d2 bb 06 ba 11 .......... getScopedName <datatype> <> 
    0424: [3] 00 ......................... add 
    0425: [2] 56 c0 c8 06 ................ loadString < for field > 
    0429: [3] 00 ......................... add 
    0430: [2] 5b ......................... getLocalSlot0 
    0431: [3] 00 ......................... add 
    0432: [2] c6 ......................... throw 
    0433: [2] 90 ......................... pop 
    0434: [1] 3e 48 ...................... goto8 <addr: 508> 
    0436: [1] 33 12 c4 8d 02 b4 33 ....... debug 

    # ejs.es:17250                          } else {

    0443: [1] 33 12 c6 8d 02 d8 c8 06 .... debug 

    # ejs.es:17251                              if (datatype is Boolean) {

    0451: [1] 79 d2 bb 06 ba 11 .......... getScopedName <datatype> <> 
    0457: [2] 7e 10 ...................... getGlobalSlot <slot: 8> 
    0459: [3] 43 ......................... isA 
    0460: [2] 13 16 ...................... branchFalse8 <addr: 484> 
    0462: [1] 33 12 c8 8d 02 96 c5 06 .... debug 

    # ejs.es:17252                                  checkbox(field, "true", options)

    0470: [1] 5b ......................... getLocalSlot0 
    0471: [2] 56 b6 a7 06 ................ loadString <true> 
    0475: [3] 5c ......................... getLocalSlot1 
    0476: [4] 1f 8a d0 01 7c 06 .......... callScopedName <checkbox> <ejs.web> <argc: 3> 
    0482: [1] 3e 18 ...................... goto8 <addr: 508> 
    0484: [1] 33 12 ca 8d 02 e8 a1 01 .... debug 

    # ejs.es:17253                              } else {

    0492: [1] 33 12 cc 8d 02 ac c2 06 .... debug 

    # ejs.es:17254                                  text(field, options)

    0500: [1] 5b ......................... getLocalSlot0 
    0501: [2] 5c ......................... getLocalSlot1 
    0502: [3] 1f 9c bd 01 7c 04 .......... callScopedName <text> <ejs.web> <argc: 2> 
    0508: [1] 54 ......................... loadNull 
    0509: [2] bf ......................... returnValue 
    0510: [0] 33 12 d2 8d 02 b0 15 ....... debug 

    # ejs.es:17257                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [View-46]  ejs.web const function label(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 ea 8d 02 b4 ca 06 .... debug 

    # ejs.es:17269                          options = setOptions("label", options)

    0017: [0] 56 be e3 01 ................ loadString <label> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 95 ......................... putLocalSlot1 
    0032: [0] 33 12 ec 8d 02 9a cb 06 .... debug 

    # ejs.es:17270                          let connector = getConnector("label", options)

    0040: [0] 56 be e3 01 ................ loadString <label> 
    0044: [1] 5c ......................... getLocalSlot1 
    0045: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0053: [0] 93 ......................... pushResult 
    0054: [1] 96 ......................... putLocalSlot2 
    0055: [0] 33 12 ee 8d 02 90 cc 06 .... debug 

    # ejs.es:17271                          connector.label(text, options)

    0063: [0] 5d ......................... getLocalSlot2 
    0064: [1] 5b ......................... getLocalSlot0 
    0065: [2] 5c ......................... getLocalSlot1 
    0066: [3] 1e be e3 01 00 04 .......... callObjName <label> <> <argc: 2> 
    0072: [0] 54 ......................... loadNull 
    0073: [1] bf ......................... returnValue 
    0074: [0] 33 12 f0 8d 02 b0 15 ....... debug 

    # ejs.es:17272                      }
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-47]  ejs.web const function link(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 8a 8e 02 b0 97 06 .... debug 

    # ejs.es:17285                          options.action ||= text.split(" ")[0].toLower()

    0017: [0] 5c ......................... getLocalSlot1 
    0018: [1] 7b ee 01 ba 11 ............. getObjName <action> <> 
    0023: [1] 39 ......................... dup 
    0024: [2] 14 1a ...................... branchTrue8 <addr: 52> 
    0026: [1] 90 ......................... pop 
    0027: [0] 5b ......................... getLocalSlot0 
    0028: [1] 56 e8 ca 02 ................ loadString < > 
    0032: [2] 1e d4 c4 05 c4 08 02 ....... callObjName <split> <public> <argc: 1> 
    0039: [0] 93 ......................... pushResult 
    0040: [1] 56 ba 11 ................... loadString <> 
    0043: [2] 44 ......................... load0 
    0044: [3] 7c ......................... getObjNameExpr 
    0045: [1] 1e f8 f1 05 00 00 .......... callObjName <toLower> <> <argc: 0> 
    0051: [0] 93 ......................... pushResult 
    0052: [1] 5c ......................... getLocalSlot1 
    0053: [2] b3 ee 01 ba 11 ............. putObjName <action> <> 
    0058: [0] 33 12 8c 8e 02 ea cd 06 .... debug 

    # ejs.es:17286                          options = setOptions("link", options)

    0066: [0] 56 e4 e5 01 ................ loadString <link> 
    0070: [1] 5c ......................... getLocalSlot1 
    0071: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0079: [0] 93 ......................... pushResult 
    0080: [1] 95 ......................... putLocalSlot1 
    0081: [0] 33 12 8e 8e 02 ce ce 06 .... debug 

    # ejs.es:17287                          let connector = getConnector("link", options)

    0089: [0] 56 e4 e5 01 ................ loadString <link> 
    0093: [1] 5c ......................... getLocalSlot1 
    0094: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0102: [0] 93 ......................... pushResult 
    0103: [1] 96 ......................... putLocalSlot2 
    0104: [0] 33 12 90 8e 02 c2 cf 06 .... debug 

    # ejs.es:17288                          connector.link(text, options)

    0112: [0] 5d ......................... getLocalSlot2 
    0113: [1] 5b ......................... getLocalSlot0 
    0114: [2] 5c ......................... getLocalSlot1 
    0115: [3] 1e e4 e5 01 00 04 .......... callObjName <link> <> <argc: 2> 
    0121: [0] 54 ......................... loadNull 
    0122: [1] bf ......................... returnValue 
    0123: [0] 33 12 92 8e 02 b0 15 ....... debug 

    # ejs.es:17289                      }
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-48]  ejs.web const function extlink(text: String, options: Object) : Void

     ARG:   [arg-00]   private text : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 a2 8e 02 a0 d1 06 .... debug 

    # ejs.es:17297                          let connector = getConnector("extlink", options)

    0017: [0] 56 fe e7 01 ................ loadString <extlink> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 12 a4 8e 02 9a d2 06 .... debug 

    # ejs.es:17298                          connector.extlink(text, options)

    0040: [0] 5d ......................... getLocalSlot2 
    0041: [1] 5b ......................... getLocalSlot0 
    0042: [2] 5c ......................... getLocalSlot1 
    0043: [3] 1e fe e7 01 00 04 .......... callObjName <extlink> <> <argc: 2> 
    0049: [0] 54 ......................... loadNull 
    0050: [1] bf ......................... returnValue 
    0051: [0] 33 12 a6 8e 02 b0 15 ....... debug 

    # ejs.es:17299                      }
    
VARIABLE:   [text-00]  private var text : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-49]  ejs.web const function list(field: String, choices: Object, options: Object) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private choices : Object
     ARG:   [arg-02]   private options : Object
   LOCAL:   [local-03] var value
   LOCAL:   [local-04] var connector

    0000: [0] 41 03 03 06 0b ............. initDefaultArgs8 <3> <5> <8> <13> 
    0005: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0007: [1] 95 ......................... putLocalSlot1 
    0008: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0012: [1] 96 ......................... putLocalSlot2 
    0013: [0] 33 12 d2 8e 02 c0 a7 06 .... debug 

    # ejs.es:17321                          options = setOptions(field, options)

    0021: [0] 5b ......................... getLocalSlot0 
    0022: [1] 5d ......................... getLocalSlot2 
    0023: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0031: [0] 93 ......................... pushResult 
    0032: [1] 96 ......................... putLocalSlot2 
    0033: [0] 33 12 d4 8e 02 ac d4 06 .... debug 

    # ejs.es:17322                          if (choices == null) {

    0041: [0] 5c ......................... getLocalSlot1 
    0042: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0044: [2] 25 ......................... compareEq 
    0045: [1] 07 bc 02 f7 f7 ............. branchFalse <addr: 208> 
    0050: [0] 33 12 d8 8e 02 f2 d4 06 .... debug 

    # ejs.es:17324                              modelTypeName = field.replace(/\s/, "").toPascal()

    0058: [0] 5b ......................... getLocalSlot0 
    0059: [1] 55 f8 d5 06 ................ loadRegexp </\s/> 
    0063: [2] 56 ba 11 ................... loadString <> 
    0066: [3] 1e e0 6f c4 08 04 .......... callObjName <replace> <public> <argc: 2> 
    0072: [0] 93 ......................... pushResult 
    0073: [1] 1e 90 1c 00 00 ............. callObjName <toPascal> <> <argc: 0> 
    0078: [0] 93 ......................... pushResult 
    0079: [1] b4 82 d6 06 ba 11 .......... putScopedName <modelTypeName> <> 
    0085: [0] 33 12 da 8e 02 9e d6 06 .... debug 

    # ejs.es:17325                              modelTypeName = modelTypeName.replace(/Id$/, "")

    0093: [0] 79 82 d6 06 ba 11 .......... getScopedName <modelTypeName> <> 
    0099: [1] 55 a0 d7 06 ................ loadRegexp </Id$/> 
    0103: [2] 56 ba 11 ................... loadString <> 
    0106: [3] 1e e0 6f 00 04 ............. callObjName <replace> <> <argc: 2> 
    0111: [0] 93 ......................... pushResult 
    0112: [1] b4 82 d6 06 ba 11 .......... putScopedName <modelTypeName> <> 
    0118: [0] 33 12 dc 8e 02 ac d7 06 .... debug 

    # ejs.es:17326                              if (global[modelTypeName] == undefined) {

    0126: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0128: [1] 56 ba 11 ................... loadString <> 
    0131: [2] 79 82 d6 06 ba 11 .......... getScopedName <modelTypeName> <> 
    0137: [3] 7c ......................... getObjNameExpr 
    0138: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0141: [2] 25 ......................... compareEq 
    0142: [1] 13 1b ...................... branchFalse8 <addr: 171> 
    0144: [0] 33 12 de 8e 02 a0 d8 06 .... debug 

    # ejs.es:17327                                  throw new Error("Can't find model to create list data: " + modelTypeName)

    0152: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0154: [1] 89 ......................... new 
    0155: [1] 56 dc d9 06 ................ loadString <Can't find model to create list data: > 
    0159: [2] 79 82 d6 06 ba 11 .......... getScopedName <modelTypeName> <> 
    0165: [3] 00 ......................... add 
    0166: [2] 20 02 ...................... callConstructor <argc: 1> 
    0168: [1] c6 ......................... throw 
    0169: [1] 3e 00 ...................... goto8 <addr: 171> 
    0171: [1] 33 12 e0 8e 02 86 35 ....... debug 

    # ejs.es:17328                              }

    0178: [1] 33 12 e2 8e 02 aa da 06 .... debug 

    # ejs.es:17329                              choices = global[modelTypeName].findAll()

    0186: [1] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0188: [2] 56 ba 11 ................... loadString <> 
    0191: [3] 79 82 d6 06 ba 11 .......... getScopedName <modelTypeName> <> 
    0197: [4] 7c ......................... getObjNameExpr 
    0198: [2] 1e 9e db 06 00 00 .......... callObjName <findAll> <> <argc: 0> 
    0204: [1] 93 ......................... pushResult 
    0205: [2] 95 ......................... putLocalSlot1 
    0206: [1] 3e 00 ...................... goto8 <addr: 208> 
    0208: [1] 33 12 e4 8e 02 b2 1a ....... debug 

    # ejs.es:17330                          }

    0215: [1] 33 12 e6 8e 02 a2 a8 06 .... debug 

    # ejs.es:17331                          let value = getValue(currentRecord, field, options)

    0223: [1] 57 ......................... loadThis 
    0224: [2] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0231: [2] 5b ......................... getLocalSlot0 
    0232: [3] 5d ......................... getLocalSlot2 
    0233: [4] 1f a8 80 03 7c 06 .......... callScopedName <getValue> <ejs.web> <argc: 3> 
    0239: [1] 93 ......................... pushResult 
    0240: [2] 97 ......................... putLocalSlot3 
    0241: [1] 33 12 e8 8e 02 ae db 06 .... debug 

    # ejs.es:17332                          let connector = getConnector("list", options)

    0249: [1] 56 d6 fc 01 ................ loadString <list> 
    0253: [2] 5d ......................... getLocalSlot2 
    0254: [3] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0262: [1] 93 ......................... pushResult 
    0263: [2] 98 ......................... putLocalSlot4 
    0264: [1] 33 12 ea 8e 02 a2 dc 06 .... debug 

    # ejs.es:17333                          connector.list(options.fieldName, choices, value, options)

    0272: [1] 5f ......................... getLocalSlot4 
    0273: [2] 5d ......................... getLocalSlot2 
    0274: [3] 7b b2 ab 06 ba 11 .......... getObjName <fieldName> <> 
    0280: [3] 5c ......................... getLocalSlot1 
    0281: [4] 5e ......................... getLocalSlot3 
    0282: [5] 5d ......................... getLocalSlot2 
    0283: [6] 1e d6 fc 01 00 08 .......... callObjName <list> <> <argc: 4> 
    0289: [1] 54 ......................... loadNull 
    0290: [2] bf ......................... returnValue 
    0291: [0] 33 12 ec 8e 02 b0 15 ....... debug 

    # ejs.es:17334                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [choices-01]  private var choices : Object
VARIABLE:   [options-02]  private var options : Object
VARIABLE:   [value-03]  private var value
VARIABLE:   [connector-04]  private var connector

FUNCTION:   [View-50]  ejs.web const function mail(name: String, address: String, options: Object) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private address : String
     ARG:   [arg-02]   private options : Object
   LOCAL:   [local-03] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 96 ......................... putLocalSlot2 
    0009: [0] 33 12 fe 8e 02 d8 de 06 .... debug 

    # ejs.es:17343                          let connector = getConnector("mail", options)

    0017: [0] 56 f2 ff 01 ................ loadString <mail> 
    0021: [1] 5d ......................... getLocalSlot2 
    0022: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 97 ......................... putLocalSlot3 
    0032: [0] 33 12 80 8f 02 cc df 06 .... debug 

    # ejs.es:17344                          connector.mail(name, address, options)

    0040: [0] 5e ......................... getLocalSlot3 
    0041: [1] 5b ......................... getLocalSlot0 
    0042: [2] 5c ......................... getLocalSlot1 
    0043: [3] 5d ......................... getLocalSlot2 
    0044: [4] 1e f2 ff 01 00 06 .......... callObjName <mail> <> <argc: 3> 
    0050: [0] 54 ......................... loadNull 
    0051: [1] bf ......................... returnValue 
    0052: [0] 33 12 82 8f 02 b0 15 ....... debug 

    # ejs.es:17345                      }
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [address-01]  private var address : String
VARIABLE:   [options-02]  private var options : Object
VARIABLE:   [connector-03]  private var connector

FUNCTION:   [View-51]  ejs.web const function progress(initialData: Object, options: Object) : Void

     ARG:   [arg-00]   private initialData : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 9a 8f 02 cc e1 06 .... debug 

    # ejs.es:17357                          let connector = getConnector("progress", options)

    0017: [0] 56 84 82 02 ................ loadString <progress> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 12 9c 8f 02 c8 e2 06 .... debug 

    # ejs.es:17358                          connector.progress(initialData, options)

    0040: [0] 5d ......................... getLocalSlot2 
    0041: [1] 5b ......................... getLocalSlot0 
    0042: [2] 5c ......................... getLocalSlot1 
    0043: [3] 1e 84 82 02 00 04 .......... callObjName <progress> <> <argc: 2> 
    0049: [0] 54 ......................... loadNull 
    0050: [1] bf ......................... returnValue 
    0051: [0] 33 12 9e 8f 02 b0 15 ....... debug 

    # ejs.es:17359                      }
    
VARIABLE:   [initialData-00]  private var initialData : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-52]  ejs.web const function radio(field: String, choices: Object, options: Object) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private choices : Object
     ARG:   [arg-02]   private options : Object
   LOCAL:   [local-03] var value
   LOCAL:   [local-04] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 96 ......................... putLocalSlot2 
    0009: [0] 33 12 c4 8f 02 c0 a7 06 .... debug 

    # ejs.es:17378                          options = setOptions(field, options)

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 5d ......................... getLocalSlot2 
    0019: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0027: [0] 93 ......................... pushResult 
    0028: [1] 96 ......................... putLocalSlot2 
    0029: [0] 33 12 c6 8f 02 a2 a8 06 .... debug 

    # ejs.es:17379                          let value = getValue(currentRecord, field, options)

    0037: [0] 57 ......................... loadThis 
    0038: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0045: [1] 5b ......................... getLocalSlot0 
    0046: [2] 5d ......................... getLocalSlot2 
    0047: [3] 1f a8 80 03 7c 06 .......... callScopedName <getValue> <ejs.web> <argc: 3> 
    0053: [0] 93 ......................... pushResult 
    0054: [1] 97 ......................... putLocalSlot3 
    0055: [0] 33 12 c8 8f 02 dc e4 06 .... debug 

    # ejs.es:17380                          let connector = getConnector("radio", options)

    0063: [0] 56 ac 8e 02 ................ loadString <radio> 
    0067: [1] 5d ......................... getLocalSlot2 
    0068: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0076: [0] 93 ......................... pushResult 
    0077: [1] 98 ......................... putLocalSlot4 
    0078: [0] 33 12 ca 8f 02 d2 e5 06 .... debug 

    # ejs.es:17381                          connector.radio(options.fieldName, value, choices, options)

    0086: [0] 5f ......................... getLocalSlot4 
    0087: [1] 5d ......................... getLocalSlot2 
    0088: [2] 7b b2 ab 06 ba 11 .......... getObjName <fieldName> <> 
    0094: [2] 5e ......................... getLocalSlot3 
    0095: [3] 5c ......................... getLocalSlot1 
    0096: [4] 5d ......................... getLocalSlot2 
    0097: [5] 1e ac 8e 02 00 08 .......... callObjName <radio> <> <argc: 4> 
    0103: [0] 54 ......................... loadNull 
    0104: [1] bf ......................... returnValue 
    0105: [0] 33 12 cc 8f 02 b0 15 ....... debug 

    # ejs.es:17382                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [choices-01]  private var choices : Object
VARIABLE:   [options-02]  private var options : Object
VARIABLE:   [value-03]  private var value
VARIABLE:   [connector-04]  private var connector

FUNCTION:   [View-53]  ejs.web const function script(uri: Object, options: Object) : Void

     ARG:   [arg-00]   private uri : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector
   LOCAL:   [local-03] var u

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 dc 8f 02 e8 e7 06 .... debug 

    # ejs.es:17390                          let connector = getConnector("script", options)

    0017: [0] 56 c8 91 02 ................ loadString <script> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 12 de 8f 02 e0 e8 06 .... debug 

    # ejs.es:17391                          if (uri is Array) {

    0040: [0] 5b ......................... getLocalSlot0 
    0041: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0043: [2] 43 ......................... isA 
    0044: [1] 13 3e ...................... branchFalse8 <addr: 108> 
    0046: [0] 33 12 e0 8f 02 a0 e9 06 .... debug 

    # ejs.es:17392                              for each (u in uri) {

    0054: [0] 5b ......................... getLocalSlot0 
    0055: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0061: [0] 93 ......................... pushResult 
    0062: [1] 39 ......................... dup 
    0063: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0066: [1] 93 ......................... pushResult 
    0067: [2] 97 ......................... putLocalSlot3 
    0068: [1] 33 12 e2 8f 02 f0 e9 06 .... debug 

    # ejs.es:17393                                  connector.script(request.home.join(u), options)

    0076: [1] 5d ......................... getLocalSlot2 
    0077: [2] 57 ......................... loadThis 
    0078: [3] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0082: [3] 7b 9c c5 02 c4 08 .......... getObjName <home> <public> 
    0088: [3] 5e ......................... getLocalSlot3 
    0089: [4] 1e f6 25 c4 08 02 .......... callObjName <join> <public> <argc: 1> 
    0095: [2] 93 ......................... pushResult 
    0096: [3] 5c ......................... getLocalSlot1 
    0097: [4] 1e c8 91 02 00 04 .......... callObjName <script> <> <argc: 2> 
    0103: [1] 3e d5 ...................... goto8 <addr: 62> 
    0105: [1] 90 ......................... pop 
    0106: [0] 3e 2a ...................... goto8 <addr: 150> 
    0108: [0] 33 12 e6 8f 02 b4 33 ....... debug 

    # ejs.es:17395                          } else {

    0115: [0] 33 12 e8 8f 02 f8 ea 06 .... debug 

    # ejs.es:17396                              connector.script(request.home.join(uri), options)

    0123: [0] 5d ......................... getLocalSlot2 
    0124: [1] 57 ......................... loadThis 
    0125: [2] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0129: [2] 7b 9c c5 02 c4 08 .......... getObjName <home> <public> 
    0135: [2] 5b ......................... getLocalSlot0 
    0136: [3] 1e f6 25 c4 08 02 .......... callObjName <join> <public> <argc: 1> 
    0142: [1] 93 ......................... pushResult 
    0143: [2] 5c ......................... getLocalSlot1 
    0144: [3] 1e c8 91 02 00 04 .......... callObjName <script> <> <argc: 2> 
    0150: [0] 54 ......................... loadNull 
    0151: [1] bf ......................... returnValue 
    0152: [0] 33 12 ec 8f 02 b0 15 ....... debug 

    # ejs.es:17398                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     63      66        105          105       StopIteration

VARIABLE:   [uri-00]  private var uri : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector
VARIABLE:   [u-03]  -hoisted-3 var u

FUNCTION:   [View-54]  ejs.web const function status(initialData: Object, options: Object) : Void

     ARG:   [arg-00]   private initialData : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 84 90 02 92 ed 06 .... debug 

    # ejs.es:17410                          let connector = getConnector("status", options)

    0017: [0] 56 f0 61 ................... loadString <status> 
    0020: [1] 5c ......................... getLocalSlot1 
    0021: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0029: [0] 93 ......................... pushResult 
    0030: [1] 96 ......................... putLocalSlot2 
    0031: [0] 33 12 86 90 02 8a ee 06 .... debug 

    # ejs.es:17411                          connector.status(initialData, options)

    0039: [0] 5d ......................... getLocalSlot2 
    0040: [1] 5b ......................... getLocalSlot0 
    0041: [2] 5c ......................... getLocalSlot1 
    0042: [3] 1e f0 61 00 04 ............. callObjName <status> <> <argc: 2> 
    0047: [0] 54 ......................... loadNull 
    0048: [1] bf ......................... returnValue 
    0049: [0] 33 12 88 90 02 b0 15 ....... debug 

    # ejs.es:17412                      }
    
VARIABLE:   [initialData-00]  private var initialData : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-55]  ejs.web const function stylesheet(uri: Object, options: Object) : Void

     ARG:   [arg-00]   private uri : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector
   LOCAL:   [local-03] var u

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 98 90 02 fe ef 06 .... debug 

    # ejs.es:17420                          let connector = getConnector("stylesheet", options)

    0017: [0] 56 d8 96 02 ................ loadString <stylesheet> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 12 9a 90 02 e0 e8 06 .... debug 

    # ejs.es:17421                          if (uri is Array) {

    0040: [0] 5b ......................... getLocalSlot0 
    0041: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0043: [2] 43 ......................... isA 
    0044: [1] 13 3e ...................... branchFalse8 <addr: 108> 
    0046: [0] 33 12 9c 90 02 a0 e9 06 .... debug 

    # ejs.es:17422                              for each (u in uri) {

    0054: [0] 5b ......................... getLocalSlot0 
    0055: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0061: [0] 93 ......................... pushResult 
    0062: [1] 39 ......................... dup 
    0063: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0066: [1] 93 ......................... pushResult 
    0067: [2] 97 ......................... putLocalSlot3 
    0068: [1] 33 12 9e 90 02 fe f0 06 .... debug 

    # ejs.es:17423                                  connector.stylesheet(request.home.join(u), options)

    0076: [1] 5d ......................... getLocalSlot2 
    0077: [2] 57 ......................... loadThis 
    0078: [3] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0082: [3] 7b 9c c5 02 c4 08 .......... getObjName <home> <public> 
    0088: [3] 5e ......................... getLocalSlot3 
    0089: [4] 1e f6 25 c4 08 02 .......... callObjName <join> <public> <argc: 1> 
    0095: [2] 93 ......................... pushResult 
    0096: [3] 5c ......................... getLocalSlot1 
    0097: [4] 1e d8 96 02 00 04 .......... callObjName <stylesheet> <> <argc: 2> 
    0103: [1] 3e d5 ...................... goto8 <addr: 62> 
    0105: [1] 90 ......................... pop 
    0106: [0] 3e 2a ...................... goto8 <addr: 150> 
    0108: [0] 33 12 a2 90 02 b4 33 ....... debug 

    # ejs.es:17425                          } else {

    0115: [0] 33 12 a4 90 02 8e f2 06 .... debug 

    # ejs.es:17426                              connector.stylesheet(request.home.join(uri), options)

    0123: [0] 5d ......................... getLocalSlot2 
    0124: [1] 57 ......................... loadThis 
    0125: [2] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0129: [2] 7b 9c c5 02 c4 08 .......... getObjName <home> <public> 
    0135: [2] 5b ......................... getLocalSlot0 
    0136: [3] 1e f6 25 c4 08 02 .......... callObjName <join> <public> <argc: 1> 
    0142: [1] 93 ......................... pushResult 
    0143: [2] 5c ......................... getLocalSlot1 
    0144: [3] 1e d8 96 02 00 04 .......... callObjName <stylesheet> <> <argc: 2> 
    0150: [0] 54 ......................... loadNull 
    0151: [1] bf ......................... returnValue 
    0152: [0] 33 12 a8 90 02 b0 15 ....... debug 

    # ejs.es:17428                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     63      66        105          105       StopIteration

VARIABLE:   [uri-00]  private var uri : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector
VARIABLE:   [u-03]  -hoisted-3 var u

FUNCTION:   [View-56]  ejs.web const function table(data, options: Object) : Void

     ARG:   [arg-00]   private data
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 b8 91 02 90 f4 06 .... debug 

    # ejs.es:17500                          options = setOptions("table", options)

    0017: [0] 56 96 97 03 ................ loadString <table> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 95 ......................... putLocalSlot1 
    0032: [0] 33 12 ba 91 02 f6 f4 06 .... debug 

    # ejs.es:17501                          let connector = getConnector("table", options)

    0040: [0] 56 96 97 03 ................ loadString <table> 
    0044: [1] 5c ......................... getLocalSlot1 
    0045: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0053: [0] 93 ......................... pushResult 
    0054: [1] 96 ......................... putLocalSlot2 
    0055: [0] 33 12 bc 91 02 ec f5 06 .... debug 

    # ejs.es:17502                          if (options.pivot) {

    0063: [0] 5c ......................... getLocalSlot1 
    0064: [1] 7b ae f6 06 ba 11 .......... getObjName <pivot> <> 
    0070: [1] 13 15 ...................... branchFalse8 <addr: 93> 
    0072: [0] 33 12 be 91 02 ba f6 06 .... debug 

    # ejs.es:17503                              data = pivot(data)

    0080: [0] 5b ......................... getLocalSlot0 
    0081: [1] 1f ae f6 06 86 80 06 02 .... callScopedName <pivot> <[ejs.web::View,private]> <argc: 1> 
    0089: [0] 93 ......................... pushResult 
    0090: [1] 94 ......................... putLocalSlot0 
    0091: [0] 3e 00 ...................... goto8 <addr: 93> 
    0093: [0] 33 12 c0 91 02 b2 1a ....... debug 

    # ejs.es:17504                          }

    0100: [0] 33 12 c2 91 02 80 f7 06 .... debug 

    # ejs.es:17505                          connector.table(data, options)

    0108: [0] 5d ......................... getLocalSlot2 
    0109: [1] 5b ......................... getLocalSlot0 
    0110: [2] 5c ......................... getLocalSlot1 
    0111: [3] 1e 96 97 03 00 04 .......... callObjName <table> <> <argc: 2> 
    0117: [0] 54 ......................... loadNull 
    0118: [1] bf ......................... returnValue 
    0119: [0] 33 12 c4 91 02 b0 15 ....... debug 

    # ejs.es:17506                      }
    
VARIABLE:   [data-00]  private var data
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-57]  ejs.web const function tabs(initialData: Array, options: Object) : Void

     ARG:   [arg-00]   private initialData : Array
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 d8 91 02 e6 f8 06 .... debug 

    # ejs.es:17516                          let connector = getConnector("tabs", options)

    0017: [0] 56 84 a0 02 ................ loadString <tabs> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 12 da 91 02 da f9 06 .... debug 

    # ejs.es:17517                          connector.tabs(initialData, options)

    0040: [0] 5d ......................... getLocalSlot2 
    0041: [1] 5b ......................... getLocalSlot0 
    0042: [2] 5c ......................... getLocalSlot1 
    0043: [3] 1e 84 a0 02 00 04 .......... callObjName <tabs> <> <argc: 2> 
    0049: [0] 54 ......................... loadNull 
    0050: [1] bf ......................... returnValue 
    0051: [0] 33 12 dc 91 02 b0 15 ....... debug 

    # ejs.es:17518                      }
    
VARIABLE:   [initialData-00]  private var initialData : Array
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-58]  ejs.web const function text(field: String, options: Object) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var value
   LOCAL:   [local-03] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 fc 91 02 c0 a7 06 .... debug 

    # ejs.es:17534                          options = setOptions(field, options)

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 5c ......................... getLocalSlot1 
    0019: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0027: [0] 93 ......................... pushResult 
    0028: [1] 95 ......................... putLocalSlot1 
    0029: [0] 33 12 fe 91 02 a2 a8 06 .... debug 

    # ejs.es:17535                          let value = getValue(currentRecord, field, options)

    0037: [0] 57 ......................... loadThis 
    0038: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0045: [1] 5b ......................... getLocalSlot0 
    0046: [2] 5c ......................... getLocalSlot1 
    0047: [3] 1f a8 80 03 7c 06 .......... callScopedName <getValue> <ejs.web> <argc: 3> 
    0053: [0] 93 ......................... pushResult 
    0054: [1] 96 ......................... putLocalSlot2 
    0055: [0] 33 12 80 92 02 c2 fb 06 .... debug 

    # ejs.es:17536                          let connector = getConnector("text", options)

    0063: [0] 56 9c bd 01 ................ loadString <text> 
    0067: [1] 5c ......................... getLocalSlot1 
    0068: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0076: [0] 93 ......................... pushResult 
    0077: [1] 97 ......................... putLocalSlot3 
    0078: [0] 33 12 82 92 02 b6 fc 06 .... debug 

    # ejs.es:17537                          connector.text(options.fieldName, value, options)

    0086: [0] 5e ......................... getLocalSlot3 
    0087: [1] 5c ......................... getLocalSlot1 
    0088: [2] 7b b2 ab 06 ba 11 .......... getObjName <fieldName> <> 
    0094: [2] 5d ......................... getLocalSlot2 
    0095: [3] 5c ......................... getLocalSlot1 
    0096: [4] 1e 9c bd 01 00 06 .......... callObjName <text> <> <argc: 3> 
    0102: [0] 54 ......................... loadNull 
    0103: [1] bf ......................... returnValue 
    0104: [0] 33 12 84 92 02 b0 15 ....... debug 

    # ejs.es:17538                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [value-02]  private var value
VARIABLE:   [connector-03]  private var connector

FUNCTION:   [View-59]  ejs.web const function textarea(field: String, options: Object) : Void

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var value
   LOCAL:   [local-03] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 ac 92 02 c0 a7 06 .... debug 

    # ejs.es:17558                          options = setOptions(field, options)

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 5c ......................... getLocalSlot1 
    0019: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0027: [0] 93 ......................... pushResult 
    0028: [1] 95 ......................... putLocalSlot1 
    0029: [0] 33 12 ae 92 02 a2 a8 06 .... debug 

    # ejs.es:17559                          let value = getValue(currentRecord, field, options)

    0037: [0] 57 ......................... loadThis 
    0038: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0045: [1] 5b ......................... getLocalSlot0 
    0046: [2] 5c ......................... getLocalSlot1 
    0047: [3] 1f a8 80 03 7c 06 .......... callScopedName <getValue> <ejs.web> <argc: 3> 
    0053: [0] 93 ......................... pushResult 
    0054: [1] 96 ......................... putLocalSlot2 
    0055: [0] 33 12 b0 92 02 c0 fe 06 .... debug 

    # ejs.es:17560                          let connector = getConnector("textarea", options)

    0063: [0] 56 e2 a3 03 ................ loadString <textarea> 
    0067: [1] 5c ......................... getLocalSlot1 
    0068: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0076: [0] 93 ......................... pushResult 
    0077: [1] 97 ......................... putLocalSlot3 
    0078: [0] 33 12 b2 92 02 bc ff 06 .... debug 

    # ejs.es:17561                          connector.textarea(options.fieldName, value, options)

    0086: [0] 5e ......................... getLocalSlot3 
    0087: [1] 5c ......................... getLocalSlot1 
    0088: [2] 7b b2 ab 06 ba 11 .......... getObjName <fieldName> <> 
    0094: [2] 5d ......................... getLocalSlot2 
    0095: [3] 5c ......................... getLocalSlot1 
    0096: [4] 1e e2 a3 03 00 06 .......... callObjName <textarea> <> <argc: 3> 
    0102: [0] 54 ......................... loadNull 
    0103: [1] bf ......................... returnValue 
    0104: [0] 33 12 b4 92 02 b0 15 ....... debug 

    # ejs.es:17562                      }
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [value-02]  private var value
VARIABLE:   [connector-03]  private var connector

FUNCTION:   [View-60]  ejs.web const function tree(initialData: Object, options: Object) : Void

     ARG:   [arg-00]   private initialData : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var connector

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 ce 92 02 d2 81 07 .... debug 

    # ejs.es:17575                          let connector = getConnector("tree", options)

    0017: [0] 56 da a6 03 ................ loadString <tree> 
    0021: [1] 5c ......................... getLocalSlot1 
    0022: [2] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0030: [0] 93 ......................... pushResult 
    0031: [1] 96 ......................... putLocalSlot2 
    0032: [0] 33 12 d0 92 02 c6 82 07 .... debug 

    # ejs.es:17576                          connector.tree(initialData, options)

    0040: [0] 5d ......................... getLocalSlot2 
    0041: [1] 5b ......................... getLocalSlot0 
    0042: [2] 5c ......................... getLocalSlot1 
    0043: [3] 1e da a6 03 00 04 .......... callObjName <tree> <> <argc: 2> 
    0049: [0] 54 ......................... loadNull 
    0050: [1] bf ......................... returnValue 
    0051: [0] 33 12 d2 92 02 b0 15 ....... debug 

    # ejs.es:17577                      }
    
VARIABLE:   [initialData-00]  private var initialData : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [connector-02]  private var connector

FUNCTION:   [View-61]  ejs.web const function flash(kinds: Object, options: Object) : Void

     ARG:   [arg-00]   private kinds : Object
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var cflash
   LOCAL:   [local-03] var msgs : Object
   LOCAL:   [local-04] var kind
   LOCAL:   [local-05] var kind
   LOCAL:   [local-06] var msg : String
   LOCAL:   [local-07] var connector

    0000: [0] 41 03 03 06 0b ............. initDefaultArgs8 <3> <5> <8> <13> 
    0005: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0007: [1] 94 ......................... putLocalSlot0 
    0008: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0012: [1] 95 ......................... putLocalSlot1 
    0013: [0] 33 12 f4 92 02 c0 84 07 .... debug 

    # ejs.es:17594                          options = setOptions("flash", options)

    0021: [0] 56 b8 08 ................... loadString <flash> 
    0024: [1] 5c ......................... getLocalSlot1 
    0025: [2] 1f f2 90 06 86 80 06 04 .... callScopedName <setOptions> <[ejs.web::View,private]> <argc: 2> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 95 ......................... putLocalSlot1 
    0035: [0] 33 12 f8 92 02 a6 85 07 .... debug 

    # ejs.es:17596                          let cflash = request.flash

    0043: [0] 57 ......................... loadThis 
    0044: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0048: [1] 7b b8 08 ba 11 ............. getObjName <flash> <> 
    0053: [1] 96 ......................... putLocalSlot2 
    0054: [0] 33 12 fa 92 02 82 86 07 .... debug 

    # ejs.es:17597                          if (cflash == null || cflash.length == 0) {

    0062: [0] 5d ......................... getLocalSlot2 
    0063: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0065: [2] 25 ......................... compareEq 
    0066: [1] 39 ......................... dup 
    0067: [2] 14 08 ...................... branchTrue8 <addr: 77> 
    0069: [1] 90 ......................... pop 
    0070: [0] 5d ......................... getLocalSlot2 
    0071: [1] 7b f4 3b 00 ................ getObjName <length> <> 
    0075: [1] 44 ......................... load0 
    0076: [2] 25 ......................... compareEq 
    0077: [1] 13 0a ...................... branchFalse8 <addr: 89> 
    0079: [0] 33 12 fc 92 02 9e 7b ....... debug 

    # ejs.es:17598                              return

    0086: [0] be ......................... return 
    0087: [0] 3e 00 ...................... goto8 <addr: 89> 
    0089: [0] 33 12 fe 92 02 b2 1a ....... debug 

    # ejs.es:17599                          }

    0096: [0] 33 12 80 93 02 fc 86 07 .... debug 

    # ejs.es:17600                          let msgs: Object

    0104: [0] 33 12 82 93 02 b6 87 07 .... debug 

    # ejs.es:17601                          if (kinds is String) {

    0112: [0] 5b ......................... getLocalSlot0 
    0113: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0116: [2] 43 ......................... isA 
    0117: [1] 13 23 ...................... branchFalse8 <addr: 154> 
    0119: [0] 33 12 84 93 02 fc 87 07 .... debug 

    # ejs.es:17602                              msgs = {}

    0127: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0131: [1] 97 ......................... putLocalSlot3 
    0132: [0] 33 12 86 93 02 b0 88 07 .... debug 

    # ejs.es:17603                              msgs[kinds] = cflash[kinds]

    0140: [0] 5d ......................... getLocalSlot2 
    0141: [1] 56 ba 11 ................... loadString <> 
    0144: [2] 5b ......................... getLocalSlot0 
    0145: [3] 7c ......................... getObjNameExpr 
    0146: [1] 5e ......................... getLocalSlot3 
    0147: [2] 56 ba 11 ................... loadString <> 
    0150: [3] 5b ......................... getLocalSlot0 
    0151: [4] b2 ......................... putObjNameExpr 
    0152: [0] 3e 5b ...................... goto8 <addr: 245> 
    0154: [0] 33 12 88 93 02 88 89 07 .... debug 

    # ejs.es:17604                          } else if (kinds is Array) {

    0162: [0] 5b ......................... getLocalSlot0 
    0163: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0165: [2] 43 ......................... isA 
    0166: [1] 13 3c ...................... branchFalse8 <addr: 228> 
    0168: [0] 33 12 8a 93 02 fc 87 07 .... debug 

    # ejs.es:17605                              msgs = {}

    0176: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0180: [1] 97 ......................... putLocalSlot3 
    0181: [0] 33 12 8c 93 02 da 89 07 .... debug 

    # ejs.es:17606                              for each (kind in kinds) {

    0189: [0] 5b ......................... getLocalSlot0 
    0190: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0196: [0] 93 ......................... pushResult 
    0197: [1] 39 ......................... dup 
    0198: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0201: [1] 93 ......................... pushResult 
    0202: [2] 98 ......................... putLocalSlot4 
    0203: [1] 33 12 8e 93 02 b0 8a 07 .... debug 

    # ejs.es:17607                                  msgs[kind] = cflash[kind]

    0211: [1] 5d ......................... getLocalSlot2 
    0212: [2] 56 ba 11 ................... loadString <> 
    0215: [3] 5f ......................... getLocalSlot4 
    0216: [4] 7c ......................... getObjNameExpr 
    0217: [2] 5e ......................... getLocalSlot3 
    0218: [3] 56 ba 11 ................... loadString <> 
    0221: [4] 5f ......................... getLocalSlot4 
    0222: [5] b2 ......................... putObjNameExpr 
    0223: [1] 3e e4 ...................... goto8 <addr: 197> 
    0225: [1] 90 ......................... pop 
    0226: [0] 3e 11 ...................... goto8 <addr: 245> 
    0228: [0] 33 12 94 93 02 b4 33 ....... debug 

    # ejs.es:17610                          } else {

    0235: [0] 33 12 96 93 02 8c 8b 07 .... debug 

    # ejs.es:17611                              msgs = cflash

    0243: [0] 5d ......................... getLocalSlot2 
    0244: [1] 97 ......................... putLocalSlot3 
    0245: [0] 33 12 9a 93 02 c8 8b 07 .... debug 

    # ejs.es:17613                          for (kind in msgs) {

    0253: [0] 5e ......................... getLocalSlot3 
    0254: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0260: [0] 93 ......................... pushResult 
    0261: [1] 39 ......................... dup 
    0262: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0265: [1] 93 ......................... pushResult 
    0266: [2] 99 ......................... putLocalSlot5 
    0267: [1] 33 12 9c 93 02 8a 8c 07 .... debug 

    # ejs.es:17614                              let msg: String = msgs[kind]

    0275: [1] 5e ......................... getLocalSlot3 
    0276: [2] 56 ba 11 ................... loadString <> 
    0279: [3] 60 ......................... getLocalSlot5 
    0280: [4] 7c ......................... getObjNameExpr 
    0281: [2] 9a ......................... putLocalSlot6 
    0282: [1] 33 12 9e 93 02 e4 8c 07 .... debug 

    # ejs.es:17615                              if (msg && msg != "") {

    0290: [1] 61 ......................... getLocalSlot6 
    0291: [2] 39 ......................... dup 
    0292: [3] 13 06 ...................... branchFalse8 <addr: 300> 
    0294: [2] 90 ......................... pop 
    0295: [1] 61 ......................... getLocalSlot6 
    0296: [2] 56 ba 11 ................... loadString <> 
    0299: [3] 2c ......................... compareNe 
    0300: [2] 13 44 ...................... branchFalse8 <addr: 370> 
    0302: [1] 33 12 a0 93 02 b4 8d 07 .... debug 

    # ejs.es:17616                                  let connector = getConnector("flash", options)

    0310: [1] 56 b8 08 ................... loadString <flash> 
    0313: [2] 5c ......................... getLocalSlot1 
    0314: [3] 1f d0 94 06 86 80 06 04 .... callScopedName <getConnector> <[ejs.web::View,private]> <argc: 2> 
    0322: [1] 93 ......................... pushResult 
    0323: [2] 9b ......................... putLocalSlot7 
    0324: [1] 33 12 a2 93 02 ba 8e 07 .... debug 

    # ejs.es:17617                                  options.style = "-ejs-flash -ejs-flash" + kind.toPascal()

    0332: [1] 56 d6 8f 07 ................ loadString <-ejs-flash -ejs-flash> 
    0336: [2] 60 ......................... getLocalSlot5 
    0337: [3] 1e 90 1c 00 00 ............. callObjName <toPascal> <> <argc: 0> 
    0342: [2] 93 ......................... pushResult 
    0343: [3] 00 ......................... add 
    0344: [2] 5c ......................... getLocalSlot1 
    0345: [3] b3 98 fa 02 ba 11 .......... putObjName <style> <> 
    0351: [1] 33 12 a4 93 02 82 90 07 .... debug 

    # ejs.es:17618                                  connector.flash(kind, msg, options)

    0359: [1] 62 ......................... getLocalSlot7 
    0360: [2] 60 ......................... getLocalSlot5 
    0361: [3] 61 ......................... getLocalSlot6 
    0362: [4] 5c ......................... getLocalSlot1 
    0363: [5] 1e b8 08 00 06 ............. callObjName <flash> <> <argc: 3> 
    0368: [1] 3e 00 ...................... goto8 <addr: 370> 
    0370: [1] 3e 91 ...................... goto8 <addr: 261> 
    0372: [1] 90 ......................... pop 
    0373: [0] 54 ......................... loadNull 
    0374: [1] bf ......................... returnValue 
    0375: [0] 33 12 aa 93 02 b0 15 ....... debug 

    # ejs.es:17621                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    198     201        225          225       StopIteration
1   iteration    262     265        372          372       StopIteration

VARIABLE:   [kinds-00]  private var kinds : Object
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [cflash-02]  private var cflash
VARIABLE:   [msgs-03]  private var msgs : Object
VARIABLE:   [kind-04]  -hoisted-4 var kind
VARIABLE:   [kind-05]  -hoisted-5 var kind
VARIABLE:   [msg-06]  -hoisted-5 var msg : String
VARIABLE:   [connector-07]  -hoisted-7 var connector

FUNCTION:   [View-62]  [ejs.web::View,private] const function emitFormErrors(record) : Void

     ARG:   [arg-00]   private record
   LOCAL:   [local-01] var errors
   LOCAL:   [local-02] var e

    0000: [0] 33 12 b0 93 02 ee 91 07 .... debug 

    # ejs.es:17624                          if (!record || !record.getErrors) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 86 ......................... logicalNot 
    0010: [1] 39 ......................... dup 
    0011: [2] 14 08 ...................... branchTrue8 <addr: 21> 
    0013: [1] 90 ......................... pop 
    0014: [0] 5b ......................... getLocalSlot0 
    0015: [1] 7b ce 92 07 00 ............. getObjName <getErrors> <> 
    0020: [1] 86 ......................... logicalNot 
    0021: [1] 13 0a ...................... branchFalse8 <addr: 33> 
    0023: [0] 33 12 b2 93 02 9e 7b ....... debug 

    # ejs.es:17625                              return

    0030: [0] be ......................... return 
    0031: [0] 3e 00 ...................... goto8 <addr: 33> 
    0033: [0] 33 12 b4 93 02 b2 1a ....... debug 

    # ejs.es:17626                          }

    0040: [0] 33 12 b6 93 02 e2 92 07 .... debug 

    # ejs.es:17627                          let errors = record.getErrors()

    0048: [0] 5b ......................... getLocalSlot0 
    0049: [1] 1e ce 92 07 00 00 .......... callObjName <getErrors> <> <argc: 0> 
    0055: [0] 93 ......................... pushResult 
    0056: [1] 95 ......................... putLocalSlot1 
    0057: [0] 33 12 b8 93 02 ba 93 07 .... debug 

    # ejs.es:17628                          if (errors) {

    0065: [0] 5c ......................... getLocalSlot1 
    0066: [1] 07 ce 04 f7 f7 ............. branchFalse <addr: 366> 
    0071: [0] 33 12 be 93 02 ee 93 07 .... debug 

    # ejs.es:17631                              write('<div class="-ejs-formError"><h2>The ' + Reflect(record).name.toLower() + ' has ' + 

    0079: [0] 33 12 ba 93 02 ee 93 07 .... debug 

    # ejs.es:17629                              write('<div class="-ejs-formError"><h2>The ' + Reflect(record).name.toLower() + ' has ' + 

    0087: [0] 33 12 be 93 02 c4 95 07 .... debug 

    # ejs.es:17631                                  ((errors.length > 1) ? 'prevent' : 'prevents') + '  it being saved.</h2>\r\n')

    0095: [0] 33 12 bc 93 02 8a 97 07 .... debug 

    # ejs.es:17630                                  errors.length + (errors.length > 1 ? ' errors' : ' error') + ' that ' +

    0103: [0] 33 12 ba 93 02 ee 93 07 .... debug 

    # ejs.es:17629                              write('<div class="-ejs-formError"><h2>The ' + Reflect(record).name.toLower() + ' has ' + 

    0111: [0] 56 c2 98 07 ................ loadString <<div class="-ejs-formError"><h2>The > 
    0115: [1] 5b ......................... getLocalSlot0 
    0116: [2] 17 de 01 02 ................ callGlobalSlot <slot: 111> <argc: 1> 
    0120: [1] 93 ......................... pushResult 
    0121: [2] 7b 9a 13 c4 08 ............. getObjName <name> <public> 
    0126: [2] 1e f8 f1 05 00 00 .......... callObjName <toLower> <> <argc: 0> 
    0132: [1] 93 ......................... pushResult 
    0133: [2] 00 ......................... add 
    0134: [1] 56 8c 99 07 ................ loadString < has > 
    0138: [2] 00 ......................... add 
    0139: [1] 33 12 bc 93 02 8a 97 07 .... debug 

    # ejs.es:17630                                  errors.length + (errors.length > 1 ? ' errors' : ' error') + ' that ' +

    0147: [1] 5c ......................... getLocalSlot1 
    0148: [2] 7b f4 3b 00 ................ getObjName <length> <> 
    0152: [2] 00 ......................... add 
    0153: [1] 5c ......................... getLocalSlot1 
    0154: [2] 7b f4 3b 00 ................ getObjName <length> <> 
    0158: [2] 45 ......................... load1 
    0159: [3] 29 ......................... compareGt 
    0160: [2] 13 06 ...................... branchFalse8 <addr: 168> 
    0162: [1] 56 98 99 07 ................ loadString < errors> 
    0166: [2] 3e 04 ...................... goto8 <addr: 172> 
    0168: [2] 56 a8 99 07 ................ loadString < error> 
    0172: [3] 00 ......................... add 
    0173: [2] 56 b6 99 07 ................ loadString < that > 
    0177: [3] 00 ......................... add 
    0178: [2] 33 12 be 93 02 c4 95 07 .... debug 

    # ejs.es:17631                                  ((errors.length > 1) ? 'prevent' : 'prevents') + '  it being saved.</h2>\r\n')

    0186: [2] 5c ......................... getLocalSlot1 
    0187: [3] 7b f4 3b 00 ................ getObjName <length> <> 
    0191: [3] 45 ......................... load1 
    0192: [4] 29 ......................... compareGt 
    0193: [3] 13 06 ...................... branchFalse8 <addr: 201> 
    0195: [2] 56 c4 99 07 ................ loadString <prevent> 
    0199: [3] 3e 04 ...................... goto8 <addr: 205> 
    0201: [3] 56 d4 99 07 ................ loadString <prevents> 
    0205: [4] 00 ......................... add 
    0206: [3] 56 e6 99 07 ................ loadString <  it being saved.</h2>
> 
    0210: [4] 00 ......................... add 
    0211: [3] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0217: [2] 33 12 c0 93 02 98 9a 07 .... debug 

    # ejs.es:17632                              write('    <p>There were problems with the following fields:</p>\r\n')

    0225: [2] 56 c6 9b 07 ................ loadString <    <p>There were problems with the following fields:</p>
> 
    0229: [3] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0235: [2] 33 12 c2 93 02 be 9c 07 .... debug 

    # ejs.es:17633                              write('    <ul>\r\n')

    0243: [2] 56 8a 9d 07 ................ loadString <    <ul>
> 
    0247: [3] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0253: [2] 33 12 c4 93 02 a0 9d 07 .... debug 

    # ejs.es:17634                              for (e in errors) {

    0261: [2] 5c ......................... getLocalSlot1 
    0262: [3] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0268: [2] 93 ......................... pushResult 
    0269: [3] 39 ......................... dup 
    0270: [4] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0273: [3] 93 ......................... pushResult 
    0274: [4] 96 ......................... putLocalSlot2 
    0275: [3] 33 12 c6 93 02 e8 9d 07 .... debug 

    # ejs.es:17635                                  write('        <li>' + e.toPascal() + ' ' + errors[e] + '</li>\r\n')

    0283: [3] 56 9a 9f 07 ................ loadString <        <li>> 
    0287: [4] 5d ......................... getLocalSlot2 
    0288: [5] 1e 90 1c 00 00 ............. callObjName <toPascal> <> <argc: 0> 
    0293: [4] 93 ......................... pushResult 
    0294: [5] 00 ......................... add 
    0295: [4] 56 e8 ca 02 ................ loadString < > 
    0299: [5] 00 ......................... add 
    0300: [4] 5c ......................... getLocalSlot1 
    0301: [5] 56 ba 11 ................... loadString <> 
    0304: [6] 5d ......................... getLocalSlot2 
    0305: [7] 7c ......................... getObjNameExpr 
    0306: [5] 00 ......................... add 
    0307: [4] 56 b4 9f 07 ................ loadString <</li>
> 
    0311: [5] 00 ......................... add 
    0312: [4] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0318: [3] 3e cd ...................... goto8 <addr: 269> 
    0320: [3] 90 ......................... pop 
    0321: [2] 33 12 c8 93 02 86 35 ....... debug 

    # ejs.es:17636                              }

    0328: [2] 33 12 ca 93 02 c4 9f 07 .... debug 

    # ejs.es:17637                              write('    </ul>\r\n')

    0336: [2] 56 92 a0 07 ................ loadString <    </ul>
> 
    0340: [3] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0346: [2] 33 12 cc 93 02 aa a0 07 .... debug 

    # ejs.es:17638                              write('</div>\r\n')

    0354: [2] 56 90 d4 01 ................ loadString <</div>
> 
    0358: [3] 1f 9c 66 c4 08 02 .......... callScopedName <write> <public> <argc: 1> 
    0364: [2] 3e 00 ...................... goto8 <addr: 366> 
    0366: [2] 54 ......................... loadNull 
    0367: [3] bf ......................... returnValue 
    0368: [0] 33 12 d0 93 02 b0 15 ....... debug 

    # ejs.es:17640                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    270     273        320          320       StopIteration

VARIABLE:   [record-00]  private var record
VARIABLE:   [errors-01]  private var errors
VARIABLE:   [e-02]  -hoisted-2 var e

FUNCTION:   [View-63]  [ejs.web::View,private] const function getConnector(kind: String, options: Object) : void

     ARG:   [arg-00]   private kind : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var views
   LOCAL:   [local-03] var connectorName
   LOCAL:   [local-04] var name
   LOCAL:   [local-05] var e : Error

    0000: [0] 33 12 de 93 02 80 a2 07 .... debug 

    # ejs.es:17647                          let views = request.config.mvc.views

    0008: [0] 57 ......................... loadThis 
    0009: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0013: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0018: [1] 7b b4 d3 03 ba 11 .......... getObjName <mvc> <> 
    0024: [1] 7b ec 72 00 ................ getObjName <views> <> 
    0028: [1] 96 ......................... putLocalSlot2 
    0029: [0] 33 12 e0 93 02 e2 a2 07 .... debug 

    # ejs.es:17648                          let connectorName = options["connector"] || views.connectors[kind] || views.connectors["rest"] || "html"

    0037: [0] 5c ......................... getLocalSlot1 
    0038: [1] 56 ba 11 ................... loadString <> 
    0041: [2] 56 bc 94 06 ................ loadString <connector> 
    0045: [3] 7c ......................... getObjNameExpr 
    0046: [1] 39 ......................... dup 
    0047: [2] 14 26 ...................... branchTrue8 <addr: 87> 
    0049: [1] 90 ......................... pop 
    0050: [0] 5d ......................... getLocalSlot2 
    0051: [1] 7b 80 d6 03 00 ............. getObjName <connectors> <> 
    0056: [1] 56 ba 11 ................... loadString <> 
    0059: [2] 5b ......................... getLocalSlot0 
    0060: [3] 7c ......................... getObjNameExpr 
    0061: [1] 39 ......................... dup 
    0062: [2] 14 17 ...................... branchTrue8 <addr: 87> 
    0064: [1] 90 ......................... pop 
    0065: [0] 5d ......................... getLocalSlot2 
    0066: [1] 7b 80 d6 03 00 ............. getObjName <connectors> <> 
    0071: [1] 56 ba 11 ................... loadString <> 
    0074: [2] 56 e8 a4 07 ................ loadString <rest> 
    0078: [3] 7c ......................... getObjNameExpr 
    0079: [1] 39 ......................... dup 
    0080: [2] 14 05 ...................... branchTrue8 <addr: 87> 
    0082: [1] 90 ......................... pop 
    0083: [0] 56 9a fb 05 ................ loadString <html> 
    0087: [1] 97 ......................... putLocalSlot3 
    0088: [0] 33 12 e2 93 02 f2 a4 07 .... debug 

    # ejs.es:17649                          views.connectors[kind] = connectorName

    0096: [0] 5e ......................... getLocalSlot3 
    0097: [1] 5d ......................... getLocalSlot2 
    0098: [2] 7b 80 d6 03 00 ............. getObjName <connectors> <> 
    0103: [2] 56 ba 11 ................... loadString <> 
    0106: [3] 5b ......................... getLocalSlot0 
    0107: [4] b2 ......................... putObjNameExpr 
    0108: [0] 33 12 e4 93 02 d8 a5 07 .... debug 

    # ejs.es:17650                          let name = (connectorName + "Connector").toPascal()

    0116: [0] 5e ......................... getLocalSlot3 
    0117: [1] 56 d8 a6 07 ................ loadString <Connector> 
    0121: [2] 00 ......................... add 
    0122: [1] 1e 90 1c 00 00 ............. callObjName <toPascal> <> <argc: 0> 
    0127: [0] 93 ......................... pushResult 
    0128: [1] 98 ......................... putLocalSlot4 
    0129: [0] 33 12 e6 93 02 98 68 ....... debug 

    # ejs.es:17651                          try {

    0136: [0] 33 12 e8 93 02 ec a6 07 .... debug 

    # ejs.es:17652                              return new global[name](request, this)

    0144: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0146: [1] 56 ba 11 ................... loadString <> 
    0149: [2] 5f ......................... getLocalSlot4 
    0150: [3] 7c ......................... getObjNameExpr 
    0151: [1] 89 ......................... new 
    0152: [1] 57 ......................... loadThis 
    0153: [2] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0157: [2] 57 ......................... loadThis 
    0158: [3] 20 04 ...................... callConstructor <argc: 2> 
    0160: [1] bf ......................... returnValue 
    0161: [0] 3e 22 ...................... goto8 <addr: 197> 
    0163: [0] 33 12 ea 93 02 8a 6b ....... debug 

    # ejs.es:17653                          } catch (e: Error) {

    0170: [0] 92 ......................... pushCatchArg 
    0171: [1] b6 0a 02 ................... putBlockSlot <slot: 5> <1> 
    0174: [0] 33 12 ec 93 02 da a7 07 .... debug 

    # ejs.es:17654                              throw new Error("Undefined view connector: " + name)

    0182: [0] 7e 2c ...................... getGlobalSlot <slot: 22> 
    0184: [1] 89 ......................... new 
    0185: [1] 56 e4 a8 07 ................ loadString <Undefined view connector: > 
    0189: [2] 7d 08 02 ................... getBlockSlot <slot: 4> <1> 
    0192: [3] 00 ......................... add 
    0193: [2] 20 02 ...................... callConstructor <argc: 1> 
    0195: [1] c6 ......................... throw 
    0196: [1] 3c ......................... endException 
    0197: [1] 54 ......................... loadNull 
    0198: [2] bf ......................... returnValue 
    0199: [0] 33 12 f0 93 02 b0 15 ....... debug 

    # ejs.es:17656                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch        129     163        163          197       Error

VARIABLE:   [kind-00]  private var kind : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [views-02]  private var views
VARIABLE:   [connectorName-03]  private var connectorName
VARIABLE:   [name-04]  private var name
VARIABLE:   [e-05]  -hoisted-5 var e : Error

FUNCTION:   [View-64]  [ejs.web::View,private] const function setOptions(field: String, options: Object) : Object

     ARG:   [arg-00]   private field : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 33 12 fc 93 02 b6 aa 07 .... debug 

    # ejs.es:17662                          if (options is String)

    0008: [0] 5c ......................... getLocalSlot1 
    0009: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0012: [2] 43 ......................... isA 
    0013: [1] 13 16 ...................... branchFalse8 <addr: 37> 
    0015: [0] 33 12 fe 93 02 fc aa 07 .... debug 

    # ejs.es:17663                              options = {action: options}

    0023: [0] 56 00 ...................... loadString <> 
    0025: [1] 56 ee 01 ................... loadString <action> 
    0028: [2] 5c ......................... getLocalSlot1 
    0029: [3] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0034: [1] 95 ......................... putLocalSlot1 
    0035: [0] 3e 00 ...................... goto8 <addr: 37> 
    0037: [0] 33 12 80 94 02 d4 ab 07 .... debug 

    # ejs.es:17664                          if (currentRecord && currentRecord.id) {

    0045: [0] 57 ......................... loadThis 
    0046: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0053: [1] 39 ......................... dup 
    0054: [2] 13 0f ...................... branchFalse8 <addr: 71> 
    0056: [1] 90 ......................... pop 
    0057: [0] 57 ......................... loadThis 
    0058: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0065: [1] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0071: [1] 07 d2 02 f7 f7 ............. branchFalse <addr: 245> 
    0076: [0] 33 12 82 94 02 be ac 07 .... debug 

    # ejs.es:17665                              options.id ||= field + '_' + currentRecord.id

    0084: [0] 5c ......................... getLocalSlot1 
    0085: [1] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0091: [1] 39 ......................... dup 
    0092: [2] 14 15 ...................... branchTrue8 <addr: 115> 
    0094: [1] 90 ......................... pop 
    0095: [0] 5b ......................... getLocalSlot0 
    0096: [1] 56 dc 6f ................... loadString <_> 
    0099: [2] 00 ......................... add 
    0100: [1] 57 ......................... loadThis 
    0101: [2] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0108: [2] 7b ae 92 01 ba 11 .......... getObjName <id> <> 
    0114: [2] 00 ......................... add 
    0115: [1] 5c ......................... getLocalSlot1 
    0116: [2] b3 ae 92 01 ba 11 .......... putObjName <id> <> 
    0122: [0] 33 12 84 94 02 ba ad 07 .... debug 

    # ejs.es:17666                              if (currentRecord.hasError(field)) {

    0130: [0] 57 ......................... loadThis 
    0131: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0138: [1] 5b ......................... getLocalSlot0 
    0139: [2] 1e a4 ae 07 ba 11 02 ....... callObjName <hasError> <> <argc: 1> 
    0146: [0] 93 ......................... pushResult 
    0147: [1] 13 1d ...................... branchFalse8 <addr: 178> 
    0149: [0] 33 12 86 94 02 b6 ae 07 .... debug 

    # ejs.es:17667                                  options.style += " -ejs-fieldError"

    0157: [0] 5c ......................... getLocalSlot1 
    0158: [1] 7b 98 fa 02 ba 11 .......... getObjName <style> <> 
    0164: [1] 56 a6 af 07 ................ loadString < -ejs-fieldError> 
    0168: [2] 00 ......................... add 
    0169: [1] 5c ......................... getLocalSlot1 
    0170: [2] b3 98 fa 02 ba 11 .......... putObjName <style> <> 
    0176: [0] 3e 00 ...................... goto8 <addr: 178> 
    0178: [0] 33 12 88 94 02 86 35 ....... debug 

    # ejs.es:17668                              }

    0185: [0] 33 12 8a 94 02 c8 af 07 .... debug 

    # ejs.es:17669                              options.fieldName ||= Reflect(currentRecord).name.toCamel() + '.' + field

    0193: [0] 5c ......................... getLocalSlot1 
    0194: [1] 7b b2 ab 06 ba 11 .......... getObjName <fieldName> <> 
    0200: [1] 39 ......................... dup 
    0201: [2] 14 21 ...................... branchTrue8 <addr: 236> 
    0203: [1] 90 ......................... pop 
    0204: [0] 57 ......................... loadThis 
    0205: [1] 7b ea ff 05 86 80 06 ....... getObjName <currentRecord> <[ejs.web::View,private]> 
    0212: [1] 17 de 01 02 ................ callGlobalSlot <slot: 111> <argc: 1> 
    0216: [0] 93 ......................... pushResult 
    0217: [1] 7b 9a 13 c4 08 ............. getObjName <name> <public> 
    0222: [1] 1e fc b0 07 00 00 .......... callObjName <toCamel> <> <argc: 0> 
    0228: [0] 93 ......................... pushResult 
    0229: [1] 56 fc 9f 05 ................ loadString <.> 
    0233: [2] 00 ......................... add 
    0234: [1] 5b ......................... getLocalSlot0 
    0235: [2] 00 ......................... add 
    0236: [1] 5c ......................... getLocalSlot1 
    0237: [2] b3 b2 ab 06 ba 11 .......... putObjName <fieldName> <> 
    0243: [0] 3e 22 ...................... goto8 <addr: 279> 
    0245: [0] 33 12 8c 94 02 b4 33 ....... debug 

    # ejs.es:17670                          } else {

    0252: [0] 33 12 8e 94 02 8c b1 07 .... debug 

    # ejs.es:17671                              options.fieldName ||= field

    0260: [0] 5c ......................... getLocalSlot1 
    0261: [1] 7b b2 ab 06 ba 11 .......... getObjName <fieldName> <> 
    0267: [1] 39 ......................... dup 
    0268: [2] 14 02 ...................... branchTrue8 <addr: 272> 
    0270: [1] 90 ......................... pop 
    0271: [0] 5b ......................... getLocalSlot0 
    0272: [1] 5c ......................... getLocalSlot1 
    0273: [2] b3 b2 ab 06 ba 11 .......... putObjName <fieldName> <> 
    0279: [0] 33 12 90 94 02 b2 1a ....... debug 

    # ejs.es:17672                          }

    0286: [0] 33 12 92 94 02 e4 b1 07 .... debug 

    # ejs.es:17673                          options.style ||= field

    0294: [0] 5c ......................... getLocalSlot1 
    0295: [1] 7b 98 fa 02 ba 11 .......... getObjName <style> <> 
    0301: [1] 39 ......................... dup 
    0302: [2] 14 02 ...................... branchTrue8 <addr: 306> 
    0304: [1] 90 ......................... pop 
    0305: [0] 5b ......................... getLocalSlot0 
    0306: [1] 5c ......................... getLocalSlot1 
    0307: [2] b3 98 fa 02 ba 11 .......... putObjName <style> <> 
    0313: [0] 33 12 94 94 02 ac b2 07 .... debug 

    # ejs.es:17674                          return options

    0321: [0] 5c ......................... getLocalSlot1 
    0322: [1] bf ......................... returnValue 
    
VARIABLE:   [field-00]  private var field : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [View-65]  ejs.web const function getValue(record: Object, field: String, options: Object) : String

     ARG:   [arg-00]   private record : Object
     ARG:   [arg-01]   private field : String
     ARG:   [arg-02]   private options : Object
   LOCAL:   [local-03] var value
   LOCAL:   [local-04] var typeName
   LOCAL:   [local-05] var fmt
   LOCAL:   [local-06] var mvc
   LOCAL:   [local-07] var part

    0000: [0] 33 12 a4 94 02 8a b4 07 .... debug 

    # ejs.es:17682                          let value

    0008: [0] 33 12 a6 94 02 b6 b4 07 .... debug 

    # ejs.es:17683                          if (record && field) {

    0016: [0] 5b ......................... getLocalSlot0 
    0017: [1] 39 ......................... dup 
    0018: [2] 13 02 ...................... branchFalse8 <addr: 22> 
    0020: [1] 90 ......................... pop 
    0021: [0] 5c ......................... getLocalSlot1 
    0022: [1] 13 11 ...................... branchFalse8 <addr: 41> 
    0024: [0] 33 12 a8 94 02 fc b4 07 .... debug 

    # ejs.es:17684                              value = record[field]

    0032: [0] 5b ......................... getLocalSlot0 
    0033: [1] 56 ba 11 ................... loadString <> 
    0036: [2] 5c ......................... getLocalSlot1 
    0037: [3] 7c ......................... getObjNameExpr 
    0038: [1] 97 ......................... putLocalSlot3 
    0039: [0] 3e 00 ...................... goto8 <addr: 41> 
    0041: [0] 33 12 aa 94 02 b2 1a ....... debug 

    # ejs.es:17685                          }

    0048: [0] 33 12 ac 94 02 c8 b5 07 .... debug 

    # ejs.es:17686                          value ||= options.value

    0056: [0] 5e ......................... getLocalSlot3 
    0057: [1] 39 ......................... dup 
    0058: [2] 14 08 ...................... branchTrue8 <addr: 68> 
    0060: [1] 90 ......................... pop 
    0061: [0] 5d ......................... getLocalSlot2 
    0062: [1] 7b 94 c1 01 ba 11 .......... getObjName <value> <> 
    0068: [1] 97 ......................... putLocalSlot3 
    0069: [0] 33 12 ae 94 02 90 b6 07 .... debug 

    # ejs.es:17687                          if (!value == null || value == undefined) {

    0077: [0] 5e ......................... getLocalSlot3 
    0078: [1] 86 ......................... logicalNot 
    0079: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0081: [2] 25 ......................... compareEq 
    0082: [1] 39 ......................... dup 
    0083: [2] 14 06 ...................... branchTrue8 <addr: 91> 
    0085: [1] 90 ......................... pop 
    0086: [0] 5e ......................... getLocalSlot3 
    0087: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0090: [2] 25 ......................... compareEq 
    0091: [1] 13 65 ...................... branchFalse8 <addr: 194> 
    0093: [0] 33 12 b0 94 02 80 b7 07 .... debug 

    # ejs.es:17688                              value = record

    0101: [0] 5b ......................... getLocalSlot0 
    0102: [1] 97 ......................... putLocalSlot3 
    0103: [0] 33 12 b2 94 02 be b7 07 .... debug 

    # ejs.es:17689                              if (value) {

    0111: [0] 5e ......................... getLocalSlot3 
    0112: [1] 13 36 ...................... branchFalse8 <addr: 168> 
    0114: [0] 33 12 b4 94 02 f8 b7 07 .... debug 

    # ejs.es:17690                                  for each (let part in field.split(".")) {

    0122: [0] 5c ......................... getLocalSlot1 
    0123: [1] 56 fc 9f 05 ................ loadString <.> 
    0127: [2] 1e d4 c4 05 c4 08 02 ....... callObjName <split> <public> <argc: 1> 
    0134: [0] 93 ......................... pushResult 
    0135: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0141: [0] 93 ......................... pushResult 
    0142: [1] 39 ......................... dup 
    0143: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0146: [1] 93 ......................... pushResult 
    0147: [2] 9b ......................... putLocalSlot7 
    0148: [1] 33 12 b6 94 02 f4 b8 07 .... debug 

    # ejs.es:17691                                      value = value[part]

    0156: [1] 5e ......................... getLocalSlot3 
    0157: [2] 56 ba 11 ................... loadString <> 
    0160: [3] 62 ......................... getLocalSlot7 
    0161: [4] 7c ......................... getObjNameExpr 
    0162: [2] 97 ......................... putLocalSlot3 
    0163: [1] 3e e9 ...................... goto8 <addr: 142> 
    0165: [1] 90 ......................... pop 
    0166: [0] 3e 00 ...................... goto8 <addr: 168> 
    0168: [0] 33 12 ba 94 02 86 35 ....... debug 

    # ejs.es:17693                              }

    0175: [0] 33 12 bc 94 02 cc b9 07 .... debug 

    # ejs.es:17694                              value ||= ""

    0183: [0] 5e ......................... getLocalSlot3 
    0184: [1] 39 ......................... dup 
    0185: [2] 14 04 ...................... branchTrue8 <addr: 191> 
    0187: [1] 90 ......................... pop 
    0188: [0] 56 ba 11 ................... loadString <> 
    0191: [1] 97 ......................... putLocalSlot3 
    0192: [0] 3e 00 ...................... goto8 <addr: 194> 
    0194: [0] 33 12 c0 94 02 86 ba 07 .... debug 

    # ejs.es:17696                          if (options.render != undefined && options.render is Function) {

    0202: [0] 5d ......................... getLocalSlot2 
    0203: [1] 7b a8 66 ba 11 ............. getObjName <render> <> 
    0208: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0211: [2] 2c ......................... compareNe 
    0212: [1] 39 ......................... dup 
    0213: [2] 13 0a ...................... branchFalse8 <addr: 225> 
    0215: [1] 90 ......................... pop 
    0216: [0] 5d ......................... getLocalSlot2 
    0217: [1] 7b a8 66 ba 11 ............. getObjName <render> <> 
    0222: [1] 7e 4e ...................... getGlobalSlot <slot: 39> 
    0224: [2] 43 ......................... isA 
    0225: [1] 13 31 ...................... branchFalse8 <addr: 276> 
    0227: [0] 33 12 c2 94 02 a0 bb 07 .... debug 

    # ejs.es:17697                              result = options.render(value, record, field).toString()

    0235: [0] 5d ......................... getLocalSlot2 
    0236: [1] 5e ......................... getLocalSlot3 
    0237: [2] 5b ......................... getLocalSlot0 
    0238: [3] 5c ......................... getLocalSlot1 
    0239: [4] 1e a8 66 ba 11 06 .......... callObjName <render> <> <argc: 3> 
    0245: [0] 93 ......................... pushResult 
    0246: [1] 1e c2 8b 01 00 00 .......... callObjName <toString> <> <argc: 0> 
    0252: [0] 93 ......................... pushResult 
    0253: [1] b4 f2 dc 05 ba 11 .......... putScopedName <result> <> 
    0259: [0] 33 12 c4 94 02 b2 bc 07 .... debug 

    # ejs.es:17698                              return result

    0267: [0] 79 f2 dc 05 ba 11 .......... getScopedName <result> <> 
    0273: [1] bf ......................... returnValue 
    0274: [0] 3e 00 ...................... goto8 <addr: 276> 
    0276: [0] 33 12 c8 94 02 ee bc 07 .... debug 

    # ejs.es:17700                          if (options.formatter != undefined && options.formatter is Function) {

    0284: [0] 5d ......................... getLocalSlot2 
    0285: [1] 7b 94 80 03 ba 11 .......... getObjName <formatter> <> 
    0291: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0294: [2] 2c ......................... compareNe 
    0295: [1] 39 ......................... dup 
    0296: [2] 13 0b ...................... branchFalse8 <addr: 309> 
    0298: [1] 90 ......................... pop 
    0299: [0] 5d ......................... getLocalSlot2 
    0300: [1] 7b 94 80 03 ba 11 .......... getObjName <formatter> <> 
    0306: [1] 7e 4e ...................... getGlobalSlot <slot: 39> 
    0308: [2] 43 ......................... isA 
    0309: [1] 13 1c ...................... branchFalse8 <addr: 339> 
    0311: [0] 33 12 ca 94 02 94 be 07 .... debug 

    # ejs.es:17701                              return options.formatter(value).toString()

    0319: [0] 5d ......................... getLocalSlot2 
    0320: [1] 5e ......................... getLocalSlot3 
    0321: [2] 1e 94 80 03 ba 11 02 ....... callObjName <formatter> <> <argc: 1> 
    0328: [0] 93 ......................... pushResult 
    0329: [1] 1e c2 8b 01 00 00 .......... callObjName <toString> <> <argc: 0> 
    0335: [0] 93 ......................... pushResult 
    0336: [1] bf ......................... returnValue 
    0337: [0] 3e 00 ...................... goto8 <addr: 339> 
    0339: [0] 33 12 cc 94 02 b2 1a ....... debug 

    # ejs.es:17702                          }

    0346: [0] 33 12 ce 94 02 9c bf 07 .... debug 

    # ejs.es:17703                          let typeName = Reflect(value).typeName

    0354: [0] 5e ......................... getLocalSlot3 
    0355: [1] 17 de 01 02 ................ callGlobalSlot <slot: 111> <argc: 1> 
    0359: [0] 93 ......................... pushResult 
    0360: [1] 7b 8a bf 07 ba 11 .......... getObjName <typeName> <> 
    0366: [1] 98 ......................... putLocalSlot4 
    0367: [0] 33 12 d4 94 02 82 c0 07 .... debug 

    # ejs.es:17706                          let fmt

    0375: [0] 33 12 d6 94 02 b2 c0 07 .... debug 

    # ejs.es:17707                          let mvc = request.config.mvc

    0383: [0] 57 ......................... loadThis 
    0384: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0388: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0393: [1] 7b b4 d3 03 ba 11 .......... getObjName <mvc> <> 
    0399: [1] 9a ......................... putLocalSlot6 
    0400: [0] 33 12 d8 94 02 84 c1 07 .... debug 

    # ejs.es:17708                          if (mvc.views && config.views.formats) {

    0408: [0] 61 ......................... getLocalSlot6 
    0409: [1] 7b ec 72 00 ................ getObjName <views> <> 
    0413: [1] 39 ......................... dup 
    0414: [2] 13 12 ...................... branchFalse8 <addr: 434> 
    0416: [1] 90 ......................... pop 
    0417: [0] 57 ......................... loadThis 
    0418: [1] 7b a2 14 86 80 06 .......... getObjName <config> <[ejs.web::View,private]> 
    0424: [1] 7b ec 72 ba 11 ............. getObjName <views> <> 
    0429: [1] 7b da d6 03 00 ............. getObjName <formats> <> 
    0434: [1] 13 1a ...................... branchFalse8 <addr: 462> 
    0436: [0] 33 12 da 94 02 ee c1 07 .... debug 

    # ejs.es:17709                              fmt = mvc.views.formats[typeName]

    0444: [0] 61 ......................... getLocalSlot6 
    0445: [1] 7b ec 72 00 ................ getObjName <views> <> 
    0449: [1] 7b da d6 03 00 ............. getObjName <formats> <> 
    0454: [1] 56 ba 11 ................... loadString <> 
    0457: [2] 5f ......................... getLocalSlot4 
    0458: [3] 7c ......................... getObjNameExpr 
    0459: [1] 99 ......................... putLocalSlot5 
    0460: [0] 3e 00 ...................... goto8 <addr: 462> 
    0462: [0] 33 12 de 94 02 d2 c2 07 .... debug 

    # ejs.es:17711                          if (fmt == undefined || fmt == null || fmt == "") {

    0470: [0] 60 ......................... getLocalSlot5 
    0471: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0474: [2] 25 ......................... compareEq 
    0475: [1] 39 ......................... dup 
    0476: [2] 14 0e ...................... branchTrue8 <addr: 492> 
    0478: [1] 90 ......................... pop 
    0479: [0] 60 ......................... getLocalSlot5 
    0480: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0482: [2] 25 ......................... compareEq 
    0483: [1] 39 ......................... dup 
    0484: [2] 14 06 ...................... branchTrue8 <addr: 492> 
    0486: [1] 90 ......................... pop 
    0487: [0] 60 ......................... getLocalSlot5 
    0488: [1] 56 ba 11 ................... loadString <> 
    0491: [2] 25 ......................... compareEq 
    0492: [1] 13 13 ...................... branchFalse8 <addr: 513> 
    0494: [0] 33 12 e0 94 02 d2 c3 07 .... debug 

    # ejs.es:17712                              return value.toString()

    0502: [0] 5e ......................... getLocalSlot3 
    0503: [1] 1e c2 8b 01 00 00 .......... callObjName <toString> <> <argc: 0> 
    0509: [0] 93 ......................... pushResult 
    0510: [1] bf ......................... returnValue 
    0511: [0] 3e 00 ...................... goto8 <addr: 513> 
    0513: [0] 33 12 e2 94 02 b2 1a ....... debug 

    # ejs.es:17713                          }

    0520: [0] 33 12 e4 94 02 a2 c4 07 .... debug 

    # ejs.es:17714                          switch (typeName) {

    0528: [0] 5f ......................... getLocalSlot4 
    0529: [1] 33 12 e6 94 02 e2 c4 07 .... debug 

    # ejs.es:17715                          case "Date":

    0537: [1] 39 ......................... dup 
    0538: [2] 56 94 c5 07 ................ loadString <Date> 
    0542: [3] 26 ......................... compareStrictlyEq 
    0543: [2] 13 1a ...................... branchFalse8 <addr: 571> 
    0545: [1] 33 12 e8 94 02 9e c5 07 .... debug 

    # ejs.es:17716                              return new Date(value).format(fmt)

    0553: [1] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0555: [2] 89 ......................... new 
    0556: [2] 5e ......................... getLocalSlot3 
    0557: [3] 20 02 ...................... callConstructor <argc: 1> 
    0559: [2] 60 ......................... getLocalSlot5 
    0560: [3] 1e 84 c6 07 c4 08 02 ....... callObjName <format> <public> <argc: 1> 
    0567: [1] 93 ......................... pushResult 
    0568: [2] bf ......................... returnValue 
    0569: [0] 3e 0f ...................... goto8 <addr: 586> 
    0571: [0] 33 12 ea 94 02 92 c6 07 .... debug 

    # ejs.es:17717                          case "Number":

    0579: [0] 39 ......................... dup 
    0580: [1] 56 fe 61 ................... loadString <Number> 
    0583: [2] 26 ......................... compareStrictlyEq 
    0584: [1] 13 12 ...................... branchFalse8 <addr: 604> 
    0586: [0] 33 12 ec 94 02 c8 c6 07 .... debug 

    # ejs.es:17718                              return fmt.format(value)

    0594: [0] 60 ......................... getLocalSlot5 
    0595: [1] 5e ......................... getLocalSlot3 
    0596: [2] 1e 84 c6 07 00 02 .......... callObjName <format> <> <argc: 1> 
    0602: [0] 93 ......................... pushResult 
    0603: [1] bf ......................... returnValue 
    0604: [0] 90 ......................... pop 
    0605: [-1] 33 12 f0 94 02 9a c7 07 .... debug 

    # ejs.es:17720                          return value.toString()

    0613: [-1] 5e ......................... getLocalSlot3 
    0614: [0] 1e c2 8b 01 00 00 .......... callObjName <toString> <> <argc: 0> 
    0620: [-1] 93 ......................... pushResult 
    0621: [0] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    143     146        165          165       StopIteration

VARIABLE:   [record-00]  private var record : Object
VARIABLE:   [field-01]  private var field : String
VARIABLE:   [options-02]  private var options : Object
VARIABLE:   [value-03]  private var value
VARIABLE:   [typeName-04]  private var typeName
VARIABLE:   [fmt-05]  private var fmt
VARIABLE:   [mvc-06]  private var mvc
VARIABLE:   [part-07]  -hoisted-7 var part

FUNCTION:   [View-66]  ejs.web const function date(fmt: String) : String

     ARG:   [arg-00]   private fmt : String
   LOCAL:   [local-01] var --fun_32943--89941314-- : Function

    0000: [0] 33 12 84 95 02 bc c8 07 .... debug 

    # ejs.es:17730                          return function (data: String): String {

    0008: [0] 35 02 00 ................... defineFunction <slot: 1> <0> 
    0011: [0] 33 12 84 95 02 bc c8 07 .... debug 

    # ejs.es:17730                          return function (data: String): String {

    0019: [0] 33 12 88 95 02 b2 1a ....... debug 

    # ejs.es:17732                          }

    0026: [0] 5c ......................... getLocalSlot1 
    0027: [1] bf ......................... returnValue 
    
VARIABLE:   [fmt-00]  private var fmt : String

FUNCTION:   [--fun_32943--89941314---01]  private function --fun_32943--89941314--(data: String) : String

     ARG:   [arg-00]   private data : String

    0000: [0] 33 12 86 95 02 a6 c9 07 .... debug 

    # ejs.es:17731                              return new Date(data).format(fmt)

    0008: [0] 7e 1e ...................... getGlobalSlot <slot: 15> 
    0010: [1] 89 ......................... new 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 20 02 ...................... callConstructor <argc: 1> 
    0014: [1] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0017: [2] 1e 84 c6 07 c4 08 02 ....... callObjName <format> <public> <argc: 1> 
    0024: [0] 93 ......................... pushResult 
    0025: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data : String

FUNCTION:   [View-67]  ejs.web const function currency(fmt: String) : String

     ARG:   [arg-00]   private fmt : String
   LOCAL:   [local-01] var --fun_32977--89941314-- : Function

    0000: [0] 33 12 9c 95 02 bc c8 07 .... debug 

    # ejs.es:17742                          return function (data: String): String {

    0008: [0] 35 02 00 ................... defineFunction <slot: 1> <0> 
    0011: [0] 33 12 9c 95 02 bc c8 07 .... debug 

    # ejs.es:17742                          return function (data: String): String {

    0019: [0] 33 12 a0 95 02 b2 1a ....... debug 

    # ejs.es:17744                          }

    0026: [0] 5c ......................... getLocalSlot1 
    0027: [1] bf ......................... returnValue 
    
VARIABLE:   [fmt-00]  private var fmt : String

FUNCTION:   [--fun_32977--89941314---01]  private function --fun_32977--89941314--(data: String) : String

     ARG:   [arg-00]   private data : String

    0000: [0] 33 12 9e 95 02 9c cb 07 .... debug 

    # ejs.es:17743                              return fmt.format(data)

    0008: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1e 84 c6 07 c4 08 02 ....... callObjName <format> <public> <argc: 1> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data : String

FUNCTION:   [View-68]  ejs.web const function number(fmt: String) : String

     ARG:   [arg-00]   private fmt : String
   LOCAL:   [local-01] var --fun_33007--89941314-- : Function

    0000: [0] 33 12 b4 95 02 bc c8 07 .... debug 

    # ejs.es:17754                          return function (data: String): String {

    0008: [0] 35 02 00 ................... defineFunction <slot: 1> <0> 
    0011: [0] 33 12 b4 95 02 bc c8 07 .... debug 

    # ejs.es:17754                          return function (data: String): String {

    0019: [0] 33 12 b8 95 02 b2 1a ....... debug 

    # ejs.es:17756                          }

    0026: [0] 5c ......................... getLocalSlot1 
    0027: [1] bf ......................... returnValue 
    
VARIABLE:   [fmt-00]  private var fmt : String

FUNCTION:   [--fun_33007--89941314---01]  private function --fun_33007--89941314--(data: String) : String

     ARG:   [arg-00]   private data : String

    0000: [0] 33 12 b6 95 02 9c cb 07 .... debug 

    # ejs.es:17755                              return fmt.format(data)

    0008: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1e 84 c6 07 c4 08 02 ....... callObjName <format> <public> <argc: 1> 
    0019: [0] 93 ......................... pushResult 
    0020: [1] bf ......................... returnValue 
    
VARIABLE:   [data-00]  private var data : String
VARIABLE:   [View-69]  [ejs.web::View,private] const static var htmlOptions : Object

FUNCTION:   [View-70]  ejs.web const function getOptions(options: Object) : String

     ARG:   [arg-00]   private options : Object
   LOCAL:   [local-01] var result : String
   LOCAL:   [local-02] var option : String
   LOCAL:   [local-03] var mapped

    0000: [0] 33 12 fa 95 02 e0 d1 07 .... debug 

    # ejs.es:17789                          if (!options) {

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 86 ......................... logicalNot 
    0010: [1] 13 0f ...................... branchFalse8 <addr: 27> 
    0012: [0] 33 12 fc 95 02 98 d2 07 .... debug 

    # ejs.es:17790                              return " "

    0020: [0] 56 e8 ca 02 ................ loadString < > 
    0024: [1] bf ......................... returnValue 
    0025: [0] 3e 00 ...................... goto8 <addr: 27> 
    0027: [0] 33 12 fe 95 02 b2 1a ....... debug 

    # ejs.es:17791                          }

    0034: [0] 33 12 80 96 02 ce d2 07 .... debug 

    # ejs.es:17792                          let result: String = ""

    0042: [0] 56 ba 11 ................... loadString <> 
    0045: [1] 95 ......................... putLocalSlot1 
    0046: [0] 33 12 82 96 02 96 d3 07 .... debug 

    # ejs.es:17793                          for (let option: String in options) {

    0054: [0] 5b ......................... getLocalSlot0 
    0055: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0061: [0] 93 ......................... pushResult 
    0062: [1] 39 ......................... dup 
    0063: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0066: [1] 93 ......................... pushResult 
    0067: [2] 96 ......................... putLocalSlot2 
    0068: [1] 33 12 84 96 02 96 d4 07 .... debug 

    # ejs.es:17794                              let mapped = htmlOptions[option]

    0076: [1] 57 ......................... loadThis 
    0077: [2] 7b a8 ce 07 86 80 06 ....... getObjName <htmlOptions> <[ejs.web::View,private]> 
    0084: [2] 56 ba 11 ................... loadString <> 
    0087: [3] 5d ......................... getLocalSlot2 
    0088: [4] 7c ......................... getObjNameExpr 
    0089: [2] 97 ......................... putLocalSlot3 
    0090: [1] 33 12 86 96 02 f8 d4 07 .... debug 

    # ejs.es:17795                              if (mapped || mapped == "") {

    0098: [1] 5e ......................... getLocalSlot3 
    0099: [2] 39 ......................... dup 
    0100: [3] 14 06 ...................... branchTrue8 <addr: 108> 
    0102: [2] 90 ......................... pop 
    0103: [1] 5e ......................... getLocalSlot3 
    0104: [2] 56 ba 11 ................... loadString <> 
    0107: [3] 25 ......................... compareEq 
    0108: [2] 13 47 ...................... branchFalse8 <addr: 181> 
    0110: [1] 33 12 88 96 02 d4 d5 07 .... debug 

    # ejs.es:17796                                  if (mapped == "") {

    0118: [1] 5e ......................... getLocalSlot3 
    0119: [2] 56 ba 11 ................... loadString <> 
    0122: [3] 25 ......................... compareEq 
    0123: [2] 13 0c ...................... branchFalse8 <addr: 137> 
    0125: [1] 33 12 8c 96 02 a4 d6 07 .... debug 

    # ejs.es:17798                                      mapped = option

    0133: [1] 5d ......................... getLocalSlot2 
    0134: [2] 97 ......................... putLocalSlot3 
    0135: [1] 3e 00 ...................... goto8 <addr: 137> 
    0137: [1] 33 12 8e 96 02 bc f5 02 .... debug 

    # ejs.es:17799                                  }

    0145: [1] 33 12 90 96 02 f4 d6 07 .... debug 

    # ejs.es:17800                                  result += ' ' +  mapped + '="' + options[option] + '"'

    0153: [1] 5c ......................... getLocalSlot1 
    0154: [2] 56 e8 ca 02 ................ loadString < > 
    0158: [3] 5e ......................... getLocalSlot3 
    0159: [4] 00 ......................... add 
    0160: [3] 56 8a d8 07 ................ loadString <="> 
    0164: [4] 00 ......................... add 
    0165: [3] 5b ......................... getLocalSlot0 
    0166: [4] 56 ba 11 ................... loadString <> 
    0169: [5] 5d ......................... getLocalSlot2 
    0170: [6] 7c ......................... getObjNameExpr 
    0171: [4] 00 ......................... add 
    0172: [3] 56 de 89 01 ................ loadString <"> 
    0176: [4] 00 ......................... add 
    0177: [3] 00 ......................... add 
    0178: [2] 95 ......................... putLocalSlot1 
    0179: [1] 3e 00 ...................... goto8 <addr: 181> 
    0181: [1] 3e 87 ...................... goto8 <addr: 62> 
    0183: [1] 90 ......................... pop 
    0184: [0] 33 12 96 96 02 90 d8 07 .... debug 

    # ejs.es:17803                          return result + " "

    0192: [0] 5c ......................... getLocalSlot1 
    0193: [1] 56 e8 ca 02 ................ loadString < > 
    0197: [2] 00 ......................... add 
    0198: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     63      66        183          183       StopIteration

VARIABLE:   [options-00]  private var options : Object
VARIABLE:   [result-01]  private var result : String
VARIABLE:   [option-02]  -hoisted-2 var option : String
VARIABLE:   [mapped-03]  -hoisted-2 var mapped

FUNCTION:   [View-71]  [ejs.web::View,private] const function pivot(grid: Array, options: Object) : void

     ARG:   [arg-00]   private grid : Array
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var headers
   LOCAL:   [local-03] var i
   LOCAL:   [local-04] var table
   LOCAL:   [local-05] var row
   LOCAL:   [local-06] var name
   LOCAL:   [local-07] var name
   LOCAL:   [local-08] var r

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 12 a6 96 02 d8 d9 07 .... debug 

    # ejs.es:17811                          if (!grid || grid.length == 0) return grid

    0017: [0] 5b ......................... getLocalSlot0 
    0018: [1] 86 ......................... logicalNot 
    0019: [1] 39 ......................... dup 
    0020: [2] 14 09 ...................... branchTrue8 <addr: 31> 
    0022: [1] 90 ......................... pop 
    0023: [0] 5b ......................... getLocalSlot0 
    0024: [1] 7b f4 3b c4 08 ............. getObjName <length> <public> 
    0029: [1] 44 ......................... load0 
    0030: [2] 25 ......................... compareEq 
    0031: [1] 13 04 ...................... branchFalse8 <addr: 37> 
    0033: [0] 5b ......................... getLocalSlot0 
    0034: [1] bf ......................... returnValue 
    0035: [0] 3e 00 ...................... goto8 <addr: 37> 
    0037: [0] 33 12 a8 96 02 c6 da 07 .... debug 

    # ejs.es:17812                          let headers = []

    0045: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0047: [1] 89 ......................... new 
    0048: [1] 96 ......................... putLocalSlot2 
    0049: [0] 33 12 aa 96 02 e8 eb 01 .... debug 

    # ejs.es:17813                          let i = 0

    0057: [0] 44 ......................... load0 
    0058: [1] 97 ......................... putLocalSlot3 
    0059: [0] 33 12 ac 96 02 80 db 07 .... debug 

    # ejs.es:17814                          for (name in grid[0]) {

    0067: [0] 5b ......................... getLocalSlot0 
    0068: [1] 56 ba 11 ................... loadString <> 
    0071: [2] 44 ......................... load0 
    0072: [3] 7c ......................... getObjNameExpr 
    0073: [1] 1e 80 38 88 38 00 .......... callObjName <get> <iterator> <argc: 0> 
    0079: [0] 93 ......................... pushResult 
    0080: [1] 39 ......................... dup 
    0081: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0084: [1] 93 ......................... pushResult 
    0085: [2] 9a ......................... putLocalSlot6 
    0086: [1] 33 12 ae 96 02 c8 db 07 .... debug 

    # ejs.es:17815                              headers[i++] = name

    0094: [1] 61 ......................... getLocalSlot6 
    0095: [2] 5d ......................... getLocalSlot2 
    0096: [3] 56 ba 11 ................... loadString <> 
    0099: [4] 5e ......................... getLocalSlot3 
    0100: [5] 39 ......................... dup 
    0101: [6] 3f 01 ...................... inc <1> 
    0103: [6] 97 ......................... putLocalSlot3 
    0104: [5] b2 ......................... putObjNameExpr 
    0105: [1] 3e e5 ...................... goto8 <addr: 80> 
    0107: [1] 90 ......................... pop 
    0108: [0] 33 12 b0 96 02 b2 1a ....... debug 

    # ejs.es:17816                          }

    0115: [0] 33 12 b2 96 02 90 dc 07 .... debug 

    # ejs.es:17817                          let table = []

    0123: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0125: [1] 89 ......................... new 
    0126: [1] 98 ......................... putLocalSlot4 
    0127: [0] 33 12 b4 96 02 c6 dc 07 .... debug 

    # ejs.es:17818                          let row = 0

    0135: [0] 44 ......................... load0 
    0136: [1] 99 ......................... putLocalSlot5 
    0137: [0] 33 12 b6 96 02 f6 dc 07 .... debug 

    # ejs.es:17819                          table = []

    0145: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0147: [1] 89 ......................... new 
    0148: [1] 98 ......................... putLocalSlot4 
    0149: [0] 33 12 b8 96 02 a4 dd 07 .... debug 

    # ejs.es:17820                          for each (name in headers) {

    0157: [0] 5d ......................... getLocalSlot2 
    0158: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0164: [0] 93 ......................... pushResult 
    0165: [1] 39 ......................... dup 
    0166: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0169: [1] 93 ......................... pushResult 
    0170: [2] 9b ......................... putLocalSlot7 
    0171: [1] 33 12 ba 96 02 f6 dd 07 .... debug 

    # ejs.es:17821                              let r = {}

    0179: [1] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0183: [2] 9c ......................... putLocalSlot8 
    0184: [1] 33 12 bc 96 02 ac de 07 .... debug 

    # ejs.es:17822                              i = 1

    0192: [1] 45 ......................... load1 
    0193: [2] 97 ......................... putLocalSlot3 
    0194: [1] 33 12 be 96 02 d8 de 07 .... debug 

    # ejs.es:17823                              r[0] = name

    0202: [1] 62 ......................... getLocalSlot7 
    0203: [2] 63 ......................... getLocalSlot8 
    0204: [3] 56 ba 11 ................... loadString <> 
    0207: [4] 44 ......................... load0 
    0208: [5] b2 ......................... putObjNameExpr 
    0209: [1] 33 12 c0 96 02 90 df 07 .... debug 

    # ejs.es:17824                              for (j = 0; j < grid.length; j++) {

    0217: [1] 44 ......................... load0 
    0218: [2] b4 f8 df 07 ba 11 .......... putScopedName <j> <> 
    0224: [1] 79 f8 df 07 ba 11 .......... getScopedName <j> <> 
    0230: [2] 5b ......................... getLocalSlot0 
    0231: [3] 7b f4 3b c4 08 ............. getObjName <length> <public> 
    0236: [3] 2b ......................... compareLt 
    0237: [2] 13 3c ...................... branchFalse8 <addr: 299> 
    0239: [1] 33 12 c2 96 02 fc df 07 .... debug 

    # ejs.es:17825                                  r[i++] = grid[j][name]

    0247: [1] 5b ......................... getLocalSlot0 
    0248: [2] 56 ba 11 ................... loadString <> 
    0251: [3] 79 f8 df 07 ba 11 .......... getScopedName <j> <> 
    0257: [4] 7c ......................... getObjNameExpr 
    0258: [2] 56 ba 11 ................... loadString <> 
    0261: [3] 62 ......................... getLocalSlot7 
    0262: [4] 7c ......................... getObjNameExpr 
    0263: [2] 63 ......................... getLocalSlot8 
    0264: [3] 56 ba 11 ................... loadString <> 
    0267: [4] 5e ......................... getLocalSlot3 
    0268: [5] 39 ......................... dup 
    0269: [6] 3f 01 ...................... inc <1> 
    0271: [6] 97 ......................... putLocalSlot3 
    0272: [5] b2 ......................... putObjNameExpr 
    0273: [1] 33 12 c0 96 02 90 df 07 .... debug 

    # ejs.es:17824                              for (j = 0; j < grid.length; j++) {

    0281: [1] 79 f8 df 07 ba 11 .......... getScopedName <j> <> 
    0287: [2] 39 ......................... dup 
    0288: [3] 3f 01 ...................... inc <1> 
    0290: [3] b4 f8 df 07 ba 11 .......... putScopedName <j> <> 
    0296: [2] 90 ......................... pop 
    0297: [1] 3e b5 ...................... goto8 <addr: 224> 
    0299: [1] 33 12 c4 96 02 86 35 ....... debug 

    # ejs.es:17826                              }

    0306: [1] 33 12 c6 96 02 d2 e0 07 .... debug 

    # ejs.es:17827                              table[row++] = r

    0314: [1] 63 ......................... getLocalSlot8 
    0315: [2] 5f ......................... getLocalSlot4 
    0316: [3] 56 ba 11 ................... loadString <> 
    0319: [4] 60 ......................... getLocalSlot5 
    0320: [5] 39 ......................... dup 
    0321: [6] 3f 01 ...................... inc <1> 
    0323: [6] 99 ......................... putLocalSlot5 
    0324: [5] b2 ......................... putObjNameExpr 
    0325: [1] 3d cb 02 f7 f7 ............. goto <addr: 165> 
    0330: [1] 90 ......................... pop 
    0331: [0] 33 12 ca 96 02 94 e1 07 .... debug 

    # ejs.es:17829                          return table

    0339: [0] 5f ......................... getLocalSlot4 
    0340: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     81      84        107          107       StopIteration
1   iteration    166     169        330          330       StopIteration

VARIABLE:   [grid-00]  private var grid : Array
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [headers-02]  private var headers
VARIABLE:   [i-03]  private var i
VARIABLE:   [table-04]  private var table
VARIABLE:   [row-05]  private var row
VARIABLE:   [name-06]  -hoisted-6 var name
VARIABLE:   [name-07]  -hoisted-7 var name
VARIABLE:   [r-08]  -hoisted-7 var r

FUNCTION:   [View-72]  [ejs.web::View,private] const function filter(data: Array) : Array

     ARG:   [arg-00]   private data : Array
   LOCAL:   [local-01] var i
   LOCAL:   [local-02] var found : Boolean
   LOCAL:   [local-03] var f

    0000: [0] 33 12 d4 96 02 bc e2 07 .... debug 

    # ejs.es:17834                          data = data.clone()

    0008: [0] 5b ......................... getLocalSlot0 
    0009: [1] 1e fe 35 c4 08 00 .......... callObjName <clone> <public> <argc: 0> 
    0015: [0] 93 ......................... pushResult 
    0016: [1] 94 ......................... putLocalSlot0 
    0017: [0] 33 12 d6 96 02 fc e2 07 .... debug 

    # ejs.es:17835                          pattern = request.params.filter.toLower()

    0025: [0] 57 ......................... loadThis 
    0026: [1] 7b 88 07 7c ................ getObjName <request> <ejs.web> 
    0030: [1] 7b b2 06 c4 08 ............. getObjName <params> <public> 
    0035: [1] 7b dc 48 ba 11 ............. getObjName <filter> <> 
    0040: [1] 1e f8 f1 05 00 00 .......... callObjName <toLower> <> <argc: 0> 
    0046: [0] 93 ......................... pushResult 
    0047: [1] b4 e8 e3 07 ba 11 .......... putScopedName <pattern> <> 
    0053: [0] 33 12 d8 96 02 f8 e3 07 .... debug 

    # ejs.es:17836                          for (let i = 0; i < data.length; i++) {

    0061: [0] 44 ......................... load0 
    0062: [1] 95 ......................... putLocalSlot1 
    0063: [0] 5c ......................... getLocalSlot1 
    0064: [1] 5b ......................... getLocalSlot0 
    0065: [2] 7b f4 3b c4 08 ............. getObjName <length> <public> 
    0070: [2] 2b ......................... compareLt 
    0071: [1] 07 c0 02 f7 f7 ............. branchFalse <addr: 236> 
    0076: [0] 33 12 da 96 02 ec e4 07 .... debug 

    # ejs.es:17837                              let found: Boolean = false

    0084: [0] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0086: [1] 96 ......................... putLocalSlot2 
    0087: [0] 33 12 dc 96 02 c2 e5 07 .... debug 

    # ejs.es:17838                              for each (f in data[i]) {

    0095: [0] 5b ......................... getLocalSlot0 
    0096: [1] 56 ba 11 ................... loadString <> 
    0099: [2] 5c ......................... getLocalSlot1 
    0100: [3] 7c ......................... getObjNameExpr 
    0101: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0107: [0] 93 ......................... pushResult 
    0108: [1] 39 ......................... dup 
    0109: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0112: [1] 93 ......................... pushResult 
    0113: [2] 97 ......................... putLocalSlot3 
    0114: [1] 33 12 de 96 02 9a e6 07 .... debug 

    # ejs.es:17839                                  if (f.toString().toLower().indexOf(pattern) >= 0) {

    0122: [1] 5e ......................... getLocalSlot3 
    0123: [2] 1e c2 8b 01 00 00 .......... callObjName <toString> <> <argc: 0> 
    0129: [1] 93 ......................... pushResult 
    0130: [2] 1e f8 f1 05 00 00 .......... callObjName <toLower> <> <argc: 0> 
    0136: [1] 93 ......................... pushResult 
    0137: [2] 79 e8 e3 07 ba 11 .......... getScopedName <pattern> <> 
    0143: [3] 1e aa e7 07 00 02 .......... callObjName <indexOf> <> <argc: 1> 
    0149: [1] 93 ......................... pushResult 
    0150: [2] 44 ......................... load0 
    0151: [3] 28 ......................... compareGe 
    0152: [2] 13 0e ...................... branchFalse8 <addr: 168> 
    0154: [1] 33 12 e0 96 02 ba e7 07 .... debug 

    # ejs.es:17840                                      found = true

    0162: [1] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0165: [2] 96 ......................... putLocalSlot2 
    0166: [1] 3e 00 ...................... goto8 <addr: 168> 
    0168: [1] 3e c2 ...................... goto8 <addr: 108> 
    0170: [1] 90 ......................... pop 
    0171: [0] 33 12 e6 96 02 84 e8 07 .... debug 

    # ejs.es:17843                              if (!found) {

    0179: [0] 5d ......................... getLocalSlot2 
    0180: [1] 86 ......................... logicalNot 
    0181: [1] 13 22 ...................... branchFalse8 <addr: 217> 
    0183: [0] 33 12 e8 96 02 c0 e8 07 .... debug 

    # ejs.es:17844                                  data.remove(i, i)

    0191: [0] 5b ......................... getLocalSlot0 
    0192: [1] 5c ......................... getLocalSlot1 
    0193: [2] 5c ......................... getLocalSlot1 
    0194: [3] 1e 8c e9 07 c4 08 04 ....... callObjName <remove> <public> <argc: 2> 
    0201: [0] 33 12 ea 96 02 9a e9 07 .... debug 

    # ejs.es:17845                                  i--

    0209: [0] 5c ......................... getLocalSlot1 
    0210: [1] 39 ......................... dup 
    0211: [2] 3f ff ...................... inc <255> 
    0213: [2] 95 ......................... putLocalSlot1 
    0214: [1] 90 ......................... pop 
    0215: [0] 3e 00 ...................... goto8 <addr: 217> 
    0217: [0] 33 12 d8 96 02 f8 e3 07 .... debug 

    # ejs.es:17836                          for (let i = 0; i < data.length; i++) {

    0225: [0] 5c ......................... getLocalSlot1 
    0226: [1] 39 ......................... dup 
    0227: [2] 3f 01 ...................... inc <1> 
    0229: [2] 95 ......................... putLocalSlot1 
    0230: [1] 90 ......................... pop 
    0231: [0] 3d db 02 f7 f7 ............. goto <addr: 63> 
    0236: [0] 33 12 f0 96 02 ca e9 07 .... debug 

    # ejs.es:17848                          return data

    0244: [0] 5b ......................... getLocalSlot0 
    0245: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    109     112        170          170       StopIteration

VARIABLE:   [data-00]  private var data : Array
VARIABLE:   [i-01]  -hoisted-1 var i
VARIABLE:   [found-02]  -hoisted-1 var found : Boolean
VARIABLE:   [f-03]  -hoisted-3 var f
VARIABLE:   [request-00]  ejs.web var request : Request
VARIABLE:   [currentRecord-01]  [ejs.web::View,private] var currentRecord : Object
VARIABLE:   [config-02]  [ejs.web::View,private] var config : Object
VARIABLE:   [nextId-03]  [ejs.web::View,private] var nextId : Number

CLASS:      class Web extends Object
            #  Class Details: 35 class traits, 0 instance traits, requested slot 181

FUNCTION:   [Web-26]  -initializer- static function Web-initializer() : Void


    0000: [0] 33 12 ee 97 02 9c b8 03 .... debug 

    # ejs.es:17911                      use default namespace public

    0008: [0] 7e 5c ...................... getGlobalSlot <slot: 46> 
    0010: [1] 02 ......................... addNamespaceRef 
    0011: [0] 33 12 f2 97 02 dc ea 07 .... debug 

    # ejs.es:17913                      static var config

    0019: [0] 33 12 f6 97 02 96 c8 03 .... debug 

    # ejs.es:17915                      private static var defaultConfig = {

    0027: [0] 33 12 f8 97 02 be eb 07 .... debug 

    # ejs.es:17916                          log: {

    0035: [0] 56 00 ...................... loadString <> 
    0037: [1] 56 e6 05 ................... loadString <log> 
    0040: [2] 33 12 fa 97 02 e4 eb 07 .... debug 

    # ejs.es:17917                              showClient: true,

    0048: [2] 56 00 ...................... loadString <> 
    0050: [3] 56 ca de 04 ................ loadString <showClient> 
    0054: [4] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0057: [5] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0062: [3] 33 12 80 98 02 a8 ec 07 .... debug 

    # ejs.es:17920                          session: {

    0070: [3] 56 00 ...................... loadString <> 
    0072: [4] 56 a4 97 04 ................ loadString <session> 
    0076: [5] 33 12 84 98 02 d2 c9 03 .... debug 

    # ejs.es:17922                              enable: true,

    0084: [5] 56 00 ...................... loadString <> 
    0086: [6] 56 be be 03 ................ loadString <enable> 
    0090: [7] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0093: [8] 33 12 88 98 02 d6 ec 07 .... debug 

    # ejs.es:17924                              timeout: 1800,

    0101: [8] 56 00 ...................... loadString <> 
    0103: [9] 56 9c 99 04 ................ loadString <timeout> 
    0107: [10] 51 90 1c ................... loadInt <1800> 
    0110: [11] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0116: [6] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0122: [1] 33 12 f6 97 02 96 c8 03 .... debug 

    # ejs.es:17915                      private static var defaultConfig = {

    0130: [1] 57 ......................... loadThis 
    0131: [2] b3 f0 c8 03 90 eb 07 ....... putObjName <defaultConfig> <[ejs.web::Web,private]> 
    0138: [0] 33 12 98 98 02 94 ed 07 .... debug 

    # ejs.es:17932                      private static function init(): Void {

    0146: [0] 33 12 aa 98 02 f4 f0 07 .... debug 

    # ejs.es:17941                      init()

    0154: [0] 1f ba db 03 90 eb 07 00 .... callScopedName <init> <[ejs.web::Web,private]> <argc: 0> 
    0162: [0] 33 12 bc 98 02 92 f1 07 .... debug 

    # ejs.es:17950                      static function serve(request: Request, router: Router = Router(Router.TopRoutes)): Void {

    0170: [0] 33 12 e4 98 02 f8 f7 07 .... debug 

    # ejs.es:17970                      static native function worker(request: Request): Void

    0178: [0] 33 12 e8 98 02 f4 f8 07 .... debug 

    # ejs.es:17972                      private static function workerHelper(request: Request): Void {

    0186: [0] 33 12 8c 99 02 92 fc 07 .... debug 

    # ejs.es:17990                      static function load(request: Request): Object {

    0194: [0] 33 12 ec 99 02 f0 92 08 .... debug 

    # ejs.es:18038                      static function start(request: Request, app: Function): Void {

    0202: [0] be ......................... return 
    
VARIABLE:   [Web-27]  public static var config
VARIABLE:   [Web-28]  [ejs.web::Web,private] static var defaultConfig

FUNCTION:   [Web-29]  [ejs.web::Web,private] const static function init() : Void

   LOCAL:   [local-00] var path
   LOCAL:   [local-01] var config
   LOCAL:   [local-02] var webConfig

    0000: [0] 33 12 9a 98 02 f2 ed 07 .... debug 

    # ejs.es:17933                          let path = Path("ejsrc")

    0008: [0] 56 c8 df 03 ................ loadString <ejsrc> 
    0012: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0016: [0] 93 ......................... pushResult 
    0017: [1] 94 ......................... putLocalSlot0 
    0018: [0] 33 12 9c 98 02 bc ee 07 .... debug 

    # ejs.es:17934                          let config = App.config

    0026: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0028: [1] 7b a2 14 c4 08 ............. getObjName <config> <public> 
    0033: [1] 95 ......................... putLocalSlot1 
    0034: [0] 33 12 9e 98 02 a4 e0 03 .... debug 

    # ejs.es:17935                          if (path.exists) {

    0042: [0] 5b ......................... getLocalSlot0 
    0043: [1] 7b aa 57 00 ................ getObjName <exists> <> 
    0047: [1] 13 28 ...................... branchFalse8 <addr: 89> 
    0049: [0] 33 12 a0 98 02 98 ef 07 .... debug 

    # ejs.es:17936                              let webConfig = deserialize(path.readString())

    0057: [0] 5b ......................... getLocalSlot0 
    0058: [1] 1e c8 5d 00 00 ............. callObjName <readString> <> <argc: 0> 
    0063: [0] 93 ......................... pushResult 
    0064: [1] 17 c6 01 02 ................ callGlobalSlot <slot: 99> <argc: 1> 
    0068: [0] 93 ......................... pushResult 
    0069: [1] 96 ......................... putLocalSlot2 
    0070: [0] 33 12 a2 98 02 96 f0 07 .... debug 

    # ejs.es:17937                              blend(config, webConfig, true)

    0078: [0] 5c ......................... getLocalSlot1 
    0079: [1] 5d ......................... getLocalSlot2 
    0080: [2] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0083: [3] 17 9c 01 06 ................ callGlobalSlot <slot: 78> <argc: 3> 
    0087: [0] 3e 00 ...................... goto8 <addr: 89> 
    0089: [0] 33 12 a4 98 02 b2 1a ....... debug 

    # ejs.es:17938                          }

    0096: [0] 33 12 a6 98 02 d4 e3 03 .... debug 

    # ejs.es:17939                          blend(config, defaultConfig, false)

    0104: [0] 5c ......................... getLocalSlot1 
    0105: [1] 57 ......................... loadThis 
    0106: [2] 7b f0 c8 03 90 eb 07 ....... getObjName <defaultConfig> <[ejs.web::Web,private]> 
    0113: [2] 7e 76 ...................... getGlobalSlot <slot: 59> 
    0115: [3] 17 9c 01 06 ................ callGlobalSlot <slot: 78> <argc: 3> 
    0119: [0] 54 ......................... loadNull 
    0120: [1] bf ......................... returnValue 
    0121: [0] 33 12 a8 98 02 b0 15 ....... debug 

    # ejs.es:17940                      }
    
VARIABLE:   [path-00]  private var path
VARIABLE:   [config-01]  private var config
VARIABLE:   [webConfig-02]  -hoisted-2 var webConfig

FUNCTION:   [Web-30]  public const static function serve(request: Request, router: Router) : Void

     ARG:   [arg-00]   private request : Request
     ARG:   [arg-01]   private router : Router
   LOCAL:   [local-02] var exports
   LOCAL:   [local-03] var e

    0000: [0] 41 02 02 11 ................ initDefaultArgs8 <2> <4> <19> 
    0004: [0] 7e d6 02 ................... getGlobalSlot <slot: 171> 
    0007: [1] 7b cc f5 04 c4 08 .......... getObjName <TopRoutes> <public> 
    0013: [1] 17 d6 02 02 ................ callGlobalSlot <slot: 171> <argc: 1> 
    0017: [0] 93 ......................... pushResult 
    0018: [1] 95 ......................... putLocalSlot1 
    0019: [0] 33 12 be 98 02 98 68 ....... debug 

    # ejs.es:17951                          try {

    0026: [0] 33 12 c0 98 02 d8 f2 07 .... debug 

    # ejs.es:17952                              router.route(request)

    0034: [0] 5c ......................... getLocalSlot1 
    0035: [1] 5b ......................... getLocalSlot0 
    0036: [2] 1e e2 93 04 c4 08 02 ....... callObjName <route> <public> <argc: 1> 
    0043: [0] 33 12 c2 98 02 a4 f3 07 .... debug 

    # ejs.es:17953                              if (request.route.threaded) {

    0051: [0] 5b ......................... getLocalSlot0 
    0052: [1] 7b e2 93 04 c4 08 .......... getObjName <route> <public> 
    0058: [1] 7b c2 d1 05 c4 08 .......... getObjName <threaded> <public> 
    0064: [1] 13 12 ...................... branchFalse8 <addr: 84> 
    0066: [0] 33 12 c4 98 02 80 f4 07 .... debug 

    # ejs.es:17954                                  worker(request)

    0074: [0] 5b ......................... getLocalSlot0 
    0075: [1] 1f c8 f4 07 c4 08 02 ....... callScopedName <worker> <public> <argc: 1> 
    0082: [0] 3e 3d ...................... goto8 <addr: 145> 
    0084: [0] 33 12 c6 98 02 e8 a1 01 .... debug 

    # ejs.es:17955                              } else {

    0092: [0] 33 12 c8 98 02 d6 f4 07 .... debug 

    # ejs.es:17956                                  let exports = load(request)

    0100: [0] 5b ......................... getLocalSlot0 
    0101: [1] 1f d4 e8 03 c4 08 02 ....... callScopedName <load> <public> <argc: 1> 
    0108: [0] 93 ......................... pushResult 
    0109: [1] 96 ......................... putLocalSlot2 
    0110: [0] 33 12 ca 98 02 b6 f5 07 .... debug 

    # ejs.es:17957                                  if (exports) {

    0118: [0] 5d ......................... getLocalSlot2 
    0119: [1] 13 18 ...................... branchFalse8 <addr: 145> 
    0121: [0] 33 12 cc 98 02 fc f5 07 .... debug 

    # ejs.es:17958                                      start(request, exports.app)

    0129: [0] 5b ......................... getLocalSlot0 
    0130: [1] 5d ......................... getLocalSlot2 
    0131: [2] 7b e4 f6 07 00 ............. getObjName <app> <> 
    0136: [2] 1f e6 d4 03 c4 08 04 ....... callScopedName <start> <public> <argc: 2> 
    0143: [0] 3e 00 ...................... goto8 <addr: 145> 
    0145: [0] 3e 21 ...................... goto8 <addr: 180> 
    0147: [0] 33 12 d2 98 02 ec f6 07 .... debug 

    # ejs.es:17961                          } catch (e) {

    0155: [0] 92 ......................... pushCatchArg 
    0156: [1] b6 06 02 ................... putBlockSlot <slot: 3> <1> 
    0159: [0] 33 12 d4 98 02 a0 f7 07 .... debug 

    # ejs.es:17962                              request.writeError(e)

    0167: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0170: [1] 7d 06 02 ................... getBlockSlot <slot: 3> <1> 
    0173: [2] 1e 82 61 c4 08 02 .......... callObjName <writeError> <public> <argc: 1> 
    0179: [0] 3c ......................... endException 
    0180: [0] 54 ......................... loadNull 
    0181: [1] bf ......................... returnValue 
    0182: [0] 33 12 d8 98 02 b0 15 ....... debug 

    # ejs.es:17964                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch         19     147        147          180       Void

VARIABLE:   [request-00]  private var request : Request
VARIABLE:   [router-01]  private var router : Router
VARIABLE:   [exports-02]  -hoisted-2 var exports
VARIABLE:   [e-03]  -hoisted-3 var e

FUNCTION:   [Web-31]  public native const static function worker(request: Request) : Void

     ARG:   [arg-00]   private request : Request

    
VARIABLE:   [request-00]  private var request : Request

FUNCTION:   [Web-32]  [ejs.web::Web,private] const static function workerHelper(request: Request) : Void

     ARG:   [arg-00]   private request : Request
   LOCAL:   [local-01] var exports
   LOCAL:   [local-02] var e

    0000: [0] 33 12 ea 98 02 98 68 ....... debug 

    # ejs.es:17973                          try {

    0007: [0] 33 12 ec 98 02 82 fa 07 .... debug 

    # ejs.es:17974                              let exports = load(request)

    0015: [0] 5b ......................... getLocalSlot0 
    0016: [1] 1f d4 e8 03 c4 08 02 ....... callScopedName <load> <public> <argc: 1> 
    0023: [0] 93 ......................... pushResult 
    0024: [1] 95 ......................... putLocalSlot1 
    0025: [0] 33 12 ee 98 02 da fa 07 .... debug 

    # ejs.es:17975                              if (exports) {

    0033: [0] 5c ......................... getLocalSlot1 
    0034: [1] 13 18 ...................... branchFalse8 <addr: 60> 
    0036: [0] 33 12 f0 98 02 98 fb 07 .... debug 

    # ejs.es:17976                                  start(request, exports.app)

    0044: [0] 5b ......................... getLocalSlot0 
    0045: [1] 5c ......................... getLocalSlot1 
    0046: [2] 7b e4 f6 07 00 ............. getObjName <app> <> 
    0051: [2] 1f e6 d4 03 c4 08 04 ....... callScopedName <start> <public> <argc: 2> 
    0058: [0] 3e 00 ...................... goto8 <addr: 60> 
    0060: [0] 3e 21 ...................... goto8 <addr: 95> 
    0062: [0] 33 12 f4 98 02 ec f6 07 .... debug 

    # ejs.es:17978                          } catch (e) {

    0070: [0] 92 ......................... pushCatchArg 
    0071: [1] b6 04 02 ................... putBlockSlot <slot: 2> <1> 
    0074: [0] 33 12 f6 98 02 a0 f7 07 .... debug 

    # ejs.es:17979                              request.writeError(e)

    0082: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0085: [1] 7d 04 02 ................... getBlockSlot <slot: 2> <1> 
    0088: [2] 1e 82 61 c4 08 02 .......... callObjName <writeError> <public> <argc: 1> 
    0094: [0] 3c ......................... endException 
    0095: [0] 54 ......................... loadNull 
    0096: [1] bf ......................... returnValue 
    0097: [0] 33 12 fa 98 02 b0 15 ....... debug 

    # ejs.es:17981                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch          0      62         62           95       Void

VARIABLE:   [request-00]  private var request : Request
VARIABLE:   [exports-01]  -hoisted-1 var exports
VARIABLE:   [e-02]  -hoisted-2 var e

FUNCTION:   [Web-33]  public const static function load(request: Request) : Object

     ARG:   [arg-00]   private request : Request
   LOCAL:   [local-01] var type
   LOCAL:   [local-02] var exports
   LOCAL:   [local-03] var path
   LOCAL:   [local-04] var path
   LOCAL:   [local-05] var e

    0000: [0] 33 12 8e 99 02 98 68 ....... debug 

    # ejs.es:17991                          try {

    0007: [0] 33 12 90 99 02 84 fd 07 .... debug 

    # ejs.es:17992                              let type = request.route.type

    0015: [0] 5b ......................... getLocalSlot0 
    0016: [1] 7b e2 93 04 c4 08 .......... getObjName <route> <public> 
    0022: [1] 7b f0 f6 04 c4 08 .......... getObjName <type> <public> 
    0028: [1] 95 ......................... putLocalSlot1 
    0029: [0] 33 12 92 99 02 e0 fd 07 .... debug 

    # ejs.es:17993                              let exports

    0037: [0] 33 12 94 99 02 98 fe 07 .... debug 

    # ejs.es:17994                              if (type == "es") {

    0045: [0] 5c ......................... getLocalSlot1 
    0046: [1] 56 90 d2 03 ................ loadString <es> 
    0050: [2] 25 ......................... compareEq 
    0051: [1] 07 c0 02 f7 f7 ............. branchFalse <addr: 216> 
    0056: [0] 33 12 96 99 02 e0 fe 07 .... debug 

    # ejs.es:17995                                  if (!global.Loader) {

    0064: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0066: [1] 7b b4 ff 07 ba 11 .......... getObjName <Loader> <> 
    0072: [1] 86 ......................... logicalNot 
    0073: [1] 13 17 ...................... branchFalse8 <addr: 98> 
    0075: [0] 33 12 98 99 02 c2 ff 07 .... debug 

    # ejs.es:17996                                      global.load("ejs.cjs.mod")

    0083: [0] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0085: [1] 56 a8 80 08 ................ loadString <ejs.cjs.mod> 
    0089: [2] 1e d4 e8 03 ba 11 02 ....... callObjName <load> <> <argc: 1> 
    0096: [0] 3e 00 ...................... goto8 <addr: 98> 
    0098: [0] 33 12 9a 99 02 bc f5 02 .... debug 

    # ejs.es:17997                                  }

    0106: [0] 33 12 9c 99 02 c0 80 08 .... debug 

    # ejs.es:17998                                  let path = request.dir.join(request.pathInfo.slice(1))

    0114: [0] 5b ......................... getLocalSlot0 
    0115: [1] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0120: [1] 5b ......................... getLocalSlot0 
    0121: [2] 7b 94 91 04 c4 08 .......... getObjName <pathInfo> <public> 
    0127: [2] 45 ......................... load1 
    0128: [3] 1e d6 81 08 c4 08 02 ....... callObjName <slice> <public> <argc: 1> 
    0135: [1] 93 ......................... pushResult 
    0136: [2] 1e f6 25 c4 08 02 .......... callObjName <join> <public> <argc: 1> 
    0142: [0] 93 ......................... pushResult 
    0143: [1] 97 ......................... putLocalSlot3 
    0144: [0] 33 12 9e 99 02 8c ff 03 .... debug 

    # ejs.es:17999                                  if (!path.exists) {

    0152: [0] 5e ......................... getLocalSlot3 
    0153: [1] 7b aa 57 00 ................ getObjName <exists> <> 
    0157: [1] 86 ......................... logicalNot 
    0158: [1] 13 16 ...................... branchFalse8 <addr: 182> 
    0160: [0] 33 12 a0 99 02 e2 81 08 .... debug 

    # ejs.es:18000                                      throw "Request resource \"" + path + "\" does not exist"

    0168: [0] 56 84 83 08 ................ loadString <Request resource "> 
    0172: [1] 5e ......................... getLocalSlot3 
    0173: [2] 00 ......................... add 
    0174: [1] 56 aa 83 08 ................ loadString <" does not exist> 
    0178: [2] 00 ......................... add 
    0179: [1] c6 ......................... throw 
    0180: [1] 3e 00 ...................... goto8 <addr: 182> 
    0182: [1] 33 12 a2 99 02 bc f5 02 .... debug 

    # ejs.es:18001                                  }

    0190: [1] 33 12 a4 99 02 cc 83 08 .... debug 

    # ejs.es:18002                                  exports = Loader.require(path)

    0198: [1] 7e 94 02 ................... getGlobalSlot <slot: 138> 
    0201: [2] 5e ......................... getLocalSlot3 
    0202: [3] 1e b2 84 08 c4 08 02 ....... callObjName <require> <public> <argc: 1> 
    0209: [1] 93 ......................... pushResult 
    0210: [2] 96 ......................... putLocalSlot2 
    0211: [1] 3d c6 04 f7 f7 ............. goto <addr: 507> 
    0216: [1] 33 12 a8 99 02 c2 84 08 .... debug 

    # ejs.es:18004                              } else if (type == "ejs") {

    0224: [1] 5c ......................... getLocalSlot1 
    0225: [2] 56 ee 1d ................... loadString <ejs> 
    0228: [3] 25 ......................... compareEq 
    0229: [2] 07 9c 03 f7 f7 ............. branchFalse <addr: 440> 
    0234: [1] 33 12 aa 99 02 9a 85 08 .... debug 

    # ejs.es:18005                                  if (!global.Template) {

    0242: [1] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0244: [2] 7b f2 85 08 ba 11 .......... getObjName <Template> <> 
    0250: [2] 86 ......................... logicalNot 
    0251: [2] 13 16 ...................... branchFalse8 <addr: 275> 
    0253: [1] 33 12 ac 99 02 84 86 08 .... debug 

    # ejs.es:18006                                      global.load("ejs.web.template.mod")

    0261: [1] 7e 78 ...................... getGlobalSlot <slot: 60> 
    0263: [2] 56 e0 59 ................... loadString <ejs.web.template.mod> 
    0266: [3] 1e d4 e8 03 ba 11 02 ....... callObjName <load> <> <argc: 1> 
    0273: [1] 3e 00 ...................... goto8 <addr: 275> 
    0275: [1] 33 12 ae 99 02 bc f5 02 .... debug 

    # ejs.es:18007                                  }

    0283: [1] 33 12 b0 99 02 c0 80 08 .... debug 

    # ejs.es:18008                                  let path = request.dir.join(request.pathInfo.slice(1))

    0291: [1] 5b ......................... getLocalSlot0 
    0292: [2] 7b ee 25 c4 08 ............. getObjName <dir> <public> 
    0297: [2] 5b ......................... getLocalSlot0 
    0298: [3] 7b 94 91 04 c4 08 .......... getObjName <pathInfo> <public> 
    0304: [3] 45 ......................... load1 
    0305: [4] 1e d6 81 08 c4 08 02 ....... callObjName <slice> <public> <argc: 1> 
    0312: [2] 93 ......................... pushResult 
    0313: [3] 1e f6 25 c4 08 02 .......... callObjName <join> <public> <argc: 1> 
    0319: [1] 93 ......................... pushResult 
    0320: [2] 98 ......................... putLocalSlot4 
    0321: [1] 33 12 b2 99 02 8c ff 03 .... debug 

    # ejs.es:18009                                  if (!path.exists) {

    0329: [1] 5f ......................... getLocalSlot4 
    0330: [2] 7b aa 57 00 ................ getObjName <exists> <> 
    0334: [2] 86 ......................... logicalNot 
    0335: [2] 13 30 ...................... branchFalse8 <addr: 385> 
    0337: [1] 33 12 b4 99 02 fc 86 08 .... debug 

    # ejs.es:18010                                      request.writeError("Can't find \"" + path + "\".", Http.NotFound)

    0345: [1] 5b ......................... getLocalSlot0 
    0346: [2] 56 b0 88 08 ................ loadString <Can't find "> 
    0350: [3] 5f ......................... getLocalSlot4 
    0351: [4] 00 ......................... add 
    0352: [3] 56 ca 88 08 ................ loadString <".> 
    0356: [4] 00 ......................... add 
    0357: [3] 7e bc 01 ................... getGlobalSlot <slot: 94> 
    0360: [4] 7b d0 88 08 c4 08 .......... getObjName <NotFound> <public> 
    0366: [4] 1e 82 61 c4 08 04 .......... callObjName <writeError> <public> <argc: 2> 
    0372: [1] 33 12 b6 99 02 e2 88 08 .... debug 

    # ejs.es:18011                                      return null;

    0380: [1] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0382: [2] bf ......................... returnValue 
    0383: [0] 3e 35 ...................... goto8 <addr: 438> 
    0385: [0] 33 12 b8 99 02 b2 f8 01 .... debug 

    # ejs.es:18012                                  } else {

    0393: [0] 33 12 ba 99 02 ac 89 08 .... debug 

    # ejs.es:18013                                      exports = Template.load(request)

    0401: [0] 7e ec 02 ................... getGlobalSlot <slot: 182> 
    0404: [1] 5b ......................... getLocalSlot0 
    0405: [2] 1e d4 e8 03 c4 08 02 ....... callObjName <load> <public> <argc: 1> 
    0412: [0] 93 ......................... pushResult 
    0413: [1] 96 ......................... putLocalSlot2 
    0414: [0] 33 12 bc 99 02 9e 8a 08 .... debug 

    # ejs.es:18014                                      request.setHeader("Content-Type", "text/html")

    0422: [0] 5b ......................... getLocalSlot0 
    0423: [1] 56 ce df 04 ................ loadString <Content-Type> 
    0427: [2] 56 e8 df 04 ................ loadString <text/html> 
    0431: [3] 1e 96 9d 04 c4 08 04 ....... callObjName <setHeader> <public> <argc: 2> 
    0438: [0] 3e 43 ...................... goto8 <addr: 507> 
    0440: [0] 33 12 c2 99 02 ac 8b 08 .... debug 

    # ejs.es:18017                              } else if (type == "mvc") {

    0448: [0] 5c ......................... getLocalSlot1 
    0449: [1] 56 b4 d3 03 ................ loadString <mvc> 
    0453: [2] 25 ......................... compareEq 
    0454: [1] 13 17 ...................... branchFalse8 <addr: 479> 
    0456: [0] 33 12 c4 99 02 84 8c 08 .... debug 

    # ejs.es:18018                                  exports = Mvc.load(request)

    0464: [0] 7e d2 02 ................... getGlobalSlot <slot: 169> 
    0467: [1] 5b ......................... getLocalSlot0 
    0468: [2] 1e d4 e8 03 c4 08 02 ....... callObjName <load> <public> <argc: 1> 
    0475: [0] 93 ......................... pushResult 
    0476: [1] 96 ......................... putLocalSlot2 
    0477: [0] 3e 1c ...................... goto8 <addr: 507> 
    0479: [0] 33 12 c8 99 02 e8 a1 01 .... debug 

    # ejs.es:18020                              } else {

    0487: [0] 33 12 ca 99 02 e4 8c 08 .... debug 

    # ejs.es:18021                                  throw "Request type: " + type + " is not supported by Web.load"

    0495: [0] 56 8c 8e 08 ................ loadString <Request type: > 
    0499: [1] 5c ......................... getLocalSlot1 
    0500: [2] 00 ......................... add 
    0501: [1] 56 aa 8e 08 ................ loadString < is not supported by Web.load> 
    0505: [2] 00 ......................... add 
    0506: [1] c6 ......................... throw 
    0507: [1] 33 12 ce 99 02 e6 8e 08 .... debug 

    # ejs.es:18023                              if (!exports || !exports.app) {

    0515: [1] 5d ......................... getLocalSlot2 
    0516: [2] 86 ......................... logicalNot 
    0517: [2] 39 ......................... dup 
    0518: [3] 14 08 ...................... branchTrue8 <addr: 528> 
    0520: [2] 90 ......................... pop 
    0521: [1] 5d ......................... getLocalSlot2 
    0522: [2] 7b e4 f6 07 00 ............. getObjName <app> <> 
    0527: [2] 86 ......................... logicalNot 
    0528: [2] 13 0f ...................... branchFalse8 <addr: 545> 
    0530: [1] 33 12 d0 99 02 c6 8f 08 .... debug 

    # ejs.es:18024                                  throw "Can't load application. No \"app\" object exported by application"

    0538: [1] 56 82 91 08 ................ loadString <Can't load application. No "app" object exported by application> 
    0542: [2] c6 ......................... throw 
    0543: [2] 3e 00 ...................... goto8 <addr: 545> 
    0545: [2] 33 12 d4 99 02 82 92 08 .... debug 

    # ejs.es:18026                              return exports

    0553: [2] 5d ......................... getLocalSlot2 
    0554: [3] bf ......................... returnValue 
    0555: [0] 3e 21 ...................... goto8 <addr: 590> 
    0557: [0] 33 12 d6 99 02 ec f6 07 .... debug 

    # ejs.es:18027                          } catch (e) {

    0565: [0] 92 ......................... pushCatchArg 
    0566: [1] b6 0a 02 ................... putBlockSlot <slot: 5> <1> 
    0569: [0] 33 12 d8 99 02 a0 f7 07 .... debug 

    # ejs.es:18028                              request.writeError(e)

    0577: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0580: [1] 7d 0a 02 ................... getBlockSlot <slot: 5> <1> 
    0583: [2] 1e 82 61 c4 08 02 .......... callObjName <writeError> <public> <argc: 1> 
    0589: [0] 3c ......................... endException 
    0590: [0] 33 12 dc 99 02 c0 92 08 .... debug 

    # ejs.es:18030                          return null

    0598: [0] 7e 7a ...................... getGlobalSlot <slot: 61> 
    0600: [1] bf ......................... returnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   catch          0     557        557          590       Void

VARIABLE:   [request-00]  private var request : Request
VARIABLE:   [type-01]  -hoisted-1 var type
VARIABLE:   [exports-02]  -hoisted-1 var exports
VARIABLE:   [path-03]  -hoisted-3 var path
VARIABLE:   [path-04]  -hoisted-4 var path
VARIABLE:   [e-05]  -hoisted-5 var e

FUNCTION:   [Web-34]  public const static function start(request: Request, app: Function) : Void

     ARG:   [arg-00]   private request : Request
     ARG:   [arg-01]   private app : Function
   LOCAL:   [local-02] var result
   LOCAL:   [local-03] var headers
   LOCAL:   [local-04] var body
   LOCAL:   [local-05] var item
   LOCAL:   [local-06] var block_18066_693 : Block
   LOCAL:   [local-07] var block_18080_696 : Block
   LOCAL:   [local-08] var e

    0000: [0] 33 12 f0 99 02 98 68 ....... debug 

    # ejs.es:18040                          try {

    0007: [0] 33 12 f2 99 02 fe 93 08 .... debug 

    # ejs.es:18041                              let result = app(request)

    0015: [0] 5b ......................... getLocalSlot0 
    0016: [1] 1a 02 00 02 ................ callBlockSlot <slot: 1> <0> <argc: 1> 
    0020: [0] 93 ......................... pushResult 
    0021: [1] 96 ......................... putLocalSlot2 
    0022: [0] 33 12 f4 99 02 d2 94 08 .... debug 

    # ejs.es:18042                              if (!result) {

    0030: [0] 5d ......................... getLocalSlot2 
    0031: [1] 86 ......................... logicalNot 
    0032: [1] 13 32 ...................... branchFalse8 <addr: 84> 
    0034: [0] 33 12 f6 99 02 90 95 08 .... debug 

    # ejs.es:18043                                  if (request.route.type == "ejs") {

    0042: [0] 5b ......................... getLocalSlot0 
    0043: [1] 7b e2 93 04 c4 08 .......... getObjName <route> <public> 
    0049: [1] 7b f0 f6 04 c4 08 .......... getObjName <type> <public> 
    0055: [1] 56 ee 1d ................... loadString <ejs> 
    0058: [2] 25 ......................... compareEq 
    0059: [1] 13 12 ...................... branchFalse8 <addr: 79> 
    0061: [0] 33 12 f8 99 02 fe 95 08 .... debug 

    # ejs.es:18044                                      request.finalize()

    0069: [0] 5b ......................... getLocalSlot0 
    0070: [1] 1e f2 a2 04 c4 08 00 ....... callObjName <finalize> <public> <argc: 0> 
    0077: [0] 3e 00 ...................... goto8 <addr: 79> 
    0079: [0] 3d e8 07 f7 f7 ............. goto <addr: 584> 
    0084: [0] 33 12 fe 99 02 d4 96 08 .... debug 

    # ejs.es:18047                              } else if (result is Function) {

    0092: [0] 5d ......................... getLocalSlot2 
    0093: [1] 7e 4e ...................... getGlobalSlot <slot: 39> 
    0095: [2] 43 ......................... isA 
    0096: [1] 13 12 ...................... branchFalse8 <addr: 116> 
    0098: [0] 33 12 82 9a 02 b6 97 08 .... debug 

    # ejs.es:18049                                  result(request)

    0106: [0] 5b ......................... getLocalSlot0 
    0107: [1] 1a 04 00 02 ................ callBlockSlot <slot: 2> <0> <argc: 1> 
    0111: [0] 3d a8 07 f7 f7 ............. goto <addr: 584> 
    0116: [0] 33 12 86 9a 02 e8 a1 01 .... debug 

    # ejs.es:18051                              } else {

    0124: [0] 33 12 88 9a 02 fe 97 08 .... debug 

    # ejs.es:18052                                  request.status = result.status || 200

    0132: [0] 5d ......................... getLocalSlot2 
    0133: [1] 7b f0 61 00 ................ getObjName <status> <> 
    0137: [1] 39 ......................... dup 
    0138: [2] 14 04 ...................... branchTrue8 <addr: 144> 
    0140: [1] 90 ......................... pop 
    0141: [0] 51 90 03 ................... loadInt <200> 
    0144: [1] 5b ......................... getLocalSlot0 
    0145: [2] b3 f0 61 c4 08 ............. putObjName <status> <public> 
    0150: [0] 33 12 8a 9a 02 f2 98 08 .... debug 

    # ejs.es:18053                                  let headers = result.headers || { "content-type": "text/html" }

    0158: [0] 5d ......................... getLocalSlot2 
    0159: [1] 7b ba 8d 04 00 ............. getObjName <headers> <> 
    0164: [1] 39 ......................... dup 
    0165: [2] 14 11 ...................... branchTrue8 <addr: 184> 
    0167: [1] 90 ......................... pop 
    0168: [0] 56 ba 11 ................... loadString <> 
    0171: [1] 56 9a 9a 08 ................ loadString <content-type> 
    0175: [2] 56 e8 df 04 ................ loadString <text/html> 
    0179: [3] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0184: [1] 97 ......................... putLocalSlot3 
    0185: [0] 33 12 8c 9a 02 b4 9a 08 .... debug 

    # ejs.es:18054                                  request.setHeaders(headers)

    0193: [0] 5b ......................... getLocalSlot0 
    0194: [1] 5e ......................... getLocalSlot3 
    0195: [2] 1e 92 c8 04 c4 08 02 ....... callObjName <setHeaders> <public> <argc: 1> 
    0202: [0] 33 12 8e 9a 02 94 9b 08 .... debug 

    # ejs.es:18055                                  let body = result.body

    0210: [0] 5d ......................... getLocalSlot2 
    0211: [1] 7b e6 c8 04 00 ............. getObjName <body> <> 
    0216: [1] 98 ......................... putLocalSlot4 
    0217: [0] 33 12 90 9a 02 ea 9b 08 .... debug 

    # ejs.es:18056                                  if (body is String) {

    0225: [0] 5f ......................... getLocalSlot4 
    0226: [1] 7e e8 01 ................... getGlobalSlot <slot: 116> 
    0229: [2] 43 ......................... isA 
    0230: [1] 13 15 ...................... branchFalse8 <addr: 253> 
    0232: [0] 33 12 92 9a 02 be 9c 08 .... debug 

    # ejs.es:18057                                      request.write(body)

    0240: [0] 5b ......................... getLocalSlot0 
    0241: [1] 5f ......................... getLocalSlot4 
    0242: [2] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0248: [0] 3d 96 05 f7 f7 ............. goto <addr: 584> 
    0253: [0] 33 12 96 9a 02 96 9d 08 .... debug 

    # ejs.es:18059                                  } else if (body is Array) {

    0261: [0] 5f ......................... getLocalSlot4 
    0262: [1] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0264: [2] 43 ......................... isA 
    0265: [1] 13 2e ...................... branchFalse8 <addr: 313> 
    0267: [0] 33 12 98 9a 02 f6 9d 08 .... debug 

    # ejs.es:18060                                      for each (let item in body) {

    0275: [0] 5f ......................... getLocalSlot4 
    0276: [1] 1e 9c 39 88 38 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0282: [0] 93 ......................... pushResult 
    0283: [1] 39 ......................... dup 
    0284: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0287: [1] 93 ......................... pushResult 
    0288: [2] 99 ......................... putLocalSlot5 
    0289: [1] 33 12 9a 9a 02 e2 9e 08 .... debug 

    # ejs.es:18061                                          request.write(item)

    0297: [1] 5b ......................... getLocalSlot0 
    0298: [2] 60 ......................... getLocalSlot5 
    0299: [3] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0305: [1] 3e e8 ...................... goto8 <addr: 283> 
    0307: [1] 90 ......................... pop 
    0308: [0] 3d 9e 04 f7 f7 ............. goto <addr: 584> 
    0313: [0] 33 12 a0 9a 02 c2 9f 08 .... debug 

    # ejs.es:18064                                  } else if (body is Stream) {

    0321: [0] 5f ......................... getLocalSlot4 
    0322: [1] 7e e6 01 ................... getGlobalSlot <slot: 115> 
    0325: [2] 43 ......................... isA 
    0326: [1] 07 e0 02 f7 f7 ............. branchFalse <addr: 507> 
    0331: [0] 33 12 a4 9a 02 a4 a0 08 .... debug 

    # ejs.es:18066                                      if (body.async) {

    0339: [0] 5f ......................... getLocalSlot4 
    0340: [1] 7b c0 bd 03 00 ............. getObjName <async> <> 
    0345: [1] 13 55 ...................... branchFalse8 <addr: 432> 
    0347: [0] 8d 0c 00 ................... openBlock <slot: 6> <0> 
    0350: [0] 33 12 a6 9a 02 f8 a0 08 .... debug 

    # ejs.es:18067                                          request.async = true

    0358: [0] 7e 82 01 ................... getGlobalSlot <slot: 65> 
    0361: [1] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0364: [2] b3 c0 bd 03 c4 08 .......... putObjName <async> <public> 
    0370: [0] 33 12 ac 9a 02 da a1 08 .... debug 

    # ejs.es:18070                                          request.addListener("", function(event, body) {

    0378: [0] 35 00 00 ................... defineFunction <slot: 0> <0> 
    0381: [0] 33 12 ac 9a 02 da a1 08 .... debug 

    # ejs.es:18070                                          request.addListener("", function(event, body) {

    0389: [0] 33 12 b0 9a 02 da a1 08 .... debug 

    # ejs.es:18072                                          request.addListener("", function(event, body) {

    0397: [0] 33 12 ac 9a 02 da a1 08 .... debug 

    # ejs.es:18070                                          request.addListener("", function(event, body) {

    0405: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0408: [1] 56 ba 11 ................... loadString <> 
    0411: [2] 33 12 b0 9a 02 da a3 08 .... debug 

    # ejs.es:18072                                          })

    0419: [2] 7d 00 00 ................... getBlockSlot <slot: 0> <0> 
    0422: [3] 1e de bb 03 c4 08 04 ....... callObjName <addListener> <public> <argc: 2> 
    0429: [0] 24 ......................... closeBlock 
    0430: [0] 3e 49 ...................... goto8 <addr: 505> 
    0432: [0] 33 12 b4 9a 02 aa 89 03 .... debug 

    # ejs.es:18074                                      } else {

    0440: [0] 33 12 b6 9a 02 f4 a4 08 .... debug 

    # ejs.es:18075                                          ba = new ByteArray

    0448: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0450: [1] 89 ......................... new 
    0451: [1] 20 00 ...................... callConstructor <argc: 0> 
    0453: [1] b4 d2 a5 08 ba 11 .......... putScopedName <ba> <> 
    0459: [0] 33 12 b8 9a 02 d8 a5 08 .... debug 

    # ejs.es:18076                                          while (body.read(ba)) {

    0467: [0] 5f ......................... getLocalSlot4 
    0468: [1] 79 d2 a5 08 ba 11 .......... getScopedName <ba> <> 
    0474: [2] 1e e0 69 00 02 ............. callObjName <read> <> <argc: 1> 
    0479: [0] 93 ......................... pushResult 
    0480: [1] 13 17 ...................... branchFalse8 <addr: 505> 
    0482: [0] 33 12 ba 9a 02 c0 a6 08 .... debug 

    # ejs.es:18077                                              request.write(ba)

    0490: [0] 5b ......................... getLocalSlot0 
    0491: [1] 79 d2 a5 08 ba 11 .......... getScopedName <ba> <> 
    0497: [2] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0503: [0] 3e da ...................... goto8 <addr: 467> 
    0505: [0] 3e 4d ...................... goto8 <addr: 584> 
    0507: [0] 33 12 c0 9a 02 c4 a7 08 .... debug 

    # ejs.es:18080                                  } else if (body.forEach) {

    0515: [0] 5f ......................... getLocalSlot4 
    0516: [1] 7b a2 a8 08 00 ............. getObjName <forEach> <> 
    0521: [1] 13 3d ...................... branchFalse8 <addr: 584> 
    0523: [0] 8d 0e 00 ................... openBlock <slot: 7> <0> 
    0526: [0] 33 12 c2 9a 02 b2 a8 08 .... debug 

    # ejs.es:18081                                      body.forEach(function(block) {

    0534: [0] 35 00 00 ................... defineFunction <slot: 0> <0> 
    0537: [0] 33 12 c0 9a 02 c4 a7 08 .... debug 

    # ejs.es:18080                                  } else if (body.forEach) {

    0545: [0] 33 12 c6 9a 02 b2 a8 08 .... debug 

    # ejs.es:18083                                      body.forEach(function(block) {

    0553: [0] 33 12 c2 9a 02 b2 a8 08 .... debug 

    # ejs.es:18081                                      body.forEach(function(block) {

    0561: [0] 7d 08 02 ................... getBlockSlot <slot: 4> <1> 
    0564: [1] 33 12 c6 9a 02 82 aa 08 .... debug 

    # ejs.es:18083                                      })

    0572: [1] 7d 00 00 ................... getBlockSlot <slot: 0> <0> 
    0575: [2] 1e a2 a8 08 00 02 .......... callObjName <forEach> <> <argc: 1> 
    0581: [0] 24 ......................... closeBlock 
    0582: [0] 3e 00 ...................... goto8 <addr: 584> 
    0584: [0] ca ......................... finally 
    0585: [0] 3e 34 ...................... goto8 <addr: 639> 
    0587: [0] 33 12 cc 9a 02 ec f6 07 .... debug 

    # ejs.es:18086                          } catch (e) {

    0595: [0] 92 ......................... pushCatchArg 
    0596: [1] b6 10 02 ................... putBlockSlot <slot: 8> <1> 
    0599: [0] 33 12 ce 9a 02 b4 ab 08 .... debug 

    # ejs.es:18087              print("Web.start() CATCH " + e)

    0607: [0] 56 f4 ab 08 ................ loadString <Web.start() CATCH > 
    0611: [1] 7d 10 02 ................... getBlockSlot <slot: 8> <1> 
    0614: [2] 00 ......................... add 
    0615: [1] 17 aa 01 02 ................ callGlobalSlot <slot: 85> <argc: 1> 
    0619: [0] 33 12 d0 9a 02 a0 f7 07 .... debug 

    # ejs.es:18088                              request.writeError(e)

    0627: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0630: [1] 7d 10 02 ................... getBlockSlot <slot: 8> <1> 
    0633: [2] 1e 82 61 c4 08 02 .......... callObjName <writeError> <public> <argc: 1> 
    0639: [0] 33 12 d4 9a 02 9a ac 08 .... debug 

    # ejs.es:18090                          } finally {

    0647: [0] 33 12 d6 9a 02 ca ac 08 .... debug 

    # ejs.es:18091                              request.finalize()

    0655: [0] 7d 00 02 ................... getBlockSlot <slot: 0> <1> 
    0658: [1] 1e f2 a2 04 c4 08 00 ....... callObjName <finalize> <public> <argc: 0> 
    0665: [0] 3c ......................... endException 
    0666: [0] 54 ......................... loadNull 
    0667: [1] bf ......................... returnValue 
    0668: [0] 33 12 dc 9a 02 b0 15 ....... debug 

    # ejs.es:18094                      }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    284     287        307          307       StopIteration
1   catch          0     587        587          639       Void
2   finally        0     587        639          666       Void

VARIABLE:   [request-00]  private var request : Request
VARIABLE:   [app-01]  private var app : Function
VARIABLE:   [result-02]  -hoisted-2 var result
VARIABLE:   [headers-03]  -hoisted-3 var headers
VARIABLE:   [body-04]  -hoisted-3 var body
VARIABLE:   [item-05]  -hoisted-5 var item

BLOCK:      [block_18066_693-06]  block_18066_693 (Slots 1)

FUNCTION:   [--fun_34051--89941300---00]  private function --fun_34051--89941300--(event, body) : void

     ARG:   [arg-00]   private event
     ARG:   [arg-01]   private body

    0000: [0] 33 12 ae 9a 02 f2 a2 08 .... debug 

    # ejs.es:18071                                              request.write(body)

    0008: [0] 7d 00 04 ................... getBlockSlot <slot: 0> <2> 
    0011: [1] 5c ......................... getLocalSlot1 
    0012: [2] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0018: [0] be ......................... return 
    0019: [0] 33 12 b0 9a 02 da a3 08 .... debug 

    # ejs.es:18072                                          })
    
VARIABLE:   [event-00]  private var event
VARIABLE:   [body-01]  private var body

BLOCK:      [block_18080_696-07]  block_18080_696 (Slots 1)

FUNCTION:   [--fun_34107--89941299---00]  private function --fun_34107--89941299--(block) : void

     ARG:   [arg-00]   private block

    0000: [0] 33 12 c4 9a 02 a0 a9 08 .... debug 

    # ejs.es:18082                                          request.write(block)

    0008: [0] 7d 00 04 ................... getBlockSlot <slot: 0> <2> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1e 9c 66 c4 08 02 .......... callObjName <write> <public> <argc: 1> 
    0018: [0] be ......................... return 
    0019: [0] 33 12 c6 9a 02 82 aa 08 .... debug 

    # ejs.es:18083                                      })
    
VARIABLE:   [block-00]  private var block
VARIABLE:   [e-08]  -hoisted-8 var e

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 185)
#
0000    public var stderr
0001    public var stdin
0002    public var stdout
0003    ejs var App: Type
0004    ejs function appInit
0005    ejs var Array: Type
0006    ejs var BinaryStream: Type
0007    ejs var Block: Type
0008    ejs var Boolean: Type
0009    ejs var ByteArray: Type
0010    ejs var Cmd: Type
0011    ejs var CmdArgs: Type
0012    public function gc
0013    public function readFile
0014    ejs var Config: Type
0015    ejs var Date: Type
0016    ejs var Emitter: Type
0017    internal-ed363076473b51ca685af450cc662b39-0 var Endpoint: Type
0018    ejs var ArgError: Type
0019    ejs var ArithmeticError: Type
0020    ejs var AssertError: Type
0021    ejs var InstructionError: Type
0022    ejs var Error: Type
0023    ejs var IOError: Type
0024    ejs var InternalError: Type
0025    ejs var MemoryError: Type
0026    ejs var OutOfBoundsError: Type
0027    ejs var ReferenceError: Type
0028    ejs var ResourceError: Type
0029    ejs var SecurityError: Type
0030    ejs var StateError: Type
0031    ejs var SyntaxError: Type
0032    ejs var TypeError: Type
0033    ejs var URIError: Type
0034    ejs var Event: Type
0035    ejs var ErrorEvent: Type
0036    ejs var File: Type
0037    ejs var FileSystem: Type
0038    ejs var Frame: Type
0039    ejs var Function: Type
0040    ejs function makeGetter
0041    ejs function clearBoundThis
0042    ejs var GC: Type
0043    public var EJSCRIPT: Boolean
0044    public var ECMA: Boolean
0045    public var ejs
0046    public var public
0047    public var internal
0048    public var iterator
0049    public var CONFIG
0050    ejs var TODO: Boolean
0051    ejs var FUTURE: Boolean
0052    ejs var ASC: Boolean
0053    ejs var DOC_ONLY: Boolean
0054    ejs var DEPRECATED: Boolean
0055    ejs var boolean
0056    ejs var double
0057    ejs var num
0058    ejs var string
0059    ejs var false: Boolean
0060    ejs var global: Object
0061    ejs var null
0062    ejs var Infinity
0063    ejs var NegativeInfinity
0064    ejs var NaN
0065    ejs var true: Boolean
0066    ejs var undefined
0067    ejs var void
0068    ejs function assert
0069    ejs function breakpoint
0070    ejs function cloneBase
0071    ejs function decodeURI
0072    ejs function dump
0073    ejs function dumpAll
0074    ejs function dumpDef
0075    ejs function encodeURI
0076    ejs function escape
0077    ejs function md5
0078    ejs function blend
0079    ejs function eval
0080    ejs function formatStack
0081    ejs function hashcode
0082    ejs function isNaN
0083    ejs function isFinite
0084    ejs function load
0085    ejs function print
0086    ejs function parse
0087    ejs function parseFloat
0088    ejs function parseInt
0089    ejs function printHash
0090    ejs function instanceOf
0091    ejs function error
0092    ejs function input
0093    ejs function output
0094    ejs var Http: Type
0095    iterator var Iterable: Type
0096    iterator var Iterator: Type
0097    iterator var StopIteration: Type
0098    ejs var JSON: Type
0099    ejs function deserialize
0100    ejs function serialize
0101    ejs var Locale: Type
0102    ejs var Logger: Type
0103    ejs var Math: Type
0104    ejs var Memory: Type
0105    ejs var Namespace: Type
0106    ejs var Null: Type
0107    ejs var Number: Type
0108    ejs var Object: Type
0109    ejs var Path: Type
0110    ejs var Promise: Type
0111    ejs var Reflect: Type
0112    ejs function typeOf
0113    ejs var RegExp: Type
0114    ejs var Socket: Type
0115    ejs var Stream: Type
0116    ejs var String: Type
0117    ejs var System: Type
0118    ejs var TextStream: Type
0119    ejs var Timer: Type
0120    ejs function setInterval
0121    ejs function setTimeout
0122    ejs var TimerEvent: Type
0123    ejs var Type: Type
0124    ejs var Uri: Type
0125    ejs function decodeUri
0126    ejs function decodeUriComponent
0127    ejs var Void: Type
0128    ejs var Worker: Type
0129    ejs.worker var self: Worker
0130    ejs.worker function exit
0131    ejs.worker function postMessage
0132    ejs.worker function onerror
0133    ejs.worker function onmessage
0134    ejs var XML: Type
0135    ejs var XMLHttp: Type
0136    ejs var XMLList: Type
0137    ejs.cjs function require
0138    public var Loader: Type
0139    public function basename
0140    public function chdir
0141    public function chmod
0142    public function cp
0143    public function dirname
0144    public function exists
0145    public function extension
0146    public function freeSpace
0147    public function isDir
0148    public function kill
0149    public function ls
0150    public function find
0151    public function mkdir
0152    public function mv
0153    public function pwd
0154    public function rm
0155    public function rmdir
0156    public function tempname
0157    ejs.db var Database: Type
0158    ejs.db var DatabaseConnector: Type
0159    public var Record: Type
0160    ejs.db.mapper var Column: Type
0161    ejs.db.mapper function plural
0162    ejs.db.mapper function singular
0163    ejs.db.mapper function mapType
0164    ejs.db var Sqlite: Type
0165    ejs.web var action: Namespace
0166    ejs.web var Controller: Type
0167    public var HtmlConnector: Type
0168    ejs.web var HttpServer: Type
0169    public var Mvc: Type
0170    ejs.web var Request: Type
0171    ejs.web var Router: Type
0172    ejs.web var Route: Type
0173    ejs.web var session: Object
0174    ejs.web var Session: Type
0175    ejs.web var UploadFile: Type
0176    ejs.web function parseCookies
0177    ejs.web function escapeHtml
0178    ejs.web function html
0179    ejs.web function unescapeHtml
0180    ejs.web var View: Type
0181    ejs.web var Web: Type

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "App" class (Num slots 52, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function App-initializer
0027    public var config: Object
0028    [ejs::App,private] var _errorStream
0029    [ejs::App,private] var _inputStream
0030    [ejs::App,private] var _outputStream
0031    internal-ed363076473b51ca685af450cc662b39-0 var defaultConfig
0032    public function args
0033    public function dir
0034    public function chdir
0035    public function exeDir
0036    public function exePath
0037    public function errorStream
0038    public function exit
0039    public function getenv
0040    public function inputStream
0041    public var logger
0042    public function name
0043    public function noexit
0044    public function outputStream
0045    public function putenv
0046    public function search
0047    public function createSearch
0048    public function serviceEvents
0049    public function sleep
0050    public function title
0051    public function version

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Array" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Array
0027    public function append
0028    public function clear
0029    public function compact
0030    public function concat
0031    public function contains
0032    public function every
0033    public function filter
0034    public function find
0035    public function findAll
0036    public function forEach
0037    public function indexOf
0038    public function insert
0039    public function join
0040    public function lastIndexOf
0041    public function length
0042    public function map
0043    public function pop
0044    public function push
0045    public function reject
0046    public function remove
0047    public function reverse
0048    public function shift
0049    public function slice
0050    public function some
0051    public function sort
0052    public function splice
0053    public function transform
0054    public function unique
0055    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "BinaryStream" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function BinaryStream
0027    -initializer- function BinaryStream-initializer
0028    public var BigEndian
0029    public var LittleEndian
0030    public function addListener
0031    public function async
0032    public function available
0033    public function close
0034    public function encoding
0035    public function endian
0036    public function flush
0037    public function read
0038    public function readBoolean
0039    public function readByte
0040    public function readDate
0041    public function readDouble
0042    public function readInteger
0043    public function readLong
0044    public function readString
0045    public function readXML
0046    public function removeListener
0047    public function room
0048    public function write
0049    public function writeByte
0050    public function writeShort
0051    public function writeDouble
0052    public function writeInteger
0053    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs::BinaryStream,private] var inbuf
0001    [ejs::BinaryStream,private] var outbuf
0002    [ejs::BinaryStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Block" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Boolean" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 64, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function ByteArray
0027    -initializer- function ByteArray-initializer
0028    public var LittleEndian
0029    public var BigEndian
0030    public function addListener
0031    public function available
0032    public function async
0033    public function close
0034    public function compact
0035    public function copyIn
0036    public function copyOut
0037    public function encoding
0038    public function endian
0039    public function flush
0040    public function length
0041    public function MD5
0042    public function read
0043    public function readBoolean
0044    public function readByte
0045    public function readDate
0046    public function readDouble
0047    public function readInteger
0048    public function readLong
0049    public function readPosition
0050    public function readShort
0051    public function readString
0052    public function removeListener
0053    public function reset
0054    public function room
0055    public function write
0056    public function writeByte
0057    public function writeShort
0058    public function writeDouble
0059    public function writeInteger
0060    public function writeLong
0061    public function writePosition
0062    public function input
0063    public function output

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Cmd" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function sh
0027    public function run
0028    public function daemon
0029    public function runx

#
#  Instance slot assignments for the "Cmd" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "CmdArgs" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function CmdArgs
0027    [ejs::CmdArgs,private] function parseTemplate
0028    [ejs::CmdArgs,private] function validate

#
#  Instance slot assignments for the "CmdArgs" class (Num prop 4, num inherited 0)
#
0000    public var args: Array
0001    public var options: Object
0002    [ejs::CmdArgs,private] var ranges: Object
0003    [ejs::CmdArgs,private] var aliases: Object

#
#  Class slot assignments for the "Config" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public var Debug: Boolean
0027    public var CPU
0028    public var OS
0029    public var Product
0030    public var Title
0031    public var Version
0032    public var LibDir
0033    public var BinDir
0034    public var ModDir

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Date" class (Num slots 87, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Date
0027    public function day
0028    public function dayOfYear
0029    public function date
0030    public function elapsed
0031    public function format
0032    public function formatUTC
0033    public function fullYear
0034    public function getDate
0035    public function getDay
0036    public function getFullYear
0037    public function getHours
0038    public function getMilliseconds
0039    public function getMinutes
0040    public function getMonth
0041    public function getSeconds
0042    public function getTime
0043    public function getTimezoneOffset
0044    public function getUTCDate
0045    public function getUTCDay
0046    public function getUTCFullYear
0047    public function getUTCHours
0048    public function getUTCMilliseconds
0049    public function getUTCMinutes
0050    public function getUTCMonth
0051    public function getUTCSeconds
0052    public function hours
0053    public function milliseconds
0054    public function minutes
0055    public function month
0056    public function nanoAge
0057    public function nextDay
0058    public function now
0059    public function parseDate
0060    public function parseUTCDate
0061    public function parse
0062    public function seconds
0063    public function setDate
0064    public function setFullYear
0065    public function setHours
0066    public function setMilliseconds
0067    public function setMinutes
0068    public function setMonth
0069    public function setSeconds
0070    public function setTime
0071    public function setUTCDate
0072    public function setUTCFullYear
0073    public function setUTCHours
0074    public function setUTCMilliseconds
0075    public function setUTCMinutes
0076    public function setUTCMonth
0077    public function setUTCSeconds
0078    public function time
0079    public function toDateString
0080    public function toISOString
0081    public function toLocaleDateString
0082    public function toLocaleTimeString
0083    public function toTimeString
0084    public function toUTCString
0085    public function UTC
0086    public function year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Emitter" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener

#
#  Instance slot assignments for the "Emitter" class (Num prop 1, num inherited 0)
#
0000    [ejs::Emitter,private] var endpoints: Object

#
#  Class slot assignments for the "Endpoint" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 4, num inherited 0)
#
0000    public var callback
0001    public var name
0002    public var active: Boolean
0003    public var again: Boolean

#
#  Class slot assignments for the "ArgError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "AssertError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InstructionError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Error" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "IOError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InternalError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "MemoryError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ReferenceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ResourceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SecurityError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SecurityError

#
#  Instance slot assignments for the "SecurityError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "StateError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SyntaxError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "TypeError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "URIError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Event" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event

#
#  Instance slot assignments for the "Event" class (Num prop 2, num inherited 0)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "ErrorEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function ErrorEvent

#
#  Instance slot assignments for the "ErrorEvent" class (Num prop 6, num inherited 2)
#
0000    public var data
0001    public var timestamp
0002    public var message
0003    public var filename
0004    public var lineno
0005    public var stack

#
#  Class slot assignments for the "File" class (Num slots 47, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function File
0027    public function addListener
0028    public function async
0029    public function canRead
0030    public function canWrite
0031    public function close
0032    public function encoding
0033    public function flush
0034    public function isOpen
0035    public function open
0036    public function options
0037    public function path
0038    public function position
0039    public function read
0040    public function readBytes
0041    public function readString
0042    public function remove
0043    public function removeListener
0044    public function size
0045    public function truncate
0046    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "FileSystem" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function FileSystem
0027    public function hasDrives
0028    public function newline
0029    public function root
0030    public function separators

#
#  Instance slot assignments for the "FileSystem" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Frame" class (Num slots 31, num inherited 31)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Frame" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Function" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function enabled
0027    public function workQuota
0028    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Http" class (Num slots 118, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Http
0027    -initializer- function Http-initializer
0028    public var Continue
0029    public var Ok
0030    public var Created
0031    public var Accepted
0032    public var NotAuthoritative
0033    public var NoContent
0034    public var Reset
0035    public var Partial
0036    public var MultipleChoice
0037    public var MovedPermanently
0038    public var MovedTemporarily
0039    public var SeeOther
0040    public var NotModified
0041    public var UseProxy
0042    public var BadRequest
0043    public var Unauthorized
0044    public var PaymentRequired
0045    public var Forbidden
0046    public var NotFound
0047    public var BadMethod
0048    public var NotAccepted
0049    public var ProxyAuth
0050    public var ClientTimeout
0051    public var Conflict
0052    public var Gone
0053    public var LengthRequired
0054    public var PrecondFailed
0055    public var EntityTooLarge
0056    public var ReqTooLong
0057    public var UnsupportedType
0058    public var ServerError
0059    public var NotImplemented
0060    public var BadGateway
0061    public var Unavailable
0062    public var GatewayTimeout
0063    public var Version
0064    public function addListener
0065    public function async
0066    public function chunkSize
0067    public function close
0068    public function connect
0069    public function certificate
0070    public function contentLength
0071    public function contentType
0072    public function date
0073    public function del
0074    public function encoding
0075    public function expires
0076    public function finalize
0077    public function flush
0078    public function followRedirects
0079    public function form
0080    public function get
0081    public function getRequestHeaders
0082    public function head
0083    public function header
0084    public function headers
0085    public function isSecure
0086    public function key
0087    public function lastModified
0088    public function method
0089    public function options
0090    public function post
0091    public function put
0092    public function read
0093    public function readString
0094    public function readLines
0095    public function readXml
0096    public function removeListener
0097    public function response
0098    public function retries
0099    public function setCredentials
0100    public function setHeader
0101    public function setHeaders
0102    public function status
0103    public function statusMessage
0104    public function success
0105    public function timeout
0106    public function trace
0107    public function upload
0108    public function uri
0109    public function wait
0110    public function write
0111    public function addHeader
0112    public function bodyLength
0113    public function code
0114    public function codeString
0115    public function available
0116    public function contentEncoding
0117    public function mimeType

#
#  Instance slot assignments for the "Http" class (Num prop 1, num inherited 0)
#
0000    [ejs::Http,private] var _response

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Iterator" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function parse
0027    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Locale" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Locale
0027    -initializer- function Locale-initializer
0028    public var textEncoding

#
#  Instance slot assignments for the "Locale" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Logger" class (Num slots 53, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Logger
0027    -initializer- function Logger-initializer
0028    public var Off
0029    public var Error
0030    public var Warn
0031    public var Info
0032    public var Config
0033    public var All
0034    public function addListener
0035    public function async
0036    public function close
0037    public function filter
0038    public function flush
0039    public function level
0040    public function match
0041    public function name
0042    public function outstream
0043    public function parent
0044    public function debug
0045    public function config
0046    public function error
0047    public function info
0048    public function read
0049    public function removeListener
0050    public function write
0051    public function warn
0052    [ejs::Logger,private] function emit

#
#  Instance slot assignments for the "Logger" class (Num prop 6, num inherited 0)
#
0000    [ejs::Logger,private] var _filter: Function
0001    [ejs::Logger,private] var _level
0002    [ejs::Logger,private] var _pattern
0003    [ejs::Logger,private] var _name
0004    [ejs::Logger,private] var _outstream: Stream
0005    [ejs::Logger,private] var _parent: Logger

#
#  Class slot assignments for the "Math" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Math-initializer
0027    public var E
0028    public var LN2
0029    public var LN10
0030    public var LOG2E
0031    public var LOG10E
0032    public var PI
0033    public var SQRT1_2
0034    public var SQRT2
0035    public function abs
0036    public function acos
0037    public function asin
0038    public function atan
0039    public function atan2
0040    public function ceil
0041    public function cos
0042    public function exp
0043    public function floor
0044    public function log10
0045    public function log
0046    public function max
0047    public function min
0048    public function pow
0049    public function random
0050    public function round
0051    public function sin
0052    public function sqrt
0053    public function tan

#
#  Instance slot assignments for the "Math" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Memory" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function allocated
0027    public function callback
0028    public function maximum
0029    public function peak
0030    public function redline
0031    public function resident
0032    public function stack
0033    public function system
0034    public function stats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Namespace" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Namespace" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Null" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Number" class (Num slots 49, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Number
0027    -initializer- function Number-initializer
0028    public var MAX_VALUE: Number
0029    public var MIN_VALUE: Number
0030    public var NaN: Number
0031    public var NEGATIVE_INFINITY: Number
0032    public var POSITIVE_INFINITY: Number
0033    public var MaxValue: Number
0034    public var MinValue: Number
0035    public function abs
0036    public function ceil
0037    public function floor
0038    public function isFinite
0039    public function isNaN
0040    public function round
0041    public function toExponential
0042    public function toFixed
0043    public function toPrecision
0044    public function byte
0045    public function integral
0046    public function max
0047    public function min
0048    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Object" class (Num slots 26, num inherited 0)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    public function create
0005    public function defineProperty
0006    public function defineProperties
0007    public function freeze
0008    iterator function get
0009    public function getOwnPropertyDescriptor
0010    public function getOwnPropertyNames
0011    public function getOwnPrototypeOf
0012    iterator function getValues
0013    public function hasOwnProperty
0014    public function isExtensible
0015    public function isFrozen
0016    public function isPrototypeOf
0017    public function isSealed
0018    public function keys
0019    public function preventExtensions
0020    public function propertyIsEnumerable
0021    public function seal
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Path" class (Num slots 85, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Path
0027    public function absolute
0028    public function accessed
0029    public function basename
0030    public function components
0031    public function contains
0032    public function copy
0033    public function created
0034    public function dirname
0035    public function endsWith
0036    public function exists
0037    public function extension
0038    public function find
0039    public function files
0040    public function hasDrive
0041    public function isAbsolute
0042    public function isDir
0043    public function isLink
0044    public function isRegular
0045    public function isRelative
0046    public function join
0047    public function joinExt
0048    public function length
0049    public function linkTarget
0050    public function makeDir
0051    public function makeLink
0052    public function makeTemp
0053    public function map
0054    public function mimeType
0055    public function modified
0056    public function name
0057    public function natural
0058    public function normalize
0059    public function open
0060    public function openTextStream
0061    public function openBinaryStream
0062    public function parent
0063    public function perms
0064    public function portable
0065    public function readBytes
0066    public function readLines
0067    public function readString
0068    public function readXML
0069    public function relative
0070    public function remove
0071    public function removeAll
0072    public function rename
0073    public function replaceExt
0074    public function resolve
0075    public function same
0076    public function separator
0077    public function size
0078    public function startsWith
0079    public function toLower
0080    public function trimEnd
0081    public function trimExt
0082    public function trimStart
0083    public function truncate
0084    public function write

#
#  Instance slot assignments for the "Path" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Promise" class (Num slots 47, num inherited 35)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener
0035    -constructor- function Promise
0036    internal-ed363076473b51ca685af450cc662b39-0 function addCallback
0037    internal-ed363076473b51ca685af450cc662b39-0 function addCancelback
0038    internal-ed363076473b51ca685af450cc662b39-0 function addErrback
0039    internal-ed363076473b51ca685af450cc662b39-0 function emitSuccess
0040    internal-ed363076473b51ca685af450cc662b39-0 function emitError
0041    internal-ed363076473b51ca685af450cc662b39-0 function emitCancel
0042    internal-ed363076473b51ca685af450cc662b39-0 function cancel
0043    internal-ed363076473b51ca685af450cc662b39-0 function then
0044    internal-ed363076473b51ca685af450cc662b39-0 function timeout
0045    internal-ed363076473b51ca685af450cc662b39-0 function wait
0046    [ejs::Promise,private] function issue

#
#  Instance slot assignments for the "Promise" class (Num prop 3, num inherited 1)
#
0000    [ejs::Emitter,private] var endpoints
0001    [ejs::Promise,private] var timer
0002    [ejs::Promise,private] var fired: Boolean

#
#  Class slot assignments for the "Reflect" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Reflect
0027    public function base
0028    public function isType
0029    public function type
0030    public function name

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [ejs::Reflect,private] var obj: Object

#
#  Class slot assignments for the "RegExp" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function RegExp
0027    public function lastIndex
0028    public function exec
0029    public function global
0030    public function ignoreCase
0031    public function multiline
0032    public function source
0033    public function matched
0034    public function replace
0035    public function split
0036    public function start
0037    public function sticky
0038    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Socket" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Socket
0027    public function addListener
0028    public function accept
0029    public function address
0030    public function async
0031    public function close
0032    public function connect
0033    public function encoding
0034    public function flush
0035    public function listen
0036    public function port
0037    public function read
0038    public function remoteAddress
0039    public function removeListener
0040    public function write

#
#  Instance slot assignments for the "Socket" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Stream" class (Num slots 7, num inherited 0)
#
0000    public function addListener
0001    public function async
0002    public function close
0003    public function flush
0004    public function read
0005    public function removeListener
0006    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "String" class (Num slots 68, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function String
0027    public function caseCompare
0028    public function caselessCompare
0029    public function charAt
0030    public function charCodeAt
0031    public function concat
0032    public function contains
0033    public function endsWith
0034    public function format
0035    public function fromCharCode
0036    public function indexOf
0037    public function isDigit
0038    public function isAlpha
0039    public function isAlphaNum
0040    public function isLower
0041    public function isSpace
0042    public function isUpper
0043    public function lastIndexOf
0044    public function length
0045    public function match
0046    public function parseJSON
0047    public function toCamel
0048    public function toPascal
0049    public function printable
0050    public function quote
0051    public function remove
0052    public function replace
0053    public function reverse
0054    public function search
0055    public function slice
0056    public function split
0057    public function startsWith
0058    public function substring
0059    public function times
0060    public function tokenize
0061    public function toLower
0062    public function toUpper
0063    public function trim
0064    public function trimStart
0065    public function trimEnd
0066    public function -
0067    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 36, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function System-initializer
0027    public var Bufsize: Number
0028    public function hostname
0029    public function ipaddr
0030    public function run
0031    public function runx
0032    public function daemon
0033    public function sh
0034    public function cmd
0035    public function exec

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TextStream" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TextStream
0027    public function addListener
0028    public function async
0029    public function available
0030    public function close
0031    public function encoding
0032    public function fill
0033    public function flush
0034    public function read
0035    public function readLine
0036    public function readLines
0037    public function readString
0038    public function removeListener
0039    public function write
0040    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs::TextStream,private] var newline: String
0001    [ejs::TextStream,private] var inbuf: ByteArray
0002    [ejs::TextStream,private] var format: String
0003    [ejs::TextStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Timer" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Timer
0027    public function drift
0028    public function period
0029    public function restart
0030    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TimerEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function TimerEvent

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 2, num inherited 2)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "Type" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Uri" class (Num slots 65, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Uri
0027    public function basename
0028    public function complete
0029    public function components
0030    public function decode
0031    public function decodeComponent
0032    public function dirname
0033    public function encode
0034    public function encodeComponent
0035    public function endsWith
0036    public function extension
0037    public function hasExtension
0038    public function hasHost
0039    public function hasPort
0040    public function hasQuery
0041    public function hasReference
0042    public function hasScheme
0043    public function host
0044    public function isAbsolute
0045    public function isDir
0046    public function isRegular
0047    public function isRelative
0048    public function join
0049    public function joinExt
0050    public function mimeType
0051    public function normalize
0052    public function path
0053    public function port
0054    public function scheme
0055    public function query
0056    public function reference
0057    public function relative
0058    public function replaceExt
0059    public function same
0060    public function startsWith
0061    public function trimEnd
0062    public function trimExt
0063    public function trimStart
0064    public function uri

#
#  Instance slot assignments for the "Uri" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Void" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Worker" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Worker
0027    public function eval
0028    public function exit
0029    public function join
0030    public function load
0031    public function preload
0032    public function preeval
0033    public function lookup
0034    public function postMessage
0035    public function terminate
0036    public function waitForMessage

#
#  Instance slot assignments for the "Worker" class (Num prop 4, num inherited 0)
#
0000    public var onclose: Function
0001    public var onmessage: Function
0002    public var onerror: Function
0003    public var name: String

#
#  Class slot assignments for the "XML" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XML
0027    public function load
0028    public function save
0029    public function length
0030    public function name

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "XMLHttp" class (Num slots 48, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLHttp
0027    -initializer- function XMLHttp-initializer
0028    public var Uninitialized
0029    public var Open
0030    public var Sent
0031    public var Receiving
0032    public var Loaded
0033    public function abort
0034    public function http
0035    public function readyState
0036    public function responseText
0037    public function responseXML
0038    public function responseBody
0039    public function status
0040    public function statusText
0041    public function getAllResponseHeaders
0042    public function getResponseHeader
0043    public function open
0044    public function send
0045    public function setRequestHeader
0046    [ejs::XMLHttp,private] function callback
0047    [ejs::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs::XMLHttp,private] var hp: Http
0001    [ejs::XMLHttp,private] var state: Number
0002    [ejs::XMLHttp,private] var response: ByteArray
0003    public var onreadystatechange: Function

#
#  Class slot assignments for the "XMLList" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLList
0027    public function length
0028    public function name

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Loader" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Loader-initializer
0027    public var mainId
0028    [Loader,private] var signatures
0029    [Loader,private] var timestamps
0030    [Loader,private] var defaultExtensions
0031    [Loader,private] var config
0032    internal-ed363076473b51ca685af450cc662b39-0 function init
0033    public function require
0034    public function load
0035    public function cached
0036    public function wrap
0037    [Loader,private] function locate
0038    public function setConfig

#
#  Instance slot assignments for the "Loader" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Database" class (Num slots 59, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Database
0027    [ejs.db::Database,private] var defaultDb: Database
0028    public function addColumn
0029    public function addIndex
0030    public function changeColumn
0031    public function close
0032    public function commit
0033    public function connect
0034    public function connection
0035    public function createDatabase
0036    public function createTable
0037    public function dataTypeToSqlType
0038    public function defaultDatabase
0039    public function destroyDatabase
0040    public function destroyTable
0041    public function endTransaction
0042    public function getColumns
0043    public function getTables
0044    public function getNumRows
0045    public function name
0046    public function query
0047    public function removeColumns
0048    public function removeIndex
0049    public function renameColumn
0050    public function renameTable
0051    public function rollback
0052    public function sql
0053    public function sqlTypeToDataType
0054    public function sqlTypeToEjsType
0055    public function startTransaction
0056    public function trace
0057    public function transaction
0058    public function quote

#
#  Instance slot assignments for the "Database" class (Num prop 4, num inherited 0)
#
0000    [ejs.db::Database,private] var _adapter: Object
0001    [ejs.db::Database,private] var _connection: String
0002    [ejs.db::Database,private] var _name: String
0003    [ejs.db::Database,private] var _traceAll: Boolean

#
#  Class slot assignments for the "DatabaseConnector" class (Num slots 22, num inherited 0)
#
0000    public function addColumn
0001    public function addIndex
0002    public function changeColumn
0003    public function close
0004    public function commit
0005    public function connect
0006    public function createDatabase
0007    public function createTable
0008    public function dataTypeToSqlType
0009    public function destroyDatabase
0010    public function destroyTable
0011    public function getColumns
0012    public function getTables
0013    public function removeColumns
0014    public function removeIndex
0015    public function renameColumn
0016    public function renameTable
0017    public function rollback
0018    public function sql
0019    public function sqlTypeToDataType
0020    public function sqlTypeToEjsType
0021    public function startTransaction

#
#  Instance slot assignments for the "DatabaseConnector" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Record" class (Num slots 102, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Record
0027    -initializer- function Record-initializer
0028    internal-ed363076473b51ca685af450cc662b39-0 var _assocName: String
0029    internal-ed363076473b51ca685af450cc662b39-0 var _belongsTo: Array
0030    internal-ed363076473b51ca685af450cc662b39-0 var _className: String
0031    internal-ed363076473b51ca685af450cc662b39-0 var _columns: Object
0032    internal-ed363076473b51ca685af450cc662b39-0 var _hasOne: Array
0033    internal-ed363076473b51ca685af450cc662b39-0 var _hasMany: Array
0034    internal-ed363076473b51ca685af450cc662b39-0 var _db: Database
0035    internal-ed363076473b51ca685af450cc662b39-0 var _foreignId: String
0036    internal-ed363076473b51ca685af450cc662b39-0 var _keyName: String
0037    internal-ed363076473b51ca685af450cc662b39-0 var _model: Type
0038    internal-ed363076473b51ca685af450cc662b39-0 var _tableName: String
0039    internal-ed363076473b51ca685af450cc662b39-0 var _trace: Boolean
0040    internal-ed363076473b51ca685af450cc662b39-0 var _validations: Array
0041    internal-ed363076473b51ca685af450cc662b39-0 var _beforeFilters: Array
0042    internal-ed363076473b51ca685af450cc662b39-0 var _afterFilters: Array
0043    internal-ed363076473b51ca685af450cc662b39-0 var _wrapFilters: Array
0044    internal-ed363076473b51ca685af450cc662b39-0 var ErrorMessages
0045    public function initialize
0046    public function afterFilter
0047    public function beforeFilter
0048    public function belongsTo
0049    [Record,private] function cachedRead
0050    [Record,private] function checkFormat
0051    [Record,private] function checkNumber
0052    [Record,private] function checkPresent
0053    [Record,private] function checkUnique
0054    [Record,private] function coerceToEjsTypes
0055    [Record,private] function createAssociations
0056    [Record,private] function createRecord
0057    public function error
0058    public function find
0059    public function findAll
0060    public function findOneWhere
0061    public function findWhere
0062    public function getColumnNames
0063    public function getColumnTitles
0064    public function getColumnType
0065    public function getDb
0066    public function getErrors
0067    public function getKeyName
0068    public function getNumRows
0069    [Record,private] function getSchema
0070    public function getTableName
0071    public function hasAndBelongsToMany
0072    public function hasError
0073    public function hasMany
0074    public function hasOne
0075    [Record,private] function innerFind
0076    [Record,private] function makeLazyReader
0077    [Record,private] function mapSqlTypeToEjs
0078    [Record,private] function prepareValue
0079    [Record,private] function readRecords
0080    public function remove
0081    [Record,private] function runFilters
0082    public function save
0083    public function saveUpdate
0084    public function setDb
0085    public function setKeyName
0086    public function setTableName
0087    public function sql
0088    public function trace
0089    public function validateFormat
0090    public function validateNumber
0091    public function validatePresence
0092    public function validateRecord
0093    public function validateUnique
0094    public function wrapFilter
0095    public function columnNames
0096    public function columnTitles
0097    public function db
0098    public function keyName
0099    public function numRows
0100    public function tableName
0101    public function constructorOLD

#
#  Instance slot assignments for the "Record" class (Num prop 3, num inherited 0)
#
0000    internal-ed363076473b51ca685af450cc662b39-0 var _keyValue: Object
0001    internal-ed363076473b51ca685af450cc662b39-0 var _errors: Object
0002    internal-ed363076473b51ca685af450cc662b39-0 var _cacheAssoc: Object

#
#  Class slot assignments for the "Column" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Column

#
#  Instance slot assignments for the "Column" class (Num prop 2, num inherited 0)
#
0000    public var ejsType: Object
0001    public var sqlType: Object

#
#  Class slot assignments for the "Sqlite" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Sqlite
0027    -initializer- function Sqlite-initializer
0028    internal-ed363076473b51ca685af450cc662b39-0 var DataTypeToSqlType: Object
0029    internal-ed363076473b51ca685af450cc662b39-0 var SqlTypeToDataType: Object
0030    internal-ed363076473b51ca685af450cc662b39-0 var SqlTypeToEjsType: Object
0031    public function addColumn
0032    public function addIndex
0033    public function changeColumn
0034    public function close
0035    public function commit
0036    public function connect
0037    public function createDatabase
0038    public function createTable
0039    public function dataTypeToSqlType
0040    public function destroyDatabase
0041    public function destroyTable
0042    public function endTransaction
0043    public function getColumns
0044    public function getNumRows
0045    public function getTables
0046    public function removeColumns
0047    public function removeIndex
0048    public function renameColumn
0049    public function renameTable
0050    public function rollback
0051    public function query
0052    public function sql
0053    public function sqlTypeToDataType
0054    public function sqlTypeToEjsType
0055    public function startTransaction

#
#  Instance slot assignments for the "Sqlite" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Controller" class (Num slots 50, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Controller
0027    [ejs.web::Controller,private] var _initRequest
0028    ejs.web function create
0029    [ejs.web::Controller,private] function openDatabase
0030    ejs.web function run
0031    [ejs.web::Controller,private] function flashBefore
0032    [ejs.web::Controller,private] function flashAfter
0033    ejs.web function resetFilters
0034    ejs.web function beforeFilter
0035    ejs.web function afterFilter
0036    ejs.web function wrapFilter
0037    [ejs.web::Controller,private] function runFilters
0038    ejs.web function loadView
0039    ejs.web function renderError
0040    ejs.web function redirect
0041    ejs.web function render
0042    ejs.web function renderFile
0043    ejs.web function renderPartial
0044    ejs.web function renderView
0045    ejs.web function error
0046    ejs.web function inform
0047    ejs.web function warn
0048    ejs.web function makeUri
0049    action function missing

#
#  Instance slot assignments for the "Controller" class (Num prop 14, num inherited 0)
#
0000    ejs.web var actionName: String
0001    ejs.web var controllerName: String
0002    ejs.web var deploymentMode: String
0003    ejs.web var log: Logger
0004    ejs.web var params: Object
0005    ejs.web var request
0006    ejs.web var view
0007    public var flash: Object
0008    [ejs.web::Controller,private] var rendered: Boolean
0009    [ejs.web::Controller,private] var redirected: Boolean
0010    [ejs.web::Controller,private] var _afterFilters: Array
0011    [ejs.web::Controller,private] var _beforeFilters: Array
0012    [ejs.web::Controller,private] var _wrapFilters: Array
0013    [ejs.web::Controller,private] var lastFlash

#
#  Class slot assignments for the "HtmlConnector" class (Num slots 57, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function HtmlConnector
0027    ejs.web function aform
0028    ejs.web function alink
0029    ejs.web function button
0030    ejs.web function buttonLink
0031    ejs.web function chart
0032    ejs.web function checkbox
0033    ejs.web function endform
0034    ejs.web function flash
0035    ejs.web function form
0036    ejs.web function image
0037    ejs.web function imageLink
0038    ejs.web function label
0039    ejs.web function link
0040    ejs.web function extlink
0041    ejs.web function list
0042    ejs.web function mail
0043    ejs.web function progress
0044    ejs.web function radio
0045    ejs.web function script
0046    ejs.web function status
0047    ejs.web function stylesheet
0048    ejs.web function tabs
0049    ejs.web function table
0050    ejs.web function text
0051    ejs.web function textarea
0052    ejs.web function tree
0053    [HtmlConnector,private] function getColumns
0054    [HtmlConnector,private] function getTextKind
0055    [HtmlConnector,private] function getOptions
0056    [HtmlConnector,private] function write

#
#  Instance slot assignments for the "HtmlConnector" class (Num prop 3, num inherited 0)
#
0000    [HtmlConnector,private] var nextId: Number
0001    [HtmlConnector,private] var request
0002    [HtmlConnector,private] var view

#
#  Class slot assignments for the "HttpServer" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function HttpServer
0027    public function addListener
0028    public function address
0029    public function async
0030    public function close
0031    public function listen
0032    public function attach
0033    public function secureListen
0034    public function port
0035    public function removeListener
0036    public function software

#
#  Instance slot assignments for the "HttpServer" class (Num prop 2, num inherited 0)
#
0000    public var documentRoot: Path
0001    public var serverRoot: Path

#
#  Class slot assignments for the "Mvc" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Mvc-initializer
0027    [Mvc,private] var defaultConfig
0028    [Mvc,private] var mvc: Object
0029    [Mvc,private] var dirs: Object
0030    [Mvc,private] var ext: Object
0031    [Mvc,private] function defaultAppExports
0032    public function load
0033    public function init
0034    public function loadComponent

#
#  Instance slot assignments for the "Mvc" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Request" class (Num slots 57, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Request-initializer
0027    public function log
0028    public function addListener
0029    public function async
0030    public function cachable
0031    public function close
0032    public function dump
0033    public function destroySession
0034    public function extension
0035    public function finalize
0036    public function flush
0037    public function getResponseHeaders
0038    public function header
0039    public function read
0040    public function redirect
0041    public function removeListener
0042    public function makeUri
0043    public function setLocation
0044    public function sendResponse
0045    public function setCookie
0046    public function setHeader
0047    public function setHeaders
0048    public function setStatus
0049    public function write
0050    public function writeError
0051    public function writeHtml
0052    public var jsgi: Object
0053    public function input
0054    public function queryString
0055    public function serverName
0056    public function serverPort

#
#  Instance slot assignments for the "Request" class (Num prop 33, num inherited 0)
#
0000    public var absHome: Uri
0001    public var authGroup: String
0002    public var authType: String
0003    public var authUser: String
0004    public var chunkSize: Number
0005    public var config: Object
0006    public var contentLength: Number
0007    public var contentType: String
0008    public var cookies: Object
0009    public var dir: Path
0010    public var encoding: String
0011    public var files: Object
0012    public var headers: Object
0013    public var home: Uri
0014    public var host: String
0015    public var method: String
0016    public var params: Object
0017    public var pathInfo: String
0018    public var query: String
0019    public var referrer: String
0020    public var remoteAddress: String
0021    public var route
0022    public var scheme: String
0023    public var scriptName: String
0024    public var secure: Boolean
0025    public var server: HttpServer
0026    public var session: Object
0027    public var sessionID: String
0028    public var status: Number
0029    public var timeout: Number
0030    public var uri: Uri
0031    public var userAgent: String
0032    public var env: Object

#
#  Class slot assignments for the "Router" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Router
0027    -initializer- function Router-initializer
0028    public var TopRoutes
0029    public var RestfulRoutes
0030    public var LegacyRoutes
0031    public function addRestfulRoutes
0032    public function addRoutes
0033    public function route
0034    internal-ed363076473b51ca685af450cc662b39-0 function dumpRoutes

#
#  Instance slot assignments for the "Router" class (Num prop 1, num inherited 0)
#
0000    internal-ed363076473b51ca685af450cc662b39-0 var routes: Array

#
#  Class slot assignments for the "Route" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Route
0027    public function makeUri

#
#  Instance slot assignments for the "Route" class (Num prop 14, num inherited 0)
#
0000    public var dir: Path
0001    public var match: Object
0002    public var method: String
0003    public var name: String
0004    public var params: Object
0005    public var rewrite: Function
0006    public var subroute: Route
0007    public var threaded: Boolean
0008    public var type: String
0009    public var urimaker: Function
0010    internal-ed363076473b51ca685af450cc662b39-0 var matcher: RegExp
0011    internal-ed363076473b51ca685af450cc662b39-0 var splitter: String
0012    internal-ed363076473b51ca685af450cc662b39-0 var tokens: Array
0013    internal-ed363076473b51ca685af450cc662b39-0 var router: Router

#
#  Class slot assignments for the "Session" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    internal-ed363076473b51ca685af450cc662b39-0 function addListener
0027    internal-ed363076473b51ca685af450cc662b39-0 function count
0028    internal-ed363076473b51ca685af450cc662b39-0 function removeListener
0029    internal-ed363076473b51ca685af450cc662b39-0 function setSessionTimeout

#
#  Instance slot assignments for the "Session" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "UploadFile" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "UploadFile" class (Num prop 5, num inherited 0)
#
0000    public var clientFilename: String
0001    public var contentType: String
0002    public var filename: String
0003    public var name: String
0004    public var size: Number

#
#  Class slot assignments for the "View" class (Num slots 73, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function View
0027    -initializer- function View-initializer
0028    ejs.web function getNextId
0029    public function makeUri
0030    public function render
0031    public function setHeader
0032    public function setHeaders
0033    public function setStatus
0034    public function write
0035    ejs.web function aform
0036    ejs.web function alink
0037    ejs.web function button
0038    ejs.web function buttonLink
0039    ejs.web function chart
0040    ejs.web function checkbox
0041    ejs.web function endform
0042    ejs.web function form
0043    ejs.web function image
0044    ejs.web function imageLink
0045    ejs.web function input
0046    ejs.web function label
0047    ejs.web function link
0048    ejs.web function extlink
0049    ejs.web function list
0050    ejs.web function mail
0051    ejs.web function progress
0052    ejs.web function radio
0053    ejs.web function script
0054    ejs.web function status
0055    ejs.web function stylesheet
0056    ejs.web function table
0057    ejs.web function tabs
0058    ejs.web function text
0059    ejs.web function textarea
0060    ejs.web function tree
0061    ejs.web function flash
0062    [ejs.web::View,private] function emitFormErrors
0063    [ejs.web::View,private] function getConnector
0064    [ejs.web::View,private] function setOptions
0065    ejs.web function getValue
0066    ejs.web function date
0067    ejs.web function currency
0068    ejs.web function number
0069    [ejs.web::View,private] var htmlOptions: Object
0070    ejs.web function getOptions
0071    [ejs.web::View,private] function pivot
0072    [ejs.web::View,private] function filter

#
#  Instance slot assignments for the "View" class (Num prop 4, num inherited 0)
#
0000    ejs.web var request: Request
0001    [ejs.web::View,private] var currentRecord: Object
0002    [ejs.web::View,private] var config: Object
0003    [ejs.web::View,private] var nextId: Number

#
#  Class slot assignments for the "Web" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Web-initializer
0027    public var config
0028    [ejs.web::Web,private] var defaultConfig
0029    [ejs.web::Web,private] function init
0030    public function serve
0031    public function worker
0032    [ejs.web::Web,private] function workerHelper
0033    public function load
0034    public function start

#
#  Instance slot assignments for the "Web" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 68476 bytes)
#
0000   ""
0001   "ejs.cjs"
0002   "ejs.es"
0003   "}"
0004   "internal-ed363076473b51ca685af450cc662b39-0"
0005   "ejs.web"
0006   "module ejs.web {"
0007   "    namespace action = "action""
0008   "action"
0009   "Namespace"
0010   "    class Controller {"
0011   "        use default namespace module"
0012   "actionName"
0013   "String"
0014   "        var actionName:  String "
0015   "        var controllerName: String"
0016   "controllerName"
0017   "        var deploymentMode: String"
0018   "deploymentMode"
0019   "        var log: Logger"
0020   "log"
0021   "Logger"
0022   "        var params: Object"
0023   "params"
0024   "Object"
0025   "        var request: Request"
0026   "request"
0027   "Request"
0028   "        var view: View"
0029   "view"
0030   "View"
0031   "        public var flash:       Object"
0032   "flash"
0033   "public"
0034   "        private var rendered:   Boolean"
0035   "rendered"
0036   "[ejs.web::Controller,private]"
0037   "Boolean"
0038   "        private var redirected: Boolean"
0039   "redirected"
0040   "        private var _afterFilters: Array"
0041   "_afterFilters"
0042   "Array"
0043   "        private var _beforeFilters: Array"
0044   "_beforeFilters"
0045   "        private var _wrapFilters: Array"
0046   "_wrapFilters"
0047   "        private var lastFlash"
0048   "lastFlash"
0049   "        private static var _initRequest: Request"
0050   "_initRequest"
0051   "        function Controller(r: Request) {"
0052   "            request = r || _initRequest"
0053   "            if (request) {"
0054   "                log = request.logger"
0055   "logger"
0056   ""
0057   "                params = request.params"
0058   "                controllerName = Reflect(this).name.trim("Controller")"
0059   "name"
0060   "Controller"
0061   "trim"
0062   "                if (request.config.database) {"
0063   "config"
0064   "database"
0065   "                    openDatabase(request)"
0066   "openDatabase"
0067   "        }"
0068   "-constructor-"
0069   "r"
0070   "private"
0071   "        static function create(request: Request): Controller {"
0072   "cname"
0073   "            let cname: String = request.params["controller"]"
0074   "controller"
0075   "            if (!cname) {"
0076   "                throw "Can't run app, controller " + cname + " is not loaded""
0077   "Can't run app, controller "
0078   " is not loaded"
0079   "            }"
0080   "            _initRequest = request"
0081   "            let uname = cname.toPascal() + "Controller""
0082   "uname"
0083   "toPascal"
0084   "            let c = new global[uname]()"
0085   "c"
0086   "            _initRequest = null"
0087   "            return c"
0088   "create"
0089   "ejs"
0090   "        private function openDatabase(request: Request) {"
0091   "            let deploymentMode = request.config.mode"
0092   "mode"
0093   "            let dbconfig = request.config.database"
0094   "dbconfig"
0095   "            let klass = dbconfig["class"]"
0096   "klass"
0097   "class"
0098   "            let adapter = dbconfig.adapter"
0099   "adapter"
0100   "            let profile = dbconfig[deploymentMode]"
0101   "profile"
0102   "            if (klass && dbconfig.adapter && profile.name) {"
0103   "db"
0104   "-hoisted-6"
0105   "                let db = new global[klass](dbconfig.adapter, request.dir.join(profile.name))"
0106   "dir"
0107   "join"
0108   "                if (profile.trace) {"
0109   "trace"
0110   "                    db.trace(true)"
0111   "        function run(request: Request): Void {"
0112   "            actionName = params.action || "index""
0113   "index"
0114   "            params.action = actionName"
0115   "            use namespace action"
0116   "            if (!this[actionName]) {"
0117   "                actionName = "missing""
0118   "missing"
0119   "            flashBefore()"
0120   "flashBefore"
0121   "            runFilters(_beforeFilters)"
0122   "runFilters"
0123   "            if (!redirected) {"
0124   "                this[actionName]()"
0125   "                if (!rendered)"
0126   "                    renderView()"
0127   "renderView"
0128   "                runFilters(_afterFilters)"
0129   "            flashAfter()"
0130   "flashAfter"
0131   "run"
0132   "Void"
0133   "        private function flashBefore() {"
0134   "            lastFlash = null"
0135   "            if (session) {"
0136   "                flash = session["__flash__"]"
0137   "__flash__"
0138   "            if (!flash) {"
0139   "                flash = {}"
0140   "            } else {"
0141   "                if (session) {"
0142   "                    session["__flash__"] = undefined"
0143   "                }"
0144   "                lastFlash = flash.clone()"
0145   "clone"
0146   "        private function flashAfter() {"
0147   "            if (lastFlash) {"
0148   "                for (item in flash) {"
0149   "item"
0150   "-hoisted-0"
0151   "get"
0152   "iterator"
0153   "                    for each (old in lastFlash) {"
0154   "old"
0155   "-hoisted-1"
0156   "getValues"
0157   "                        if (hashcode(flash[item]) == hashcode(old)) {"
0158   "                            delete flash[item]"
0159   "            if (flash && flash.length > 0) {"
0160   "length"
0161   "                    session["__flash__"] = flash"
0162   "StopIteration"
0163   "        function resetFilters(): Void {"
0164   "            _beforeFilters = null"
0165   "            _afterFilters = null"
0166   "            _wrapFilters = null"
0167   "resetFilters"
0168   "        function beforeFilter(fn, options: Object? = null): Void {"
0169   "            _beforeFilters ||= []"
0170   "            _beforeFilters.append([fn, options])"
0171   "append"
0172   "beforeFilter"
0173   "fn"
0174   "options"
0175   "        function afterFilter(fn, options: Object? = null): Void {"
0176   "            _afterFilters ||= []"
0177   "            _afterFilters.append([fn, options])"
0178   "afterFilter"
0179   "        function wrapFilter(fn, options: Object? = null): Void {"
0180   "            _wrapFilters ||= []"
0181   "            _wrapFilters.append([fn, options])"
0182   "wrapFilter"
0183   "        private function runFilters(filters: Array): Void {"
0184   "            for each (filter in filters) {"
0185   "filter"
0186   "                let fn = filter[0]"
0187   "                let options = filter[1]"
0188   "                if (options) {"
0189   "                    only = options.only"
0190   "only"
0191   "                    if (only) {"
0192   "                        if (only is String && actionName != only) {"
0193   "                            continue"
0194   "                        if (only is Array && !only.contains(actionName)) {"
0195   "contains"
0196   "                    } "
0197   "                    except = options.except"
0198   "except"
0199   "                    if (except) {"
0200   "                        if (except is String && actionName == except) {"
0201   "                        if (except is Array && except.contains(actionName)) {"
0202   "                fn.call(this)"
0203   "call"
0204   "filters"
0205   "        function loadView(path: Path, name: String) {"
0206   "cached"
0207   "            let cached = Loader.cached(path, request.dir.join(request.config.directories.cache))"
0208   "directories"
0209   "cache"
0210   "            if (cached && cached.exists && cached.modified >= path.modified) {"
0211   "exists"
0212   "modified"
0213   "                load(cached)"
0214   "                if (!global.TemplateParser) {"
0215   "TemplateParser"
0216   "                    load("ejs.web.template.mod")"
0217   "ejs.web.template.mod"
0218   "layout"
0219   "-hoisted-3"
0220   "                let layout = request.dir.join("views/layouts/default.ejs")"
0221   "views/layouts/default.ejs"
0222   "                let code = TemplateParser().buildView(name, path.readString(), { layout: layout })"
0223   "code"
0224   "readString"
0225   "buildView"
0226   "                eval(code, cached)"
0227   "loadView"
0228   "path"
0229   "Path"
0230   "        function renderError(msg: String = "", status: Number = Http.ServerError): Void {"
0231   "ServerError"
0232   "            request.writeError(msg, status)"
0233   "writeError"
0234   "            rendered = true"
0235   "renderError"
0236   "msg"
0237   "status"
0238   "Number"
0239   "        function redirect(uri: Uri, status: Number = Http.MovedTemporarily): Void {"
0240   "MovedTemporarily"
0241   "            request.redirect(uri, status)"
0242   "redirect"
0243   "            redirected = true"
0244   "uri"
0245   "Uri"
0246   "        function render(...args): Void { "
0247   "            request.write(args)"
0248   "write"
0249   "render"
0250   "args"
0251   "        function renderFile(filename: String): Void { "
0252   "            let file: File = new File(filename)"
0253   "file"
0254   "            try {"
0255   "                file.open()"
0256   "open"
0257   "                while (data = file.read(4096)) {"
0258   "read"
0259   "data"
0260   "                    request.write(data)"
0261   "                file.close()"
0262   "close"
0263   "            } catch (e: Error) {"
0264   "e"
0265   "-hoisted-2"
0266   "                reportError(Http.ServerError, "Can't read file: " + filename, e)"
0267   "Can't read file: "
0268   "reportError"
0269   "Error"
0270   "renderFile"
0271   "filename"
0272   "File"
0273   "        function renderPartial(path: Path): void { "
0274   "            let name = path.replace("/", "_") + "View""
0275   "/"
0276   "_"
0277   "replace"
0278   "            let viewClass: String = name.toPascal()"
0279   "viewClass"
0280   "            if (!global[viewClass]) {"
0281   "                let path = request.dir.join("views", controllerName, actionName + ".ejs")"
0282   "views"
0283   ".ejs"
0284   "                let name = controllerName + "_" + actionName"
0285   "                loadView(path, name)"
0286   "            view = new global[viewClass](request)"
0287   "            for (let n: String in this) {"
0288   "n"
0289   "-hoisted-5"
0290   "                view.public::[n] = this[n]"
0291   "            view.render(request)"
0292   "renderPartial"
0293   "        function renderView(viewName: String? = null): Void {"
0294   "            if (rendered) {"
0295   "                throw new Error("renderView invoked but render has already been called")"
0296   "renderView invoked but render has already been called"
0297   "                return"
0298   "            viewName = controllerName + "_" + (viewName || actionName)"
0299   "            let path = request.dir.join("views", controllerName, actionName).joinExt(request.config.extensions.ejs)"
0300   "extensions"
0301   "joinExt"
0302   "            loadView(path, viewName)"
0303   "            let viewClass: String = viewName + "View""
0304   "                loadView(path, viewName)"
0305   "viewName"
0306   "        function error(msg: String): Void"
0307   "            flash["error"] = msg"
0308   "error"
0309   "        function inform(msg: String): Void"
0310   "            flash["inform"] = msg"
0311   "inform"
0312   "        function warn(msg: String): Void"
0313   "            flash["warn"] = msg"
0314   "warn"
0315   "        function makeUri(parts: Object): Uri"
0316   "            request.makeUri(parts)"
0317   "makeUri"
0318   "parts"
0319   "        action function missing(): Void {"
0320   "            throw "Missing Action: \"" + params.action + "\" could not be found for controller \"" + controllerName + "\"""
0321   "Missing Action: ""
0322   "" could not be found for controller ""
0323   """
0324   "constructor"
0325   "Function"
0326   "prototype"
0327   "Iterator"
0328   "hasOwnProperty"
0329   "isPrototypeOf"
0330   "propertyIsEnumerable"
0331   "toJSON"
0332   "toLocaleString"
0333   "toString"
0334   "valueOf"
0335   "block_14351_433"
0336   "-block-"
0337   "	public class HtmlConnector {"
0338   "        private var nextId: Number = 0"
0339   "nextId"
0340   "[HtmlConnector,private]"
0341   "        private var request: Request"
0342   "        private var view: View"
0343   "        function HtmlConnector(request, view) {"
0344   "            this.request = request"
0345   "            this.view = view"
0346   "HtmlConnector"
0347   "        function aform(record: Object, options: Object = {}): Void {"
0348   "            options.id ||= "form""
0349   "id"
0350   "form"
0351   "            onsubmit = """
0352   "onsubmit"
0353   "            if (options.condition) {"
0354   "condition"
0355   "                onsubmit += options.condition + ' && '"
0356   " && "
0357   "            if (options.confirm) {"
0358   "confirm"
0359   "                onsubmit += 'confirm("' + options.confirm + '"); && '"
0360   "confirm(""
0361   ""); && "
0362   "            onsubmit = '$.ajax({ ' +"
0363   "                'type: "' + options.method + '", '"
0364   "                'uri: "' + options.uri + '", ' + "
0365   "$.ajax({ "
0366   "uri: ""
0367   "", "
0368   "type: ""
0369   "method"
0370   "            if (options.query) {"
0371   "query"
0372   "                onsubmit += 'data: ' + options.query + ', '"
0373   "data: "
0374   ", "
0375   "                onsubmit += 'data: $("#' + options.id + '").serialize(), '"
0376   "data: $("#"
0377   "").serialize(), "
0378   "            if (options.update) {"
0379   "update"
0380   "                if (options.success) {"
0381   "success"
0382   "                        options.success + '; }, '"
0383   "                    onsubmit += 'success: function(data) { $("#' + options.update + '").html(data).hide("slow"); ' + "
0384   "success: function(data) { $("#"
0385   "").html(data).hide("slow"); "
0386   "; }, "
0387   "                } else {"
0388   "                    onsubmit += 'success: function(data) { $("#' + options.update + '").html(data).hide("slow"); }, '"
0389   "").html(data).hide("slow"); }, "
0390   "            } else if (options.success) {"
0391   "                onsubmit += 'success: function(data) { ' + options.success + '; } '"
0392   "success: function(data) { "
0393   "; } "
0394   "            if (options.error) {"
0395   "                onsubmit += 'error: function(data) { ' + options.error + '; }, '"
0396   "error: function(data) { "
0397   "            onsubmit += '}); return false;'"
0398   "}); return false;"
0399   "            write('<form action="' + "/User/list" + '"' + getOptions(options) + "onsubmit='" + onsubmit + "' >")"
0400   "<form action=""
0401   "/User/list"
0402   "getOptions"
0403   "onsubmit='"
0404   "' >"
0405   "aform"
0406   "record"
0407   "		function alink(text: String, options: Object): Void {"
0408   "            options.id ||= "alink""
0409   "alink"
0410   "            onclick = """
0411   "onclick"
0412   "                onclick += options.condition + ' && '"
0413   "                onclick += 'confirm("' + options.confirm + '"); && '"
0414   "            onclick = '$.ajax({ ' +"
0415   "                'uri: "' + options.action + '", ' + "
0416   "                'data: ' + options.query + ', '"
0417   "                    onclick += 'success: function(data) { $("#' + options.update + '").html(data); ' + "
0418   "").html(data); "
0419   "                    onclick += 'success: function(data) { $("#' + options.update + '").html(data); }, '"
0420   "").html(data); }, "
0421   "                onclick += 'success: function(data) { ' + options.success + '; } '"
0422   "                onclick += 'error: function(data) { ' + options.error + '; }, '"
0423   "            onclick += '}); return false;'"
0424   "            options.uri ||= request.makeUri(options)"
0425   "            write('<a href="' + options.uri + '"' + getOptions(options) + "onclick='" + onclick + "' >" + text + '</a>')"
0426   "<a href=""
0427   "onclick='"
0428   "</a>"
0429   "		}"
0430   "text"
0431   "		function button(value: String, buttonName: String, options: Object): Void {"
0432   "            write('<input name="' + buttonName + '" type="submit" value="' + value + '"' + getOptions(options) + ' />')"
0433   "<input name=""
0434   "" type="submit" value=""
0435   " />"
0436   "button"
0437   "value"
0438   "buttonName"
0439   "		function buttonLink(text: String, options: Object): Void {"
0440   "			write('<button onclick="window.location=\'' + options.uri + '\';">' + text + '</button></a>')"
0441   "<button onclick="window.location='"
0442   "';">"
0443   "</button></a>"
0444   "buttonLink"
0445   "		function chart(initialData: Array, options: Object): Void {"
0446   "            throw 'HtmlConnector control "chart" not implemented.'"
0447   "HtmlConnector control "chart" not implemented."
0448   "chart"
0449   "initialData"
0450   "		function checkbox(field: String, choice: String, submitValue: String, options: Object): Void {"
0451   "checked"
0452   "            let checked = (choice == submitValue) ? ' checked="yes" ' : ''"
0453   " checked="yes" "
0454   "            write('<input name="' + field + '" type="checkbox" "' + getOptions(options) + checked + "
0455   "                '" value="' + submitValue + '" />')"
0456   "" type="checkbox" ""
0457   "" value=""
0458   "" />"
0459   "            write('<input name="' + field + '" type="hidden" "' + getOptions(options) + '" value="" />')"
0460   "" type="hidden" ""
0461   "" value="" />"
0462   "checkbox"
0463   "field"
0464   "choice"
0465   "submitValue"
0466   "		function endform(): Void {"
0467   "            write('</form>')"
0468   "</form>"
0469   "endform"
0470   "		function flash(kind: String, msg: String, options: Object): Void {"
0471   "            write('<div' + getOptions(options) + '>' + msg + '</div>\r\n')"
0472   "<div"
0473   ">"
0474   "</div>
"
0475   "            if (kind == "inform") {"
0476   "                write('<script>$(document).ready(function() {"
0477   "<script>$(document).ready(function() {
                        $("div.-ejs-flashInform").animate({opacity: 1.0}, 2000).hide("slow");});
                    </script>"
0478   "kind"
0479   "		function form(record: Object, options: Object): Void {"
0480   "            write('<form method="post" action="' + options.uri + '"' + getOptions(options) + "
0481   "<form method="post" action=""
0482   "                ' xonsubmit="ejs.fixCheckboxes();">')"
0483   " xonsubmit="ejs.fixCheckboxes();">"
0484   "        function image(src: String, options: Object): Void {"
0485   "			write('<img src="' + src + '"' + getOptions(options) + '/>')"
0486   "<img src=""
0487   "/>"
0488   "image"
0489   "src"
0490   "        function imageLink(src: String, options: Object): Void {"
0491   "imageLink"
0492   "        function label(text: String, options: Object): Void {"
0493   "            write('<span ' + getOptions(options) + ' type="' + getTextKind(options) + '">' +  text + '</span>')"
0494   "<span "
0495   " type=""
0496   "getTextKind"
0497   "">"
0498   "</span>"
0499   "label"
0500   "		function link(text: String, options: Object): Void {"
0501   "			write('<a href="' + options.uri + '"' + getOptions(options) + '>' + text + '</a>')"
0502   "link"
0503   "		function extlink(text: String, options: Object): Void {"
0504   "			write('<a href="' + uri + '"' + getOptions(options) + '>' + text + '</a>')"
0505   "extlink"
0506   "		function list(name: String, choices: Object, defaultValue: String, options: Object): Void {"
0507   "            write('<select name="' + name + '" ' + getOptions(options) + '>')"
0508   "<select name=""
0509   "" "
0510   "            let isSelected: Boolean"
0511   "isSelected"
0512   "            let i = 0"
0513   "i"
0514   "            for each (choice in choices) {"
0515   "                if (choice is Array) {"
0516   "                    isSelected = (choice[0] == defaultValue) ? 'selected="yes"' : ''"
0517   "selected="yes""
0518   "                    write('  <option value="' + choice[0] + '"' + isSelected + '>' + choice[1] + '</option>')"
0519   "  <option value=""
0520   "</option>"
0521   "                    if (choice && choice.id) {"
0522   "                        for (field in choice) {"
0523   "-hoisted-7"
0524   "                            isSelected = (choice.id == defaultValue) ? 'selected="yes"' : ''"
0525   "                            if (field != "id") {"
0526   "                                write('  <option value="' + choice.id + '"' + isSelected + '>' + choice[field] + '</option>')"
0527   "                                done = true"
0528   "done"
0529   "                                break"
0530   "                    } else {"
0531   "                        isSelected = (i == defaultValue) ? 'selected="yes"' : ''"
0532   "                        write('  <option value="' + i + '"' + isSelected + '>' + choice + '</option>')"
0533   "                i++"
0534   "            write('</select>')"
0535   "</select>"
0536   "list"
0537   "choices"
0538   "defaultValue"
0539   "		function mail(name: String, address: String, options: Object): Void  {"
0540   "			write('<a href="mailto:' + address + '" ' + getOptions(options) + '>' + name + '</a>')"
0541   "<a href="mailto:"
0542   "mail"
0543   "address"
0544   "		function progress(initialData: Array, options: Object): Void {"
0545   "            write('<p>' + initialData + '%</p>')"
0546   "<p>"
0547   "%</p>"
0548   "progress"
0549   "        function radio(name: String, selected: String, choices: Object, options: Object): Void {"
0550   "            let checked: String"
0551   "            if (choices is Array) {"
0552   "                for each (v in choices) {"
0553   "v"
0554   "                    checked = (v == selected) ? "checked" : """
0555   "                    write(v + ' <input type="radio" name="' + name + '"' + getOptions(options) + "
0556   "                        ' value="' + v + '" ' + checked + ' />\r\n')"
0557   " <input type="radio" name=""
0558   " value=""
0559   " />
"
0560   "                for (item in choices) {"
0561   "                    checked = (choices[item] == selected) ? "checked" : """
0562   "                    write(item + ' <input type="radio" name="' + name + '"' + getOptions(options) + "
0563   "                        ' value="' + choices[item] + '" ' + checked + ' />\r\n')"
0564   "radio"
0565   "selected"
0566   "		function script(uri: String, options: Object): Void {"
0567   "            write('<script src="' + uri + '" type="text/javascript"></script>\r\n')"
0568   "<script src=""
0569   "" type="text/javascript"></script>
"
0570   "script"
0571   "		function status(initialData: Array, options: Object): Void {"
0572   "            write('<p>' + initialData + '</p>\r\n')"
0573   "</p>
"
0574   "		function stylesheet(uri: String, options: Object): Void {"
0575   "            write('<link rel="stylesheet" type="text/css" href="' + uri + '" />\r\n')"
0576   "<link rel="stylesheet" type="text/css" href=""
0577   "" />
"
0578   "stylesheet"
0579   "		function tabs(initialData: Array, options: Object): Void {"
0580   "            write('<div class="-ejs-tabs">\r\n')"
0581   "<div class="-ejs-tabs">
"
0582   "            write('   <ul>\r\n')"
0583   "   <ul>
"
0584   "            for each (t in initialData) {"
0585   "t"
0586   "                for (name in t) {"
0587   "                    let uri = t[name]"
0588   "                    write('      <li onclick="window.location=\'' + uri + '\'"><a href="' + uri + '">' + "
0589   "                        name + '</a></li>\r\n')"
0590   "      <li onclick="window.location='"
0591   "'"><a href=""
0592   "</a></li>
"
0593   "            write('    </ul>')"
0594   "    </ul>"
0595   "            write('</div>')"
0596   "</div>"
0597   "tabs"
0598   "		function table(data, options: Object? = null): Void {"
0599   "originalOptions"
0600   "            let originalOptions = options"
0601   "            let tableId = view.getNextId()"
0602   "tableId"
0603   "getNextId"
0604   "            if (data is Array) {"
0605   "                if (data.length == 0) {"
0606   "                    write("<p>No Data</p>")"
0607   "<p>No Data</p>"
0608   "                    return"
0609   "            } else if (!(data is Array) && data is Object) {"
0610   "                data = [data]"
0611   "			}"
0612   "            options = (originalOptions && originalOptions.clone()) || {}"
0613   "            let columns = getColumns(data, options)"
0614   "columns"
0615   "getColumns"
0616   "            let refresh = options.refresh || 10000"
0617   "refresh"
0618   "            let sortOrder = options.sortOrder || """
0619   "sortOrder"
0620   "            let sort = options.sort"
0621   "sort"
0622   "            if (sort == undefined) sort = true"
0623   "            if (!options.ajax) {"
0624   "ajax"
0625   "-hoisted-10"
0626   "                let uri = (data is String) ? data : null"
0627   "                uri ||= options.data"
0628   "                write('  <script type="text/javascript">\r\n' +"
0629   "                    '})});\r\n' + "
0630   "                    ((uri) ? (', uri: "' + uri + '"'): "") + "
0631   "                    ', sort: "' + sort + '", sortOrder: "' + sortOrder + '"' + "
0632   "                    '   $(function() { $("#' + tableId + '").eTable({ refresh: ' + refresh + "
0633   "  <script type="text/javascript">
"
0634   "   $(function() { $("#"
0635   "").eTable({ refresh: "
0636   ", sort: ""
0637   "", sortOrder: ""
0638   ", uri: ""
0639   "})});
"
0640   "                    '  </script>\r\n')"
0641   "  </script>
"
0642   "                if (data is String) {"
0643   "                    write('<table id="' + tableId + '" class="-ejs-table"></table>\r\n')"
0644   "<table id=""
0645   "" class="-ejs-table"></table>
"
0646   "                write('  <script type="text/javascript">$("#' + tableId + '").eTableSetOptions({ refresh: ' + refresh +"
0647   "                    ', sort: "' + sort + '", sortOrder: "' + sortOrder + '"})' + ';</script>\r\n')"
0648   "  <script type="text/javascript">$("#"
0649   "").eTableSetOptions({ refresh: "
0650   ""})"
0651   ";</script>
"
0652   "			write('  <table id="' + tableId + '" class="-ejs-table ' + (options.styleTable || "" ) + '">\r\n')"
0653   "  <table id=""
0654   "" class="-ejs-table "
0655   "styleTable"
0656   "">
"
0657   "            if (options.showHeader != false) {"
0658   "showHeader"
0659   "                write('    <thead class="' + (options.styleHeader || "") + '">\r\n')"
0660   "    <thead class=""
0661   "styleHeader"
0662   "                if (options.title) {"
0663   "title"
0664   "gif"
0665   "-hoisted-11"
0666   "                    let gif = request.home.join("/web/images/green.gif")"
0667   "home"
0668   "/web/images/green.gif"
0669   "                    if (columns.length < 2) {"
0670   "                        write('  <tr><td>' + options.title + ' ' + '<img src="' + "
0671   "                            tableId + '\').eTableToggleRefresh();" />\r\n  </td></tr>\r\n')"
0672   "                            gif + '" class="-ejs-table-download -ejs-clickable" onclick="$(\'#' + "
0673   "  <tr><td>"
0674   " "
0675   "" class="-ejs-table-download -ejs-clickable" onclick="$('#"
0676   "').eTableToggleRefresh();" />
  </td></tr>
"
0677   "                        write('  <tr><td colspan="' + (columns.length - 1) + '">' + options.title + "
0678   "                            '" class="-ejs-table-download -ejs-clickable" onclick="$(\'#' + tableId + "
0679   "                            '</td><td class="right">' + '<img src="' + gif + "
0680   "  <tr><td colspan=""
0681   "</td><td class="right">"
0682   "                            '\').eTableToggleRefresh();" />\r\n  </td></tr>\r\n')"
0683   "                if (columns) {"
0684   "                    write('    <tr>\r\n')"
0685   "    <tr>
"
0686   "                    for (let name in columns) {"
0687   "-hoisted-12"
0688   "                        if (name == null) continue"
0689   "                        let header = (columns[name].header) ? (columns[name].header) : name.toPascal()"
0690   "header"
0691   "                        let width = (columns[name].width) ? ' width="' + columns[name].width + '"' : ''"
0692   "width"
0693   " width=""
0694   "                        write('    <th ' + width + '>' + header + '</th>\r\n')"
0695   "    <th "
0696   "</th>
"
0697   "                write("     </tr>\r\n    </thead>\r\n")"
0698   "     </tr>
    </thead>
"
0699   "styleBody"
0700   "            let styleBody = options.styleBody || """
0701   "            write('    <tbody class="' + styleBody + '">\r\n')"
0702   "    <tbody class=""
0703   "            let row: Number = 0"
0704   "row"
0705   "			for each (let r: Object in data) {"
0706   "-hoisted-15"
0707   "                let uri = null"
0708   "                let uriOptions = { controller: options.controller, query: options.query }"
0709   "uriOptions"
0710   "                if (options.click) {"
0711   "click"
0712   "                    uriOptions.query = (options.query is Array) ? options.query[row] : options.query"
0713   "                    if (options.click is Array) {"
0714   "                        if (options.click[row] is String) {"
0715   "                            uri = request.makeUri(blend(uriOptions, {action: options.click[row], id: r.id}))"
0716   "                        uri = request.makeUri(blend(uriOptions, {action: options.click, id: r.id}))"
0717   "odd"
0718   "                let odd = options.styleOddRow || "-ejs-oddRow""
0719   "styleOddRow"
0720   "-ejs-oddRow"
0721   "                let even = options.styleOddRow || "-ejs-evenRow""
0722   "even"
0723   "-ejs-evenRow"
0724   "                styleRow = ((row % 2) ? odd : even) || """
0725   "styleRow"
0726   "                if (options.styleRows) {"
0727   "styleRows"
0728   "                    styleRow += " " + (options.styleRows[row] || "")"
0729   "                if (uri) {"
0730   "                    write('    <tr class="' + styleRow + "
0731   "                        '" onclick="window.location=\'' + uri + '\';">\r\n')"
0732   "    <tr class=""
0733   "" onclick="window.location='"
0734   "';">
"
0735   "                    write('    <tr class="' + styleRow + '">\r\n')"
0736   "col"
0737   "                let col = 0"
0738   "				for (name in columns) {"
0739   "-hoisted-21"
0740   "                    if (name == null) {"
0741   "                        continue"
0742   "                    }"
0743   "column"
0744   "                    let column = columns[name]"
0745   "                    let styleCell: String = """
0746   "styleCell"
0747   "                    if (options.styleColumns) {"
0748   "styleColumns"
0749   "                        styleCell = options.styleColumns[col] || """
0750   "                    if (column.style) {"
0751   "style"
0752   "                        styleCell += " " + column.style"
0753   "                    if (options.styleCells && options.styleCells[row]) {"
0754   "styleCells"
0755   "                        styleCell += " " + (options.styleCells[row][col] || "")"
0756   "                    styleCell = styleCell.trim()"
0757   "                    data = view.getValue(r, name, { render: column.render, formatter: column.formatter } )"
0758   "formatter"
0759   "getValue"
0760   "                    let align = """
0761   "align"
0762   "                    if (column.align) {"
0763   "                        align = 'align="' + column.align + '"'"
0764   "align=""
0765   "cellUrl"
0766   "                    let cellUrl"
0767   "                    if (options.click is Array && options.click[0] is Array) {"
0768   "                        if (options.query is Array) {"
0769   "                            if (options.query[0] is Array) {"
0770   "                                uriOptions.query = options.query[row][col]"
0771   "                            } else {"
0772   "                                uriOptions.query = options.query[row]"
0773   "                        } else {"
0774   "                            uriOptions.query = options.query"
0775   "                        }"
0776   "                        cellUrl = request.makeUri(blend(uriOptions, { action: options.click[row][col], id: r.id}))"
0777   "					styleCell = styleCell.trim()"
0778   "                    if (cellUrl) {"
0779   "                        write('    <td class="' + styleCell + '"' + align + "
0780   "                            data + '</a></td>\r\n')"
0781   "                            ' xonclick="window.location=\'' + cellUrl + '\';"><a href="' + cellUrl + '">' + "
0782   "    <td class=""
0783   " xonclick="window.location='"
0784   "';"><a href=""
0785   "</a></td>
"
0786   "                        write('    <td class="' + styleCell + '"' + align + '>' + data + '</td>\r\n')"
0787   "</td>
"
0788   "                    col++"
0789   "				}"
0790   "                row++"
0791   "				write('    </tr>\r\n')"
0792   "    </tr>
"
0793   "			write('    </tbody>\r\n  </table>\r\n')"
0794   "    </tbody>
  </table>
"
0795   "table"
0796   "        function text(field: String, value: String, options: Object): Void {"
0797   "            write('<input name="' + field + '" ' + getOptions(options) + ' type="' + getTextKind(options) + "
0798   "                '" value="' + value + '" />')"
0799   "        function textarea(name: String, value: String, options: Object): Void {"
0800   "            numCols = options.numCols"
0801   "numCols"
0802   "            if (numCols == undefined) {"
0803   "                numCols = 60"
0804   "            numRows = options.numRows"
0805   "numRows"
0806   "            if (numRows == undefined) {"
0807   "                numRows = 10"
0808   "            write('<textarea name="' + name + '" type="' + getTextKind(options) + '" ' + getOptions(options) + "
0809   "                ' cols="' + numCols + '" rows="' + numRows + '">' + value + '</textarea>')"
0810   "<textarea name=""
0811   "" type=""
0812   " cols=""
0813   "" rows=""
0814   "</textarea>"
0815   "textarea"
0816   "        function tree(initialData: Array, options: Object): Void {"
0817   "            throw 'HtmlConnector control "tree" not implemented.'"
0818   "HtmlConnector control "tree" not implemented."
0819   "tree"
0820   "        private function getColumns(data: Object, options: Object): Object {"
0821   "            let columns"
0822   "            if (options.columns) {"
0823   "                if (options.columns is Array) {"
0824   "                    columns = {}"
0825   "                    for each (name in options.columns) {"
0826   "                        columns[name] = name"
0827   "                    columns = options.columns"
0828   "                columns = {}"
0829   "                if (data is Array) {"
0830   "                    for (let name in data[0]) {"
0831   "-hoisted-4"
0832   "                        if (name == "id" && !options.showId) continue"
0833   "showId"
0834   "            return columns"
0835   "        private function getTextKind(options): String {"
0836   "            var kind: String"
0837   "            if (options.password) {"
0838   "password"
0839   "                kind = "password""
0840   "            } else if (options.hidden) {"
0841   "hidden"
0842   "                kind = "hidden""
0843   "                kind = "text""
0844   "            return kind"
0845   "		private function getOptions(options: Object): String"
0846   "            view.getOptions(options)"
0847   "        private function write(str: String): Void"
0848   "            request.write(str)"
0849   "str"
0850   "block_14789_470"
0851   "    dynamic class HttpServer {"
0852   "        use default namespace public"
0853   "        native function HttpServer(serverRoot: Path = ".", documentRoot: Path = ".")"
0854   "HttpServer"
0855   "serverRoot"
0856   "documentRoot"
0857   "        native function addListener(name, listener: Function): Void"
0858   "addListener"
0859   "listener"
0860   "        native function get address(): String "
0861   "        native function get async(): Boolean"
0862   "async"
0863   "        native function set async(enable: Boolean): Void"
0864   "enable"
0865   "        native function close(): Void"
0866   "        var documentRoot: Path"
0867   "        native function listen(address): Request"
0868   "listen"
0869   "        native function attach(): Void"
0870   "attach"
0871   "        native function secureListen(address, keyFile, certFile, protocols: String, ciphers: String): Void"
0872   "secureListen"
0873   "keyFile"
0874   "certFile"
0875   "protocols"
0876   "ciphers"
0877   "        native function get port(): Number "
0878   "port"
0879   "        native function removeListener(name: Object, listener: Function): Void"
0880   "removeListener"
0881   "        var serverRoot: Path"
0882   "        native function get software(): String"
0883   "software"
0884   "block_15333_547"
0885   "    require ejs.cjs"
0886   "    public class Mvc {"
0887   "        private static var defaultConfig = {"
0888   "defaultConfig"
0889   "[Mvc,private]"
0890   "            cache: {"
0891   "                enable: true,"
0892   "                reload: true,"
0893   "reload"
0894   "            directories: {"
0895   "                bin: Path("bin"),"
0896   "bin"
0897   "                db: Path("db"),"
0898   "                cache: Path("cache"),"
0899   "                controllers: Path("controllers"),"
0900   "controllers"
0901   "                layouts: Path("views/layouts"),"
0902   "layouts"
0903   "views/layouts"
0904   "                models: Path("models"),"
0905   "models"
0906   "                views: Path("views"),"
0907   "                src: Path("src"),"
0908   "                web: Path("web"),"
0909   "web"
0910   "            extensions: {"
0911   "                es: "es","
0912   "es"
0913   "                ejs: "ejs","
0914   "                mod: "mod","
0915   "mod"
0916   "            mvc: {"
0917   "mvc"
0918   "                appmod: "App.mod","
0919   "appmod"
0920   "App.mod"
0921   "                start: "start.es","
0922   "start"
0923   "start.es"
0924   "                views: {"
0925   "                    connectors: { },"
0926   "connectors"
0927   "                    formats: { },"
0928   "formats"
0929   "        private static var mvc: Object"
0930   "        private static var dirs: Object"
0931   "dirs"
0932   "        private static var ext: Object"
0933   "ext"
0934   "        private static function defaultAppExports(request: Request): Object {"
0935   "            Route(request, Router.LegacyRoutes)"
0936   "LegacyRoutes"
0937   "            Mvc.init(request)"
0938   "init"
0939   "            let controller = Controller.create(request)"
0940   "            return controller.start(request)"
0941   "defaultAppExports"
0942   "        public static function load(request: Request): Object {"
0943   "            let dir = request.dir"
0944   "            let path = dir.join("ejsrc")"
0945   "ejsrc"
0946   "            let config = request.config"
0947   "            if (path.exists) {"
0948   "appConfig"
0949   "                let appConfig = deserialize(path.readString())"
0950   "                config = request.config = request.config.clone()"
0951   "                blend(config, appConfig, true)"
0952   "            blend(config, defaultConfig, false)"
0953   "            mvc = config.mvc"
0954   "            dirs = config.directories"
0955   "            ext = config.extensions"
0956   "            let start = dir.join(mvc.start)"
0957   "            let exports"
0958   "exports"
0959   "            if (start && start.exists) {"
0960   "                exports = Loader.load(start, start)"
0961   "load"
0962   "                exports = defaultAppExports"
0963   "            return exports"
0964   "        public static function init(request: Request): Void {"
0965   "            let mod = dir.join(dirs.cache, mvc.appmod)"
0966   "            let deps"
0967   "deps"
0968   "            if (config.mode == "debug") {"
0969   "debug"
0970   "                deps = []"
0971   "                deps.append(dir.join(dirs.models).find("*" + ext.es))"
0972   "*"
0973   "find"
0974   "                deps.append(dir.join(dirs.src).find("*" + ext.es))"
0975   "                deps.append(dir.join(dirs.controllers, "Base").joinExt(ext.es))"
0976   "Base"
0977   "            loadComponent(mod, deps)"
0978   "loadComponent"
0979   "            let controller = request.params.controller"
0980   "            let ucontroller = controller.toPascal()"
0981   "ucontroller"
0982   "            mod = dir.join(dirs.cache, ucontroller).joinExt(ext.mod)"
0983   "            if (!mod.exists || config.cache.reload) {"
0984   "                loadComponent(mod, [dir.join(dirs.controllers, ucontroller).joinExt(ext.es)])"
0985   "                loadComponent(mod)"
0986   "        public static function loadComponent(mod: Path, deps: Array? = null) {"
0987   "rebuild"
0988   "            let rebuild"
0989   "            if (mod.exists) {"
0990   "                rebuild = false"
0991   "                let when = mod.modified"
0992   "when"
0993   "                for each (dep in deps) {"
0994   "dep"
0995   "                    if (dep.exists && dep.modified > when) {"
0996   "                        rebuild = true"
0997   "                rebuild = true"
0998   "            if (rebuild) {"
0999   "                let code = """
1000   "                    let path = Path(dep)"
1001   "                    if (!path.exists) {"
1002   "                        throw "Can't find required component: \"" + path + "\"""
1003   "Can't find required component: ""
1004   "                    code += path.readString()"
1005   "                eval(code, mod)"
1006   "                global.load(mod)"
1007   "Mvc"
1008   "Mvc-initializer"
1009   "-initializer-"
1010   "block_15502_548"
1011   "    dynamic enumerable class Request implements Stream {"
1012   "        native var absHome: Uri"
1013   "absHome"
1014   "        native var authGroup: String"
1015   "authGroup"
1016   "        native var authType: String"
1017   "authType"
1018   "        native var authUser: String"
1019   "authUser"
1020   "        native var chunkSize: Number"
1021   "chunkSize"
1022   "        var config: Object"
1023   "        native var contentLength: Number"
1024   "contentLength"
1025   "        native var contentType: String"
1026   "contentType"
1027   "        native var cookies: Object"
1028   "cookies"
1029   "        native var dir: Path"
1030   "        native var encoding: String"
1031   "encoding"
1032   "        native var files: Object"
1033   "files"
1034   "        native var headers: Object"
1035   "headers"
1036   "        native var home: Uri"
1037   "        native var host: String"
1038   "host"
1039   "        function get log(): Logger "
1040   "            App.logger"
1041   "        native var method: String"
1042   "        native var params: Object"
1043   "        native var pathInfo: String"
1044   "pathInfo"
1045   "        native var query: String"
1046   "        native var referrer: String"
1047   "referrer"
1048   "        native var remoteAddress: String"
1049   "remoteAddress"
1050   "        var route: Route"
1051   "route"
1052   "Route"
1053   "        native var scheme: String"
1054   "scheme"
1055   "        native var scriptName: String"
1056   "scriptName"
1057   "        native var secure: Boolean"
1058   "secure"
1059   "        native var server: HttpServer"
1060   "server"
1061   "        native var session: Object "
1062   "session"
1063   "        native var sessionID: String"
1064   "sessionID"
1065   "        native var status: Number"
1066   "        native var timeout: Number"
1067   "timeout"
1068   "        native var uri: Uri"
1069   "        native var userAgent: String"
1070   "userAgent"
1071   "        function cachable(enable: Boolean = false): Void {"
1072   "            if (!cache) {"
1073   "                setHeader("Cache-Control", "no-cache", false)"
1074   "Cache-Control"
1075   "no-cache"
1076   "setHeader"
1077   "cachable"
1078   "        function dump(...args): Void {"
1079   "            for each (var e: Object in args) {"
1080   "                write(serialize(e, {pretty: true}) + "\r\n")"
1081   "pretty"
1082   "
"
1083   "dump"
1084   "        native function destroySession(): Void"
1085   "destroySession"
1086   "        function get extension() "
1087   "            Path(pathInfo).extension"
1088   "extension"
1089   "        native function finalize(): Void "
1090   "finalize"
1091   "        function flush(): Void {}"
1092   "flush"
1093   "        native function getResponseHeaders(): Object"
1094   "getResponseHeaders"
1095   "        native function header(key: String): String"
1096   "key"
1097   "        native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number "
1098   "buffer"
1099   "ByteArray"
1100   "offset"
1101   "count"
1102   "        function redirect(url: String, status: Number = Http.MovedTemporarily): Void {"
1103   "            if (!url.contains("://")) {"
1104   "://"
1105   "                if (url[0] == '/') {"
1106   "                    uri = Url({ scheme: scheme, host: serverName, port: port, path: url})"
1107   "serverName"
1108   "Url"
1109   "                    url = Url({ scheme: scheme, host: serverName, port: port, path: scriptName + pathInfo + url})"
1110   "                url = uri.normalize.toString()"
1111   "normalize"
1112   "            this.status = status"
1113   "            setHeader("Location", url)"
1114   "Location"
1115   "            write("<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n" +"
1116   "                    "<address>" + server.software + " at " + serverName + " Port " + server.port + "
1117   "                    "\">here</a>.</p>\r\n" +"
1118   "                    "<p>The document has moved <a href=\"" + url + "
1119   "                    "<body><h1>Redirect (" + status + ")</h1>\r\n</H1>\r\n" + "
1120   "                   "<html><head><title>Redirect (" + status + ")</title></head>\r\n" +"
1121   "<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
"
1122   "<html><head><title>Redirect ("
1123   ")</title></head>
"
1124   "<body><h1>Redirect ("
1125   ")</h1>
</H1>
"
1126   "<p>The document has moved <a href=""
1127   "">here</a>.</p>
"
1128   "<address>"
1129   " at "
1130   " Port "
1131   "                    "</address></body>\r\n</html>\r\n")"
1132   "</address></body>
</html>
"
1133   "url"
1134   "        native function removeListener(name, listener: Function): Void"
1135   "        function makeUri(parts: Object): Uri {"
1136   "            if (route) {"
1137   "                return route.makeUri(this, blend(params.clone(), parts))"
1138   "            let uri = request.absHome.components()"
1139   "components"
1140   "            for each (part in parts) {"
1141   "part"
1142   "                blend(uri, part)"
1143   "            return Uri(uri)"
1144   "        function setLocation(prefix: String, location: Path): Void {"
1145   "            dir = location"
1146   "            pathInfo = pathInfo.trimStart(prefix)"
1147   "trimStart"
1148   "            scriptName = prefix.trimStart("/")"
1149   "setLocation"
1150   "prefix"
1151   "location"
1152   "        function sendResponse(response: Object): Void {"
1153   "            status = response.status || 200"
1154   "            if (response.headers)"
1155   "                setHeaders(response.headers)"
1156   "setHeaders"
1157   "            if (response.body)"
1158   "body"
1159   "                write(body)"
1160   "            finalize()"
1161   "sendResponse"
1162   "response"
1163   "        function setCookie(name: String, options: Object) {"
1164   "            options.path ||= "/""
1165   "            let value = encodeUri(name) + "=""
1166   "encodeUri"
1167   "="
1168   "            value += "; path=" + options.path"
1169   "; path="
1170   "            if (options.domain)"
1171   "domain"
1172   "                value += "domain=" + options.domain"
1173   "domain="
1174   "            if (options.expires)"
1175   "expires"
1176   "                value += "; expires= " + options.expires.toUTCString()"
1177   "; expires= "
1178   "toUTCString"
1179   "            if (options.secure)"
1180   "                value += "; secure""
1181   "; secure"
1182   "            setHeader("Set-Cookie", value)"
1183   "Set-Cookie"
1184   "            setHeader("Cache-control", "no-cache=\"set-cookie\"")"
1185   "Cache-control"
1186   "no-cache="set-cookie""
1187   "setCookie"
1188   "        native function setHeader(key: String, value: String, overwrite: Boolean = true): Void"
1189   "overwrite"
1190   "        function setHeaders(headers: Object, overwrite: Boolean = true): Void {"
1191   "            for (key in headers) {"
1192   "                setHeader(key, headers[key], overwrite)"
1193   "        function setStatus(status: Number): Void {"
1194   "setStatus"
1195   "        native function write(...data): Number"
1196   "        function writeError(msg: String, code: Number = Http.ServerError): Void {"
1197   "            let text"
1198   "            status = code"
1199   "            msg = msg.replace(/.*Error Exception: /, "")"
1200   "/.*Error Exception: /"
1201   "            if (config.log.showClient) {"
1202   "showClient"
1203   "                setHeader("Content-Type", "text/html")"
1204   "Content-Type"
1205   "text/html"
1206   "                text = "<h1>Request error for \"" + pathInfo + "\"</h1>\r\n""
1207   "<h1>Request error for ""
1208   ""</h1>
"
1209   "                text += "<pre>" + escapeHtml(msg) + "</pre>\r\n""
1210   "<pre>"
1211   "</pre>
"
1212   "                text += '<p>To prevent errors being displayed in the "browser, ' + "
1213   "                    'set <b>errors.showClient</b> to false in the ejsrc file.</p>\r\n'"
1214   "<p>To prevent errors being displayed in the "browser, "
1215   "set <b>errors.showClient</b> to false in the ejsrc file.</p>
"
1216   "                write(text)"
1217   "            } catch {}"
1218   "            log.error(status + ". " + msg)"
1219   ". "
1220   "        function writeHtml(...args): Void"
1221   "            write(html(args))"
1222   "writeHtml"
1223   "        static var jsgi: Object = {"
1224   "jsgi"
1225   "            errors: App.logger,"
1226   "errors"
1227   "            version: [0,3],"
1228   "version"
1229   "            multithread: true,"
1230   "multithread"
1231   "            multiprocess: false,"
1232   "multiprocess"
1233   "            runonce: false,"
1234   "runonce"
1235   "        native var env: Object"
1236   "env"
1237   "        function get input(): Stream {"
1238   "            return this"
1239   "input"
1240   "Stream"
1241   "        function get queryString(): String"
1242   "            query"
1243   "queryString"
1244   "        function get serverName(): String {"
1245   "            return (host) ? host : uri.host"
1246   "        function get serverPort(): Number"
1247   "            server.port"
1248   "serverPort"
1249   "Request-initializer"
1250   "block_15709_563"
1251   "    class Router {"
1252   "		internal var routes: Array = []"
1253   "routes"
1254   "        public static var TopRoutes = ["
1255   "TopRoutes"
1256   "        ]"
1257   "          { name: "es",      type: "es",  match: /\.es$/   },"
1258   "type"
1259   "match"
1260   "/\.es$/"
1261   "          { name: "ejs",     type: "ejs", match: /\.ejs$/  },"
1262   "/\.ejs$/"
1263   "        public static var RestfulRoutes = ["
1264   "RestfulRoutes"
1265   "          { name: "new",     type: "mvc", method: "GET",    match: "/:controller/new",       params: { action: "new" } },"
1266   "new"
1267   "GET"
1268   "/:controller/new"
1269   "          { name: "edit",    type: "mvc", method: "GET",    match: "/:controller/:id/edit",  params: { action: "edit" } },"
1270   "edit"
1271   "/:controller/:id/edit"
1272   "          { name: "show",    type: "mvc", method: "GET",    match: "/:controller/:id",       params: { action: "show" } },"
1273   "show"
1274   "/:controller/:id"
1275   "          { name: "update",  type: "mvc", method: "PUT",    match: "/:controller/:id",       params: { action: "update" } },"
1276   "PUT"
1277   "          { name: "delete",  type: "mvc", method: "DELETE", match: "/:controller/:id",       params: { action: "delete" } },"
1278   "delete"
1279   "DELETE"
1280   "          { name: "create",  type: "mvc", method: "POST",   match: "/:controller",           params: { action: "create" } },"
1281   "POST"
1282   "/:controller"
1283   "          { name: "index",   type: "mvc", method: "GET",    match: "/:controller",           params: { action: "index" } },"
1284   "        public static var LegacyRoutes = ["
1285   "          { name: "list",    type: "mvc", method: "GET",  match: "/:controller/list",        params: { action: "list" } },"
1286   "/:controller/list"
1287   "          { name: "create",  type: "mvc", method: "POST", match: "/:controller/create",      params: { action: "create" } },"
1288   "/:controller/create"
1289   "          { name: "edit",    type: "mvc", method: "GET",  match: "/:controller/edit",        params: { action: "edit" } },"
1290   "/:controller/edit"
1291   "          { name: "update",  type: "mvc", method: "POST", match: "/:controller/update",      params: { action: "update" } },"
1292   "/:controller/update"
1293   "          { name: "destroy", type: "mvc", method: "POST", match: "/:controller/destroy",     params: { action: "destroy" } },"
1294   "destroy"
1295   "/:controller/destroy"
1296   "          { name: "index",   type: "mvc", method: "GET",  match: "/:controller",             params: { action: "index" } },"
1297   "          { name: "funny",   type: "mvc", method: "GET",  match: "/funny/:controller/:id/edit",  params: { action: "edit" } },"
1298   "funny"
1299   "/funny/:controller/:id/edit"
1300   "        function Router(set: Array = RestfulRoutes) {"
1301   "            addRoutes(set)"
1302   "addRoutes"
1303   "Router"
1304   "set"
1305   "		public function addRestfulRoutes(): Void"
1306   "            addRoutes(RestfulRoutes)"
1307   "addRestfulRoutes"
1308   "		public function addRoutes(routeSet: Array, outer: Route? = null): Void {"
1309   "            for each (route in routeSet) {"
1310   "                route = route.clone()"
1311   "                while (outer) {"
1312   "                    route.name = outer.name + "." + route.name"
1313   "."
1314   "                    route.match = outer.match + route.match"
1315   "                    for (p in outer.params) {"
1316   "p"
1317   "                        route.params[p] = outer.params[p]"
1318   "                    outer = outer.parent"
1319   "parent"
1320   "splitter"
1321   "                let splitter, tokens"
1322   "tokens"
1323   "                route.matcher = route.match"
1324   "matcher"
1325   "                if (route.match is String) {"
1326   "                    tokens = route.match.match(/:([^:\W]*)/g)"
1327   "/:([^:\W]*)/g"
1328   "                    for (i in tokens) {"
1329   "                        tokens[i] = tokens[i].trim(":")"
1330   ":"
1331   "template"
1332   "                    let template = route.match.replace(/:([^:\W]+)/g, "([^\W]+)").replace(/\//g, "\\/")"
1333   "/:([^:\W]+)/g"
1334   "([^W]+)"
1335   "/\//g"
1336   "\/"
1337   "                    route.matcher = RegExp("^" + template)"
1338   "^"
1339   "                    count = 1"
1340   "                    splitter = """
1341   "                    for (c in tokens) {"
1342   "-hoisted-8"
1343   "                        splitter += "$" + count++ + ":""
1344   "$"
1345   "                    route.splitter = splitter.trim(":")"
1346   "                    route.tokens = tokens"
1347   "                route = new Route(route, this)"
1348   "                if (route.subroute) {"
1349   "subroute"
1350   "                    route.subroute.parent = route"
1351   "                    addRoutes(route.subroute, route)"
1352   "                routes.append(route)"
1353   "routeSet"
1354   "outer"
1355   "        public function route(request): Void {"
1356   "            let params = request.params"
1357   "            let pathInfo = request.pathInfo"
1358   "            for each (route in routes) {"
1359   "                if (route.method && request.method != route.method) {"
1360   "                    continue"
1361   "                if (route.matcher is Function) { "
1362   "                    if (!route.matcher(request)) {"
1363   "                    for (i in route.params) {"
1364   "                        params[i] = route.params[i]"
1365   "                } else if (!route.splitter) { "
1366   "results"
1367   "                    let results = pathInfo.match(route.matcher)"
1368   "                    if (!results) {"
1369   "                    for (let name in route.params) {"
1370   "                        let value = route.params[name]"
1371   "                        if (value.contains("$")) {"
1372   "                            value = pathInfo.replace(route.matcher, value)"
1373   "                        params[name] = value"
1374   "                    if (!pathInfo.match(route.matcher)) {"
1375   "                    parts = pathInfo.replace(route.matcher, route.splitter)"
1376   "                    parts = parts.split(":")"
1377   "split"
1378   "                    for (i in route.tokens) {"
1379   "                        params[route.tokens[i]] = parts[i]"
1380   "-hoisted-9"
1381   "                request.route = route"
1382   "                if (route.rewrite && !route.rewrite(request)) {"
1383   "rewrite"
1384   "                    request.route = null"
1385   "                let location = route.location"
1386   "                if (location && location.prefix && location.dir) {"
1387   "                    request.setLocation(location.prefix, location.dir)"
1388   "            throw "No route for " + pathInfo"
1389   "No route for "
1390   "        function dumpRoutes(): Void {"
1391   "            dump(routes)"
1392   "dumpRoutes"
1393   "Router-initializer"
1394   "    dynamic class Route {"
1395   "        var dir: Path"
1396   "        var match: Object"
1397   "        var method: String"
1398   "        var name: String"
1399   "        var rewrite: Function"
1400   "        var subroute: Route"
1401   "        var threaded: Boolean"
1402   "threaded"
1403   "        var type: String"
1404   "        var urimaker: Function"
1405   "urimaker"
1406   "        internal var matcher: RegExp"
1407   "RegExp"
1408   "        internal var splitter: String"
1409   "        internal var tokens: Array"
1410   "        internal var router: Router"
1411   "router"
1412   "        function Route(route: Object, router: Router) {"
1413   "            for (field in route) {"
1414   "               this[field] = route[field]"
1415   "            } "
1416   "            this.router = router"
1417   "        public function makeUri(request: Request, parts: Object): Uri {"
1418   "            if (urimaker)"
1419   "                return urimaker(request, parts)"
1420   "            if (request)"
1421   "                parts = blend(request.absHome.components(), parts)"
1422   "            else parts = parts.clone()"
1423   "            let result = Uri(parts)"
1424   "result"
1425   "            let routeName = parts.route"
1426   "routeName"
1427   "            let route = this"
1428   "            if (routeName != this.name) {"
1429   "                for each (r in router.routes) {"
1430   "                    if (r.name == routeName) {"
1431   "                        route = r"
1432   "                        break"
1433   "            let path = """
1434   "            for each (token in route.tokens) {"
1435   "token"
1436   "                if (!parts[token]) {"
1437   "                    throw "Missing URI token " + token"
1438   "Missing URI token "
1439   "                path += "/" + parts[token]"
1440   "            result.path = path"
1441   "            return result"
1442   "block_16284_576"
1443   "    var session: Object"
1444   "    class Session { "
1445   "        native static function addListener(name, listener: Function): Void"
1446   "        native static function get count(): Number"
1447   "        native static function removeListener(name, listener: Function): Void"
1448   "        native function setSessionTimeout(timeout: Number): Object "
1449   "setSessionTimeout"
1450   "Session"
1451   "block_16672_605"
1452   "    class UploadFile {"
1453   "        native var clientFilename: String"
1454   "clientFilename"
1455   "        native var filename: String"
1456   "        native var size: Number"
1457   "size"
1458   "UploadFile"
1459   "block_16770_606"
1460   "    function parseCookies(cookieHeader: String): Object {"
1461   "        let cookies = {}"
1462   "        for each (c in cookieHeader.split(";")) {"
1463   ";"
1464   "            parts = c.split("=")"
1465   "            key = parts[0].toLower().trim("$")"
1466   "toLower"
1467   "            if (key == "version") {"
1468   "                continue"
1469   "            if (key == "name") {"
1470   "                cookies[name] = cookie = {}"
1471   "cookie"
1472   "            cookie[key] = parts[1]"
1473   "        return cookies"
1474   "parseCookies"
1475   "cookieHeader"
1476   "    function escapeHtml(s: String): String"
1477   "        s.replace(/&/g,'&amp;').replace(/\>/g,'&gt;').replace(/</g,'&lt;').replace(/"/g,'&quot;')"
1478   "/&/g"
1479   "&amp;"
1480   "/\>/g"
1481   "&gt;"
1482   "/</g"
1483   "&lt;"
1484   "/"/g"
1485   "&quot;"
1486   "escapeHtml"
1487   "s"
1488   "    function html(...args): String {"
1489   "        result = """
1490   "        for each (let s: String in args) {"
1491   "            result += escapeHtml(s)"
1492   "        return result"
1493   "html"
1494   "    function unescapeHtml(s: String): String"
1495   "        s.replace(/&amp/g,'&;').replace(/&gt/g,'>').replace(/&lt/g,'<').replace(/&quot/g,'"')"
1496   "/&amp/g"
1497   "&;"
1498   "/&gt/g"
1499   "/&lt/g"
1500   "<"
1501   "/&quot/g"
1502   "unescapeHtml"
1503   "block_16828_607"
1504   "    require ejs.web"
1505   "    dynamic class View {"
1506   "        private var currentRecord: Object"
1507   "currentRecord"
1508   "[ejs.web::View,private]"
1509   "        private var config: Object"
1510   "        function getNextId(): Number {"
1511   "            return "id_" + nextId++"
1512   "id_"
1513   "        function View(request: Object) {"
1514   "            this.config = request.config"
1515   "            view = this"
1516   "        public function makeUri(parts: Object): Uri"
1517   "        public function render(renderer: Function): Void {"
1518   "            if (renderer) {"
1519   "                renderer.setScope(View)"
1520   "setScope"
1521   "                renderer.call(this, request)"
1522   "renderer"
1523   "        public function setHeader(key: String, value: String, overwrite: Boolean = true): Void"
1524   "            request.setHeader(key, value, overwrite)"
1525   "        public function setHeaders(headers: Object, overwrite: Boolean = true): Void"
1526   "            request.setHeader(headers, overwrite)"
1527   "        public function setStatus(status: Number): Void"
1528   "            request.setStatus(status)"
1529   "        public function write(...data): Number"
1530   "            request.write(data)"
1531   "            currentRecord = record"
1532   "            emitFormErrors(record)"
1533   "emitFormErrors"
1534   "            options = setOptions("aform", options)"
1535   "setOptions"
1536   "            if (options.method == null) {"
1537   "                options.method = "POST""
1538   "            options.action ||= "update""
1539   "            options.id ||= record.id"
1540   "            let connector = getConnector("aform", options)"
1541   "connector"
1542   "getConnector"
1543   "            connector.aform(record, options)"
1544   "        function alink(text: String, options: Object = {}): Void {"
1545   "            options = setOptions("alink", options)"
1546   "            options.action ||= text.split(" ")[0].toLower()"
1547   "            options.method ||= "POST""
1548   "            let connector = getConnector("alink", options)"
1549   "            connector.alink(text, options)"
1550   "        function button(value: String, buttonName: String? = null, options: Object = {}): Void {"
1551   "            options = setOptions("button", options)"
1552   "            buttonName ||= value.toLower()"
1553   "            let connector = getConnector("button", options)"
1554   "            connector.button(value, buttonName, options)"
1555   "        function buttonLink(text: String, options: Object = {}): Void {"
1556   "            options = setOptions("buttonLink", options)"
1557   "            let connector = getConnector("buttonLink", options)"
1558   "            connector.buttonLink(text, options)"
1559   "        function chart(initialData: Array, options: Object = {}): Void {"
1560   "            let connector = getConnector("chart", options)"
1561   "            connector.chart(initialData, options)"
1562   "        function checkbox(field: String, choice: String = "true", options: Object = {}): Void {"
1563   "true"
1564   "            options = setOptions(field, options)"
1565   "            let value = getValue(currentRecord, field, options)"
1566   "            let connector = getConnector("checkbox", options)"
1567   "            connector.checkbox(options.fieldName, value, choice, options)"
1568   "fieldName"
1569   "        function endform(): Void {"
1570   "            let connector = getConnector("endform", null)"
1571   "            connector.endform()"
1572   "            currentRecord = undefined"
1573   "        function form(record: Object, options: Object = {}): Void {"
1574   "            options = setOptions("form", options)"
1575   "            let connector = getConnector("form", options)"
1576   "            connector.form(record, options)"
1577   "        function image(src: String, options: Object = {}): Void {"
1578   "            options = setOptions("image", options)"
1579   "            getConnector("image", options)"
1580   "            connector.image(src, options)"
1581   "        function imageLink(image: String, options: Object = {}): Void {"
1582   "            options = setOptions("imageLink", options)"
1583   "            let connector = getConnector("imageLink", options)"
1584   "            connector.imageLink(text, options)"
1585   "        function input(field: String, options: Object = {}): Void {"
1586   "            if (currentRecord && currentRecord.getColumnType) {"
1587   "getColumnType"
1588   "                datatype = currentRecord.getColumnType(field)"
1589   "datatype"
1590   "                switch (datatype) {"
1591   "                case "binary":"
1592   "binary"
1593   "                case "date":"
1594   "date"
1595   "                case "datetime":"
1596   "datetime"
1597   "                case "decimal":"
1598   "decimal"
1599   "                case "float":"
1600   "float"
1601   "                case "integer":"
1602   "integer"
1603   "                case "number":"
1604   "number"
1605   "                case "string":"
1606   "string"
1607   "                case "time":"
1608   "time"
1609   "                case "timestamp":"
1610   "timestamp"
1611   "                    text(field, options)"
1612   "                    break"
1613   "                case "text":"
1614   "                    textarea(field, options)"
1615   "                case "boolean":"
1616   "boolean"
1617   "                    checkbox(field, "true", options)"
1618   "                default:"
1619   "                    throw "input control: Unknown field type: " + datatype + " for field " + field"
1620   "input control: Unknown field type: "
1621   " for field "
1622   "                if (datatype is Boolean) {"
1623   "        function label(text: String, options: Object = {}): Void {"
1624   "            options = setOptions("label", options)"
1625   "            let connector = getConnector("label", options)"
1626   "            connector.label(text, options)"
1627   "        function link(text: String, options: Object = {}): Void {"
1628   "            options = setOptions("link", options)"
1629   "            let connector = getConnector("link", options)"
1630   "            connector.link(text, options)"
1631   "        function extlink(text: String, options: Object = {}): Void {"
1632   "            let connector = getConnector("extlink", options)"
1633   "            connector.extlink(text, options)"
1634   "        function list(field: String, choices: Object? = null, options: Object = {}): Void {"
1635   "            if (choices == null) {"
1636   "                modelTypeName = field.replace(/\s/, "").toPascal()"
1637   "/\s/"
1638   "modelTypeName"
1639   "                modelTypeName = modelTypeName.replace(/Id$/, "")"
1640   "/Id$/"
1641   "                if (global[modelTypeName] == undefined) {"
1642   "                    throw new Error("Can't find model to create list data: " + modelTypeName)"
1643   "Can't find model to create list data: "
1644   "                choices = global[modelTypeName].findAll()"
1645   "findAll"
1646   "            let connector = getConnector("list", options)"
1647   "            connector.list(options.fieldName, choices, value, options)"
1648   "        function mail(name: String, address: String, options: Object = {}): Void  {"
1649   "            let connector = getConnector("mail", options)"
1650   "            connector.mail(name, address, options)"
1651   "        function progress(initialData: Object, options: Object = {}): Void {"
1652   "            let connector = getConnector("progress", options)"
1653   "            connector.progress(initialData, options)"
1654   "        function radio(field: String, choices: Object, options: Object = {}): Void {"
1655   "            let connector = getConnector("radio", options)"
1656   "            connector.radio(options.fieldName, value, choices, options)"
1657   "        function script(uri: Object, options: Object = {}): Void {"
1658   "            let connector = getConnector("script", options)"
1659   "            if (uri is Array) {"
1660   "                for each (u in uri) {"
1661   "u"
1662   "                    connector.script(request.home.join(u), options)"
1663   "                connector.script(request.home.join(uri), options)"
1664   "        function status(initialData: Object, options: Object = {}): Void {"
1665   "            let connector = getConnector("status", options)"
1666   "            connector.status(initialData, options)"
1667   "        function stylesheet(uri: Object, options: Object = {}): Void {"
1668   "            let connector = getConnector("stylesheet", options)"
1669   "                    connector.stylesheet(request.home.join(u), options)"
1670   "                connector.stylesheet(request.home.join(uri), options)"
1671   "        function table(data, options: Object = {}): Void {"
1672   "            options = setOptions("table", options)"
1673   "            let connector = getConnector("table", options)"
1674   "            if (options.pivot) {"
1675   "pivot"
1676   "                data = pivot(data)"
1677   "            connector.table(data, options)"
1678   "        function tabs(initialData: Array, options: Object = {}): Void {"
1679   "            let connector = getConnector("tabs", options)"
1680   "            connector.tabs(initialData, options)"
1681   "        function text(field: String, options: Object = {}): Void {"
1682   "            let connector = getConnector("text", options)"
1683   "            connector.text(options.fieldName, value, options)"
1684   "        function textarea(field: String, options: Object = {}): Void {"
1685   "            let connector = getConnector("textarea", options)"
1686   "            connector.textarea(options.fieldName, value, options)"
1687   "        function tree(initialData: Object, options: Object = {}): Void {"
1688   "            let connector = getConnector("tree", options)"
1689   "            connector.tree(initialData, options)"
1690   "        function flash(kinds: Object? = null, options: Object = {}): Void {"
1691   "            options = setOptions("flash", options)"
1692   "            let cflash = request.flash"
1693   "cflash"
1694   "            if (cflash == null || cflash.length == 0) {"
1695   "msgs"
1696   "            let msgs: Object"
1697   "            if (kinds is String) {"
1698   "                msgs = {}"
1699   "                msgs[kinds] = cflash[kinds]"
1700   "            } else if (kinds is Array) {"
1701   "                for each (kind in kinds) {"
1702   "                    msgs[kind] = cflash[kind]"
1703   "                msgs = cflash"
1704   "            for (kind in msgs) {"
1705   "                let msg: String = msgs[kind]"
1706   "                if (msg && msg != "") {"
1707   "                    let connector = getConnector("flash", options)"
1708   "                    options.style = "-ejs-flash -ejs-flash" + kind.toPascal()"
1709   "-ejs-flash -ejs-flash"
1710   "                    connector.flash(kind, msg, options)"
1711   "kinds"
1712   "        private function emitFormErrors(record): Void {"
1713   "            if (!record || !record.getErrors) {"
1714   "getErrors"
1715   "            let errors = record.getErrors()"
1716   "            if (errors) {"
1717   "                write('<div class="-ejs-formError"><h2>The ' + Reflect(record).name.toLower() + ' has ' + "
1718   "                    ((errors.length > 1) ? 'prevent' : 'prevents') + '  it being saved.</h2>\r\n')"
1719   "                    errors.length + (errors.length > 1 ? ' errors' : ' error') + ' that ' +"
1720   "<div class="-ejs-formError"><h2>The "
1721   " has "
1722   " errors"
1723   " error"
1724   " that "
1725   "prevent"
1726   "prevents"
1727   "  it being saved.</h2>
"
1728   "                write('    <p>There were problems with the following fields:</p>\r\n')"
1729   "    <p>There were problems with the following fields:</p>
"
1730   "                write('    <ul>\r\n')"
1731   "    <ul>
"
1732   "                for (e in errors) {"
1733   "                    write('        <li>' + e.toPascal() + ' ' + errors[e] + '</li>\r\n')"
1734   "        <li>"
1735   "</li>
"
1736   "                write('    </ul>\r\n')"
1737   "    </ul>
"
1738   "                write('</div>\r\n')"
1739   "        private function getConnector(kind: String, options: Object) {"
1740   "            let views = request.config.mvc.views"
1741   "            let connectorName = options["connector"] || views.connectors[kind] || views.connectors["rest"] || "html""
1742   "connectorName"
1743   "rest"
1744   "            views.connectors[kind] = connectorName"
1745   "            let name = (connectorName + "Connector").toPascal()"
1746   "Connector"
1747   "                return new global[name](request, this)"
1748   "                throw new Error("Undefined view connector: " + name)"
1749   "Undefined view connector: "
1750   "        private function setOptions(field: String, options: Object): Object {"
1751   "            if (options is String)"
1752   "                options = {action: options}"
1753   "            if (currentRecord && currentRecord.id) {"
1754   "                options.id ||= field + '_' + currentRecord.id"
1755   "                if (currentRecord.hasError(field)) {"
1756   "hasError"
1757   "                    options.style += " -ejs-fieldError""
1758   " -ejs-fieldError"
1759   "                options.fieldName ||= Reflect(currentRecord).name.toCamel() + '.' + field"
1760   "toCamel"
1761   "                options.fieldName ||= field"
1762   "            options.style ||= field"
1763   "            return options"
1764   "        function getValue(record: Object, field: String, options: Object): String {"
1765   "            let value"
1766   "            if (record && field) {"
1767   "                value = record[field]"
1768   "            value ||= options.value"
1769   "            if (!value == null || value == undefined) {"
1770   "                value = record"
1771   "                if (value) {"
1772   "                    for each (let part in field.split(".")) {"
1773   "                        value = value[part]"
1774   "                value ||= """
1775   "            if (options.render != undefined && options.render is Function) {"
1776   "                result = options.render(value, record, field).toString()"
1777   "                return result"
1778   "            if (options.formatter != undefined && options.formatter is Function) {"
1779   "                return options.formatter(value).toString()"
1780   "typeName"
1781   "            let typeName = Reflect(value).typeName"
1782   "            let fmt"
1783   "fmt"
1784   "            let mvc = request.config.mvc"
1785   "            if (mvc.views && config.views.formats) {"
1786   "                fmt = mvc.views.formats[typeName]"
1787   "            if (fmt == undefined || fmt == null || fmt == "") {"
1788   "                return value.toString()"
1789   "            switch (typeName) {"
1790   "            case "Date":"
1791   "Date"
1792   "                return new Date(value).format(fmt)"
1793   "format"
1794   "            case "Number":"
1795   "                return fmt.format(value)"
1796   "            return value.toString()"
1797   "        function date(fmt: String): String {"
1798   "            return function (data: String): String {"
1799   "                return new Date(data).format(fmt)"
1800   "--fun_32943--89941314--"
1801   "        function currency(fmt: String): String {"
1802   "                return fmt.format(data)"
1803   "--fun_32977--89941314--"
1804   "currency"
1805   "        function number(fmt: String): String {"
1806   "--fun_33007--89941314--"
1807   "        private static const htmlOptions: Object = { "
1808   "htmlOptions"
1809   "            background: "", color: "", id: "", height: "", method: "", size: "", style: "class", visible: "", width: "","
1810   "background"
1811   "color"
1812   "height"
1813   "visible"
1814   "        function getOptions(options: Object): String {"
1815   "            if (!options) {"
1816   "                return " ""
1817   "            let result: String = """
1818   "            for (let option: String in options) {"
1819   "option"
1820   "mapped"
1821   "                let mapped = htmlOptions[option]"
1822   "                if (mapped || mapped == "") {"
1823   "                    if (mapped == "") {"
1824   "                        mapped = option"
1825   "                    result += ' ' +  mapped + '="' + options[option] + '"'"
1826   "=""
1827   "            return result + " ""
1828   "        private function pivot(grid: Array, options: Object = {}) {"
1829   "            if (!grid || grid.length == 0) return grid"
1830   "            let headers = []"
1831   "            for (name in grid[0]) {"
1832   "                headers[i++] = name"
1833   "            let table = []"
1834   "            let row = 0"
1835   "            table = []"
1836   "            for each (name in headers) {"
1837   "                let r = {}"
1838   "                i = 1"
1839   "                r[0] = name"
1840   "                for (j = 0; j < grid.length; j++) {"
1841   "j"
1842   "                    r[i++] = grid[j][name]"
1843   "                table[row++] = r"
1844   "            return table"
1845   "grid"
1846   "        private function filter(data: Array): Array {"
1847   "            data = data.clone()"
1848   "            pattern = request.params.filter.toLower()"
1849   "pattern"
1850   "            for (let i = 0; i < data.length; i++) {"
1851   "found"
1852   "                let found: Boolean = false"
1853   "                for each (f in data[i]) {"
1854   "f"
1855   "                    if (f.toString().toLower().indexOf(pattern) >= 0) {"
1856   "indexOf"
1857   "                        found = true"
1858   "                if (!found) {"
1859   "                    data.remove(i, i)"
1860   "remove"
1861   "                    i--"
1862   "            return data"
1863   "View-initializer"
1864   "block_16940_612"
1865   "    class Web {"
1866   "        static var config"
1867   "[ejs.web::Web,private]"
1868   "            log: {"
1869   "                showClient: true,"
1870   "            session: {"
1871   "                timeout: 1800,"
1872   "        private static function init(): Void {"
1873   "            let path = Path("ejsrc")"
1874   "            let config = App.config"
1875   "webConfig"
1876   "                let webConfig = deserialize(path.readString())"
1877   "                blend(config, webConfig, true)"
1878   "        init()"
1879   "        static function serve(request: Request, router: Router = Router(Router.TopRoutes)): Void {"
1880   "                router.route(request)"
1881   "                if (request.route.threaded) {"
1882   "                    worker(request)"
1883   "worker"
1884   "                    let exports = load(request)"
1885   "                    if (exports) {"
1886   "                        start(request, exports.app)"
1887   "app"
1888   "            } catch (e) {"
1889   "                request.writeError(e)"
1890   "serve"
1891   "        static native function worker(request: Request): Void"
1892   "        private static function workerHelper(request: Request): Void {"
1893   "                let exports = load(request)"
1894   "                if (exports) {"
1895   "                    start(request, exports.app)"
1896   "workerHelper"
1897   "        static function load(request: Request): Object {"
1898   "                let type = request.route.type"
1899   "                let exports"
1900   "                if (type == "es") {"
1901   "                    if (!global.Loader) {"
1902   "Loader"
1903   "                        global.load("ejs.cjs.mod")"
1904   "ejs.cjs.mod"
1905   "                    let path = request.dir.join(request.pathInfo.slice(1))"
1906   "slice"
1907   "                        throw "Request resource \"" + path + "\" does not exist""
1908   "Request resource ""
1909   "" does not exist"
1910   "                    exports = Loader.require(path)"
1911   "require"
1912   "                } else if (type == "ejs") {"
1913   "                    if (!global.Template) {"
1914   "Template"
1915   "                        global.load("ejs.web.template.mod")"
1916   "                        request.writeError("Can't find \"" + path + "\".", Http.NotFound)"
1917   "Can't find ""
1918   ""."
1919   "NotFound"
1920   "                        return null;"
1921   "                        exports = Template.load(request)"
1922   "                        request.setHeader("Content-Type", "text/html")"
1923   "                } else if (type == "mvc") {"
1924   "                    exports = Mvc.load(request)"
1925   "                    throw "Request type: " + type + " is not supported by Web.load""
1926   "Request type: "
1927   " is not supported by Web.load"
1928   "                if (!exports || !exports.app) {"
1929   "                    throw "Can't load application. No \"app\" object exported by application""
1930   "Can't load application. No "app" object exported by application"
1931   "                return exports"
1932   "            return null"
1933   "        static function start(request: Request, app: Function): Void {"
1934   "                let result = app(request)"
1935   "                if (!result) {"
1936   "                    if (request.route.type == "ejs") {"
1937   "                        request.finalize()"
1938   "                } else if (result is Function) {"
1939   "                    result(request)"
1940   "                    request.status = result.status || 200"
1941   "                    let headers = result.headers || { "content-type": "text/html" }"
1942   "content-type"
1943   "                    request.setHeaders(headers)"
1944   "                    let body = result.body"
1945   "                    if (body is String) {"
1946   "                        request.write(body)"
1947   "                    } else if (body is Array) {"
1948   "                        for each (let item in body) {"
1949   "                            request.write(item)"
1950   "                    } else if (body is Stream) {"
1951   "                        if (body.async) {"
1952   "                            request.async = true"
1953   "                            request.addListener("", function(event, body) {"
1954   "                                request.write(body)"
1955   "                            })"
1956   "--fun_34051--89941300--"
1957   "event"
1958   "block_18066_693"
1959   "                            ba = new ByteArray"
1960   "ba"
1961   "                            while (body.read(ba)) {"
1962   "                                request.write(ba)"
1963   "block_18064_692"
1964   "                    } else if (body.forEach) {"
1965   "forEach"
1966   "                        body.forEach(function(block) {"
1967   "                            request.write(block)"
1968   "                        })"
1969   "--fun_34107--89941299--"
1970   "block"
1971   "block_18080_696"
1972   "block_18051_688"
1973   "print("Web.start() CATCH " + e)"
1974   "Web.start() CATCH "
1975   "            } finally {"
1976   "                request.finalize()"
1977   "Web"
1978   "Web-initializer"
1979   "block_17902_662"
1980   "__initializer__"

==============================================================================================

MODULE:   ejs.web.template <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_18145_699 : Block
   LOCAL:   [local-01] var block_18234_700 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 22 92 9c 02 30 .......... debug 

    # ejs.es:18185              }

    0009: [0] 01 34 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0011: [0] 01 8c 01 ................... addNamespace <ejs.web.template> 
    0014: [0] 33 22 c2 9b 02 ae 01 ....... debug 

    # ejs.es:18145              module ejs.web.template  {

    0021: [0] 33 22 c4 9b 02 e4 01 ....... debug 

    # ejs.es:18146                  require ejs.cjs

    0028: [0] 01 02 ...................... addNamespace <ejs.cjs> 
    0030: [0] 33 22 c6 9b 02 8c 02 ....... debug 

    # ejs.es:18147                  require ejs.web

    0037: [0] 01 12 ...................... addNamespace <ejs.web> 
    0039: [0] 33 22 f2 9b 02 b4 02 ....... debug 

    # ejs.es:18169                  public class Template {

    0046: [0] 34 b4 0b ................... defineClass <type: 0x2da,  public::Template> 
    0049: [0] 24 ......................... closeBlock 
    0050: [0] 8d 02 00 ................... openBlock <slot: 1> <0> 
    0053: [0] 33 22 c2 a1 02 30 .......... debug 

    # ejs.es:18529              }

    0059: [0] 01 34 ...................... addNamespace <internal-ed363076473b51ca685af450cc662b39-0> 
    0061: [0] 01 8c 01 ................... addNamespace <ejs.web.template> 
    0064: [0] 33 22 f4 9c 02 ae 01 ....... debug 

    # ejs.es:18234              module ejs.web.template  {

    0071: [0] 33 22 aa 9d 02 d6 0e ....... debug 

    # ejs.es:18261                  public class TemplateParser {

    0078: [0] 34 bc 0b ................... defineClass <type: 0x2de,  public::TemplateParser> 
    0081: [0] 33 22 ac a1 02 a6 80 01 .... debug 

    # ejs.es:18518                  class Token {

    0089: [0] 34 c4 0b ................... defineClass <type: 0x2e2,  ejs.web.template::Token> 
    0092: [0] 24 ......................... closeBlock 
    0093: [0] 3b ......................... endCode 
    

BLOCK:      [block_18145_699-00]  block_18145_699 (Slots 0)

BLOCK:      [block_18234_700-01]  block_18234_700 (Slots 0)

CLASS:      class Template extends Object
            #  Class Details: 27 class traits, 0 instance traits, requested slot 182

FUNCTION:   [Template-26]  public const static function load(request: Request) : Object

     ARG:   [arg-00]   private request : Request
   LOCAL:   [local-01] var path
   LOCAL:   [local-02] var --fun_34227--89941298-- : Function

    0000: [0] 33 22 82 9c 02 c2 04 ....... debug 

    # ejs.es:18177                          let path = request.dir.join(request.pathInfo.slice(1))

    0007: [0] 5b ......................... getLocalSlot0 
    0008: [1] 7b c8 05 d0 05 ............. getObjName <dir> <public> 
    0013: [1] 5b ......................... getLocalSlot0 
    0014: [2] 7b de 05 d0 05 ............. getObjName <pathInfo> <public> 
    0019: [2] 45 ......................... load1 
    0020: [3] 1e f0 05 d0 05 02 .......... callObjName <slice> <public> <argc: 1> 
    0026: [1] 93 ......................... pushResult 
    0027: [2] 1e fc 05 d0 05 02 .......... callObjName <join> <public> <argc: 1> 
    0033: [0] 93 ......................... pushResult 
    0034: [1] 95 ......................... putLocalSlot1 
    0035: [0] 33 22 84 9c 02 86 06 ....... debug 

    # ejs.es:18178                          Loader.setConfig(request.config)

    0042: [0] 7e 94 02 ................... getGlobalSlot <slot: 138> 
    0045: [1] 5b ......................... getLocalSlot0 
    0046: [2] 7b e0 06 d0 05 ............. getObjName <config> <public> 
    0051: [2] 1e ee 06 d0 05 02 .......... callObjName <setConfig> <public> <argc: 1> 
    0057: [0] 33 22 86 9c 02 82 07 ....... debug 

    # ejs.es:18179                          return Loader.load(path, path, function (path) {

    0064: [0] 35 04 00 ................... defineFunction <slot: 2> <0> 
    0067: [0] 33 22 86 9c 02 82 07 ....... debug 

    # ejs.es:18179                          return Loader.load(path, path, function (path) {

    0074: [0] 33 22 8c 9c 02 82 07 ....... debug 

    # ejs.es:18182                          return Loader.load(path, path, function (path) {

    0081: [0] 33 22 86 9c 02 82 07 ....... debug 

    # ejs.es:18179                          return Loader.load(path, path, function (path) {

    0088: [0] 7e 94 02 ................... getGlobalSlot <slot: 138> 
    0091: [1] 5c ......................... getLocalSlot1 
    0092: [2] 5c ......................... getLocalSlot1 
    0093: [3] 33 22 8c 9c 02 be 0a ....... debug 

    # ejs.es:18182                          })

    0100: [3] 5d ......................... getLocalSlot2 
    0101: [4] 1e dc 0a d0 05 06 .......... callObjName <load> <public> <argc: 3> 
    0107: [0] 93 ......................... pushResult 
    0108: [1] bf ......................... returnValue 
    
VARIABLE:   [request-00]  private var request : Request
VARIABLE:   [path-01]  private var path

FUNCTION:   [--fun_34227--89941298---02]  private function --fun_34227--89941298--(path) : void

     ARG:   [arg-00]   private path
   LOCAL:   [local-01] var data

    0000: [0] 33 22 88 9c 02 86 08 ....... debug 

    # ejs.es:18180                              let data = TemplateParser().build(path.readString())

    0007: [0] 17 ee 02 00 ................ callGlobalSlot <slot: 183> <argc: 0> 
    0011: [0] 93 ......................... pushResult 
    0012: [1] 5b ......................... getLocalSlot0 
    0013: [2] 1e 90 09 00 00 ............. callObjName <readString> <> <argc: 0> 
    0018: [1] 93 ......................... pushResult 
    0019: [2] 1e a6 09 d0 05 02 .......... callObjName <build> <public> <argc: 1> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 95 ......................... putLocalSlot1 
    0027: [0] 33 22 8a 9c 02 b2 09 ....... debug 

    # ejs.es:18181                              return Loader.wrap(data)

    0034: [0] 7e 94 02 ................... getGlobalSlot <slot: 138> 
    0037: [1] 5c ......................... getLocalSlot1 
    0038: [2] 1e 84 0a d0 05 02 .......... callObjName <wrap> <public> <argc: 1> 
    0044: [0] 93 ......................... pushResult 
    0045: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path
VARIABLE:   [data-01]  private var data

CLASS:      class TemplateParser extends Object
            #  Class Details: 32 class traits, 8 instance traits, requested slot 183

FUNCTION:   [TemplateParser-26]  -constructor- function TemplateParser() : void


    0000: [0] 56 f2 10 ................... loadString <__ejs:CONTENT:ejs__> 
    0003: [1] 57 ......................... loadThis 
    0004: [2] b3 a4 10 c0 10 ............. putObjName <ContentMarker> <[TemplateParser,private]> 
    0009: [0] 7e e2 01 ................... getGlobalSlot <slot: 113> 
    0012: [1] 89 ......................... new 
    0013: [1] 57 ......................... loadThis 
    0014: [2] 7b a4 10 c0 10 ............. getObjName <ContentMarker> <[TemplateParser,private]> 
    0019: [2] 20 02 ...................... callConstructor <argc: 1> 
    0021: [1] 57 ......................... loadThis 
    0022: [2] b3 ac 12 c0 10 ............. putObjName <ContentPattern> <[TemplateParser,private]> 
    0027: [0] 44 ......................... load0 
    0028: [1] 57 ......................... loadThis 
    0029: [2] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0034: [0] 44 ......................... load0 
    0035: [1] 57 ......................... loadThis 
    0036: [2] b3 d2 14 c0 10 ............. putObjName <lineNumber> <[TemplateParser,private]> 
    0041: [0] 56 c0 16 ................... loadString <require ejs.web

exports.app = function (request: Request) {
> 
    0044: [1] 33 22 bc 9d 02 bc 17 ....... debug 

    # ejs.es:18270                          "    View(request).render(function(request: Request) {\n"

    0051: [1] 56 c8 18 ................... loadString <    View(request).render(function(request: Request) {
> 
    0054: [2] 00 ......................... add 
    0055: [1] 33 22 ba 9d 02 e8 14 ....... debug 

    # ejs.es:18269                      private const Header = "require ejs.web\n\nexports.app = function (request: Request) {\n" + 

    0062: [1] 57 ......................... loadThis 
    0063: [2] b3 b2 16 c0 10 ............. putObjName <Header> <[TemplateParser,private]> 
    0068: [0] 56 9a 1a ................... loadString <
})
}
> 
    0071: [1] 57 ......................... loadThis 
    0072: [2] b3 8c 1a c0 10 ............. putObjName <Footer> <[TemplateParser,private]> 
    0077: [0] 56 a8 1b ................... loadString <require ejs.web
> 
    0080: [1] 57 ......................... loadThis 
    0081: [2] b3 94 1b c0 10 ............. putObjName <MvcHeader> <[TemplateParser,private]> 
    0086: [0] be ......................... return 
    

FUNCTION:   [TemplateParser-27]  public const function build(script: String, options: Object) : String

     ARG:   [arg-00]   private script : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 22 d6 9d 02 e2 1c ....... debug 

    # ejs.es:18283                          Header + parse(script, options) + Footer

    0016: [0] 57 ......................... loadThis 
    0017: [1] 7b b2 16 c0 10 ............. getObjName <Header> <[TemplateParser,private]> 
    0022: [1] 5b ......................... getLocalSlot0 
    0023: [2] 5c ......................... getLocalSlot1 
    0024: [3] 1f cc 1d d0 05 04 .......... callScopedName <parse> <public> <argc: 2> 
    0030: [1] 93 ......................... pushResult 
    0031: [2] 00 ......................... add 
    0032: [1] 57 ......................... loadThis 
    0033: [2] 7b 8c 1a c0 10 ............. getObjName <Footer> <[TemplateParser,private]> 
    0038: [2] 00 ......................... add 
    0039: [1] bf ......................... returnValue 
    
VARIABLE:   [script-00]  private var script : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [TemplateParser-28]  public const function buildView(name: String, script: String, options: Object) : String

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private script : String
     ARG:   [arg-02]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 96 ......................... putLocalSlot2 
    0009: [0] 33 22 ee 9d 02 a8 1f ....... debug 

    # ejs.es:18295                          return MvcHeader + "public dynamic class " + name + "View extends View {\n\n" +

    0016: [0] 33 22 f8 9d 02 e0 20 ....... debug 

    # ejs.es:18300                              parse(script, options) + "\n    }\n}\n"

    0023: [0] 33 22 f6 9d 02 d0 21 ....... debug 

    # ejs.es:18299                              "    public override function render(request: Request) {\n" + 

    0030: [0] 33 22 f4 9d 02 ee 22 ....... debug 

    # ejs.es:18298                              "    }\n\n" + 

    0037: [0] 33 22 f2 9d 02 ac 23 ....... debug 

    # ejs.es:18297                              "        super(request)\n" +

    0044: [0] 33 22 f0 9d 02 86 24 ....... debug 

    # ejs.es:18296                              "    function " + name + "View(request: Request) {\n" +

    0051: [0] 33 22 ee 9d 02 a8 1f ....... debug 

    # ejs.es:18295                          return MvcHeader + "public dynamic class " + name + "View extends View {\n\n" +

    0058: [0] 57 ......................... loadThis 
    0059: [1] 7b 94 1b c0 10 ............. getObjName <MvcHeader> <[TemplateParser,private]> 
    0064: [1] 56 96 25 ................... loadString <public dynamic class > 
    0067: [2] 00 ......................... add 
    0068: [1] 5b ......................... getLocalSlot0 
    0069: [2] 00 ......................... add 
    0070: [1] 56 c2 25 ................... loadString <View extends View {

> 
    0073: [2] 00 ......................... add 
    0074: [1] 33 22 f0 9d 02 86 24 ....... debug 

    # ejs.es:18296                              "    function " + name + "View(request: Request) {\n" +

    0081: [1] 56 ee 25 ................... loadString <    function > 
    0084: [2] 00 ......................... add 
    0085: [1] 5b ......................... getLocalSlot0 
    0086: [2] 00 ......................... add 
    0087: [1] 56 8a 26 ................... loadString <View(request: Request) {
> 
    0090: [2] 00 ......................... add 
    0091: [1] 33 22 f2 9d 02 ac 23 ....... debug 

    # ejs.es:18297                              "        super(request)\n" +

    0098: [1] 56 be 26 ................... loadString <        super(request)
> 
    0101: [2] 00 ......................... add 
    0102: [1] 33 22 f4 9d 02 ee 22 ....... debug 

    # ejs.es:18298                              "    }\n\n" + 

    0109: [1] 56 ee 26 ................... loadString <    }

> 
    0112: [2] 00 ......................... add 
    0113: [1] 33 22 f6 9d 02 d0 21 ....... debug 

    # ejs.es:18299                              "    public override function render(request: Request) {\n" + 

    0120: [1] 56 fe 26 ................... loadString <    public override function render(request: Request) {
> 
    0123: [2] 00 ......................... add 
    0124: [1] 33 22 f8 9d 02 e0 20 ....... debug 

    # ejs.es:18300                              parse(script, options) + "\n    }\n}\n"

    0131: [1] 5c ......................... getLocalSlot1 
    0132: [2] 5d ......................... getLocalSlot2 
    0133: [3] 1f cc 1d d0 05 04 .......... callScopedName <parse> <public> <argc: 2> 
    0139: [1] 93 ......................... pushResult 
    0140: [2] 00 ......................... add 
    0141: [1] 56 f0 27 ................... loadString <
    }
}
> 
    0144: [2] 00 ......................... add 
    0145: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [script-01]  private var script : String
VARIABLE:   [options-02]  private var options : Object

FUNCTION:   [TemplateParser-29]  public const function parse(script: String, options: Object) : String

     ARG:   [arg-00]   private script : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var token : ByteArray
   LOCAL:   [local-03] var out : ByteArray
   LOCAL:   [local-04] var dir : Path
   LOCAL:   [local-05] var tid : Number
   LOCAL:   [local-06] var layoutPage : Path
   LOCAL:   [local-07] var args : Array
   LOCAL:   [local-08] var cmd : String
   LOCAL:   [local-09] var path
   LOCAL:   [local-10] var incPath
   LOCAL:   [local-11] var inc : TemplateParser
   LOCAL:   [local-12] var layoutOptions
   LOCAL:   [local-13] var layoutText : String

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 22 92 9e 02 ca 29 ....... debug 

    # ejs.es:18313                          var token: ByteArray = new ByteArray

    0016: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0018: [1] 89 ......................... new 
    0019: [1] 20 00 ...................... callConstructor <argc: 0> 
    0021: [1] 96 ......................... putLocalSlot2 
    0022: [0] 33 22 94 9e 02 ac 2a ....... debug 

    # ejs.es:18314                          var out: ByteArray = new ByteArray

    0029: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0031: [1] 89 ......................... new 
    0032: [1] 20 00 ...................... callConstructor <argc: 0> 
    0034: [1] 97 ......................... putLocalSlot3 
    0035: [0] 33 22 96 9e 02 92 2b ....... debug 

    # ejs.es:18315                          var dir: Path = options.dir || Path(".")

    0042: [0] 5c ......................... getLocalSlot1 
    0043: [1] 7b c8 05 94 0c ............. getObjName <dir> <> 
    0048: [1] 39 ......................... dup 
    0049: [2] 14 09 ...................... branchTrue8 <addr: 60> 
    0051: [1] 90 ......................... pop 
    0052: [0] 56 fc 2b ................... loadString <.> 
    0055: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0059: [0] 93 ......................... pushResult 
    0060: [1] 98 ......................... putLocalSlot4 
    0061: [0] 33 22 98 9e 02 80 2c ....... debug 

    # ejs.es:18316                          var tid: Number

    0068: [0] 33 22 9a 9e 02 c0 2c ....... debug 

    # ejs.es:18317                          var layoutPage: Path

    0075: [0] 33 22 9e 9e 02 98 2d ....... debug 

    # ejs.es:18319                          if (options.layout) {

    0082: [0] 5c ......................... getLocalSlot1 
    0083: [1] 7b dc 2d 94 0c ............. getObjName <layout> <> 
    0088: [1] 13 15 ...................... branchFalse8 <addr: 111> 
    0090: [0] 33 22 a0 9e 02 ea 2d ....... debug 

    # ejs.es:18320                              layoutPage = Path(options.layout)

    0097: [0] 5c ......................... getLocalSlot1 
    0098: [1] 7b dc 2d 94 0c ............. getObjName <layout> <> 
    0103: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0107: [0] 93 ......................... pushResult 
    0108: [1] 9a ......................... putLocalSlot6 
    0109: [0] 3e 00 ...................... goto8 <addr: 111> 
    0111: [0] 33 22 a2 9e 02 ce 2e ....... debug 

    # ejs.es:18321                          }

    0118: [0] 33 22 a6 9e 02 ea 2e ....... debug 

    # ejs.es:18323                          this.script = script

    0125: [0] 5b ......................... getLocalSlot0 
    0126: [1] 57 ......................... loadThis 
    0127: [2] b3 9e 13 c0 10 ............. putObjName <script> <[TemplateParser,private]> 
    0132: [0] 33 22 a8 9e 02 ac 2f ....... debug 

    # ejs.es:18324                          while ((tid = getToken(token)) != Token.Eof) {

    0139: [0] 5d ......................... getLocalSlot2 
    0140: [1] 1f a2 30 34 02 ............. callScopedName <getToken> <internal-ed363076473b51ca685af450cc662b39-0> <argc: 1> 
    0145: [0] 93 ......................... pushResult 
    0146: [1] 39 ......................... dup 
    0147: [2] 99 ......................... putLocalSlot5 
    0148: [1] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0151: [2] 7b b4 30 d0 05 ............. getObjName <Eof> <public> 
    0156: [2] 2c ......................... compareNe 
    0157: [1] 07 92 0c f7 f7 ............. branchFalse <addr: 939> 
    0162: [0] 33 22 ae 9e 02 bc 30 ....... debug 

    # ejs.es:18327                              switch (tid) {

    0169: [0] 60 ......................... getLocalSlot5 
    0170: [1] 33 22 b0 9e 02 fa 30 ....... debug 

    # ejs.es:18328                              case Token.Literal:

    0177: [1] 39 ......................... dup 
    0178: [2] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0181: [3] 7b c2 31 d0 05 ............. getObjName <Literal> <public> 
    0186: [3] 26 ......................... compareStrictlyEq 
    0187: [2] 13 25 ...................... branchFalse8 <addr: 226> 
    0189: [1] 33 22 b2 9e 02 d2 31 ....... debug 

    # ejs.es:18329                                  out.write("\n        write(\"" + token + "\");")

    0196: [1] 5e ......................... getLocalSlot3 
    0197: [2] 56 dc 32 ................... loadString <
        write("> 
    0200: [3] 5d ......................... getLocalSlot2 
    0201: [4] 00 ......................... add 
    0202: [3] 56 fe 32 ................... loadString <");> 
    0205: [4] 00 ......................... add 
    0206: [3] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    0212: [1] 33 22 b4 9e 02 92 33 ....... debug 

    # ejs.es:18330                                  break

    0219: [1] 3d 8a 0b f7 f7 ............. goto <addr: 933> 
    0224: [1] 3e 13 ...................... goto8 <addr: 245> 
    0226: [1] 33 22 b8 9e 02 c6 33 ....... debug 

    # ejs.es:18332                              case Token.Var:

    0233: [1] 39 ......................... dup 
    0234: [2] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0237: [3] 7b 86 34 d0 05 ............. getObjName <Var> <public> 
    0242: [3] 26 ......................... compareStrictlyEq 
    0243: [2] 13 23 ...................... branchFalse8 <addr: 280> 
    0245: [1] 33 22 c2 9e 02 8e 34 ....... debug 

    # ejs.es:18337                                  out.write("\n        write(\"\" + ", token, ");\n")

    0252: [1] 5e ......................... getLocalSlot3 
    0253: [2] 56 9e 35 ................... loadString <
        write("" + > 
    0256: [3] 5d ......................... getLocalSlot2 
    0257: [4] 56 c8 35 ................... loadString <);
> 
    0260: [5] 1e 86 33 d0 05 06 .......... callObjName <write> <public> <argc: 3> 
    0266: [1] 33 22 c4 9e 02 92 33 ....... debug 

    # ejs.es:18338                                  break

    0273: [1] 3d 9e 0a f7 f7 ............. goto <addr: 933> 
    0278: [1] 3e 13 ...................... goto8 <addr: 299> 
    0280: [1] 33 22 c8 9e 02 d0 35 ....... debug 

    # ejs.es:18340                              case Token.Equals:

    0287: [1] 39 ......................... dup 
    0288: [2] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0291: [3] 7b 96 36 d0 05 ............. getObjName <Equals> <public> 
    0296: [3] 26 ......................... compareStrictlyEq 
    0297: [2] 13 23 ...................... branchFalse8 <addr: 334> 
    0299: [1] 33 22 ca 9e 02 a4 36 ....... debug 

    # ejs.es:18341                                  out.write("\n        write(\"\" + (", token, "));\n")

    0306: [1] 5e ......................... getLocalSlot3 
    0307: [2] 56 b8 37 ................... loadString <
        write("" + (> 
    0310: [3] 5d ......................... getLocalSlot2 
    0311: [4] 56 e4 37 ................... loadString <));
> 
    0314: [5] 1e 86 33 d0 05 06 .......... callObjName <write> <public> <argc: 3> 
    0320: [1] 33 22 cc 9e 02 92 33 ....... debug 

    # ejs.es:18342                                  break

    0327: [1] 3d b2 09 f7 f7 ............. goto <addr: 933> 
    0332: [1] 3e 13 ...................... goto8 <addr: 353> 
    0334: [1] 33 22 d0 9e 02 ee 37 ....... debug 

    # ejs.es:18344                              case Token.EjsTag:

    0341: [1] 39 ......................... dup 
    0342: [2] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0345: [3] 7b b4 38 d0 05 ............. getObjName <EjsTag> <public> 
    0350: [3] 26 ......................... compareStrictlyEq 
    0351: [2] 13 24 ...................... branchFalse8 <addr: 389> 
    0353: [1] 33 22 da 9e 02 c2 38 ....... debug 

    # ejs.es:18349                                  out.write(token.toString())

    0360: [1] 5e ......................... getLocalSlot3 
    0361: [2] 5d ......................... getLocalSlot2 
    0362: [3] 1e 84 0e d0 05 00 .......... callObjName <toString> <public> <argc: 0> 
    0368: [2] 93 ......................... pushResult 
    0369: [3] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    0375: [1] 33 22 dc 9e 02 92 33 ....... debug 

    # ejs.es:18350                                  break

    0382: [1] 3d c4 08 f7 f7 ............. goto <addr: 933> 
    0387: [1] 3e 16 ...................... goto8 <addr: 411> 
    0389: [1] 33 22 e0 9e 02 a2 39 ....... debug 

    # ejs.es:18352                              case Token.Control:

    0396: [1] 39 ......................... dup 
    0397: [2] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0400: [3] 7b ea 39 d0 05 ............. getObjName <Control> <public> 
    0405: [3] 26 ......................... compareStrictlyEq 
    0406: [2] 07 c2 07 f7 f7 ............. branchFalse <addr: 892> 
    0411: [1] 33 22 e2 9e 02 9a 3a ....... debug 

    # ejs.es:18353                                  let args: Array = token.toString().split(/\s/g)

    0418: [1] 5d ......................... getLocalSlot2 
    0419: [2] 1e 84 0e d0 05 00 .......... callObjName <toString> <public> <argc: 0> 
    0425: [1] 93 ......................... pushResult 
    0426: [2] 55 a2 3b ................... loadRegexp </\s/g> 
    0429: [3] 1e ae 3b 00 02 ............. callObjName <split> <> <argc: 1> 
    0434: [1] 93 ......................... pushResult 
    0435: [2] 9b ......................... putLocalSlot7 
    0436: [1] 33 22 e4 9e 02 ba 3b ....... debug 

    # ejs.es:18354                                  let cmd: String = args[0]

    0443: [1] 62 ......................... getLocalSlot7 
    0444: [2] 56 94 0c ................... loadString <> 
    0447: [3] 44 ......................... load0 
    0448: [4] 7c ......................... getObjNameExpr 
    0449: [2] 9c ......................... putLocalSlot8 
    0450: [1] 33 22 e8 9e 02 9e 3c ....... debug 

    # ejs.es:18356                                  switch (cmd) {

    0457: [1] 63 ......................... getLocalSlot8 
    0458: [2] 33 22 ea 9e 02 e4 3c ....... debug 

    # ejs.es:18357                                  case "include":

    0465: [2] 39 ......................... dup 
    0466: [3] 56 ac 3d ................... loadString <include> 
    0469: [4] 26 ......................... compareStrictlyEq 
    0470: [3] 13 6f ...................... branchFalse8 <addr: 583> 
    0472: [2] 33 22 ec 9e 02 bc 3d ....... debug 

    # ejs.es:18358                                      let path = args[1].trim("'").trim('"')

    0479: [2] 62 ......................... getLocalSlot7 
    0480: [3] 56 94 0c ................... loadString <> 
    0483: [4] 45 ......................... load1 
    0484: [5] 7c ......................... getObjNameExpr 
    0485: [3] 56 ba 3e ................... loadString <'> 
    0488: [4] 1e be 3e 00 02 ............. callObjName <trim> <> <argc: 1> 
    0493: [2] 93 ......................... pushResult 
    0494: [3] 56 c8 3e ................... loadString <"> 
    0497: [4] 1e be 3e 00 02 ............. callObjName <trim> <> <argc: 1> 
    0502: [2] 93 ......................... pushResult 
    0503: [3] 9d ......................... putLocalSlot9 
    0504: [2] 33 22 ee 9e 02 cc 3e ....... debug 

    # ejs.es:18359                                      let incPath = dir.join(path)

    0511: [2] 5f ......................... getLocalSlot4 
    0512: [3] 64 ......................... getLocalSlot9 
    0513: [4] 1e fc 05 d0 05 02 .......... callObjName <join> <public> <argc: 1> 
    0519: [2] 93 ......................... pushResult 
    0520: [3] b8 14 ...................... putLocalSlot <slot: 10> 
    0522: [2] 33 22 f6 9e 02 c6 3f ....... debug 

    # ejs.es:18363                                      let inc: TemplateParser = new TemplateParser

    0529: [2] 7e ee 02 ................... getGlobalSlot <slot: 183> 
    0532: [3] 89 ......................... new 
    0533: [3] 20 00 ...................... callConstructor <argc: 0> 
    0535: [3] b8 16 ...................... putLocalSlot <slot: 11> 
    0537: [2] 33 22 f8 9e 02 d8 40 ....... debug 

    # ejs.es:18364                                      out.write(inc.parse(incPath.readString(), options))

    0544: [2] 5e ......................... getLocalSlot3 
    0545: [3] 7f 16 ...................... getLocalSlot <slot: 11> 
    0547: [4] 7f 14 ...................... getLocalSlot <slot: 10> 
    0549: [5] 1e 90 09 00 00 ............. callObjName <readString> <> <argc: 0> 
    0554: [4] 93 ......................... pushResult 
    0555: [5] 5c ......................... getLocalSlot1 
    0556: [6] 1e cc 1d d0 05 04 .......... callObjName <parse> <public> <argc: 2> 
    0562: [3] 93 ......................... pushResult 
    0563: [4] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    0569: [2] 33 22 fa 9e 02 f0 41 ....... debug 

    # ejs.es:18365                                      break

    0576: [2] 3d d4 04 f7 f7 ............. goto <addr: 879> 
    0581: [2] 3e 11 ...................... goto8 <addr: 600> 
    0583: [2] 33 22 fe 9e 02 ac 42 ....... debug 

    # ejs.es:18367                                  case "layout":

    0590: [2] 39 ......................... dup 
    0591: [3] 56 dc 2d ................... loadString <layout> 
    0594: [4] 26 ......................... compareStrictlyEq 
    0595: [3] 07 aa 03 f7 f7 ............. branchFalse <addr: 813> 
    0600: [2] 33 22 80 9f 02 f2 42 ....... debug 

    # ejs.es:18368                                      let path = args[1]

    0607: [2] 62 ......................... getLocalSlot7 
    0608: [3] 56 94 0c ................... loadString <> 
    0611: [4] 45 ......................... load1 
    0612: [5] 7c ......................... getObjNameExpr 
    0613: [3] 9d ......................... putLocalSlot9 
    0614: [2] 33 22 82 9f 02 c8 43 ....... debug 

    # ejs.es:18369                                      if (path == "" || path == '""') {

    0621: [2] 64 ......................... getLocalSlot9 
    0622: [3] 56 94 0c ................... loadString <> 
    0625: [4] 25 ......................... compareEq 
    0626: [3] 39 ......................... dup 
    0627: [4] 14 06 ...................... branchTrue8 <addr: 635> 
    0629: [3] 90 ......................... pop 
    0630: [2] 64 ......................... getLocalSlot9 
    0631: [3] 56 bc 44 ................... loadString <""> 
    0634: [4] 25 ......................... compareEq 
    0635: [3] 13 10 ...................... branchFalse8 <addr: 653> 
    0637: [2] 33 22 84 9f 02 c2 44 ....... debug 

    # ejs.es:18370                                          layoutPage = undefined

    0644: [2] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0647: [3] 9a ......................... putLocalSlot6 
    0648: [2] 3d a4 02 f7 f7 ............. goto <addr: 799> 
    0653: [2] 33 22 86 9f 02 a8 45 ....... debug 

    # ejs.es:18371                                      } else {

    0660: [2] 33 22 88 9f 02 ea 45 ....... debug 

    # ejs.es:18372                                          path = args[1].trim("'").trim('"').trim('.ejs') + ".ejs"

    0667: [2] 62 ......................... getLocalSlot7 
    0668: [3] 56 94 0c ................... loadString <> 
    0671: [4] 45 ......................... load1 
    0672: [5] 7c ......................... getObjNameExpr 
    0673: [3] 56 ba 3e ................... loadString <'> 
    0676: [4] 1e be 3e 00 02 ............. callObjName <trim> <> <argc: 1> 
    0681: [2] 93 ......................... pushResult 
    0682: [3] 56 c8 3e ................... loadString <"> 
    0685: [4] 1e be 3e 00 02 ............. callObjName <trim> <> <argc: 1> 
    0690: [2] 93 ......................... pushResult 
    0691: [3] 56 94 47 ................... loadString <.ejs> 
    0694: [4] 1e be 3e 00 02 ............. callObjName <trim> <> <argc: 1> 
    0699: [2] 93 ......................... pushResult 
    0700: [3] 56 94 47 ................... loadString <.ejs> 
    0703: [4] 00 ......................... add 
    0704: [3] 9d ......................... putLocalSlot9 
    0705: [2] 33 22 8a 9f 02 9e 47 ....... debug 

    # ejs.es:18373                                          if (!options.layouts) {

    0712: [2] 5c ......................... getLocalSlot1 
    0713: [3] 7b 86 48 94 0c ............. getObjName <layouts> <> 
    0718: [3] 86 ......................... logicalNot 
    0719: [3] 13 0d ...................... branchFalse8 <addr: 734> 
    0721: [2] 33 22 8c 9f 02 96 48 ....... debug 

    # ejs.es:18374                                              throw "Location of layout page not defined in options"

    0728: [2] 56 c4 49 ................... loadString <Location of layout page not defined in options> 
    0731: [3] c6 ......................... throw 
    0732: [3] 3e 00 ...................... goto8 <addr: 734> 
    0734: [3] 33 22 8e 9f 02 a2 4a ....... debug 

    # ejs.es:18375                                          }

    0741: [3] 33 22 90 9f 02 de 4a ....... debug 

    # ejs.es:18376                                          layoutPage = Path(options.layouts).join(path)

    0748: [3] 5c ......................... getLocalSlot1 
    0749: [4] 7b 86 48 94 0c ............. getObjName <layouts> <> 
    0754: [4] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0758: [3] 93 ......................... pushResult 
    0759: [4] 64 ......................... getLocalSlot9 
    0760: [5] 1e fc 05 d0 05 02 .......... callObjName <join> <public> <argc: 1> 
    0766: [3] 93 ......................... pushResult 
    0767: [4] 9a ......................... putLocalSlot6 
    0768: [3] 33 22 92 9f 02 f2 4b ....... debug 

    # ejs.es:18377                                          if (!layoutPage.exists) {

    0775: [3] 61 ......................... getLocalSlot6 
    0776: [4] 7b de 4c d0 05 ............. getObjName <exists> <public> 
    0781: [4] 86 ......................... logicalNot 
    0782: [4] 13 0f ...................... branchFalse8 <addr: 799> 
    0784: [3] 33 22 94 9f 02 ec 4c ....... debug 

    # ejs.es:18378                                              throw "Can't find layout page " + layoutPage

    0791: [3] 56 86 4e ................... loadString <Can't find layout page > 
    0794: [4] 61 ......................... getLocalSlot6 
    0795: [5] 00 ......................... add 
    0796: [4] c6 ......................... throw 
    0797: [4] 3e 00 ...................... goto8 <addr: 799> 
    0799: [4] 33 22 9a 9f 02 f0 41 ....... debug 

    # ejs.es:18381                                      break

    0806: [4] 3d 88 01 f7 f7 ............. goto <addr: 879> 
    0811: [4] 3e 0e ...................... goto8 <addr: 827> 
    0813: [4] 33 22 9e 9f 02 b6 4e ....... debug 

    # ejs.es:18383                                  case "content":

    0820: [4] 39 ......................... dup 
    0821: [5] 56 fe 4e ................... loadString <content> 
    0824: [6] 26 ......................... compareStrictlyEq 
    0825: [5] 13 20 ...................... branchFalse8 <addr: 859> 
    0827: [4] 33 22 a0 9f 02 8e 4f ....... debug 

    # ejs.es:18384                                      out.write(ContentMarker)

    0834: [4] 5e ......................... getLocalSlot3 
    0835: [5] 57 ......................... loadThis 
    0836: [6] 7b a4 10 c0 10 ............. getObjName <ContentMarker> <[TemplateParser,private]> 
    0841: [6] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    0847: [4] 33 22 a2 9f 02 f0 41 ....... debug 

    # ejs.es:18385                                      break

    0854: [4] 3d 28 f7 f7 f7 ............. goto <addr: 879> 
    0859: [4] 33 22 a6 9f 02 f0 4f ....... debug 

    # ejs.es:18387                                  default:

    0866: [4] 33 22 a8 9f 02 aa 50 ....... debug 

    # ejs.es:18388                                      throw "Bad control directive: " + cmd

    0873: [4] 56 a6 51 ................... loadString <Bad control directive: > 
    0876: [5] 63 ......................... getLocalSlot8 
    0877: [6] 00 ......................... add 
    0878: [5] c6 ......................... throw 
    0879: [5] 90 ......................... pop 
    0880: [4] 33 22 ac 9f 02 92 33 ....... debug 

    # ejs.es:18390                                  break

    0887: [4] 3d 52 f7 f7 f7 ............. goto <addr: 933> 
    0892: [4] 33 22 b0 9f 02 d6 51 ....... debug 

    # ejs.es:18392                              default:

    0899: [4] 3e 13 ...................... goto8 <addr: 920> 
    0901: [4] 33 22 b2 9f 02 88 52 ....... debug 

    # ejs.es:18393                              case Token.Err:

    0908: [4] 39 ......................... dup 
    0909: [5] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0912: [6] 7b c8 52 d0 05 ............. getObjName <Err> <public> 
    0917: [6] 26 ......................... compareStrictlyEq 
    0918: [5] 13 0d ...................... branchFalse8 <addr: 933> 
    0920: [4] 33 22 b6 9f 02 d0 52 ....... debug 

    # ejs.es:18395                                  throw "Bad input token: " + token

    0927: [4] 56 bc 53 ................... loadString <Bad input token: > 
    0930: [5] 5d ......................... getLocalSlot2 
    0931: [6] 00 ......................... add 
    0932: [5] c6 ......................... throw 
    0933: [5] 90 ......................... pop 
    0934: [4] 3d c1 0c f7 f7 ............. goto <addr: 139> 
    0939: [4] 33 22 c0 9f 02 e0 53 ....... debug 

    # ejs.es:18400                          if (layoutPage && layoutPage != options.currentLayout) {

    0946: [4] 61 ......................... getLocalSlot6 
    0947: [5] 39 ......................... dup 
    0948: [6] 13 09 ...................... branchFalse8 <addr: 959> 
    0950: [5] 90 ......................... pop 
    0951: [4] 61 ......................... getLocalSlot6 
    0952: [5] 5c ......................... getLocalSlot1 
    0953: [6] 7b ea 54 94 0c ............. getObjName <currentLayout> <> 
    0958: [6] 2c ......................... compareNe 
    0959: [5] 13 62 ...................... branchFalse8 <addr: 1059> 
    0961: [4] 33 22 c2 9f 02 ba 55 ....... debug 

    # ejs.es:18401                              let layoutOptions = blend(options.clone(), { currentLayout: layoutPage })

    0968: [4] 5c ......................... getLocalSlot1 
    0969: [5] 1e 88 0c d0 05 00 .......... callObjName <clone> <public> <argc: 0> 
    0975: [4] 93 ......................... pushResult 
    0976: [5] 56 00 ...................... loadString <> 
    0978: [6] 56 ea 54 ................... loadString <currentLayout> 
    0981: [7] 61 ......................... getLocalSlot6 
    0982: [8] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0987: [6] 17 9c 01 04 ................ callGlobalSlot <slot: 78> <argc: 2> 
    0991: [4] 93 ......................... pushResult 
    0992: [5] b8 18 ...................... putLocalSlot <slot: 12> 
    0994: [4] 33 22 c4 9f 02 ee 56 ....... debug 

    # ejs.es:18402                              let layoutText: String = new TemplateParser().parse(layoutPage.readString(), layoutOptions)

    1001: [4] 7e ee 02 ................... getGlobalSlot <slot: 183> 
    1004: [5] 89 ......................... new 
    1005: [5] 20 00 ...................... callConstructor <argc: 0> 
    1007: [5] 61 ......................... getLocalSlot6 
    1008: [6] 1e 90 09 d0 05 00 .......... callObjName <readString> <public> <argc: 0> 
    1014: [5] 93 ......................... pushResult 
    1015: [6] 7f 18 ...................... getLocalSlot <slot: 12> 
    1017: [7] 1e cc 1d d0 05 04 .......... callObjName <parse> <public> <argc: 2> 
    1023: [4] 93 ......................... pushResult 
    1024: [5] b8 1a ...................... putLocalSlot <slot: 13> 
    1026: [4] 33 22 c6 9f 02 dc 58 ....... debug 

    # ejs.es:18403                              return layoutText.replace(ContentPattern, out.toString())

    1033: [4] 7f 1a ...................... getLocalSlot <slot: 13> 
    1035: [5] 57 ......................... loadThis 
    1036: [6] 7b ac 12 c0 10 ............. getObjName <ContentPattern> <[TemplateParser,private]> 
    1041: [6] 5e ......................... getLocalSlot3 
    1042: [7] 1e 84 0e d0 05 00 .......... callObjName <toString> <public> <argc: 0> 
    1048: [6] 93 ......................... pushResult 
    1049: [7] 1e f0 59 d0 05 04 .......... callObjName <replace> <public> <argc: 2> 
    1055: [4] 93 ......................... pushResult 
    1056: [5] bf ......................... returnValue 
    1057: [0] 3e 00 ...................... goto8 <addr: 1059> 
    1059: [0] 33 22 ca 9f 02 80 5a ....... debug 

    # ejs.es:18405                          return out.toString()

    1066: [0] 5e ......................... getLocalSlot3 
    1067: [1] 1e 84 0e d0 05 00 .......... callObjName <toString> <public> <argc: 0> 
    1073: [0] 93 ......................... pushResult 
    1074: [1] bf ......................... returnValue 
    
VARIABLE:   [script-00]  private var script : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [token-02]  private var token : ByteArray
VARIABLE:   [out-03]  private var out : ByteArray
VARIABLE:   [dir-04]  private var dir : Path
VARIABLE:   [tid-05]  private var tid : Number
VARIABLE:   [layoutPage-06]  private var layoutPage : Path
VARIABLE:   [args-07]  -hoisted-7 var args : Array
VARIABLE:   [cmd-08]  -hoisted-7 var cmd : String
VARIABLE:   [path-09]  -hoisted-7 var path
VARIABLE:   [incPath-10]  -hoisted-7 var incPath
VARIABLE:   [inc-11]  -hoisted-7 var inc : TemplateParser
VARIABLE:   [layoutOptions-12]  -hoisted-12 var layoutOptions
VARIABLE:   [layoutText-13]  -hoisted-12 var layoutText : String

FUNCTION:   [TemplateParser-30]  internal-ed363076473b51ca685af450cc662b39-0 const function getToken(token: ByteArray) : Number

     ARG:   [arg-00]   private token : ByteArray
   LOCAL:   [local-01] var tid
   LOCAL:   [local-02] var c

    0000: [0] 33 22 d8 9f 02 f8 5b ....... debug 

    # ejs.es:18412                          var tid = Token.Literal

    0007: [0] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0010: [1] 7b c2 31 d0 05 ............. getObjName <Literal> <public> 
    0015: [1] 95 ......................... putLocalSlot1 
    0016: [0] 33 22 da 9f 02 c0 5c ....... debug 

    # ejs.es:18413                          token.flush()

    0023: [0] 5b ......................... getLocalSlot0 
    0024: [1] 1e f4 5c d0 05 00 .......... callObjName <flush> <public> <argc: 0> 
    0030: [0] 33 22 dc 9f 02 80 5d ....... debug 

    # ejs.es:18414                          var c

    0037: [0] 33 22 de 9f 02 a8 5d ....... debug 

    # ejs.es:18415                          while (pos < script.length) {

    0044: [0] 57 ......................... loadThis 
    0045: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0050: [1] 57 ......................... loadThis 
    0051: [2] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0056: [2] 7b d8 0b d0 05 ............. getObjName <length> <public> 
    0061: [2] 2b ......................... compareLt 
    0062: [1] 07 a8 18 f7 f7 ............. branchFalse <addr: 1623> 
    0067: [0] 33 22 e0 9f 02 fc 5d ....... debug 

    # ejs.es:18416                              c = script[pos++]

    0074: [0] 57 ......................... loadThis 
    0075: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0080: [1] 56 94 0c ................... loadString <> 
    0083: [2] 57 ......................... loadThis 
    0084: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0089: [3] 39 ......................... dup 
    0090: [4] 3f 01 ...................... inc <1> 
    0092: [4] 57 ......................... loadThis 
    0093: [5] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0098: [3] 7c ......................... getObjNameExpr 
    0099: [1] 96 ......................... putLocalSlot2 
    0100: [0] 33 22 e2 9f 02 c0 5e ....... debug 

    # ejs.es:18417                              switch (c) {

    0107: [0] 5d ......................... getLocalSlot2 
    0108: [1] 33 22 e4 9f 02 fa 5e ....... debug 

    # ejs.es:18418                              case '<':

    0115: [1] 39 ......................... dup 
    0116: [2] 56 ae 5f ................... loadString <<> 
    0119: [3] 26 ......................... compareStrictlyEq 
    0120: [2] 07 e8 0d f7 f7 ............. branchFalse <addr: 1009> 
    0125: [1] 33 22 e6 9f 02 b2 5f ....... debug 

    # ejs.es:18419                                  if (script[pos] == '%' && (pos < 2 || script[pos - 2] != '\\')) {

    0132: [1] 57 ......................... loadThis 
    0133: [2] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0138: [2] 56 94 0c ................... loadString <> 
    0141: [3] 57 ......................... loadThis 
    0142: [4] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0147: [4] 7c ......................... getObjNameExpr 
    0148: [2] 56 de 60 ................... loadString <%> 
    0151: [3] 25 ......................... compareEq 
    0152: [2] 39 ......................... dup 
    0153: [3] 13 23 ...................... branchFalse8 <addr: 190> 
    0155: [2] 90 ......................... pop 
    0156: [1] 57 ......................... loadThis 
    0157: [2] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0162: [2] 46 ......................... load2 
    0163: [3] 2b ......................... compareLt 
    0164: [2] 39 ......................... dup 
    0165: [3] 14 17 ...................... branchTrue8 <addr: 190> 
    0167: [2] 90 ......................... pop 
    0168: [1] 57 ......................... loadThis 
    0169: [2] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0174: [2] 56 94 0c ................... loadString <> 
    0177: [3] 57 ......................... loadThis 
    0178: [4] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0183: [4] 46 ......................... load2 
    0184: [5] c3 ......................... sub 
    0185: [4] 7c ......................... getObjNameExpr 
    0186: [2] 56 e2 60 ................... loadString <\> 
    0189: [3] 2c ......................... compareNe 
    0190: [2] 07 94 0c f7 f7 ............. branchFalse <addr: 973> 
    0195: [1] 33 22 e8 9f 02 e6 60 ....... debug 

    # ejs.es:18420                                      if (token.available > 0) {

    0202: [1] 5b ......................... getLocalSlot0 
    0203: [2] 7b cc 61 d0 05 ............. getObjName <available> <public> 
    0208: [2] 44 ......................... load0 
    0209: [3] 29 ......................... compareGt 
    0210: [2] 13 29 ...................... branchFalse8 <addr: 253> 
    0212: [1] 33 22 ea 9f 02 e0 61 ....... debug 

    # ejs.es:18421                                          pos--

    0219: [1] 57 ......................... loadThis 
    0220: [2] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0225: [2] 39 ......................... dup 
    0226: [3] 3f ff ...................... inc <255> 
    0228: [3] 57 ......................... loadThis 
    0229: [4] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0234: [2] 90 ......................... pop 
    0235: [1] 33 22 ec 9f 02 a4 62 ....... debug 

    # ejs.es:18422                                          return Token.Literal

    0242: [1] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0245: [2] 7b c2 31 d0 05 ............. getObjName <Literal> <public> 
    0250: [2] bf ......................... returnValue 
    0251: [0] 3e 00 ...................... goto8 <addr: 253> 
    0253: [0] 33 22 ee 9f 02 86 63 ....... debug 

    # ejs.es:18423                                      }

    0260: [0] 33 22 f0 9f 02 ba 63 ....... debug 

    # ejs.es:18424                                      pos++

    0267: [0] 57 ......................... loadThis 
    0268: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0273: [1] 39 ......................... dup 
    0274: [2] 3f 01 ...................... inc <1> 
    0276: [2] 57 ......................... loadThis 
    0277: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0282: [1] 90 ......................... pop 
    0283: [0] 33 22 f2 9f 02 f6 63 ....... debug 

    # ejs.es:18425                                      eatSpace()

    0290: [0] 1f bc 64 c0 10 00 .......... callScopedName <eatSpace> <[TemplateParser,private]> <argc: 0> 
    0296: [0] 33 22 f4 9f 02 ce 64 ....... debug 

    # ejs.es:18426                                      if (script[pos] == '=') {

    0303: [0] 57 ......................... loadThis 
    0304: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0309: [1] 56 94 0c ................... loadString <> 
    0312: [2] 57 ......................... loadThis 
    0313: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0318: [3] 7c ......................... getObjNameExpr 
    0319: [1] 56 b2 65 ................... loadString <=> 
    0322: [2] 25 ......................... compareEq 
    0323: [1] 07 c6 03 f7 f7 ............. branchFalse <addr: 555> 
    0328: [0] 33 22 fc 9f 02 b6 65 ....... debug 

    # ejs.es:18430                                          pos++

    0335: [0] 57 ......................... loadThis 
    0336: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0341: [1] 39 ......................... dup 
    0342: [2] 3f 01 ...................... inc <1> 
    0344: [2] 57 ......................... loadThis 
    0345: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0350: [1] 90 ......................... pop 
    0351: [0] 33 22 fe 9f 02 fa 65 ....... debug 

    # ejs.es:18431                                          eatSpace()

    0358: [0] 1f bc 64 c0 10 00 .......... callScopedName <eatSpace> <[TemplateParser,private]> <argc: 0> 
    0364: [0] 33 22 80 a0 02 c8 66 ....... debug 

    # ejs.es:18432                                          while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>' || 

    0371: [0] 57 ......................... loadThis 
    0372: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0377: [1] 56 94 0c ................... loadString <> 
    0380: [2] 57 ......................... loadThis 
    0381: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0386: [3] 7c ......................... getObjNameExpr 
    0387: [1] 39 ......................... dup 
    0388: [2] 96 ......................... putLocalSlot2 
    0389: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0392: [2] 2c ......................... compareNe 
    0393: [1] 39 ......................... dup 
    0394: [2] 13 41 ...................... branchFalse8 <addr: 461> 
    0396: [1] 90 ......................... pop 
    0397: [0] 5d ......................... getLocalSlot2 
    0398: [1] 56 de 60 ................... loadString <%> 
    0401: [2] 2c ......................... compareNe 
    0402: [1] 39 ......................... dup 
    0403: [2] 14 38 ...................... branchTrue8 <addr: 461> 
    0405: [1] 90 ......................... pop 
    0406: [0] 57 ......................... loadThis 
    0407: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0412: [1] 56 94 0c ................... loadString <> 
    0415: [2] 57 ......................... loadThis 
    0416: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0421: [3] 45 ......................... load1 
    0422: [4] 00 ......................... add 
    0423: [3] 7c ......................... getObjNameExpr 
    0424: [1] 56 9e 68 ................... loadString <>> 
    0427: [2] 2c ......................... compareNe 
    0428: [1] 39 ......................... dup 
    0429: [2] 14 1e ...................... branchTrue8 <addr: 461> 
    0431: [1] 90 ......................... pop 
    0432: [0] 33 22 82 a0 02 a2 68 ....... debug 

    # ejs.es:18433                                                  script[pos-1] == '\\')) {

    0439: [0] 57 ......................... loadThis 
    0440: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0445: [1] 56 94 0c ................... loadString <> 
    0448: [2] 57 ......................... loadThis 
    0449: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0454: [3] 45 ......................... load1 
    0455: [4] c3 ......................... sub 
    0456: [3] 7c ......................... getObjNameExpr 
    0457: [1] 56 e2 60 ................... loadString <\> 
    0460: [2] 25 ......................... compareEq 
    0461: [1] 13 2b ...................... branchFalse8 <addr: 506> 
    0463: [0] 33 22 84 a0 02 9e 69 ....... debug 

    # ejs.es:18434                                              token.write(c)

    0470: [0] 5b ......................... getLocalSlot0 
    0471: [1] 5d ......................... getLocalSlot2 
    0472: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    0478: [0] 33 22 86 a0 02 fc 69 ....... debug 

    # ejs.es:18435                                              pos++

    0485: [0] 57 ......................... loadThis 
    0486: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0491: [1] 39 ......................... dup 
    0492: [2] 3f 01 ...................... inc <1> 
    0494: [2] 57 ......................... loadThis 
    0495: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0500: [1] 90 ......................... pop 
    0501: [0] 3d 8f 02 f7 f7 ............. goto <addr: 371> 
    0506: [0] 33 22 88 a0 02 a2 4a ....... debug 

    # ejs.es:18436                                          }

    0513: [0] 33 22 8a a0 02 c8 6a ....... debug 

    # ejs.es:18437                                          pos += 2

    0520: [0] 57 ......................... loadThis 
    0521: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0526: [1] 46 ......................... load2 
    0527: [2] 00 ......................... add 
    0528: [1] 57 ......................... loadThis 
    0529: [2] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0534: [0] 33 22 8c a0 02 92 6b ....... debug 

    # ejs.es:18438                                          return Token.Equals

    0541: [0] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0544: [1] 7b 96 36 d0 05 ............. getObjName <Equals> <public> 
    0549: [1] bf ......................... returnValue 
    0550: [0] 3d c0 06 f7 f7 ............. goto <addr: 971> 
    0555: [0] 33 22 90 a0 02 f2 6b ....... debug 

    # ejs.es:18440                                      } else if (script[pos] == '@') {

    0562: [0] 57 ......................... loadThis 
    0563: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0568: [1] 56 94 0c ................... loadString <> 
    0571: [2] 57 ......................... loadThis 
    0572: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0577: [3] 7c ......................... getObjNameExpr 
    0578: [1] 56 e4 6c ................... loadString <@> 
    0581: [2] 25 ......................... compareEq 
    0582: [1] 07 fe 02 f7 f7 ............. branchFalse <addr: 778> 
    0587: [0] 33 22 98 a0 02 b6 65 ....... debug 

    # ejs.es:18444                                          pos++

    0594: [0] 57 ......................... loadThis 
    0595: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0600: [1] 39 ......................... dup 
    0601: [2] 3f 01 ...................... inc <1> 
    0603: [2] 57 ......................... loadThis 
    0604: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0609: [1] 90 ......................... pop 
    0610: [0] 33 22 9a a0 02 fa 65 ....... debug 

    # ejs.es:18445                                          eatSpace()

    0617: [0] 1f bc 64 c0 10 00 .......... callScopedName <eatSpace> <[TemplateParser,private]> <argc: 0> 
    0623: [0] 33 22 9c a0 02 e8 6c ....... debug 

    # ejs.es:18446                                          while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>')) {

    0630: [0] 57 ......................... loadThis 
    0631: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0636: [1] 56 94 0c ................... loadString <> 
    0639: [2] 57 ......................... loadThis 
    0640: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0645: [3] 7c ......................... getObjNameExpr 
    0646: [1] 39 ......................... dup 
    0647: [2] 96 ......................... putLocalSlot2 
    0648: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0651: [2] 2c ......................... compareNe 
    0652: [1] 39 ......................... dup 
    0653: [2] 13 20 ...................... branchFalse8 <addr: 687> 
    0655: [1] 90 ......................... pop 
    0656: [0] 5d ......................... getLocalSlot2 
    0657: [1] 56 de 60 ................... loadString <%> 
    0660: [2] 2c ......................... compareNe 
    0661: [1] 39 ......................... dup 
    0662: [2] 14 17 ...................... branchTrue8 <addr: 687> 
    0664: [1] 90 ......................... pop 
    0665: [0] 57 ......................... loadThis 
    0666: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0671: [1] 56 94 0c ................... loadString <> 
    0674: [2] 57 ......................... loadThis 
    0675: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0680: [3] 45 ......................... load1 
    0681: [4] 00 ......................... add 
    0682: [3] 7c ......................... getObjNameExpr 
    0683: [1] 56 9e 68 ................... loadString <>> 
    0686: [2] 2c ......................... compareNe 
    0687: [1] 13 28 ...................... branchFalse8 <addr: 729> 
    0689: [0] 33 22 9e a0 02 9e 69 ....... debug 

    # ejs.es:18447                                              token.write(c)

    0696: [0] 5b ......................... getLocalSlot0 
    0697: [1] 5d ......................... getLocalSlot2 
    0698: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    0704: [0] 33 22 a0 a0 02 fc 69 ....... debug 

    # ejs.es:18448                                              pos++

    0711: [0] 57 ......................... loadThis 
    0712: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0717: [1] 39 ......................... dup 
    0718: [2] 3f 01 ...................... inc <1> 
    0720: [2] 57 ......................... loadThis 
    0721: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0726: [1] 90 ......................... pop 
    0727: [0] 3e 9d ...................... goto8 <addr: 630> 
    0729: [0] 33 22 a2 a0 02 a2 4a ....... debug 

    # ejs.es:18449                                          }

    0736: [0] 33 22 a4 a0 02 c8 6a ....... debug 

    # ejs.es:18450                                          pos += 2

    0743: [0] 57 ......................... loadThis 
    0744: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0749: [1] 46 ......................... load2 
    0750: [2] 00 ......................... add 
    0751: [1] 57 ......................... loadThis 
    0752: [2] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0757: [0] 33 22 a6 a0 02 be 6e ....... debug 

    # ejs.es:18451                                          return Token.Control

    0764: [0] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0767: [1] 7b ea 39 d0 05 ............. getObjName <Control> <public> 
    0772: [1] bf ......................... returnValue 
    0773: [0] 3d 82 03 f7 f7 ............. goto <addr: 971> 
    0778: [0] 33 22 aa a0 02 a8 45 ....... debug 

    # ejs.es:18453                                      } else {

    0785: [0] 33 22 ac a0 02 c8 66 ....... debug 

    # ejs.es:18454                                          while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>' || 

    0792: [0] 57 ......................... loadThis 
    0793: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0798: [1] 56 94 0c ................... loadString <> 
    0801: [2] 57 ......................... loadThis 
    0802: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0807: [3] 7c ......................... getObjNameExpr 
    0808: [1] 39 ......................... dup 
    0809: [2] 96 ......................... putLocalSlot2 
    0810: [1] 7e 84 01 ................... getGlobalSlot <slot: 66> 
    0813: [2] 2c ......................... compareNe 
    0814: [1] 39 ......................... dup 
    0815: [2] 13 41 ...................... branchFalse8 <addr: 882> 
    0817: [1] 90 ......................... pop 
    0818: [0] 5d ......................... getLocalSlot2 
    0819: [1] 56 de 60 ................... loadString <%> 
    0822: [2] 2c ......................... compareNe 
    0823: [1] 39 ......................... dup 
    0824: [2] 14 38 ...................... branchTrue8 <addr: 882> 
    0826: [1] 90 ......................... pop 
    0827: [0] 57 ......................... loadThis 
    0828: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0833: [1] 56 94 0c ................... loadString <> 
    0836: [2] 57 ......................... loadThis 
    0837: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0842: [3] 45 ......................... load1 
    0843: [4] 00 ......................... add 
    0844: [3] 7c ......................... getObjNameExpr 
    0845: [1] 56 9e 68 ................... loadString <>> 
    0848: [2] 2c ......................... compareNe 
    0849: [1] 39 ......................... dup 
    0850: [2] 14 1e ...................... branchTrue8 <addr: 882> 
    0852: [1] 90 ......................... pop 
    0853: [0] 33 22 ae a0 02 a2 68 ....... debug 

    # ejs.es:18455                                                  script[pos-1] == '\\')) {

    0860: [0] 57 ......................... loadThis 
    0861: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0866: [1] 56 94 0c ................... loadString <> 
    0869: [2] 57 ......................... loadThis 
    0870: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0875: [3] 45 ......................... load1 
    0876: [4] c3 ......................... sub 
    0877: [3] 7c ......................... getObjNameExpr 
    0878: [1] 56 e2 60 ................... loadString <\> 
    0881: [2] 25 ......................... compareEq 
    0882: [1] 13 2b ...................... branchFalse8 <addr: 927> 
    0884: [0] 33 22 b0 a0 02 9e 69 ....... debug 

    # ejs.es:18456                                              token.write(c)

    0891: [0] 5b ......................... getLocalSlot0 
    0892: [1] 5d ......................... getLocalSlot2 
    0893: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    0899: [0] 33 22 b2 a0 02 fc 69 ....... debug 

    # ejs.es:18457                                              pos++

    0906: [0] 57 ......................... loadThis 
    0907: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0912: [1] 39 ......................... dup 
    0913: [2] 3f 01 ...................... inc <1> 
    0915: [2] 57 ......................... loadThis 
    0916: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0921: [1] 90 ......................... pop 
    0922: [0] 3d 8f 02 f7 f7 ............. goto <addr: 792> 
    0927: [0] 33 22 b4 a0 02 a2 4a ....... debug 

    # ejs.es:18458                                          }

    0934: [0] 33 22 b6 a0 02 c8 6a ....... debug 

    # ejs.es:18459                                          pos += 2

    0941: [0] 57 ......................... loadThis 
    0942: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0947: [1] 46 ......................... load2 
    0948: [2] 00 ......................... add 
    0949: [1] 57 ......................... loadThis 
    0950: [2] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0955: [0] 33 22 b8 a0 02 a0 6f ....... debug 

    # ejs.es:18460                                          return Token.EjsTag

    0962: [0] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    0965: [1] 7b b4 38 d0 05 ............. getObjName <EjsTag> <public> 
    0970: [1] bf ......................... returnValue 
    0971: [0] 3e 00 ...................... goto8 <addr: 973> 
    0973: [0] 33 22 bc a0 02 80 70 ....... debug 

    # ejs.es:18462                                  }

    0980: [0] 33 22 be a0 02 ac 70 ....... debug 

    # ejs.es:18463                                  token.write(c)

    0987: [0] 5b ......................... getLocalSlot0 
    0988: [1] 5d ......................... getLocalSlot2 
    0989: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    0995: [0] 33 22 c0 a0 02 92 33 ....... debug 

    # ejs.es:18464                                  break

    1002: [0] 3d c4 09 f7 f7 ............. goto <addr: 1617> 
    1007: [0] 3e 11 ...................... goto8 <addr: 1026> 
    1009: [0] 33 22 c4 a0 02 f2 70 ....... debug 

    # ejs.es:18466                              case '@':

    1016: [0] 39 ......................... dup 
    1017: [1] 56 e4 6c ................... loadString <@> 
    1020: [2] 26 ......................... compareStrictlyEq 
    1021: [1] 07 b8 06 f7 f7 ............. branchFalse <addr: 1438> 
    1026: [0] 33 22 c6 a0 02 a6 71 ....... debug 

    # ejs.es:18467                                  if (script[pos] == '@' && (pos < 1 || script[pos-1] != '\\')) {

    1033: [0] 57 ......................... loadThis 
    1034: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    1039: [1] 56 94 0c ................... loadString <> 
    1042: [2] 57 ......................... loadThis 
    1043: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1048: [3] 7c ......................... getObjNameExpr 
    1049: [1] 56 e4 6c ................... loadString <@> 
    1052: [2] 25 ......................... compareEq 
    1053: [1] 39 ......................... dup 
    1054: [2] 13 23 ...................... branchFalse8 <addr: 1091> 
    1056: [1] 90 ......................... pop 
    1057: [0] 57 ......................... loadThis 
    1058: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1063: [1] 45 ......................... load1 
    1064: [2] 2b ......................... compareLt 
    1065: [1] 39 ......................... dup 
    1066: [2] 14 17 ...................... branchTrue8 <addr: 1091> 
    1068: [1] 90 ......................... pop 
    1069: [0] 57 ......................... loadThis 
    1070: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    1075: [1] 56 94 0c ................... loadString <> 
    1078: [2] 57 ......................... loadThis 
    1079: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1084: [3] 45 ......................... load1 
    1085: [4] c3 ......................... sub 
    1086: [3] 7c ......................... getObjNameExpr 
    1087: [1] 56 e2 60 ................... loadString <\> 
    1090: [2] 2c ......................... compareNe 
    1091: [1] 07 e4 04 f7 f7 ............. branchFalse <addr: 1402> 
    1096: [0] 33 22 c8 a0 02 e6 60 ....... debug 

    # ejs.es:18468                                      if (token.available > 0) {

    1103: [0] 5b ......................... getLocalSlot0 
    1104: [1] 7b cc 61 d0 05 ............. getObjName <available> <public> 
    1109: [1] 44 ......................... load0 
    1110: [2] 29 ......................... compareGt 
    1111: [1] 13 29 ...................... branchFalse8 <addr: 1154> 
    1113: [0] 33 22 ca a0 02 e0 61 ....... debug 

    # ejs.es:18469                                          pos--

    1120: [0] 57 ......................... loadThis 
    1121: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1126: [1] 39 ......................... dup 
    1127: [2] 3f ff ...................... inc <255> 
    1129: [2] 57 ......................... loadThis 
    1130: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    1135: [1] 90 ......................... pop 
    1136: [0] 33 22 cc a0 02 a4 62 ....... debug 

    # ejs.es:18470                                          return Token.Literal

    1143: [0] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    1146: [1] 7b c2 31 d0 05 ............. getObjName <Literal> <public> 
    1151: [1] bf ......................... returnValue 
    1152: [0] 3e 00 ...................... goto8 <addr: 1154> 
    1154: [0] 33 22 ce a0 02 86 63 ....... debug 

    # ejs.es:18471                                      }

    1161: [0] 33 22 d0 a0 02 ba 63 ....... debug 

    # ejs.es:18472                                      pos++

    1168: [0] 57 ......................... loadThis 
    1169: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1174: [1] 39 ......................... dup 
    1175: [2] 3f 01 ...................... inc <1> 
    1177: [2] 57 ......................... loadThis 
    1178: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    1183: [1] 90 ......................... pop 
    1184: [0] 33 22 d2 a0 02 ce 72 ....... debug 

    # ejs.es:18473                                      c = script[pos++]

    1191: [0] 57 ......................... loadThis 
    1192: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    1197: [1] 56 94 0c ................... loadString <> 
    1200: [2] 57 ......................... loadThis 
    1201: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1206: [3] 39 ......................... dup 
    1207: [4] 3f 01 ...................... inc <1> 
    1209: [4] 57 ......................... loadThis 
    1210: [5] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    1215: [3] 7c ......................... getObjNameExpr 
    1216: [1] 96 ......................... putLocalSlot2 
    1217: [0] 33 22 d4 a0 02 a2 73 ....... debug 

    # ejs.es:18474                                      while (c.isAlpha || c.isDigit || c == '[' || c == ']' || c == '.' || c == '$' || c == '_' || 

    1224: [0] 5d ......................... getLocalSlot2 
    1225: [1] 7b 8e 75 00 ................ getObjName <isAlpha> <> 
    1229: [1] 39 ......................... dup 
    1230: [2] 14 43 ...................... branchTrue8 <addr: 1299> 
    1232: [1] 90 ......................... pop 
    1233: [0] 5d ......................... getLocalSlot2 
    1234: [1] 7b 9e 75 00 ................ getObjName <isDigit> <> 
    1238: [1] 39 ......................... dup 
    1239: [2] 14 3a ...................... branchTrue8 <addr: 1299> 
    1241: [1] 90 ......................... pop 
    1242: [0] 5d ......................... getLocalSlot2 
    1243: [1] 56 ae 75 ................... loadString <[> 
    1246: [2] 25 ......................... compareEq 
    1247: [1] 39 ......................... dup 
    1248: [2] 14 31 ...................... branchTrue8 <addr: 1299> 
    1250: [1] 90 ......................... pop 
    1251: [0] 5d ......................... getLocalSlot2 
    1252: [1] 56 b2 75 ................... loadString <]> 
    1255: [2] 25 ......................... compareEq 
    1256: [1] 39 ......................... dup 
    1257: [2] 14 28 ...................... branchTrue8 <addr: 1299> 
    1259: [1] 90 ......................... pop 
    1260: [0] 5d ......................... getLocalSlot2 
    1261: [1] 56 fc 2b ................... loadString <.> 
    1264: [2] 25 ......................... compareEq 
    1265: [1] 39 ......................... dup 
    1266: [2] 14 1f ...................... branchTrue8 <addr: 1299> 
    1268: [1] 90 ......................... pop 
    1269: [0] 5d ......................... getLocalSlot2 
    1270: [1] 56 b6 75 ................... loadString <$> 
    1273: [2] 25 ......................... compareEq 
    1274: [1] 39 ......................... dup 
    1275: [2] 14 16 ...................... branchTrue8 <addr: 1299> 
    1277: [1] 90 ......................... pop 
    1278: [0] 5d ......................... getLocalSlot2 
    1279: [1] 56 ba 75 ................... loadString <_> 
    1282: [2] 25 ......................... compareEq 
    1283: [1] 39 ......................... dup 
    1284: [2] 14 0d ...................... branchTrue8 <addr: 1299> 
    1286: [1] 90 ......................... pop 
    1287: [0] 33 22 d6 a0 02 be 75 ....... debug 

    # ejs.es:18475                                              c == "'") {

    1294: [0] 5d ......................... getLocalSlot2 
    1295: [1] 56 ba 3e ................... loadString <'> 
    1298: [2] 25 ......................... compareEq 
    1299: [1] 13 35 ...................... branchFalse8 <addr: 1354> 
    1301: [0] 33 22 d8 a0 02 96 76 ....... debug 

    # ejs.es:18476                                          token.write(c)

    1308: [0] 5b ......................... getLocalSlot0 
    1309: [1] 5d ......................... getLocalSlot2 
    1310: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    1316: [0] 33 22 da a0 02 ec 76 ....... debug 

    # ejs.es:18477                                          c = script[pos++]

    1323: [0] 57 ......................... loadThis 
    1324: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    1329: [1] 56 94 0c ................... loadString <> 
    1332: [2] 57 ......................... loadThis 
    1333: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1338: [3] 39 ......................... dup 
    1339: [4] 3f 01 ...................... inc <1> 
    1341: [4] 57 ......................... loadThis 
    1342: [5] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    1347: [3] 7c ......................... getObjNameExpr 
    1348: [1] 96 ......................... putLocalSlot2 
    1349: [0] 3d 85 02 f7 f7 ............. goto <addr: 1224> 
    1354: [0] 33 22 dc a0 02 86 63 ....... debug 

    # ejs.es:18478                                      }

    1361: [0] 33 22 de a0 02 c8 77 ....... debug 

    # ejs.es:18479                                      pos--

    1368: [0] 57 ......................... loadThis 
    1369: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1374: [1] 39 ......................... dup 
    1375: [2] 3f ff ...................... inc <255> 
    1377: [2] 57 ......................... loadThis 
    1378: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    1383: [1] 90 ......................... pop 
    1384: [0] 33 22 e0 a0 02 84 78 ....... debug 

    # ejs.es:18480                                      return Token.Var

    1391: [0] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    1394: [1] 7b 86 34 d0 05 ............. getObjName <Var> <public> 
    1399: [1] bf ......................... returnValue 
    1400: [0] 3e 00 ...................... goto8 <addr: 1402> 
    1402: [0] 33 22 e2 a0 02 80 70 ....... debug 

    # ejs.es:18481                                  }

    1409: [0] 33 22 e4 a0 02 ac 70 ....... debug 

    # ejs.es:18482                                  token.write(c)

    1416: [0] 5b ......................... getLocalSlot0 
    1417: [1] 5d ......................... getLocalSlot2 
    1418: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    1424: [0] 33 22 e6 a0 02 92 33 ....... debug 

    # ejs.es:18483                                  break

    1431: [0] 3d ea 02 f7 f7 ............. goto <addr: 1617> 
    1436: [0] 3e 0e ...................... goto8 <addr: 1452> 
    1438: [0] 33 22 ea a0 02 d6 78 ....... debug 

    # ejs.es:18485                              case "\r":

    1445: [0] 39 ......................... dup 
    1446: [1] 56 8c 79 ................... loadString <> 
    1449: [2] 26 ......................... compareStrictlyEq 
    1450: [1] 13 02 ...................... branchFalse8 <addr: 1454> 
    1452: [0] 3e 0e ...................... goto8 <addr: 1468> 
    1454: [0] 33 22 ec a0 02 90 79 ....... debug 

    # ejs.es:18486                              case "\n":

    1461: [0] 39 ......................... dup 
    1462: [1] 56 c6 79 ................... loadString <
> 
    1465: [2] 26 ......................... compareStrictlyEq 
    1466: [1] 13 42 ...................... branchFalse8 <addr: 1534> 
    1468: [0] 33 22 ee a0 02 ca 79 ....... debug 

    # ejs.es:18487                                  lineNumber++

    1475: [0] 57 ......................... loadThis 
    1476: [1] 7b d2 14 c0 10 ............. getObjName <lineNumber> <[TemplateParser,private]> 
    1481: [1] 39 ......................... dup 
    1482: [2] 3f 01 ...................... inc <1> 
    1484: [2] 57 ......................... loadThis 
    1485: [3] b3 d2 14 c0 10 ............. putObjName <lineNumber> <[TemplateParser,private]> 
    1490: [1] 90 ......................... pop 
    1491: [0] 33 22 f0 a0 02 ac 70 ....... debug 

    # ejs.es:18488                                  token.write(c)

    1498: [0] 5b ......................... getLocalSlot0 
    1499: [1] 5d ......................... getLocalSlot2 
    1500: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    1506: [0] 33 22 f2 a0 02 8c 7a ....... debug 

    # ejs.es:18489                                  tid = Token.Literal

    1513: [0] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    1516: [1] 7b c2 31 d0 05 ............. getObjName <Literal> <public> 
    1521: [1] 95 ......................... putLocalSlot1 
    1522: [0] 33 22 f4 a0 02 92 33 ....... debug 

    # ejs.es:18490                                  break

    1529: [0] 3d a6 01 f7 f7 ............. goto <addr: 1617> 
    1534: [0] 33 22 f8 a0 02 d6 51 ....... debug 

    # ejs.es:18492                              default:

    1541: [0] 33 22 fc a0 02 dc 7a ....... debug 

    # ejs.es:18494                                  if (c == '\"' || c == '\\') {

    1548: [0] 5d ......................... getLocalSlot2 
    1549: [1] 56 c8 3e ................... loadString <"> 
    1552: [2] 25 ......................... compareEq 
    1553: [1] 39 ......................... dup 
    1554: [2] 14 06 ...................... branchTrue8 <addr: 1562> 
    1556: [1] 90 ......................... pop 
    1557: [0] 5d ......................... getLocalSlot2 
    1558: [1] 56 e2 60 ................... loadString <\> 
    1561: [2] 25 ......................... compareEq 
    1562: [1] 13 13 ...................... branchFalse8 <addr: 1583> 
    1564: [0] 33 22 fe a0 02 c0 7b ....... debug 

    # ejs.es:18495                                      token.write('\\')

    1571: [0] 5b ......................... getLocalSlot0 
    1572: [1] 56 e2 60 ................... loadString <\> 
    1575: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    1581: [0] 3e 00 ...................... goto8 <addr: 1583> 
    1583: [0] 33 22 80 a1 02 80 70 ....... debug 

    # ejs.es:18496                                  }

    1590: [0] 33 22 82 a1 02 ac 70 ....... debug 

    # ejs.es:18497                                  token.write(c)

    1597: [0] 5b ......................... getLocalSlot0 
    1598: [1] 5d ......................... getLocalSlot2 
    1599: [2] 1e 86 33 d0 05 02 .......... callObjName <write> <public> <argc: 1> 
    1605: [0] 33 22 84 a1 02 92 33 ....... debug 

    # ejs.es:18498                                  break

    1612: [0] 3d 00 f7 f7 f7 ............. goto <addr: 1617> 
    1617: [0] 90 ......................... pop 
    1618: [-1] 3d d7 18 f7 f7 ............. goto <addr: 44> 
    1623: [-1] 33 22 8a a1 02 94 7c ....... debug 

    # ejs.es:18501                          if (token.available == 0 && pos >= script.length) {

    1630: [-1] 5b ......................... getLocalSlot0 
    1631: [0] 7b cc 61 d0 05 ............. getObjName <available> <public> 
    1636: [0] 44 ......................... load0 
    1637: [1] 25 ......................... compareEq 
    1638: [0] 39 ......................... dup 
    1639: [1] 13 13 ...................... branchFalse8 <addr: 1660> 
    1641: [0] 90 ......................... pop 
    1642: [-1] 57 ......................... loadThis 
    1643: [0] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    1648: [0] 57 ......................... loadThis 
    1649: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    1654: [1] 7b d8 0b d0 05 ............. getObjName <length> <public> 
    1659: [1] 28 ......................... compareGe 
    1660: [0] 13 12 ...................... branchFalse8 <addr: 1680> 
    1662: [-1] 33 22 8c a1 02 94 7d ....... debug 

    # ejs.es:18502                              return Token.Eof

    1669: [-1] 7e f0 02 ................... getGlobalSlot <slot: 184> 
    1672: [0] 7b b4 30 d0 05 ............. getObjName <Eof> <public> 
    1677: [0] bf ......................... returnValue 
    1678: [0] 3e 00 ...................... goto8 <addr: 1680> 
    1680: [0] 33 22 90 a1 02 d6 7d ....... debug 

    # ejs.es:18504                          return tid

    1687: [0] 5c ......................... getLocalSlot1 
    1688: [1] bf ......................... returnValue 
    
VARIABLE:   [token-00]  private var token : ByteArray
VARIABLE:   [tid-01]  private var tid
VARIABLE:   [c-02]  private var c

FUNCTION:   [TemplateParser-31]  [TemplateParser,private] const function eatSpace() : Void


    0000: [0] 33 22 98 a1 02 dc 7e ....... debug 

    # ejs.es:18508                          while (script[pos].isSpace) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b 9e 13 c0 10 ............. getObjName <script> <[TemplateParser,private]> 
    0013: [1] 56 94 0c ................... loadString <> 
    0016: [2] 57 ......................... loadThis 
    0017: [3] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0022: [3] 7c ......................... getObjNameExpr 
    0023: [1] 7b b0 7f 94 0c ............. getObjName <isSpace> <> 
    0028: [1] 13 19 ...................... branchFalse8 <addr: 55> 
    0030: [0] 33 22 9a a1 02 c0 7f ....... debug 

    # ejs.es:18509                              pos++

    0037: [0] 57 ......................... loadThis 
    0038: [1] 7b f4 13 c0 10 ............. getObjName <pos> <[TemplateParser,private]> 
    0043: [1] 39 ......................... dup 
    0044: [2] 3f 01 ...................... inc <1> 
    0046: [2] 57 ......................... loadThis 
    0047: [3] b3 f4 13 c0 10 ............. putObjName <pos> <[TemplateParser,private]> 
    0052: [1] 90 ......................... pop 
    0053: [0] 3e d0 ...................... goto8 <addr: 7> 
    0055: [0] 54 ......................... loadNull 
    0056: [1] bf ......................... returnValue 
    0057: [0] 33 22 9e a1 02 ec 7f ....... debug 

    # ejs.es:18511                      }
    
VARIABLE:   [ContentMarker-00]  [TemplateParser,private] const var ContentMarker : String
VARIABLE:   [ContentPattern-01]  [TemplateParser,private] const var ContentPattern : RegExp
VARIABLE:   [script-02]  [TemplateParser,private] var script : String
VARIABLE:   [pos-03]  [TemplateParser,private] var pos : Number
VARIABLE:   [lineNumber-04]  [TemplateParser,private] var lineNumber : Number
VARIABLE:   [Header-05]  [TemplateParser,private] const var Header
VARIABLE:   [Footer-06]  [TemplateParser,private] const var Footer
VARIABLE:   [MvcHeader-07]  [TemplateParser,private] const var MvcHeader

CLASS:      class Token extends Object
            #  Class Details: 35 class traits, 0 instance traits, requested slot 184

FUNCTION:   [Token-26]  -initializer- static function Token-initializer() : Void


    0000: [0] 33 22 ae a1 02 ca 80 01 .... debug 

    # ejs.es:18519                      public static const Err         = -1        /* Any input error */

    0008: [0] 45 ......................... load1 
    0009: [1] 88 ......................... neg 
    0010: [1] 57 ......................... loadThis 
    0011: [2] b3 c8 52 d0 05 ............. putObjName <Err> <public> 
    0016: [0] 33 22 b0 a1 02 de 81 01 .... debug 

    # ejs.es:18520                      public static const Eof         = 0         /* End of file */

    0024: [0] 44 ......................... load0 
    0025: [1] 57 ......................... loadThis 
    0026: [2] b3 b4 30 d0 05 ............. putObjName <Eof> <public> 
    0031: [0] 33 22 b2 a1 02 ea 82 01 .... debug 

    # ejs.es:18521                      public static const EjsTag      = 1         /* <% text %> */

    0039: [0] 45 ......................... load1 
    0040: [1] 57 ......................... loadThis 
    0041: [2] b3 b4 38 d0 05 ............. putObjName <EjsTag> <public> 
    0046: [0] 33 22 b4 a1 02 f4 83 01 .... debug 

    # ejs.es:18522                      public static const Var         = 2         /* @@var */

    0054: [0] 46 ......................... load2 
    0055: [1] 57 ......................... loadThis 
    0056: [2] b3 86 34 d0 05 ............. putObjName <Var> <public> 
    0061: [0] 33 22 b6 a1 02 f4 84 01 .... debug 

    # ejs.es:18523                      public static const Literal     = 3         /* literal HTML */

    0069: [0] 47 ......................... load3 
    0070: [1] 57 ......................... loadThis 
    0071: [2] b3 c2 31 d0 05 ............. putObjName <Literal> <public> 
    0076: [0] 33 22 b8 a1 02 82 86 01 .... debug 

    # ejs.es:18524                      public static const Equals      = 4         /* <%= expression */

    0084: [0] 48 ......................... load4 
    0085: [1] 57 ......................... loadThis 
    0086: [2] b3 96 36 d0 05 ............. putObjName <Equals> <public> 
    0091: [0] 33 22 ba a1 02 94 87 01 .... debug 

    # ejs.es:18525                      public static const Control     = 6         /* <%@ control */

    0099: [0] 4a ......................... load6 
    0100: [1] 57 ......................... loadThis 
    0101: [2] b3 ea 39 d0 05 ............. putObjName <Control> <public> 
    0106: [0] 33 22 be a1 02 a0 88 01 .... debug 

    # ejs.es:18527                      public static var tokens = [ "Err", "Eof", "EjsTag", "Var", "Literal", "Equals", "Control" ]

    0114: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0116: [1] 89 ......................... new 
    0117: [1] 39 ......................... dup 
    0118: [2] 56 c8 52 ................... loadString <Err> 
    0121: [3] c5 ......................... swap 
    0122: [3] 56 94 0c ................... loadString <> 
    0125: [4] 44 ......................... load0 
    0126: [5] b2 ......................... putObjNameExpr 
    0127: [1] 39 ......................... dup 
    0128: [2] 56 b4 30 ................... loadString <Eof> 
    0131: [3] c5 ......................... swap 
    0132: [3] 56 94 0c ................... loadString <> 
    0135: [4] 45 ......................... load1 
    0136: [5] b2 ......................... putObjNameExpr 
    0137: [1] 39 ......................... dup 
    0138: [2] 56 b4 38 ................... loadString <EjsTag> 
    0141: [3] c5 ......................... swap 
    0142: [3] 56 94 0c ................... loadString <> 
    0145: [4] 46 ......................... load2 
    0146: [5] b2 ......................... putObjNameExpr 
    0147: [1] 39 ......................... dup 
    0148: [2] 56 86 34 ................... loadString <Var> 
    0151: [3] c5 ......................... swap 
    0152: [3] 56 94 0c ................... loadString <> 
    0155: [4] 47 ......................... load3 
    0156: [5] b2 ......................... putObjNameExpr 
    0157: [1] 39 ......................... dup 
    0158: [2] 56 c2 31 ................... loadString <Literal> 
    0161: [3] c5 ......................... swap 
    0162: [3] 56 94 0c ................... loadString <> 
    0165: [4] 48 ......................... load4 
    0166: [5] b2 ......................... putObjNameExpr 
    0167: [1] 39 ......................... dup 
    0168: [2] 56 96 36 ................... loadString <Equals> 
    0171: [3] c5 ......................... swap 
    0172: [3] 56 94 0c ................... loadString <> 
    0175: [4] 49 ......................... load5 
    0176: [5] b2 ......................... putObjNameExpr 
    0177: [1] 39 ......................... dup 
    0178: [2] 56 ea 39 ................... loadString <Control> 
    0181: [3] c5 ......................... swap 
    0182: [3] 56 94 0c ................... loadString <> 
    0185: [4] 4a ......................... load6 
    0186: [5] b2 ......................... putObjNameExpr 
    0187: [1] 57 ......................... loadThis 
    0188: [2] b3 ea 89 01 d0 05 .......... putObjName <tokens> <public> 
    0194: [0] be ......................... return 
    
VARIABLE:   [Token-27]  public const static var Err
VARIABLE:   [Token-28]  public const static var Eof
VARIABLE:   [Token-29]  public const static var EjsTag
VARIABLE:   [Token-30]  public const static var Var
VARIABLE:   [Token-31]  public const static var Literal
VARIABLE:   [Token-32]  public const static var Equals
VARIABLE:   [Token-33]  public const static var Control
VARIABLE:   [Token-34]  public static var tokens

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 185)
#
0000    public var stderr
0001    public var stdin
0002    public var stdout
0003    ejs var App: Type
0004    ejs function appInit
0005    ejs var Array: Type
0006    ejs var BinaryStream: Type
0007    ejs var Block: Type
0008    ejs var Boolean: Type
0009    ejs var ByteArray: Type
0010    ejs var Cmd: Type
0011    ejs var CmdArgs: Type
0012    public function gc
0013    public function readFile
0014    ejs var Config: Type
0015    ejs var Date: Type
0016    ejs var Emitter: Type
0017    internal-ed363076473b51ca685af450cc662b39-0 var Endpoint: Type
0018    ejs var ArgError: Type
0019    ejs var ArithmeticError: Type
0020    ejs var AssertError: Type
0021    ejs var InstructionError: Type
0022    ejs var Error: Type
0023    ejs var IOError: Type
0024    ejs var InternalError: Type
0025    ejs var MemoryError: Type
0026    ejs var OutOfBoundsError: Type
0027    ejs var ReferenceError: Type
0028    ejs var ResourceError: Type
0029    ejs var SecurityError: Type
0030    ejs var StateError: Type
0031    ejs var SyntaxError: Type
0032    ejs var TypeError: Type
0033    ejs var URIError: Type
0034    ejs var Event: Type
0035    ejs var ErrorEvent: Type
0036    ejs var File: Type
0037    ejs var FileSystem: Type
0038    ejs var Frame: Type
0039    ejs var Function: Type
0040    ejs function makeGetter
0041    ejs function clearBoundThis
0042    ejs var GC: Type
0043    public var EJSCRIPT: Boolean
0044    public var ECMA: Boolean
0045    public var ejs
0046    public var public
0047    public var internal
0048    public var iterator
0049    public var CONFIG
0050    ejs var TODO: Boolean
0051    ejs var FUTURE: Boolean
0052    ejs var ASC: Boolean
0053    ejs var DOC_ONLY: Boolean
0054    ejs var DEPRECATED: Boolean
0055    ejs var boolean
0056    ejs var double
0057    ejs var num
0058    ejs var string
0059    ejs var false: Boolean
0060    ejs var global: Object
0061    ejs var null
0062    ejs var Infinity
0063    ejs var NegativeInfinity
0064    ejs var NaN
0065    ejs var true: Boolean
0066    ejs var undefined
0067    ejs var void
0068    ejs function assert
0069    ejs function breakpoint
0070    ejs function cloneBase
0071    ejs function decodeURI
0072    ejs function dump
0073    ejs function dumpAll
0074    ejs function dumpDef
0075    ejs function encodeURI
0076    ejs function escape
0077    ejs function md5
0078    ejs function blend
0079    ejs function eval
0080    ejs function formatStack
0081    ejs function hashcode
0082    ejs function isNaN
0083    ejs function isFinite
0084    ejs function load
0085    ejs function print
0086    ejs function parse
0087    ejs function parseFloat
0088    ejs function parseInt
0089    ejs function printHash
0090    ejs function instanceOf
0091    ejs function error
0092    ejs function input
0093    ejs function output
0094    ejs var Http: Type
0095    iterator var Iterable: Type
0096    iterator var Iterator: Type
0097    iterator var StopIteration: Type
0098    ejs var JSON: Type
0099    ejs function deserialize
0100    ejs function serialize
0101    ejs var Locale: Type
0102    ejs var Logger: Type
0103    ejs var Math: Type
0104    ejs var Memory: Type
0105    ejs var Namespace: Type
0106    ejs var Null: Type
0107    ejs var Number: Type
0108    ejs var Object: Type
0109    ejs var Path: Type
0110    ejs var Promise: Type
0111    ejs var Reflect: Type
0112    ejs function typeOf
0113    ejs var RegExp: Type
0114    ejs var Socket: Type
0115    ejs var Stream: Type
0116    ejs var String: Type
0117    ejs var System: Type
0118    ejs var TextStream: Type
0119    ejs var Timer: Type
0120    ejs function setInterval
0121    ejs function setTimeout
0122    ejs var TimerEvent: Type
0123    ejs var Type: Type
0124    ejs var Uri: Type
0125    ejs function decodeUri
0126    ejs function decodeUriComponent
0127    ejs var Void: Type
0128    ejs var Worker: Type
0129    ejs.worker var self: Worker
0130    ejs.worker function exit
0131    ejs.worker function postMessage
0132    ejs.worker function onerror
0133    ejs.worker function onmessage
0134    ejs var XML: Type
0135    ejs var XMLHttp: Type
0136    ejs var XMLList: Type
0137    ejs.cjs function require
0138    public var Loader: Type
0139    public function basename
0140    public function chdir
0141    public function chmod
0142    public function cp
0143    public function dirname
0144    public function exists
0145    public function extension
0146    public function freeSpace
0147    public function isDir
0148    public function kill
0149    public function ls
0150    public function find
0151    public function mkdir
0152    public function mv
0153    public function pwd
0154    public function rm
0155    public function rmdir
0156    public function tempname
0157    ejs.db var Database: Type
0158    ejs.db var DatabaseConnector: Type
0159    public var Record: Type
0160    ejs.db.mapper var Column: Type
0161    ejs.db.mapper function plural
0162    ejs.db.mapper function singular
0163    ejs.db.mapper function mapType
0164    ejs.db var Sqlite: Type
0165    ejs.web var action: Namespace
0166    ejs.web var Controller: Type
0167    public var HtmlConnector: Type
0168    ejs.web var HttpServer: Type
0169    public var Mvc: Type
0170    ejs.web var Request: Type
0171    ejs.web var Router: Type
0172    ejs.web var Route: Type
0173    ejs.web var session: Object
0174    ejs.web var Session: Type
0175    ejs.web var UploadFile: Type
0176    ejs.web function parseCookies
0177    ejs.web function escapeHtml
0178    ejs.web function html
0179    ejs.web function unescapeHtml
0180    ejs.web var View: Type
0181    ejs.web var Web: Type
0182    public var Template: Type
0183    public var TemplateParser: Type
0184    ejs.web.template var Token: Type

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "App" class (Num slots 52, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function App-initializer
0027    public var config: Object
0028    [ejs::App,private] var _errorStream
0029    [ejs::App,private] var _inputStream
0030    [ejs::App,private] var _outputStream
0031    internal-ed363076473b51ca685af450cc662b39-0 var defaultConfig
0032    public function args
0033    public function dir
0034    public function chdir
0035    public function exeDir
0036    public function exePath
0037    public function errorStream
0038    public function exit
0039    public function getenv
0040    public function inputStream
0041    public var logger
0042    public function name
0043    public function noexit
0044    public function outputStream
0045    public function putenv
0046    public function search
0047    public function createSearch
0048    public function serviceEvents
0049    public function sleep
0050    public function title
0051    public function version

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Array" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Array
0027    public function append
0028    public function clear
0029    public function compact
0030    public function concat
0031    public function contains
0032    public function every
0033    public function filter
0034    public function find
0035    public function findAll
0036    public function forEach
0037    public function indexOf
0038    public function insert
0039    public function join
0040    public function lastIndexOf
0041    public function length
0042    public function map
0043    public function pop
0044    public function push
0045    public function reject
0046    public function remove
0047    public function reverse
0048    public function shift
0049    public function slice
0050    public function some
0051    public function sort
0052    public function splice
0053    public function transform
0054    public function unique
0055    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "BinaryStream" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function BinaryStream
0027    -initializer- function BinaryStream-initializer
0028    public var BigEndian
0029    public var LittleEndian
0030    public function addListener
0031    public function async
0032    public function available
0033    public function close
0034    public function encoding
0035    public function endian
0036    public function flush
0037    public function read
0038    public function readBoolean
0039    public function readByte
0040    public function readDate
0041    public function readDouble
0042    public function readInteger
0043    public function readLong
0044    public function readString
0045    public function readXML
0046    public function removeListener
0047    public function room
0048    public function write
0049    public function writeByte
0050    public function writeShort
0051    public function writeDouble
0052    public function writeInteger
0053    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs::BinaryStream,private] var inbuf
0001    [ejs::BinaryStream,private] var outbuf
0002    [ejs::BinaryStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Block" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Boolean" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 64, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function ByteArray
0027    -initializer- function ByteArray-initializer
0028    public var LittleEndian
0029    public var BigEndian
0030    public function addListener
0031    public function available
0032    public function async
0033    public function close
0034    public function compact
0035    public function copyIn
0036    public function copyOut
0037    public function encoding
0038    public function endian
0039    public function flush
0040    public function length
0041    public function MD5
0042    public function read
0043    public function readBoolean
0044    public function readByte
0045    public function readDate
0046    public function readDouble
0047    public function readInteger
0048    public function readLong
0049    public function readPosition
0050    public function readShort
0051    public function readString
0052    public function removeListener
0053    public function reset
0054    public function room
0055    public function write
0056    public function writeByte
0057    public function writeShort
0058    public function writeDouble
0059    public function writeInteger
0060    public function writeLong
0061    public function writePosition
0062    public function input
0063    public function output

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Cmd" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function sh
0027    public function run
0028    public function daemon
0029    public function runx

#
#  Instance slot assignments for the "Cmd" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "CmdArgs" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function CmdArgs
0027    [ejs::CmdArgs,private] function parseTemplate
0028    [ejs::CmdArgs,private] function validate

#
#  Instance slot assignments for the "CmdArgs" class (Num prop 4, num inherited 0)
#
0000    public var args: Array
0001    public var options: Object
0002    [ejs::CmdArgs,private] var ranges: Object
0003    [ejs::CmdArgs,private] var aliases: Object

#
#  Class slot assignments for the "Config" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public var Debug: Boolean
0027    public var CPU
0028    public var OS
0029    public var Product
0030    public var Title
0031    public var Version
0032    public var LibDir
0033    public var BinDir
0034    public var ModDir

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Date" class (Num slots 87, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Date
0027    public function day
0028    public function dayOfYear
0029    public function date
0030    public function elapsed
0031    public function format
0032    public function formatUTC
0033    public function fullYear
0034    public function getDate
0035    public function getDay
0036    public function getFullYear
0037    public function getHours
0038    public function getMilliseconds
0039    public function getMinutes
0040    public function getMonth
0041    public function getSeconds
0042    public function getTime
0043    public function getTimezoneOffset
0044    public function getUTCDate
0045    public function getUTCDay
0046    public function getUTCFullYear
0047    public function getUTCHours
0048    public function getUTCMilliseconds
0049    public function getUTCMinutes
0050    public function getUTCMonth
0051    public function getUTCSeconds
0052    public function hours
0053    public function milliseconds
0054    public function minutes
0055    public function month
0056    public function nanoAge
0057    public function nextDay
0058    public function now
0059    public function parseDate
0060    public function parseUTCDate
0061    public function parse
0062    public function seconds
0063    public function setDate
0064    public function setFullYear
0065    public function setHours
0066    public function setMilliseconds
0067    public function setMinutes
0068    public function setMonth
0069    public function setSeconds
0070    public function setTime
0071    public function setUTCDate
0072    public function setUTCFullYear
0073    public function setUTCHours
0074    public function setUTCMilliseconds
0075    public function setUTCMinutes
0076    public function setUTCMonth
0077    public function setUTCSeconds
0078    public function time
0079    public function toDateString
0080    public function toISOString
0081    public function toLocaleDateString
0082    public function toLocaleTimeString
0083    public function toTimeString
0084    public function toUTCString
0085    public function UTC
0086    public function year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Emitter" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener

#
#  Instance slot assignments for the "Emitter" class (Num prop 1, num inherited 0)
#
0000    [ejs::Emitter,private] var endpoints: Object

#
#  Class slot assignments for the "Endpoint" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 4, num inherited 0)
#
0000    public var callback
0001    public var name
0002    public var active: Boolean
0003    public var again: Boolean

#
#  Class slot assignments for the "ArgError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "AssertError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InstructionError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Error" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "IOError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "InternalError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "MemoryError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ReferenceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "ResourceError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SecurityError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SecurityError

#
#  Instance slot assignments for the "SecurityError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "StateError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "SyntaxError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "TypeError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "URIError" class (Num slots 29, num inherited 28)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Error
0027    public function code
0028    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 2, num inherited 2)
#
0000    public var message
0001    public var stack

#
#  Class slot assignments for the "Event" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event

#
#  Instance slot assignments for the "Event" class (Num prop 2, num inherited 0)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "ErrorEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function ErrorEvent

#
#  Instance slot assignments for the "ErrorEvent" class (Num prop 6, num inherited 2)
#
0000    public var data
0001    public var timestamp
0002    public var message
0003    public var filename
0004    public var lineno
0005    public var stack

#
#  Class slot assignments for the "File" class (Num slots 47, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function File
0027    public function addListener
0028    public function async
0029    public function canRead
0030    public function canWrite
0031    public function close
0032    public function encoding
0033    public function flush
0034    public function isOpen
0035    public function open
0036    public function options
0037    public function path
0038    public function position
0039    public function read
0040    public function readBytes
0041    public function readString
0042    public function remove
0043    public function removeListener
0044    public function size
0045    public function truncate
0046    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "FileSystem" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function FileSystem
0027    public function hasDrives
0028    public function newline
0029    public function root
0030    public function separators

#
#  Instance slot assignments for the "FileSystem" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Frame" class (Num slots 31, num inherited 31)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Frame" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Function" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function apply
0027    public function call
0028    public function boundThis
0029    public function bind
0030    public function setScope

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function enabled
0027    public function workQuota
0028    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Http" class (Num slots 118, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Http
0027    -initializer- function Http-initializer
0028    public var Continue
0029    public var Ok
0030    public var Created
0031    public var Accepted
0032    public var NotAuthoritative
0033    public var NoContent
0034    public var Reset
0035    public var Partial
0036    public var MultipleChoice
0037    public var MovedPermanently
0038    public var MovedTemporarily
0039    public var SeeOther
0040    public var NotModified
0041    public var UseProxy
0042    public var BadRequest
0043    public var Unauthorized
0044    public var PaymentRequired
0045    public var Forbidden
0046    public var NotFound
0047    public var BadMethod
0048    public var NotAccepted
0049    public var ProxyAuth
0050    public var ClientTimeout
0051    public var Conflict
0052    public var Gone
0053    public var LengthRequired
0054    public var PrecondFailed
0055    public var EntityTooLarge
0056    public var ReqTooLong
0057    public var UnsupportedType
0058    public var ServerError
0059    public var NotImplemented
0060    public var BadGateway
0061    public var Unavailable
0062    public var GatewayTimeout
0063    public var Version
0064    public function addListener
0065    public function async
0066    public function chunkSize
0067    public function close
0068    public function connect
0069    public function certificate
0070    public function contentLength
0071    public function contentType
0072    public function date
0073    public function del
0074    public function encoding
0075    public function expires
0076    public function finalize
0077    public function flush
0078    public function followRedirects
0079    public function form
0080    public function get
0081    public function getRequestHeaders
0082    public function head
0083    public function header
0084    public function headers
0085    public function isSecure
0086    public function key
0087    public function lastModified
0088    public function method
0089    public function options
0090    public function post
0091    public function put
0092    public function read
0093    public function readString
0094    public function readLines
0095    public function readXml
0096    public function removeListener
0097    public function response
0098    public function retries
0099    public function setCredentials
0100    public function setHeader
0101    public function setHeaders
0102    public function status
0103    public function statusMessage
0104    public function success
0105    public function timeout
0106    public function trace
0107    public function upload
0108    public function uri
0109    public function wait
0110    public function write
0111    public function addHeader
0112    public function bodyLength
0113    public function code
0114    public function codeString
0115    public function available
0116    public function contentEncoding
0117    public function mimeType

#
#  Instance slot assignments for the "Http" class (Num prop 1, num inherited 0)
#
0000    [ejs::Http,private] var _response

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Iterator" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function parse
0027    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Locale" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Locale
0027    -initializer- function Locale-initializer
0028    public var textEncoding

#
#  Instance slot assignments for the "Locale" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Logger" class (Num slots 53, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Logger
0027    -initializer- function Logger-initializer
0028    public var Off
0029    public var Error
0030    public var Warn
0031    public var Info
0032    public var Config
0033    public var All
0034    public function addListener
0035    public function async
0036    public function close
0037    public function filter
0038    public function flush
0039    public function level
0040    public function match
0041    public function name
0042    public function outstream
0043    public function parent
0044    public function debug
0045    public function config
0046    public function error
0047    public function info
0048    public function read
0049    public function removeListener
0050    public function write
0051    public function warn
0052    [ejs::Logger,private] function emit

#
#  Instance slot assignments for the "Logger" class (Num prop 6, num inherited 0)
#
0000    [ejs::Logger,private] var _filter: Function
0001    [ejs::Logger,private] var _level
0002    [ejs::Logger,private] var _pattern
0003    [ejs::Logger,private] var _name
0004    [ejs::Logger,private] var _outstream: Stream
0005    [ejs::Logger,private] var _parent: Logger

#
#  Class slot assignments for the "Math" class (Num slots 54, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Math-initializer
0027    public var E
0028    public var LN2
0029    public var LN10
0030    public var LOG2E
0031    public var LOG10E
0032    public var PI
0033    public var SQRT1_2
0034    public var SQRT2
0035    public function abs
0036    public function acos
0037    public function asin
0038    public function atan
0039    public function atan2
0040    public function ceil
0041    public function cos
0042    public function exp
0043    public function floor
0044    public function log10
0045    public function log
0046    public function max
0047    public function min
0048    public function pow
0049    public function random
0050    public function round
0051    public function sin
0052    public function sqrt
0053    public function tan

#
#  Instance slot assignments for the "Math" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Memory" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function allocated
0027    public function callback
0028    public function maximum
0029    public function peak
0030    public function redline
0031    public function resident
0032    public function stack
0033    public function system
0034    public function stats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Namespace" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Namespace" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Null" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Number" class (Num slots 49, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Number
0027    -initializer- function Number-initializer
0028    public var MAX_VALUE: Number
0029    public var MIN_VALUE: Number
0030    public var NaN: Number
0031    public var NEGATIVE_INFINITY: Number
0032    public var POSITIVE_INFINITY: Number
0033    public var MaxValue: Number
0034    public var MinValue: Number
0035    public function abs
0036    public function ceil
0037    public function floor
0038    public function isFinite
0039    public function isNaN
0040    public function round
0041    public function toExponential
0042    public function toFixed
0043    public function toPrecision
0044    public function byte
0045    public function integral
0046    public function max
0047    public function min
0048    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Object" class (Num slots 26, num inherited 0)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    public function create
0005    public function defineProperty
0006    public function defineProperties
0007    public function freeze
0008    iterator function get
0009    public function getOwnPropertyDescriptor
0010    public function getOwnPropertyNames
0011    public function getOwnPrototypeOf
0012    iterator function getValues
0013    public function hasOwnProperty
0014    public function isExtensible
0015    public function isFrozen
0016    public function isPrototypeOf
0017    public function isSealed
0018    public function keys
0019    public function preventExtensions
0020    public function propertyIsEnumerable
0021    public function seal
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Path" class (Num slots 85, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Path
0027    public function absolute
0028    public function accessed
0029    public function basename
0030    public function components
0031    public function contains
0032    public function copy
0033    public function created
0034    public function dirname
0035    public function endsWith
0036    public function exists
0037    public function extension
0038    public function find
0039    public function files
0040    public function hasDrive
0041    public function isAbsolute
0042    public function isDir
0043    public function isLink
0044    public function isRegular
0045    public function isRelative
0046    public function join
0047    public function joinExt
0048    public function length
0049    public function linkTarget
0050    public function makeDir
0051    public function makeLink
0052    public function makeTemp
0053    public function map
0054    public function mimeType
0055    public function modified
0056    public function name
0057    public function natural
0058    public function normalize
0059    public function open
0060    public function openTextStream
0061    public function openBinaryStream
0062    public function parent
0063    public function perms
0064    public function portable
0065    public function readBytes
0066    public function readLines
0067    public function readString
0068    public function readXML
0069    public function relative
0070    public function remove
0071    public function removeAll
0072    public function rename
0073    public function replaceExt
0074    public function resolve
0075    public function same
0076    public function separator
0077    public function size
0078    public function startsWith
0079    public function toLower
0080    public function trimEnd
0081    public function trimExt
0082    public function trimStart
0083    public function truncate
0084    public function write

#
#  Instance slot assignments for the "Path" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Promise" class (Num slots 47, num inherited 35)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Emitter
0027    [ejs::Emitter,private] function addOneListener
0028    public function addListener
0029    public function clearListeners
0030    public function hasListeners
0031    public function listeners
0032    public function emit
0033    [ejs::Emitter,private] function removeOneListener
0034    public function removeListener
0035    -constructor- function Promise
0036    internal-ed363076473b51ca685af450cc662b39-0 function addCallback
0037    internal-ed363076473b51ca685af450cc662b39-0 function addCancelback
0038    internal-ed363076473b51ca685af450cc662b39-0 function addErrback
0039    internal-ed363076473b51ca685af450cc662b39-0 function emitSuccess
0040    internal-ed363076473b51ca685af450cc662b39-0 function emitError
0041    internal-ed363076473b51ca685af450cc662b39-0 function emitCancel
0042    internal-ed363076473b51ca685af450cc662b39-0 function cancel
0043    internal-ed363076473b51ca685af450cc662b39-0 function then
0044    internal-ed363076473b51ca685af450cc662b39-0 function timeout
0045    internal-ed363076473b51ca685af450cc662b39-0 function wait
0046    [ejs::Promise,private] function issue

#
#  Instance slot assignments for the "Promise" class (Num prop 3, num inherited 1)
#
0000    [ejs::Emitter,private] var endpoints
0001    [ejs::Promise,private] var timer
0002    [ejs::Promise,private] var fired: Boolean

#
#  Class slot assignments for the "Reflect" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Reflect
0027    public function base
0028    public function isType
0029    public function type
0030    public function name

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [ejs::Reflect,private] var obj: Object

#
#  Class slot assignments for the "RegExp" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function RegExp
0027    public function lastIndex
0028    public function exec
0029    public function global
0030    public function ignoreCase
0031    public function multiline
0032    public function source
0033    public function matched
0034    public function replace
0035    public function split
0036    public function start
0037    public function sticky
0038    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Socket" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Socket
0027    public function addListener
0028    public function accept
0029    public function address
0030    public function async
0031    public function close
0032    public function connect
0033    public function encoding
0034    public function flush
0035    public function listen
0036    public function port
0037    public function read
0038    public function remoteAddress
0039    public function removeListener
0040    public function write

#
#  Instance slot assignments for the "Socket" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Stream" class (Num slots 7, num inherited 0)
#
0000    public function addListener
0001    public function async
0002    public function close
0003    public function flush
0004    public function read
0005    public function removeListener
0006    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "String" class (Num slots 68, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function String
0027    public function caseCompare
0028    public function caselessCompare
0029    public function charAt
0030    public function charCodeAt
0031    public function concat
0032    public function contains
0033    public function endsWith
0034    public function format
0035    public function fromCharCode
0036    public function indexOf
0037    public function isDigit
0038    public function isAlpha
0039    public function isAlphaNum
0040    public function isLower
0041    public function isSpace
0042    public function isUpper
0043    public function lastIndexOf
0044    public function length
0045    public function match
0046    public function parseJSON
0047    public function toCamel
0048    public function toPascal
0049    public function printable
0050    public function quote
0051    public function remove
0052    public function replace
0053    public function reverse
0054    public function search
0055    public function slice
0056    public function split
0057    public function startsWith
0058    public function substring
0059    public function times
0060    public function tokenize
0061    public function toLower
0062    public function toUpper
0063    public function trim
0064    public function trimStart
0065    public function trimEnd
0066    public function -
0067    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 36, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function System-initializer
0027    public var Bufsize: Number
0028    public function hostname
0029    public function ipaddr
0030    public function run
0031    public function runx
0032    public function daemon
0033    public function sh
0034    public function cmd
0035    public function exec

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TextStream" class (Num slots 41, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TextStream
0027    public function addListener
0028    public function async
0029    public function available
0030    public function close
0031    public function encoding
0032    public function fill
0033    public function flush
0034    public function read
0035    public function readLine
0036    public function readLines
0037    public function readString
0038    public function removeListener
0039    public function write
0040    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs::TextStream,private] var newline: String
0001    [ejs::TextStream,private] var inbuf: ByteArray
0002    [ejs::TextStream,private] var format: String
0003    [ejs::TextStream,private] var nextStream: Stream

#
#  Class slot assignments for the "Timer" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Timer
0027    public function drift
0028    public function period
0029    public function restart
0030    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TimerEvent" class (Num slots 28, num inherited 27)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Event
0027    -constructor- function TimerEvent

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 2, num inherited 2)
#
0000    public var data: Object
0001    public var timestamp: Date

#
#  Class slot assignments for the "Type" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Uri" class (Num slots 65, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Uri
0027    public function basename
0028    public function complete
0029    public function components
0030    public function decode
0031    public function decodeComponent
0032    public function dirname
0033    public function encode
0034    public function encodeComponent
0035    public function endsWith
0036    public function extension
0037    public function hasExtension
0038    public function hasHost
0039    public function hasPort
0040    public function hasQuery
0041    public function hasReference
0042    public function hasScheme
0043    public function host
0044    public function isAbsolute
0045    public function isDir
0046    public function isRegular
0047    public function isRelative
0048    public function join
0049    public function joinExt
0050    public function mimeType
0051    public function normalize
0052    public function path
0053    public function port
0054    public function scheme
0055    public function query
0056    public function reference
0057    public function relative
0058    public function replaceExt
0059    public function same
0060    public function startsWith
0061    public function trimEnd
0062    public function trimExt
0063    public function trimStart
0064    public function uri

#
#  Instance slot assignments for the "Uri" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Void" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Worker" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Worker
0027    public function eval
0028    public function exit
0029    public function join
0030    public function load
0031    public function preload
0032    public function preeval
0033    public function lookup
0034    public function postMessage
0035    public function terminate
0036    public function waitForMessage

#
#  Instance slot assignments for the "Worker" class (Num prop 4, num inherited 0)
#
0000    public var onclose: Function
0001    public var onmessage: Function
0002    public var onerror: Function
0003    public var name: String

#
#  Class slot assignments for the "XML" class (Num slots 31, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XML
0027    public function load
0028    public function save
0029    public function length
0030    public function name

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "XMLHttp" class (Num slots 48, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLHttp
0027    -initializer- function XMLHttp-initializer
0028    public var Uninitialized
0029    public var Open
0030    public var Sent
0031    public var Receiving
0032    public var Loaded
0033    public function abort
0034    public function http
0035    public function readyState
0036    public function responseText
0037    public function responseXML
0038    public function responseBody
0039    public function status
0040    public function statusText
0041    public function getAllResponseHeaders
0042    public function getResponseHeader
0043    public function open
0044    public function send
0045    public function setRequestHeader
0046    [ejs::XMLHttp,private] function callback
0047    [ejs::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs::XMLHttp,private] var hp: Http
0001    [ejs::XMLHttp,private] var state: Number
0002    [ejs::XMLHttp,private] var response: ByteArray
0003    public var onreadystatechange: Function

#
#  Class slot assignments for the "XMLList" class (Num slots 29, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function XMLList
0027    public function length
0028    public function name

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Loader" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Loader-initializer
0027    public var mainId
0028    [Loader,private] var signatures
0029    [Loader,private] var timestamps
0030    [Loader,private] var defaultExtensions
0031    [Loader,private] var config
0032    internal-ed363076473b51ca685af450cc662b39-0 function init
0033    public function require
0034    public function load
0035    public function cached
0036    public function wrap
0037    [Loader,private] function locate
0038    public function setConfig

#
#  Instance slot assignments for the "Loader" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Database" class (Num slots 59, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Database
0027    [ejs.db::Database,private] var defaultDb: Database
0028    public function addColumn
0029    public function addIndex
0030    public function changeColumn
0031    public function close
0032    public function commit
0033    public function connect
0034    public function connection
0035    public function createDatabase
0036    public function createTable
0037    public function dataTypeToSqlType
0038    public function defaultDatabase
0039    public function destroyDatabase
0040    public function destroyTable
0041    public function endTransaction
0042    public function getColumns
0043    public function getTables
0044    public function getNumRows
0045    public function name
0046    public function query
0047    public function removeColumns
0048    public function removeIndex
0049    public function renameColumn
0050    public function renameTable
0051    public function rollback
0052    public function sql
0053    public function sqlTypeToDataType
0054    public function sqlTypeToEjsType
0055    public function startTransaction
0056    public function trace
0057    public function transaction
0058    public function quote

#
#  Instance slot assignments for the "Database" class (Num prop 4, num inherited 0)
#
0000    [ejs.db::Database,private] var _adapter: Object
0001    [ejs.db::Database,private] var _connection: String
0002    [ejs.db::Database,private] var _name: String
0003    [ejs.db::Database,private] var _traceAll: Boolean

#
#  Class slot assignments for the "DatabaseConnector" class (Num slots 22, num inherited 0)
#
0000    public function addColumn
0001    public function addIndex
0002    public function changeColumn
0003    public function close
0004    public function commit
0005    public function connect
0006    public function createDatabase
0007    public function createTable
0008    public function dataTypeToSqlType
0009    public function destroyDatabase
0010    public function destroyTable
0011    public function getColumns
0012    public function getTables
0013    public function removeColumns
0014    public function removeIndex
0015    public function renameColumn
0016    public function renameTable
0017    public function rollback
0018    public function sql
0019    public function sqlTypeToDataType
0020    public function sqlTypeToEjsType
0021    public function startTransaction

#
#  Instance slot assignments for the "DatabaseConnector" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Record" class (Num slots 102, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Record
0027    -initializer- function Record-initializer
0028    internal-ed363076473b51ca685af450cc662b39-0 var _assocName: String
0029    internal-ed363076473b51ca685af450cc662b39-0 var _belongsTo: Array
0030    internal-ed363076473b51ca685af450cc662b39-0 var _className: String
0031    internal-ed363076473b51ca685af450cc662b39-0 var _columns: Object
0032    internal-ed363076473b51ca685af450cc662b39-0 var _hasOne: Array
0033    internal-ed363076473b51ca685af450cc662b39-0 var _hasMany: Array
0034    internal-ed363076473b51ca685af450cc662b39-0 var _db: Database
0035    internal-ed363076473b51ca685af450cc662b39-0 var _foreignId: String
0036    internal-ed363076473b51ca685af450cc662b39-0 var _keyName: String
0037    internal-ed363076473b51ca685af450cc662b39-0 var _model: Type
0038    internal-ed363076473b51ca685af450cc662b39-0 var _tableName: String
0039    internal-ed363076473b51ca685af450cc662b39-0 var _trace: Boolean
0040    internal-ed363076473b51ca685af450cc662b39-0 var _validations: Array
0041    internal-ed363076473b51ca685af450cc662b39-0 var _beforeFilters: Array
0042    internal-ed363076473b51ca685af450cc662b39-0 var _afterFilters: Array
0043    internal-ed363076473b51ca685af450cc662b39-0 var _wrapFilters: Array
0044    internal-ed363076473b51ca685af450cc662b39-0 var ErrorMessages
0045    public function initialize
0046    public function afterFilter
0047    public function beforeFilter
0048    public function belongsTo
0049    [Record,private] function cachedRead
0050    [Record,private] function checkFormat
0051    [Record,private] function checkNumber
0052    [Record,private] function checkPresent
0053    [Record,private] function checkUnique
0054    [Record,private] function coerceToEjsTypes
0055    [Record,private] function createAssociations
0056    [Record,private] function createRecord
0057    public function error
0058    public function find
0059    public function findAll
0060    public function findOneWhere
0061    public function findWhere
0062    public function getColumnNames
0063    public function getColumnTitles
0064    public function getColumnType
0065    public function getDb
0066    public function getErrors
0067    public function getKeyName
0068    public function getNumRows
0069    [Record,private] function getSchema
0070    public function getTableName
0071    public function hasAndBelongsToMany
0072    public function hasError
0073    public function hasMany
0074    public function hasOne
0075    [Record,private] function innerFind
0076    [Record,private] function makeLazyReader
0077    [Record,private] function mapSqlTypeToEjs
0078    [Record,private] function prepareValue
0079    [Record,private] function readRecords
0080    public function remove
0081    [Record,private] function runFilters
0082    public function save
0083    public function saveUpdate
0084    public function setDb
0085    public function setKeyName
0086    public function setTableName
0087    public function sql
0088    public function trace
0089    public function validateFormat
0090    public function validateNumber
0091    public function validatePresence
0092    public function validateRecord
0093    public function validateUnique
0094    public function wrapFilter
0095    public function columnNames
0096    public function columnTitles
0097    public function db
0098    public function keyName
0099    public function numRows
0100    public function tableName
0101    public function constructorOLD

#
#  Instance slot assignments for the "Record" class (Num prop 3, num inherited 0)
#
0000    internal-ed363076473b51ca685af450cc662b39-0 var _keyValue: Object
0001    internal-ed363076473b51ca685af450cc662b39-0 var _errors: Object
0002    internal-ed363076473b51ca685af450cc662b39-0 var _cacheAssoc: Object

#
#  Class slot assignments for the "Column" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Column

#
#  Instance slot assignments for the "Column" class (Num prop 2, num inherited 0)
#
0000    public var ejsType: Object
0001    public var sqlType: Object

#
#  Class slot assignments for the "Sqlite" class (Num slots 56, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Sqlite
0027    -initializer- function Sqlite-initializer
0028    internal-ed363076473b51ca685af450cc662b39-0 var DataTypeToSqlType: Object
0029    internal-ed363076473b51ca685af450cc662b39-0 var SqlTypeToDataType: Object
0030    internal-ed363076473b51ca685af450cc662b39-0 var SqlTypeToEjsType: Object
0031    public function addColumn
0032    public function addIndex
0033    public function changeColumn
0034    public function close
0035    public function commit
0036    public function connect
0037    public function createDatabase
0038    public function createTable
0039    public function dataTypeToSqlType
0040    public function destroyDatabase
0041    public function destroyTable
0042    public function endTransaction
0043    public function getColumns
0044    public function getNumRows
0045    public function getTables
0046    public function removeColumns
0047    public function removeIndex
0048    public function renameColumn
0049    public function renameTable
0050    public function rollback
0051    public function query
0052    public function sql
0053    public function sqlTypeToDataType
0054    public function sqlTypeToEjsType
0055    public function startTransaction

#
#  Instance slot assignments for the "Sqlite" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Controller" class (Num slots 50, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Controller
0027    [ejs.web::Controller,private] var _initRequest
0028    ejs.web function create
0029    [ejs.web::Controller,private] function openDatabase
0030    ejs.web function run
0031    [ejs.web::Controller,private] function flashBefore
0032    [ejs.web::Controller,private] function flashAfter
0033    ejs.web function resetFilters
0034    ejs.web function beforeFilter
0035    ejs.web function afterFilter
0036    ejs.web function wrapFilter
0037    [ejs.web::Controller,private] function runFilters
0038    ejs.web function loadView
0039    ejs.web function renderError
0040    ejs.web function redirect
0041    ejs.web function render
0042    ejs.web function renderFile
0043    ejs.web function renderPartial
0044    ejs.web function renderView
0045    ejs.web function error
0046    ejs.web function inform
0047    ejs.web function warn
0048    ejs.web function makeUri
0049    action function missing

#
#  Instance slot assignments for the "Controller" class (Num prop 14, num inherited 0)
#
0000    ejs.web var actionName: String
0001    ejs.web var controllerName: String
0002    ejs.web var deploymentMode: String
0003    ejs.web var log: Logger
0004    ejs.web var params: Object
0005    ejs.web var request
0006    ejs.web var view
0007    public var flash: Object
0008    [ejs.web::Controller,private] var rendered: Boolean
0009    [ejs.web::Controller,private] var redirected: Boolean
0010    [ejs.web::Controller,private] var _afterFilters: Array
0011    [ejs.web::Controller,private] var _beforeFilters: Array
0012    [ejs.web::Controller,private] var _wrapFilters: Array
0013    [ejs.web::Controller,private] var lastFlash

#
#  Class slot assignments for the "HtmlConnector" class (Num slots 57, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function HtmlConnector
0027    ejs.web function aform
0028    ejs.web function alink
0029    ejs.web function button
0030    ejs.web function buttonLink
0031    ejs.web function chart
0032    ejs.web function checkbox
0033    ejs.web function endform
0034    ejs.web function flash
0035    ejs.web function form
0036    ejs.web function image
0037    ejs.web function imageLink
0038    ejs.web function label
0039    ejs.web function link
0040    ejs.web function extlink
0041    ejs.web function list
0042    ejs.web function mail
0043    ejs.web function progress
0044    ejs.web function radio
0045    ejs.web function script
0046    ejs.web function status
0047    ejs.web function stylesheet
0048    ejs.web function tabs
0049    ejs.web function table
0050    ejs.web function text
0051    ejs.web function textarea
0052    ejs.web function tree
0053    [HtmlConnector,private] function getColumns
0054    [HtmlConnector,private] function getTextKind
0055    [HtmlConnector,private] function getOptions
0056    [HtmlConnector,private] function write

#
#  Instance slot assignments for the "HtmlConnector" class (Num prop 3, num inherited 0)
#
0000    [HtmlConnector,private] var nextId: Number
0001    [HtmlConnector,private] var request
0002    [HtmlConnector,private] var view

#
#  Class slot assignments for the "HttpServer" class (Num slots 37, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function HttpServer
0027    public function addListener
0028    public function address
0029    public function async
0030    public function close
0031    public function listen
0032    public function attach
0033    public function secureListen
0034    public function port
0035    public function removeListener
0036    public function software

#
#  Instance slot assignments for the "HttpServer" class (Num prop 2, num inherited 0)
#
0000    public var documentRoot: Path
0001    public var serverRoot: Path

#
#  Class slot assignments for the "Mvc" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Mvc-initializer
0027    [Mvc,private] var defaultConfig
0028    [Mvc,private] var mvc: Object
0029    [Mvc,private] var dirs: Object
0030    [Mvc,private] var ext: Object
0031    [Mvc,private] function defaultAppExports
0032    public function load
0033    public function init
0034    public function loadComponent

#
#  Instance slot assignments for the "Mvc" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Request" class (Num slots 57, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Request-initializer
0027    public function log
0028    public function addListener
0029    public function async
0030    public function cachable
0031    public function close
0032    public function dump
0033    public function destroySession
0034    public function extension
0035    public function finalize
0036    public function flush
0037    public function getResponseHeaders
0038    public function header
0039    public function read
0040    public function redirect
0041    public function removeListener
0042    public function makeUri
0043    public function setLocation
0044    public function sendResponse
0045    public function setCookie
0046    public function setHeader
0047    public function setHeaders
0048    public function setStatus
0049    public function write
0050    public function writeError
0051    public function writeHtml
0052    public var jsgi: Object
0053    public function input
0054    public function queryString
0055    public function serverName
0056    public function serverPort

#
#  Instance slot assignments for the "Request" class (Num prop 33, num inherited 0)
#
0000    public var absHome: Uri
0001    public var authGroup: String
0002    public var authType: String
0003    public var authUser: String
0004    public var chunkSize: Number
0005    public var config: Object
0006    public var contentLength: Number
0007    public var contentType: String
0008    public var cookies: Object
0009    public var dir: Path
0010    public var encoding: String
0011    public var files: Object
0012    public var headers: Object
0013    public var home: Uri
0014    public var host: String
0015    public var method: String
0016    public var params: Object
0017    public var pathInfo: String
0018    public var query: String
0019    public var referrer: String
0020    public var remoteAddress: String
0021    public var route
0022    public var scheme: String
0023    public var scriptName: String
0024    public var secure: Boolean
0025    public var server: HttpServer
0026    public var session: Object
0027    public var sessionID: String
0028    public var status: Number
0029    public var timeout: Number
0030    public var uri: Uri
0031    public var userAgent: String
0032    public var env: Object

#
#  Class slot assignments for the "Router" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Router
0027    -initializer- function Router-initializer
0028    public var TopRoutes
0029    public var RestfulRoutes
0030    public var LegacyRoutes
0031    public function addRestfulRoutes
0032    public function addRoutes
0033    public function route
0034    internal-ed363076473b51ca685af450cc662b39-0 function dumpRoutes

#
#  Instance slot assignments for the "Router" class (Num prop 1, num inherited 0)
#
0000    internal-ed363076473b51ca685af450cc662b39-0 var routes: Array

#
#  Class slot assignments for the "Route" class (Num slots 28, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function Route
0027    public function makeUri

#
#  Instance slot assignments for the "Route" class (Num prop 14, num inherited 0)
#
0000    public var dir: Path
0001    public var match: Object
0002    public var method: String
0003    public var name: String
0004    public var params: Object
0005    public var rewrite: Function
0006    public var subroute: Route
0007    public var threaded: Boolean
0008    public var type: String
0009    public var urimaker: Function
0010    internal-ed363076473b51ca685af450cc662b39-0 var matcher: RegExp
0011    internal-ed363076473b51ca685af450cc662b39-0 var splitter: String
0012    internal-ed363076473b51ca685af450cc662b39-0 var tokens: Array
0013    internal-ed363076473b51ca685af450cc662b39-0 var router: Router

#
#  Class slot assignments for the "Session" class (Num slots 30, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    internal-ed363076473b51ca685af450cc662b39-0 function addListener
0027    internal-ed363076473b51ca685af450cc662b39-0 function count
0028    internal-ed363076473b51ca685af450cc662b39-0 function removeListener
0029    internal-ed363076473b51ca685af450cc662b39-0 function setSessionTimeout

#
#  Instance slot assignments for the "Session" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "UploadFile" class (Num slots 26, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf

#
#  Instance slot assignments for the "UploadFile" class (Num prop 5, num inherited 0)
#
0000    public var clientFilename: String
0001    public var contentType: String
0002    public var filename: String
0003    public var name: String
0004    public var size: Number

#
#  Class slot assignments for the "View" class (Num slots 73, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function View
0027    -initializer- function View-initializer
0028    ejs.web function getNextId
0029    public function makeUri
0030    public function render
0031    public function setHeader
0032    public function setHeaders
0033    public function setStatus
0034    public function write
0035    ejs.web function aform
0036    ejs.web function alink
0037    ejs.web function button
0038    ejs.web function buttonLink
0039    ejs.web function chart
0040    ejs.web function checkbox
0041    ejs.web function endform
0042    ejs.web function form
0043    ejs.web function image
0044    ejs.web function imageLink
0045    ejs.web function input
0046    ejs.web function label
0047    ejs.web function link
0048    ejs.web function extlink
0049    ejs.web function list
0050    ejs.web function mail
0051    ejs.web function progress
0052    ejs.web function radio
0053    ejs.web function script
0054    ejs.web function status
0055    ejs.web function stylesheet
0056    ejs.web function table
0057    ejs.web function tabs
0058    ejs.web function text
0059    ejs.web function textarea
0060    ejs.web function tree
0061    ejs.web function flash
0062    [ejs.web::View,private] function emitFormErrors
0063    [ejs.web::View,private] function getConnector
0064    [ejs.web::View,private] function setOptions
0065    ejs.web function getValue
0066    ejs.web function date
0067    ejs.web function currency
0068    ejs.web function number
0069    [ejs.web::View,private] var htmlOptions: Object
0070    ejs.web function getOptions
0071    [ejs.web::View,private] function pivot
0072    [ejs.web::View,private] function filter

#
#  Instance slot assignments for the "View" class (Num prop 4, num inherited 0)
#
0000    ejs.web var request: Request
0001    [ejs.web::View,private] var currentRecord: Object
0002    [ejs.web::View,private] var config: Object
0003    [ejs.web::View,private] var nextId: Number

#
#  Class slot assignments for the "Web" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Web-initializer
0027    public var config
0028    [ejs.web::Web,private] var defaultConfig
0029    [ejs.web::Web,private] function init
0030    public function serve
0031    public function worker
0032    [ejs.web::Web,private] function workerHelper
0033    public function load
0034    public function start

#
#  Instance slot assignments for the "Web" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "Template" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function load

#
#  Instance slot assignments for the "Template" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TemplateParser" class (Num slots 32, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TemplateParser
0027    public function build
0028    public function buildView
0029    public function parse
0030    internal-ed363076473b51ca685af450cc662b39-0 function getToken
0031    [TemplateParser,private] function eatSpace

#
#  Instance slot assignments for the "TemplateParser" class (Num prop 8, num inherited 0)
#
0000    [TemplateParser,private] var ContentMarker: String
0001    [TemplateParser,private] var ContentPattern: RegExp
0002    [TemplateParser,private] var script: String
0003    [TemplateParser,private] var pos: Number
0004    [TemplateParser,private] var lineNumber: Number
0005    [TemplateParser,private] var Header
0006    [TemplateParser,private] var Footer
0007    [TemplateParser,private] var MvcHeader

#
#  Class slot assignments for the "Token" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Token-initializer
0027    public var Err
0028    public var Eof
0029    public var EjsTag
0030    public var Var
0031    public var Literal
0032    public var Equals
0033    public var Control
0034    public var tokens

#
#  Instance slot assignments for the "Token" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 8898 bytes)
#
0000   ""
0001   "ejs.cjs"
0002   "ejs.web"
0003   "ejs.es"
0004   "}"
0005   "internal-ed363076473b51ca685af450cc662b39-0"
0006   "ejs.web.template"
0007   "module ejs.web.template  {"
0008   "    require ejs.cjs"
0009   "    require ejs.web"
0010   "    public class Template {"
0011   "        use default namespace public"
0012   "        static function load(request: Request): Object {"
0013   "path"
0014   "private"
0015   "            let path = request.dir.join(request.pathInfo.slice(1))"
0016   "dir"
0017   "public"
0018   "pathInfo"
0019   "slice"
0020   "join"
0021   "            Loader.setConfig(request.config)"
0022   "config"
0023   "setConfig"
0024   "            return Loader.load(path, path, function (path) {"
0025   "data"
0026   "                let data = TemplateParser().build(path.readString())"
0027   "readString"
0028   "build"
0029   "                return Loader.wrap(data)"
0030   "wrap"
0031   "--fun_34227--89941298--"
0032   "            })"
0033   "load"
0034   "request"
0035   "Request"
0036   "Function"
0037   "ejs"
0038   "Object"
0039   "Template"
0040   "constructor"
0041   "length"
0042   "Number"
0043   "prototype"
0044   "clone"
0045   ""
0046   "get"
0047   "iterator"
0048   "Iterator"
0049   "getValues"
0050   "hasOwnProperty"
0051   "Boolean"
0052   "isPrototypeOf"
0053   "propertyIsEnumerable"
0054   "toJSON"
0055   "String"
0056   "toLocaleString"
0057   "toString"
0058   "valueOf"
0059   "block_18145_699"
0060   "-block-"
0061   "    public class TemplateParser {"
0062   "        private const ContentMarker: String  = "__ejs:CONTENT:ejs__""
0063   "ContentMarker"
0064   "[TemplateParser,private]"
0065   "__ejs:CONTENT:ejs__"
0066   "        private const ContentPattern: RegExp = new RegExp(ContentMarker)"
0067   "ContentPattern"
0068   "RegExp"
0069   "        private var script: String"
0070   "script"
0071   "        private var pos: Number = 0"
0072   "pos"
0073   "        private var lineNumber: Number = 0"
0074   "lineNumber"
0075   "        private const Header = "require ejs.web\n\nexports.app = function (request: Request) {\n" + "
0076   "Header"
0077   "require ejs.web

exports.app = function (request: Request) {
"
0078   "            "    View(request).render(function(request: Request) {\n""
0079   "    View(request).render(function(request: Request) {
"
0080   "        private const Footer = "\n})\n}\n""
0081   "Footer"
0082   "
})
}
"
0083   "        private const MvcHeader = "require ejs.web\n""
0084   "MvcHeader"
0085   "require ejs.web
"
0086   "        public function build(script: String, options: Object = {}): String"
0087   "            Header + parse(script, options) + Footer"
0088   "parse"
0089   "options"
0090   "        public function buildView(name: String, script: String, options: Object = {}): String {"
0091   "            return MvcHeader + "public dynamic class " + name + "View extends View {\n\n" +"
0092   "                parse(script, options) + "\n    }\n}\n""
0093   "                "    public override function render(request: Request) {\n" + "
0094   "                "    }\n\n" + "
0095   "                "        super(request)\n" +"
0096   "                "    function " + name + "View(request: Request) {\n" +"
0097   "public dynamic class "
0098   "View extends View {

"
0099   "    function "
0100   "View(request: Request) {
"
0101   "        super(request)
"
0102   "    }

"
0103   "    public override function render(request: Request) {
"
0104   "
    }
}
"
0105   "buildView"
0106   "name"
0107   "        public function parse(script: String, options: Object = {}): String {"
0108   "token"
0109   "            var token: ByteArray = new ByteArray"
0110   "            var out: ByteArray = new ByteArray"
0111   "out"
0112   "            var dir: Path = options.dir || Path(".")"
0113   "."
0114   "            var tid: Number"
0115   "tid"
0116   "            var layoutPage: Path"
0117   "layoutPage"
0118   "            if (options.layout) {"
0119   "layout"
0120   "                layoutPage = Path(options.layout)"
0121   "            }"
0122   "            this.script = script"
0123   "            while ((tid = getToken(token)) != Token.Eof) {"
0124   "getToken"
0125   "Eof"
0126   "                switch (tid) {"
0127   "                case Token.Literal:"
0128   "Literal"
0129   "                    out.write("\n        write(\"" + token + "\");")"
0130   "
        write(""
0131   "");"
0132   "write"
0133   "                    break"
0134   "                case Token.Var:"
0135   "Var"
0136   "                    out.write("\n        write(\"\" + ", token, ");\n")"
0137   "
        write("" + "
0138   ");
"
0139   "                case Token.Equals:"
0140   "Equals"
0141   "                    out.write("\n        write(\"\" + (", token, "));\n")"
0142   "
        write("" + ("
0143   "));
"
0144   "                case Token.EjsTag:"
0145   "EjsTag"
0146   "                    out.write(token.toString())"
0147   "                case Token.Control:"
0148   "Control"
0149   "args"
0150   "-hoisted-7"
0151   "                    let args: Array = token.toString().split(/\s/g)"
0152   "/\s/g"
0153   "split"
0154   "                    let cmd: String = args[0]"
0155   "cmd"
0156   "                    switch (cmd) {"
0157   "                    case "include":"
0158   "include"
0159   "                        let path = args[1].trim("'").trim('"')"
0160   "'"
0161   "trim"
0162   """
0163   "                        let incPath = dir.join(path)"
0164   "incPath"
0165   "                        let inc: TemplateParser = new TemplateParser"
0166   "inc"
0167   "                        out.write(inc.parse(incPath.readString(), options))"
0168   "                        break"
0169   "                    case "layout":"
0170   "                        let path = args[1]"
0171   "                        if (path == "" || path == '""') {"
0172   """"
0173   "                            layoutPage = undefined"
0174   "                        } else {"
0175   "                            path = args[1].trim("'").trim('"').trim('.ejs') + ".ejs""
0176   ".ejs"
0177   "                            if (!options.layouts) {"
0178   "layouts"
0179   "                                throw "Location of layout page not defined in options""
0180   "Location of layout page not defined in options"
0181   "                            }"
0182   "                            layoutPage = Path(options.layouts).join(path)"
0183   "                            if (!layoutPage.exists) {"
0184   "exists"
0185   "                                throw "Can't find layout page " + layoutPage"
0186   "Can't find layout page "
0187   "                    case "content":"
0188   "content"
0189   "                        out.write(ContentMarker)"
0190   "                    default:"
0191   "                        throw "Bad control directive: " + cmd"
0192   "Bad control directive: "
0193   "                default:"
0194   "                case Token.Err:"
0195   "Err"
0196   "                    throw "Bad input token: " + token"
0197   "Bad input token: "
0198   "            if (layoutPage && layoutPage != options.currentLayout) {"
0199   "currentLayout"
0200   "layoutOptions"
0201   "-hoisted-12"
0202   "                let layoutOptions = blend(options.clone(), { currentLayout: layoutPage })"
0203   "                let layoutText: String = new TemplateParser().parse(layoutPage.readString(), layoutOptions)"
0204   "layoutText"
0205   "                return layoutText.replace(ContentPattern, out.toString())"
0206   "replace"
0207   "            return out.toString()"
0208   "ByteArray"
0209   "Path"
0210   "Array"
0211   "TemplateParser"
0212   "        function getToken(token: ByteArray): Number {"
0213   "            var tid = Token.Literal"
0214   "            token.flush()"
0215   "flush"
0216   "            var c"
0217   "c"
0218   "            while (pos < script.length) {"
0219   "                c = script[pos++]"
0220   "                switch (c) {"
0221   "                case '<':"
0222   "<"
0223   "                    if (script[pos] == '%' && (pos < 2 || script[pos - 2] != '\\')) {"
0224   "%"
0225   "\"
0226   "                        if (token.available > 0) {"
0227   "available"
0228   "                            pos--"
0229   "                            return Token.Literal"
0230   "                        }"
0231   "                        pos++"
0232   "                        eatSpace()"
0233   "eatSpace"
0234   "                        if (script[pos] == '=') {"
0235   "="
0236   "                            pos++"
0237   "                            eatSpace()"
0238   "                            while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>' || "
0239   ">"
0240   "                                    script[pos-1] == '\\')) {"
0241   "                                token.write(c)"
0242   "                                pos++"
0243   "                            pos += 2"
0244   "                            return Token.Equals"
0245   "                        } else if (script[pos] == '@') {"
0246   "@"
0247   "                            while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>')) {"
0248   "                            return Token.Control"
0249   "                            return Token.EjsTag"
0250   "                    }"
0251   "                    token.write(c)"
0252   "                case '@':"
0253   "                    if (script[pos] == '@' && (pos < 1 || script[pos-1] != '\\')) {"
0254   "                        c = script[pos++]"
0255   "                        while (c.isAlpha || c.isDigit || c == '[' || c == ']' || c == '.' || c == '$' || c == '_' || "
0256   "isAlpha"
0257   "isDigit"
0258   "["
0259   "]"
0260   "$"
0261   "_"
0262   "                                c == "'") {"
0263   "                            token.write(c)"
0264   "                            c = script[pos++]"
0265   "                        pos--"
0266   "                        return Token.Var"
0267   "                case "\r":"
0268   ""
0269   "                case "\n":"
0270   "
"
0271   "                    lineNumber++"
0272   "                    tid = Token.Literal"
0273   "                    if (c == '\"' || c == '\\') {"
0274   "                        token.write('\\')"
0275   "            if (token.available == 0 && pos >= script.length) {"
0276   "                return Token.Eof"
0277   "            return tid"
0278   "        private function eatSpace(): Void {"
0279   "            while (script[pos].isSpace) {"
0280   "isSpace"
0281   "                pos++"
0282   "        }"
0283   "Void"
0284   "-constructor-"
0285   "    class Token {"
0286   "        public static const Err         = -1        /* Any input error */"
0287   "        public static const Eof         = 0         /* End of file */"
0288   "        public static const EjsTag      = 1         /* <% text %> */"
0289   "        public static const Var         = 2         /* @@var */"
0290   "        public static const Literal     = 3         /* literal HTML */"
0291   "        public static const Equals      = 4         /* <%= expression */"
0292   "        public static const Control     = 6         /* <%@ control */"
0293   "        public static var tokens = [ "Err", "Eof", "EjsTag", "Var", "Literal", "Equals", "Control" ]"
0294   "tokens"
0295   "Token"
0296   "Token-initializer"
0297   "-initializer-"
0298   "block_18234_700"
0299   "__initializer__"
