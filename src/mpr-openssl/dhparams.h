/*
    Default DH parameters

    Generated via
        openssl dhparam -C 512  -out /dev/null >dhparams.h
        openssl dhparam -C 1024 -out /dev/null >>dhparams.h
        openssl dhparam -C 2048 -out /dev/null >>dhparams.h

    Though not essential, you should generate your own local DH parameters 
    to make it a bit harder for attackers.
 */

#ifndef HEADER_DH_H
#include <openssl/dh.h>
#endif
DH *get_dh512()
	{
	static unsigned char dh512_p[]={
		0xF4,0xC6,0x0F,0x11,0xF1,0x45,0x25,0x2E,0x12,0xA0,0x0E,0x13,
		0xE5,0xC8,0x88,0x58,0x40,0x46,0x5B,0xE5,0xAD,0x66,0x59,0x1E,
		0x7F,0xB6,0x45,0x6C,0x9C,0x00,0x6B,0xBE,0xED,0x0B,0x2C,0x5C,
		0x3B,0x14,0xCD,0x7D,0x22,0xD6,0xEA,0x15,0x1C,0x29,0x78,0x6C,
		0xF1,0x35,0xE5,0x89,0xC5,0x5A,0xF5,0x19,0x50,0x57,0xC2,0x49,
		0xB0,0xBD,0x0F,0x1B,
		};
	static unsigned char dh512_g[]={
		0x02,
		};
	DH *dh;

	if ((dh=DH_new()) == NULL) return(NULL);
	dh->p=BN_bin2bn(dh512_p,sizeof(dh512_p),NULL);
	dh->g=BN_bin2bn(dh512_g,sizeof(dh512_g),NULL);
	if ((dh->p == NULL) || (dh->g == NULL))
		{ DH_free(dh); return(NULL); }
	return(dh);
	}


#ifndef HEADER_DH_H
#include <openssl/dh.h>
#endif
DH *get_dh1024()
	{
	static unsigned char dh1024_p[]={
		0x81,0x91,0x88,0xA0,0x4A,0xF4,0xA4,0x7A,0x5D,0x2D,0xD0,0xED,
		0xA9,0xBE,0x0C,0x9D,0x6C,0x6D,0x8E,0xF5,0x97,0xCD,0x45,0x19,
		0x5E,0xAF,0x5B,0xFA,0x5E,0x9E,0x01,0x3C,0xB0,0x4C,0x23,0x4A,
		0x57,0x7B,0xE6,0xB4,0xEE,0xCD,0xE8,0x7E,0x51,0xF9,0xD3,0xF1,
		0x30,0xC0,0xAD,0xBC,0x2F,0xA9,0x18,0x1F,0x30,0x26,0xA7,0x8E,
		0xF2,0x34,0xFD,0xBB,0x78,0xCF,0x1F,0xB0,0xD3,0x59,0x2C,0x18,
		0x4C,0xE2,0x2C,0x76,0x26,0xB9,0xB7,0x5A,0xBC,0x05,0xA8,0xF8,
		0x1D,0xE8,0xB9,0xDD,0xDD,0xA6,0x92,0xDB,0xCE,0x76,0x04,0x36,
		0xDA,0xA2,0x57,0xE5,0x54,0x14,0x8C,0xA7,0xF0,0x7C,0xA2,0xCC,
		0xEB,0x6B,0xFD,0x09,0x38,0x0F,0x10,0x9F,0x76,0x52,0xEF,0x66,
		0xCC,0x80,0x7E,0x6E,0x83,0x1D,0x88,0x2B,
		};
	static unsigned char dh1024_g[]={
		0x02,
		};
	DH *dh;

	if ((dh=DH_new()) == NULL) return(NULL);
	dh->p=BN_bin2bn(dh1024_p,sizeof(dh1024_p),NULL);
	dh->g=BN_bin2bn(dh1024_g,sizeof(dh1024_g),NULL);
	if ((dh->p == NULL) || (dh->g == NULL))
		{ DH_free(dh); return(NULL); }
	return(dh);
	}


#ifndef HEADER_DH_H
#include <openssl/dh.h>
#endif
DH *get_dh2048()
	{
	static unsigned char dh2048_p[]={
		0xDA,0xDD,0x26,0xAA,0xBF,0x0B,0x2D,0xC5,0x83,0x20,0x26,0xD3,
		0x99,0x62,0x76,0xF6,0xF5,0x55,0x7F,0x84,0xB4,0x6A,0x7F,0x3E,
		0xBF,0x1C,0xF8,0xB6,0xE9,0xD3,0x40,0x0A,0xBB,0xED,0xD9,0xFF,
		0x3F,0x51,0x38,0xCC,0xFD,0x89,0x63,0x4C,0x0F,0x6C,0x9E,0x52,
		0x90,0x14,0xC4,0x55,0x34,0xE8,0xF1,0xD9,0xEB,0x43,0xD4,0xAD,
		0x27,0x67,0x4C,0x3A,0x0F,0x18,0x86,0x96,0x47,0x1D,0xA1,0x17,
		0xE3,0x30,0xEF,0x3B,0x7D,0x34,0x45,0x4C,0x11,0x86,0xFB,0x29,
		0xFC,0xB5,0x05,0x1B,0xC3,0xA8,0x22,0x38,0xC9,0xEA,0xD7,0x2D,
		0x02,0x96,0x2D,0xD9,0x77,0xF8,0x87,0x31,0x96,0xAA,0x6A,0xFF,
		0xEA,0xC1,0x78,0xBE,0x12,0xA2,0x78,0xBD,0x9A,0x78,0x7C,0xA5,
		0x4D,0x2F,0x3B,0xE8,0x6F,0xAD,0xE6,0xBE,0x21,0x3E,0x6C,0x7D,
		0xB5,0x53,0xE1,0x1E,0x83,0x81,0xBD,0x98,0x54,0x8E,0xE5,0x54,
		0xEC,0x43,0x09,0x54,0x9A,0xDC,0x7C,0xC8,0xE9,0xBC,0x20,0x50,
		0x31,0x28,0xE9,0xF5,0x99,0x60,0xE2,0x40,0x48,0x57,0x8D,0xD9,
		0x29,0xF5,0x8B,0x22,0xDE,0x93,0xE2,0x56,0x0B,0x76,0xE3,0x8B,
		0xC4,0x37,0x2F,0xD2,0xC1,0x34,0xF5,0x9B,0x12,0xD8,0x2B,0xE2,
		0x98,0xBA,0x0C,0xBB,0xDC,0x7A,0x65,0x7C,0x2D,0xC2,0x56,0x01,
		0x94,0x9F,0xB5,0xAE,0xC2,0xAA,0x6B,0x42,0x1B,0x54,0x36,0xE3,
		0x86,0xAC,0x21,0x93,0xDD,0x8B,0xD1,0x0D,0xEF,0x39,0x20,0x14,
		0x29,0xA1,0xB1,0xEE,0xE7,0xB1,0xA3,0x29,0x6C,0xD5,0xE6,0xD6,
		0x23,0x20,0xDC,0xDC,0xFA,0x0A,0x06,0x81,0xB3,0xF4,0xEB,0xCE,
		0xA6,0xD7,0x23,0x93,
		};
	static unsigned char dh2048_g[]={
		0x02,
		};
	DH *dh;

	if ((dh=DH_new()) == NULL) return(NULL);
	dh->p=BN_bin2bn(dh2048_p,sizeof(dh2048_p),NULL);
	dh->g=BN_bin2bn(dh2048_g,sizeof(dh2048_g),NULL);
	if ((dh->p == NULL) || (dh->g == NULL))
		{ DH_free(dh); return(NULL); }
	return(dh);
	}


