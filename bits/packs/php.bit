/*
    php.pak -- PHP package search
 */

Bit.pack({
    php: {
        description: 'PHP Web Framework',
        path: function (pack) {
            let cfg
            let path: Path? = pack.withpath
            if (!path) {
                if (bit.dir.packs.join('php/latest').exists && Config.OS != 'windows') {
                    path = bit.dir.packs.join('php/latest')
                } else {
                    let phpver = Config.OS == 'windows' ? 'php-5.4*' : 'php-5.3*'
                    let versions = sortVersions(bit.dir.packs.join('php').files(phpver))
                    if (versions.length == 0) {
                        throw 'Cannot find php'
                    }
                    path = versions[0]
                }
            }
            if (bit.platform.os == 'windows') {
                let search = [
                    path.join('x64/Release_TS'),
                    path.join('x64/Release'),
                    path.join('Release_TS'),
                    path.join('Release'),
                    path.join('Debug_TS'),
                    path.join('Debug'),
                ]
                let reldir = probe('php.exe', {search: search}).absolute
                let names = { Release_TS: 'php5ts.dll', Release: 'php5.dll', Debug_TS: 'php5ts_debug.dll', Debug: 'php5.dll' }
                let lib = probe(names[reldir.basename], {fullpath: true, search: search}).absolute
                let incdir = probe('main/php.h', {search: [path]}).absolute
                cfg = {
                    includes: [ incdir, incdir.join('main'), incdir.join('Zend'), incdir.join('TSRM') ],
                    libraries: [ 'php5ts.lib' ],
                    linker: [ '-libpath:' + lib.parent ],
                }
                pack.imports = lib.parent.files('php5ts.*')

            } else {
                let search = [path.join('.libs'), '/usr/lib', '/lib'] + Path('/lib').files('*-linux-gnu')
                let lib = probe('libphp5.' + bit.ext.shobj, {fullpath: true, search: search}).absolute
                let incdir = probe('php.h', {search: [path.join('main'), '/usr/include']}).absolute.parent
                pack.includes = [ incdir, incdir.join('main'), incdir.join('Zend'), incdir.join('TSRM') ],
                pack.libraries = [ 'php5' ],
                pack.linker = [ '-L' + lib.parent ],
                pack.imports = lib.parent.files('libphp5*.' + bit.ext.shobj + '*')
            }
            return path
        },
    },
})
